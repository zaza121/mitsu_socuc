
/* /web/static/src/views/graph/graph_model.js */
odoo.define('@web/views/graph/graph_model',['@web/core/l10n/translation','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/search/utils/group_by','@web/search/utils/misc','@web/model/model','@web/views/utils','@web/core/domain'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sortBy,groupBy}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{rankInterval}=require("@web/search/utils/dates");const{getGroupBy}=require("@web/search/utils/group_by");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");const{Domain}=require("@web/core/domain");const SEP=__exports.SEP=" / ";const SEQUENTIAL_TYPES=__exports.SEQUENTIAL_TYPES=["date","datetime"];class DateClasses{constructor(array){this.__referenceIndex=null;this.__array=array;for(let i=0;i<this.__array.length;i++){const arr=this.__array[i];if(arr.length&&this.__referenceIndex===null){this.__referenceIndex=i;}}}
classLabel(index,o){return`${this.__array[index].indexOf(o)}`;}
classMembers(classLabel){const classNumber=Number(classLabel);const classMembers=new Set();for(const arr of this.__array){if(arr[classNumber]!==undefined){classMembers.add(arr[classNumber]);}}
return[...classMembers];}
representative(classLabel,index){const classNumber=Number(classLabel);const i=index===undefined?this.__referenceIndex:index;if(i===null){return null;}
return this.__array[i][classNumber];}
arrayLength(index){return this.__array[index].length;}}
const GraphModel=__exports.GraphModel=class GraphModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _fetchDataPoints=this._fetchDataPoints.bind(this);this._fetchDataPoints=(...args)=>{return this.race.add(_fetchDataPoints(...args));};this.initialGroupBy=null;this.metaData=params;this.data=null;this.searchParams=null;this.lineOverlayDataset=null;}
async load(searchParams){this.searchParams=searchParams;if(!this.initialGroupBy){this.initialGroupBy=searchParams.context.graph_groupbys||this.metaData.groupBy;}
const metaData=this._buildMetaData();await this._fetchDataPoints(metaData);}
hasData(){return this.dataPoints.length>0;}
async updateMetaData(params){if("measure"in params){const metaData=this._buildMetaData(params);await this._fetchDataPoints(metaData);this.useSampleModel=false;}else{await this.race.getCurrentProm();this.metaData=Object.assign({},this.metaData,params);this._prepareData();}
this.notify();}
_buildMetaData(params){const{comparison,domain,context,groupBy}=this.searchParams;const metaData=Object.assign({},this.metaData,{context});if(comparison){metaData.domains=comparison.domains;metaData.comparisonField=comparison.fieldName;}else{metaData.domains=[{arrayRepr:domain,description:null}];}
metaData.measure=context.graph_measure||metaData.measure;metaData.mode=context.graph_mode||metaData.mode;metaData.groupBy=groupBy.length?groupBy:this.initialGroupBy;if(metaData.mode!=="pie"){metaData.order="graph_order"in context?context.graph_order:metaData.order;if(comparison){metaData.stacked=false;}else if("graph_stacked"in context){metaData.stacked=context.graph_stacked;}
if(metaData.mode==="line"){metaData.cumulated="graph_cumulated"in context?context.graph_cumulated:metaData.cumulated;}}
this._normalize(metaData);metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...(metaData.viewMeasures||[]),metaData.measure,]);return Object.assign(metaData,params);}
async _fetchDataPoints(metaData){this.dataPoints=await this.keepLast.add(this._loadDataPoints(metaData));this.metaData=metaData;this._prepareData();}
_getData(dataPoints){const{comparisonField,groupBy,mode}=this.metaData;let identify=false;if(comparisonField&&groupBy.length&&groupBy[0].fieldName===comparisonField){identify=true;}
const dateClasses=identify?this._getDateClasses(dataPoints):null;let labels=[];const labelMap={};for(const dataPt of dataPoints){const x=dataPt.labels.slice(0,mode==="pie"?undefined:1);const trueLabel=x.length?x.join(SEP):_t("Total");if(dateClasses){x[0]=dateClasses.classLabel(dataPt.originIndex,x[0]);}
const key=JSON.stringify(x);if(labelMap[key]===undefined){labelMap[key]=labels.length;if(dateClasses){if(mode==="pie"){x[0]=dateClasses.classMembers(x[0]).join(", ");}else{x[0]=dateClasses.representative(x[0]);}}
const label=x.length?x.join(SEP):_t("Total");labels.push(label);}
dataPt.labelIndex=labelMap[key];dataPt.trueLabel=trueLabel;}
const datasetsTmp={};for(const dataPt of dataPoints){const{domain,labelIndex,originIndex,trueLabel,value,identifier,cumulatedStart,}=dataPt;const datasetLabel=this._getDatasetLabel(dataPt);if(!(datasetLabel in datasetsTmp)){let dataLength=labels.length;if(mode!=="pie"&&dateClasses){dataLength=dateClasses.arrayLength(originIndex);}
datasetsTmp[datasetLabel]={data:new Array(dataLength).fill(0),cumulatedStart,trueLabels:labels.slice(0,dataLength),domains:new Array(dataLength).fill([]),label:datasetLabel,originIndex:originIndex,identifiers:new Set(),};}
datasetsTmp[datasetLabel].data[labelIndex]=value;datasetsTmp[datasetLabel].domains[labelIndex]=domain;datasetsTmp[datasetLabel].trueLabels[labelIndex]=trueLabel;datasetsTmp[datasetLabel].identifiers.add(identifier);}
let datasets=sortBy(Object.values(datasetsTmp),"originIndex");if(mode==="pie"){datasets=datasets.filter((dataset)=>dataset.data.some((v)=>Boolean(v)));const labelsToKeepIndexes={};labels.forEach((_,index)=>{if(datasets.some((dataset)=>Boolean(dataset.data[index]))){labelsToKeepIndexes[index]=true;}});labels=labels.filter((_,index)=>labelsToKeepIndexes[index]);for(const dataset of datasets){dataset.data=dataset.data.filter((_,index)=>labelsToKeepIndexes[index]);dataset.domains=dataset.domains.filter((_,index)=>labelsToKeepIndexes[index]);dataset.trueLabels=dataset.trueLabels.filter((_,index)=>labelsToKeepIndexes[index]);}}
return{datasets,labels};}
_getLabel(description){if(!description){return _t("Sum");}else{return _t("Sum (%s)",description);}}
_getLineOverlayDataset(){const{domains,stacked}=this.metaData;const data=this.data;let lineOverlayDataset=null;if(stacked){const stacks=groupBy(data.datasets,(dataset)=>dataset.originIndex);if(Object.keys(stacks).length==1){const[[originIndex,datasets]]=Object.entries(stacks);if(datasets.length>1){const data=[];for(const dataset of datasets){for(let i=0;i<dataset.data.length;i++){data[i]=(data[i]||0)+dataset.data[i];}}
lineOverlayDataset={label:this._getLabel(domains[originIndex].description),data,trueLabels:datasets[0].trueLabels,};}}}
return lineOverlayDataset;}
_getDatasetLabel(dataPoint){const{measure,measures,domains,mode}=this.metaData;const{labels,originIndex}=dataPoint;if(mode==="pie"){return domains[originIndex].description||"";}
let datasetLabel=labels.slice(1).join(SEP);if(domains.length>1){datasetLabel=domains[originIndex].description+(datasetLabel?SEP+datasetLabel:"");}
datasetLabel=datasetLabel||measures[measure].string;return datasetLabel;}
_getDateClasses(dataPoints){const{domains}=this.metaData;const dateSets=domains.map(()=>new Set());for(const{labels,originIndex}of dataPoints){const date=labels[0];dateSets[originIndex].add(date);}
const arrays=dateSets.map((dateSet)=>[...dateSet]);return new DateClasses(arrays);}
_getDefaultFilterLabel(field){return _t("None");}
_getProcessedDataPoints(){const{domains,groupBy,mode,order}=this.metaData;let processedDataPoints=[];if(mode==="line"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.labels[0]!==this._getDefaultFilterLabel(groupBy[0]));}else if(mode==="pie"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.value>0&&dataPoint.count!==0);}else{processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.count!==0);}
if(order!==null&&mode!=="pie"&&domains.length===1&&groupBy.length>0){const groupedDataPoints={};for(const dataPt of processedDataPoints){const key=dataPt.labels[0];if(!groupedDataPoints[key]){groupedDataPoints[key]=[];}
groupedDataPoints[key].push(dataPt);}
const groups=Object.values(groupedDataPoints);const groupTotal=(group)=>group.reduce((sum,dataPt)=>sum+dataPt.value,0);processedDataPoints=sortBy(groups,groupTotal,order.toLowerCase()).flat();}
return processedDataPoints;}
async _loadDataPoints(metaData){const{measure,domains,fields,groupBy,resModel,cumulatedStart}=metaData;const fieldName=groupBy[0]?.fieldName;const sequential_field=cumulatedStart&&SEQUENTIAL_TYPES.includes(fields[fieldName]?.type)?fieldName:null;const sequential_spec=sequential_field&&groupBy[0].spec;const measures=["__count"];if(measure!=="__count"){let{aggregator,type}=fields[measure];if(type==="many2one"){aggregator="count_distinct";}
if(aggregator===undefined){throw new Error(`No aggregate function has been provided for the measure '${measure}'`);}
measures.push(`${measure}:${aggregator}`);}
const numbering={};const proms=domains.map(async(domain,originIndex)=>{const data=await this.orm.webReadGroup(resModel,domain.arrayRepr,measures,groupBy.map((gb)=>gb.spec),{lazy:false,context:{fill_temporal:true,...this.searchParams.context},});let start=false;if(cumulatedStart&&sequential_field&&data.groups.length&&domain.arrayRepr.some((leaf)=>leaf.length===3&&leaf[0]==sequential_field)){const first_date=data.groups[0].__range[sequential_spec].from;const new_domain=Domain.combine([new Domain([[sequential_field,"<",first_date]]),Domain.removeDomainLeaves(domain.arrayRepr,[sequential_field]),],"AND").toList();start=await this.orm.webReadGroup(resModel,new_domain,measures,groupBy.filter((gb)=>gb.fieldName!=sequential_field).map((gb)=>gb.spec),{lazy:false,context:{...this.searchParams.context},});}
const dataPoints=[];const cumulatedStartValue={};if(start){for(const group of start.groups){const rawValues=[];for(const gb of groupBy.filter((gb)=>gb.fieldName!=sequential_field)){rawValues.push({[gb.spec]:group[gb.spec]});}
cumulatedStartValue[JSON.stringify(rawValues)]=group[measure];}}
for(const group of data.groups){const{__domain,__count}=group;const labels=[];const rawValues=[];for(const gb of groupBy){let label;const val=group[gb.spec];rawValues.push({[gb.spec]:val});const fieldName=gb.fieldName;const{type}=fields[fieldName];if(type==="boolean"){label=`${val}`;}else if(val===false){label=this._getDefaultFilterLabel(gb);}else if(["many2many","many2one"].includes(type)){const[id,name]=val;const key=JSON.stringify([fieldName,name]);if(!numbering[key]){numbering[key]={};}
const numbers=numbering[key];if(!numbers[id]){numbers[id]=Object.keys(numbers).length+1;}
const num=numbers[id];label=num===1?name:`${name} (${num})`;}else if(type==="selection"){const selected=fields[fieldName].selection.find((s)=>s[0]===val);label=selected[1];}else{label=val;}
labels.push(label);}
let value=group[measure];if(value instanceof Array){value=1;}
if(!Number.isInteger(value)){metaData.allIntegers=false;}
const group_id=JSON.stringify(rawValues.slice(1));dataPoints.push({count:__count,domain:__domain,value,labels,originIndex,identifier:JSON.stringify(rawValues),cumulatedStart:cumulatedStartValue[group_id]||0,});}
return dataPoints;});const promResults=await Promise.all(proms);return promResults.flat();}
_normalize(metaData){const{fields}=metaData;const groupBy=[];for(const gb of metaData.groupBy){let ngb=gb;if(typeof gb==="string"){ngb=getGroupBy(gb,fields);}
groupBy.push(ngb);}
const processedGroupBy=[];for(const gb of groupBy){const{fieldName,interval}=gb;const{groupable,type}=fields[fieldName];if(!groupable||["id","__count"].includes(fieldName)||!GROUPABLE_TYPES.includes(type)){continue;}
const index=processedGroupBy.findIndex((gb)=>gb.fieldName===fieldName);if(index===-1){processedGroupBy.push(gb);}else if(interval){const registeredInterval=processedGroupBy[index].interval;if(rankInterval(registeredInterval)<rankInterval(interval)){processedGroupBy.splice(index,1,gb);}}}
metaData.groupBy=processedGroupBy;metaData.measure=processMeasure(metaData.measure);}
_prepareData(){const processedDataPoints=this._getProcessedDataPoints();this.data=this._getData(processedDataPoints);this.lineOverlayDataset=null;if(this.metaData.mode==="bar"){this.lineOverlayDataset=this._getLineOverlayDataset();}}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_model.js */
odoo.define('@web/views/pivot/pivot_model',['@web/core/l10n/translation','@web/core/domain','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/model/model','@web/views/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{cartesian,sections,sortBy,symmetricalDifference}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{DEFAULT_INTERVAL}=require("@web/search/utils/dates");const{Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
const PivotModel=__exports.PivotModel=class PivotModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _loadData=this._loadData.bind(this);this._loadData=(...args)=>{return this.race.add(_loadData(...args));};let sortedColumn=params.metaData.sortedColumn||null;if(!sortedColumn&&params.metaData.defaultOrder){const defaultOrder=params.metaData.defaultOrder.split(" ");sortedColumn={groupId:[[],[]],measure:defaultOrder[0],order:defaultOrder[1]?defaultOrder[1]:"asc",};}
this.searchParams={context:{},domain:[],domains:[],groupBy:[],};this.data=params.data||{colGroupTree:null,rowGroupTree:null,groupDomains:{},measurements:{},counts:{},numbering:{},};const metaData=Object.assign({},params.metaData,{customGroupBys:params.metaData.customGroupBys||new Map(),expandedRowGroupBys:params.metaData.expandedRowGroupBys||[],expandedColGroupBys:params.metaData.expandedColGroupBys||[],sortedColumn,});this.metaData=this._buildMetaData(metaData);this.reload=false;this.nextActiveMeasures=null;}
async addGroupBy(params){if(this.race.getCurrentProm()){return;}
const{groupId,fieldName,type,custom}=params;let{interval}=params;const metaData=this._buildMetaData();if(custom&&!metaData.customGroupBys.has(fieldName)){const field=metaData.fields[fieldName];if(!interval&&["date","datetime"].includes(field.type)){interval=DEFAULT_INTERVAL;}
metaData.customGroupBys.set(fieldName,{...field,id:fieldName,});}
let groupBy=fieldName;if(interval){groupBy=`${groupBy}:${interval}`;}
if(type==="row"){metaData.expandedRowGroupBys.push(groupBy);}else{metaData.expandedColGroupBys.push(groupBy);}
const config={metaData,data:this.data};await this._expandGroup(groupId,type,config);this.metaData=metaData;this.notify();}
closeGroup(groupId,type){if(this.race.getCurrentProm()){return;}
let groupBys;let expandedGroupBys;let keyPart;let group;let tree;if(type==="row"){groupBys=this.metaData.rowGroupBys;expandedGroupBys=this.metaData.expandedRowGroupBys;tree=this.data.rowGroupTree;group=this._findGroup(this.data.rowGroupTree,groupId[0]);keyPart=0;}else{groupBys=this.metaData.colGroupBys;expandedGroupBys=this.metaData.expandedColGroupBys;tree=this.data.colGroupTree;group=this._findGroup(this.data.colGroupTree,groupId[1]);keyPart=1;}
const groupIdPart=groupId[keyPart];const range=groupIdPart.map((_,index)=>index);function keep(key){const idPart=JSON.parse(key)[keyPart];return(range.some((index)=>groupIdPart[index]!==idPart[index])||idPart.length===groupIdPart.length);}
function omitKeys(object){const newObject={};for(const key in object){if(keep(key)){newObject[key]=object[key];}}
return newObject;}
this.data.measurements=omitKeys(this.data.measurements);this.data.counts=omitKeys(this.data.counts);this.data.groupDomains=omitKeys(this.data.groupDomains);group.directSubTrees.clear();delete group.sortedKeys;var newGroupBysLength=this._getTreeHeight(tree)-1;if(newGroupBysLength<=groupBys.length){expandedGroupBys.splice(0);groupBys.splice(newGroupBysLength);}else{expandedGroupBys.splice(newGroupBysLength-groupBys.length);}
this.notify();}
async expandAll(){const config={metaData:this.metaData,data:this.data};await this._loadData(config,false);this.notify();}
async expandGroup(groupId,type){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};await this._expandGroup(groupId,type,config);this.notify();}
exportData(){const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const table=this.getTable();const headers=table.headers;let colGroupHeaderRows;let measureRow=[];let originRow=[];function processHeader(header){const inTotalColumn=header.groupId[1].length===0;return{title:header.title,width:header.width,height:header.height,is_bold:!!header.measure&&inTotalColumn,};}
if(originCount>1){colGroupHeaderRows=headers.slice(0,headers.length-2);measureRow=headers[headers.length-2].map(processHeader);originRow=headers[headers.length-1].map(processHeader);}else{colGroupHeaderRows=headers.slice(0,headers.length-1);measureRow=headers[headers.length-1].map(processHeader);}
colGroupHeaderRows[0].splice(0,1);colGroupHeaderRows=colGroupHeaderRows.map((headerRow)=>{return headerRow.map(processHeader);});const tableRows=table.rows.map((row)=>{return{title:row.title,indent:row.indent,values:row.subGroupMeasurements.map((measurement)=>{let value=measurement.value;if(value===undefined){value="";}else if(measurement.originIndexes.length>1){value=value*100;}
return{is_bold:measurement.isBold,value:value,};}),};});return{model:this.metaData.resModel,title:this.metaData.title,col_group_headers:colGroupHeaderRows,measure_headers:measureRow,origin_headers:originRow,rows:tableRows,measure_count:measureCount,origin_count:originCount,};}
async flip(){await this.race.getCurrentProm();let temp=this.data.rowGroupTree;this.data.rowGroupTree=this.data.colGroupTree;this.data.colGroupTree=temp;temp=this.metaData.rowGroupBys;this.metaData.rowGroupBys=this.metaData.colGroupBys;this.metaData.colGroupBys=temp;temp=this.metaData.expandedColGroupBys;this.metaData.expandedColGroupBys=this.metaData.expandedRowGroupBys;this.metaData.expandedRowGroupBys=temp;function twistKey(key){return JSON.stringify(JSON.parse(key).reverse());}
function twist(object){const newObject={};Object.keys(object).forEach((key)=>{const value=object[key];newObject[twistKey(key)]=value;});return newObject;}
this.data.measurements=twist(this.data.measurements);this.data.counts=twist(this.data.counts);this.data.groupDomains=twist(this.data.groupDomains);this.notify();}
getGroupDomain(group){const config={metaData:this.metaData,data:this.data};return this._getGroupDomain(group,config);}
getTable(){const headers=this._getTableHeaders();return{headers:headers,rows:this._getTableRows(this.data.rowGroupTree,headers[headers.length-1]),};}
getTableWidth(){var leafCounts=this._getLeafCounts(this.data.colGroupTree);return leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]+2;}
hasData(){return this._hasData(this.data);}
async load(searchParams){this.searchParams=searchParams;const processedMeasures=processMeasure(searchParams.context.pivot_measures);const activeMeasures=processedMeasures||this.metaData.activeMeasures;const metaData=this._buildMetaData({activeMeasures});if(!this.reload){metaData.rowGroupBys=searchParams.context.pivot_row_groupby||(searchParams.groupBy.length?searchParams.groupBy:metaData.rowGroupBys);this.reload=true;}else{metaData.rowGroupBys=searchParams.groupBy.length?searchParams.groupBy:searchParams.context.pivot_row_groupby||metaData.rowGroupBys;}
metaData.colGroupBys=searchParams.context.pivot_column_groupby||this.metaData.colGroupBys;if(JSON.stringify(metaData.rowGroupBys)!==JSON.stringify(this.metaData.rowGroupBys)){metaData.expandedRowGroupBys=[];}
if(JSON.stringify(metaData.colGroupBys)!==JSON.stringify(this.metaData.colGroupBys)){metaData.expandedColGroupBys=[];}
const allActivesMeasures=new Set(this.metaData.activeMeasures);if(processedMeasures){processedMeasures.forEach((e)=>allActivesMeasures.add(e));}
metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...allActivesMeasures,]);const config={metaData,data:this.data};return this._loadData(config);}
sortRows(sortedColumn){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};this._sortRows(sortedColumn,config);this.notify();}
async toggleMeasure(fieldName){const metaData=this._buildMetaData();this.nextActiveMeasures=this.nextActiveMeasures||metaData.activeMeasures;metaData.activeMeasures=this.nextActiveMeasures;const index=metaData.activeMeasures.indexOf(fieldName);if(index!==-1){metaData.activeMeasures.splice(index,1);await Promise.resolve(this.race.getCurrentProm());this.metaData=metaData;}else{metaData.activeMeasures.push(fieldName);const config={metaData,data:this.data};await this._loadData(config);this.useSampleModel=false;}
this.nextActiveMeasures=null;this.notify();}
_addGroup(groupTree,labels,values){let tree=groupTree;values.slice(0,values.length-1).forEach(function(value){tree=tree.directSubTrees.get(value);});const value=values[values.length-1];if(tree.directSubTrees.has(value)){return;}
tree.directSubTrees.set(value,{root:{labels:labels,values:values,},directSubTrees:new Map(),});}
_buildMetaData(params){const metaData=Object.assign({},this.metaData,params);metaData.activeMeasures=[...metaData.activeMeasures];metaData.colGroupBys=[...metaData.colGroupBys];metaData.rowGroupBys=[...metaData.rowGroupBys];metaData.expandedColGroupBys=[...metaData.expandedColGroupBys];metaData.expandedRowGroupBys=[...metaData.expandedRowGroupBys];metaData.customGroupBys=new Map([...metaData.customGroupBys]);metaData.sortedColumn=metaData.sortedColumn?{...metaData.sortedColumn}:null;if(this.searchParams.comparison){const domains=this.searchParams.comparison.domains.slice().reverse();metaData.domains=domains.map((d)=>d.arrayRepr);metaData.origins=domains.map((d)=>d.description);}else{metaData.domains=[this.searchParams.domain];metaData.origins=[""];}
Object.defineProperty(metaData,"fullColGroupBys",{get(){return metaData.colGroupBys.concat(metaData.expandedColGroupBys);},});Object.defineProperty(metaData,"fullRowGroupBys",{get(){return metaData.rowGroupBys.concat(metaData.expandedRowGroupBys);},});return metaData;}
async _expandGroup(groupId,type,config){const{metaData}=config;const group={rowValues:groupId[0],colValues:groupId[1],type:type,};const groupValues=type==="row"?groupId[0]:groupId[1];const groupBys=type==="row"?metaData.fullRowGroupBys:metaData.fullColGroupBys;if(groupValues.length>=groupBys.length){throw new Error("Cannot expand group");}
const groupBy=groupBys[groupValues.length];let leftDivisors;let rightDivisors;if(group.type==="row"){leftDivisors=[[groupBy]];rightDivisors=sections(metaData.fullColGroupBys);}else{leftDivisors=sections(metaData.fullRowGroupBys);rightDivisors=[[groupBy]];}
const divisors=cartesian(leftDivisors,rightDivisors);delete group.type;await this._subdivideGroup(group,divisors,config);}
_findGroup(groupTree,values){let tree=groupTree;values.slice(0,values.length).forEach((value)=>{tree=tree.directSubTrees.get(value);});return tree;}
_getCellValue(groupId,measure,originIndexes,config){var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>{return config.data.measurements[key][originIndex][measure];});if(originIndexes.length>1){return computeVariation(values[1],values[0]);}else{return values[0];}}
_getGroupBySpecs(rowGroupBy,colGroupBy){const set=rowGroupBy.concat(colGroupBy).reduce((acc,gb)=>{acc.add(this._normalize(gb));return acc;},new Set());return[...set];}
_getGroupDomain(group,config){const{data}=config;var key=JSON.stringify([group.rowValues,group.colValues]);return data.groupDomains[key][group.originIndex];}
_getGroupLabels(group,groupBys,config){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeLabel(group[groupBy],groupBy,config);});}
async _getGroupSubdivision(group,rowGroupBy,colGroupBy,params){const groupBy=this._getGroupBySpecs(rowGroupBy,colGroupBy);const subGroups=await this._getSubGroups(groupBy,params);return{group,subGroups,rowGroupBy:rowGroupBy,colGroupBy:colGroupBy,};}
_getGroupValues(group,groupBys){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeValue(group[groupBy]);});}
_getLeafCounts(tree){const leafCounts={};let leafCount;if(!tree.directSubTrees.size){leafCount=1;}else{leafCount=[...tree.directSubTrees.values()].reduce((acc,subTree)=>{const subLeafCounts=this._getLeafCounts(subTree);Object.assign(leafCounts,subLeafCounts);return acc+leafCounts[JSON.stringify(subTree.root.values)];},0);}
leafCounts[JSON.stringify(tree.root.values)]=leafCount;return leafCounts;}
_getMeasurements(group,config){const{metaData}=config;return metaData.activeMeasures.reduce((measurements,measureName)=>{var measurement=group[measureName];if(measurement instanceof Array){measurement=1;}
if(metaData.measures[measureName].type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
if(metaData.origins.length>1&&!measurement){measurement=0;}
measurements[measureName]=measurement;return measurements;},{});}
_getMeasuresRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const measureRow=[];columns.forEach((column)=>{this.metaData.activeMeasures.forEach((measureName)=>{const measureCell={groupId:column.groupId,height:1,measure:measureName,title:this.metaData.measures[measureName].string,width:2*this.metaData.origins.length-1,};if(sortedColumn.measure===measureName&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(column.groupId)){measureCell.order=sortedColumn.order;}
measureRow.push(measureCell);});});return measureRow;}
_getMeasureSpecs(config){const{metaData}=config;return metaData.activeMeasures.reduce((acc,measure)=>{if(measure==="__count"){acc.push(measure);return acc;}
const field=this.metaData.fields[measure];if(field.type==="many2one"){field.aggregator="count_distinct";}
if(field.aggregator===undefined){throw new Error("No aggregate function has been provided for the measure '"+measure+"'");}
acc.push(measure+":"+field.aggregator);return acc;},[]);}
_getNumberedLabel(label,fieldName,config){const{data}=config;const id=label[0];const name=label[1];data.numbering[fieldName]=data.numbering[fieldName]||{};data.numbering[fieldName][name]=data.numbering[fieldName][name]||{};const numbers=data.numbering[fieldName][name];numbers[id]=numbers[id]||Object.keys(numbers).length+1;return name+(numbers[id]>1?"  ("+numbers[id]+")":"");}
_getOriginsRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const originRow=[];columns.forEach((column)=>{const groupId=column.groupId;const measure=column.measure;const isSorted=sortedColumn.measure===measure&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(groupId);const isSortedByOrigin=isSorted&&!sortedColumn.originIndexes[1];const isSortedByVariation=isSorted&&sortedColumn.originIndexes[1];this.metaData.origins.forEach((origin,originIndex)=>{const originCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex],title:origin,width:1,};if(isSortedByOrigin&&sortedColumn.originIndexes[0]===originIndex){originCell.order=sortedColumn.order;}
originRow.push(originCell);if(originIndex>0){const variationCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex-1,originIndex],title:_t("Variation"),width:1,};if(isSortedByVariation&&sortedColumn.originIndexes[1]===originIndex){variationCell.order=sortedColumn.order;}
originRow.push(variationCell);}});});return originRow;}
async _getSubGroups(groupBy,params){const{resModel,groupDomain,measureSpecs,kwargs,mapping}=params;const key=JSON.stringify(groupBy);if(!mapping[key]){mapping[key]=this.orm.readGroup(resModel,groupDomain,measureSpecs,groupBy,kwargs);}
return mapping[key];}
_getTableHeaders(){const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length+1;const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);let headers=[];const measureColumns=[];const colGroupRows=new Array(height).fill(0).map(()=>[]);colGroupRows[0].push({height:height+1+(originCount>1?1:0),title:"",width:1,});function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;const row=colGroupRows[rowIndex];const groupId=[[],group.values];const isLeaf=!tree.directSubTrees.size;const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={groupId:groupId,height:isLeaf?colGroupBys.length+1-rowIndex:1,isLeaf:isLeaf,isFolded:isLeaf&&colGroupBys.length>group.values.length,label:rowIndex===0?undefined:fields[colGroupBys[rowIndex-1].split(":")[0]].string,title:group.labels.length?group.labels[group.labels.length-1]:_t("Total"),width:leafCount*measureCount*(2*originCount-1),};row.push(cell);if(isLeaf){measureColumns.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);if(leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]>1){var groupId=[[],[]];var totalTopRightCell={groupId:groupId,height:height,title:"",width:measureCount*(2*originCount-1),};colGroupRows[0].push(totalTopRightCell);measureColumns.push(totalTopRightCell);}
headers=headers.concat(colGroupRows);var measuresRow=this._getMeasuresRow(measureColumns);headers.push(measuresRow);if(originCount>1){headers.push(this._getOriginsRow(measuresRow));}
return headers;}
_getTableRows(tree,columns){let rows=[];const group=tree.root;const rowGroupId=[group.values,[]];const title=group.labels.length?group.labels[group.labels.length-1]:_t("Total");const indent=group.labels.length;const isLeaf=!tree.directSubTrees.size;const rowGroupBys=this.metaData.fullRowGroupBys;const subGroupMeasurements=columns.map((column)=>{const colGroupId=column.groupId;const groupIntersectionId=[rowGroupId[0],colGroupId[1]];const measure=column.measure;const originIndexes=column.originIndexes||[0];const value=this._getCellValue(groupIntersectionId,measure,originIndexes,{data:this.data,});const measurement={groupId:groupIntersectionId,originIndexes:originIndexes,measure:measure,value:value,isBold:!groupIntersectionId[0].length||!groupIntersectionId[1].length,};return measurement;});rows.push({title:title,label:indent===0?undefined:this.metaData.fields[rowGroupBys[indent-1].split(":")[0]].string,groupId:rowGroupId,indent:indent,isLeaf:isLeaf,isFolded:isLeaf&&rowGroupBys.length>group.values.length,subGroupMeasurements:subGroupMeasurements,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows=rows.concat(this._getTableRows(subTree,columns));});return rows;}
_getTreeHeight(tree){const subTreeHeights=[...tree.directSubTrees.values()].map(this._getTreeHeight.bind(this));return Math.max(0,Math.max.apply(null,subTreeHeights))+1;}
_hasData(data){return(data.counts[JSON.stringify([[],[]])]||[]).some((count)=>{return count>0;});}
async _loadData(config,prune=true){config.data={};const{data,metaData}=config;data.rowGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.colGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.measurements={};data.counts={};data.groupDomains={};data.numbering={};const key=JSON.stringify([[],[]]);data.groupDomains[key]=metaData.domains.slice(0);const group={rowValues:[],colValues:[]};const leftDivisors=sections(metaData.fullRowGroupBys);const rightDivisors=sections(metaData.fullColGroupBys);const divisors=cartesian(leftDivisors,rightDivisors);await this._subdivideGroup(group,divisors.slice(0,1),config);await this._subdivideGroup(group,divisors.slice(1),config);if(prune&&this._hasData(data)&&this._hasData(this.data)){if(symmetricalDifference(metaData.rowGroupBys,this.metaData.rowGroupBys).length===0){this._pruneTree(data.rowGroupTree,this.data.rowGroupTree);}
if(symmetricalDifference(metaData.colGroupBys,this.metaData.colGroupBys).length===0){this._pruneTree(data.colGroupTree,this.data.colGroupTree);}}
this.data=config.data;this.metaData=config.metaData;}
_normalize(gb){const[fieldName,interval]=gb.split(":");const field=this.metaData.fields[fieldName];if(["date","datetime"].includes(field.type)){return`${fieldName}:${interval || "month"}`;}else{return fieldName;}}
_prepareData(group,groupSubdivisions,config){const{data,metaData}=config;const groupRowValues=group.rowValues;let groupRowLabels=[];let rowSubTree=data.rowGroupTree;let root;if(groupRowValues.length){rowSubTree=this._findGroup(data.rowGroupTree,groupRowValues);root=rowSubTree.root;groupRowLabels=root.labels;}
const groupColValues=group.colValues;let groupColLabels=[];if(groupColValues.length){root=this._findGroup(data.colGroupTree,groupColValues).root;groupColLabels=root.labels;}
groupSubdivisions.forEach((groupSubdivision)=>{groupSubdivision.subGroups.forEach((subGroup)=>{const rowValues=groupRowValues.concat(this._getGroupValues(subGroup,groupSubdivision.rowGroupBy));const rowLabels=groupRowLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.rowGroupBy,config));const colValues=groupColValues.concat(this._getGroupValues(subGroup,groupSubdivision.colGroupBy));const colLabels=groupColLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.colGroupBy,config));if(!colValues.length&&rowValues.length){this._addGroup(data.rowGroupTree,rowLabels,rowValues);}
if(colValues.length&&!rowValues.length){this._addGroup(data.colGroupTree,colLabels,colValues);}
const key=JSON.stringify([rowValues,colValues]);const originIndex=groupSubdivision.group.originIndex;if(!(key in data.measurements)){data.measurements[key]=metaData.origins.map(()=>{return this._getMeasurements({},config);});}
data.measurements[key][originIndex]=this._getMeasurements(subGroup,config);if(!(key in data.counts)){data.counts[key]=metaData.origins.map(function(){return 0;});}
data.counts[key][originIndex]=subGroup.__count;if(!(key in data.groupDomains)){data.groupDomains[key]=metaData.origins.map(function(){return Domain.FALSE.toList();});}
if(subGroup.__domain){data.groupDomains[key][originIndex]=subGroup.__domain;}});});if(metaData.sortedColumn){this._sortRows(metaData.sortedColumn,config);}}
_pruneTree(tree,oldTree){if(!oldTree.directSubTrees.size){tree.directSubTrees.clear();delete tree.sortedKeys;return;}
[...tree.directSubTrees.keys()].forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);if(!oldTree.directSubTrees.has(subTreeKey)){subTree.directSubTrees.clear();delete subTree.sortedKeys;}else{const oldSubTree=oldTree.directSubTrees.get(subTreeKey);this._pruneTree(subTree,oldSubTree);}});}
_getEmptyGroupLabel(fieldName){return _t("None");}
_sanitizeLabel(value,groupBy,config){const{metaData}=config;const fieldName=groupBy.split(":")[0];if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="boolean"){return value===undefined?_t("None"):value?_t("Yes"):_t("No");}
if(value===false){return this._getEmptyGroupLabel(fieldName);}
if(value instanceof Array){return this._getNumberedLabel(value,fieldName,config);}
if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="selection"){const selected=metaData.fields[fieldName].selection.find((o)=>o[0]===value);return selected?selected[1]:value;}
return value;}
_sanitizeValue(value){if(value instanceof Array){return value[0];}
return value;}
async _subdivideGroup(group,divisors,config){const{data,metaData}=config;const key=JSON.stringify([group.rowValues,group.colValues]);const proms=metaData.origins.reduce((acc,origin,originIndex)=>{if(!data.counts[key]||data.counts[key][originIndex]>0){const subGroup={rowValues:group.rowValues,colValues:group.colValues,originIndex:originIndex,};const groupDomain=this._getGroupDomain(subGroup,config);const measureSpecs=this._getMeasureSpecs(config);const resModel=config.metaData.resModel;const kwargs={lazy:false,context:this.searchParams.context};const mapping={};divisors.forEach((divisor)=>{acc.push(this._getGroupSubdivision(subGroup,divisor[0],divisor[1],{resModel,groupDomain,measureSpecs,kwargs,mapping,}));});}
return acc;},[]);const groupSubdivisions=await this.keepLast.add(Promise.all(proms));if(groupSubdivisions.length){this._prepareData(group,groupSubdivisions,config);}}
_sortRows(sortedColumn,config){const metaData=config.metaData||this.metaData;const data=config.data||this.data;const colGroupValues=sortedColumn.groupId[1];sortedColumn.originIndexes=sortedColumn.originIndexes||[0];metaData.sortedColumn=sortedColumn;const sortFunction=(tree)=>{return(subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);const groupIntersectionId=[subTree.root.values,colGroupValues];const value=this._getCellValue(groupIntersectionId,sortedColumn.measure,sortedColumn.originIndexes,{data})||0;return sortedColumn.order==="asc"?value:-value;};};this._sortTree(sortFunction,data.rowGroupTree);}
_sortTree(sortFunction,tree){tree.sortedKeys=sortBy([...tree.directSubTrees.keys()],sortFunction(tree));[...tree.directSubTrees.values()].forEach((subTree)=>{this._sortTree(sortFunction,subTree);});}}
return __exports;});;

/* /web/static/src/polyfills/clipboard.js */
odoo.define('@web/polyfills/clipboard',[],function(require){'use strict';let __exports={};class ClipboardItemImpl{constructor(items,options={}){this.items=items;this.options=options;}
get presentationStyle(){return this.options.presentationStyle;}
get types(){return Object.keys(this.items);}
getType(type){return this.items[type];}}
function blobToStr(blob){return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{const{result}=reader;if(typeof result==="string"){resolve(result);}else{reject("Cannot read Blob as String");}});reader.addEventListener("error",()=>{reject("Cannot read Blob");});reader.readAsText(blob);});}
async function stringify(item){const strItem={};for(const type of item.types){strItem[type]=await blobToStr(item.getType(type));}
return strItem;}
async function write(items){if(!items[0].getType("text/plain")){throw new Error(`Calling clipboard.write() without a "text/plain" type may result in an empty clipboard on some platforms.`);}
const strItem=await stringify(items[0]);const stubContainer=document.createElement("div");const shadowContainer=stubContainer.attachShadow({mode:"open"});const stub=document.createElement("span");stub.innerText=strItem["text/plain"];shadowContainer.appendChild(stub);document.body.appendChild(stubContainer);const selection=document.getSelection();const range=document.createRange();range.selectNodeContents(stub);selection.removeAllRanges();selection.addRange(range);const onCopy=(ev)=>{for(const type in strItem){ev.clipboardData.setData(type,strItem[type]);}
ev.preventDefault();};document.addEventListener("copy",onCopy);let result;try{result=document.execCommand("copy");}finally{document.removeEventListener("copy",onCopy);}
selection.removeAllRanges();document.body.removeChild(stubContainer);return result;}
if(window.navigator.clipboard){if(!window.navigator.clipboard.write){window.navigator.clipboard.write=write.bind(window);}
if(!window.ClipboardItem){window.ClipboardItem=ClipboardItemImpl;}}
return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/o_spreadsheet.js */
odoo.define('@spreadsheet/o_spreadsheet/o_spreadsheet',['@odoo/owl'],function(require){'use strict';let __exports={};const{useEnv,useSubEnv,onWillUnmount,useComponent,status,Component,useRef,onMounted,useEffect,useState,onPatched,onWillPatch,onWillUpdateProps,useExternalListener,onWillStart,xml,useChildSubEnv,markRaw,toRaw}=require('@odoo/owl');function createActions(menuItems){return menuItems.map(createAction).sort((a,b)=>a.sequence-b.sequence);}
let nextItemId=1;function createAction(item){const name=item.name;const children=item.children;const description=item.description;const icon=item.icon;const secondaryIcon=item.secondaryIcon;const itemId=item.id||nextItemId++;return{id:itemId.toString(),name:typeof name==="function"?name:()=>name,isVisible:item.isVisible?item.isVisible:()=>true,isEnabled:item.isEnabled?item.isEnabled:()=>true,isActive:item.isActive,execute:item.execute,children:children?(env)=>{return children.map((child)=>(typeof child==="function"?child(env):child)).flat().map(createAction);}:()=>[],isReadonlyAllowed:item.isReadonlyAllowed||false,separator:item.separator||false,icon:typeof icon==="function"?icon:()=>icon||"",iconColor:item.iconColor,secondaryIcon:typeof secondaryIcon==="function"?secondaryIcon:()=>secondaryIcon||"",description:typeof description==="function"?description:()=>description||"",textColor:item.textColor,sequence:item.sequence||0,onStartHover:item.onStartHover,onStopHover:item.onStopHover,};}
class Registry{content={};add(key,value){this.content[key]=value;return this;}
get(key){const content=this.content[key];if(!content){if(!(key in this.content)){throw new Error(`Cannot find ${key} in this registry!`);}}
return content;}
contains(key){return key in this.content;}
getAll(){return Object.values(this.content);}
getKeys(){return Object.keys(this.content);}
remove(key){delete this.content[key];}}
const CANVAS_SHIFT=0.5;const HIGHLIGHT_COLOR="#37A850";const BACKGROUND_GRAY_COLOR="#f5f5f5";const BACKGROUND_HEADER_COLOR="#F8F9FA";const BACKGROUND_HEADER_SELECTED_COLOR="#E8EAED";const BACKGROUND_HEADER_ACTIVE_COLOR="#595959";const TEXT_HEADER_COLOR="#666666";const FIGURE_BORDER_COLOR="#c9ccd2";const SELECTION_BORDER_COLOR="#3266ca";const HEADER_BORDER_COLOR="#C0C0C0";const CELL_BORDER_COLOR="#E2E3E3";const BACKGROUND_CHART_COLOR="#FFFFFF";const BORDER_CHART_COLOR="#FFFFFF";const DISABLED_TEXT_COLOR="#CACACA";const DEFAULT_COLOR_SCALE_MIDPOINT_COLOR=0xb6d7a8;const LINK_COLOR="#017E84";const FILTERS_COLOR="#188038";const SEPARATOR_COLOR="#E0E2E4";const ICONS_COLOR="#4A4F59";const HEADER_GROUPING_BACKGROUND_COLOR="#F5F5F5";const HEADER_GROUPING_BORDER_COLOR="#999";const GRID_BORDER_COLOR="#E2E3E3";const FROZEN_PANE_HEADER_BORDER_COLOR="#BCBCBC";const FROZEN_PANE_BORDER_COLOR="#DADFE8";const COMPOSER_ASSISTANT_COLOR="#9B359B";const CHART_WATERFALL_POSITIVE_COLOR="#4EA7F2";const CHART_WATERFALL_NEGATIVE_COLOR="#EA6175";const CHART_WATERFALL_SUBTOTAL_COLOR="#AAAAAA";const GRAY_900="#111827";const GRAY_300="#D8DADD";const GRAY_200="#E7E9ED";const GRAY_100="#F9FAFB";const TEXT_BODY="#374151";const TEXT_BODY_MUTED=TEXT_BODY+"C2";const TEXT_HEADING="#111827";const PRIMARY_BUTTON_BG="#714B67";const PRIMARY_BUTTON_HOVER_BG="#624159";const PRIMARY_BUTTON_ACTIVE_BG="#f1edf0";const BUTTON_BG=GRAY_200;const BUTTON_HOVER_BG=GRAY_300;const BUTTON_HOVER_TEXT_COLOR="#111827";const BUTTON_ACTIVE_BG="#e6f2f3";const BUTTON_ACTIVE_TEXT_COLOR="#111827";const ACTION_COLOR="#017E84";const ACTION_COLOR_HOVER="#01585c";const ALERT_WARNING_BG="#FBEBCC";const ALERT_WARNING_BORDER="#F8E2B3";const ALERT_WARNING_TEXT_COLOR="#946D23";const ALERT_DANGER_BG="#D44C591A";const ALERT_DANGER_BORDER="#C34A41";const ALERT_DANGER_TEXT_COLOR="#C34A41";const ALERT_INFO_BG="#CDEDF1";const ALERT_INFO_BORDER="#98DBE2";const ALERT_INFO_TEXT_COLOR="#09414A";const BADGE_SELECTED_COLOR="#E6F2F3";const DEFAULT_CHART_PADDING=20;const DEFAULT_CHART_FONT_SIZE=22;const SCORECARD_GAUGE_CHART_PADDING=10;const SCORECARD_GAUGE_CHART_FONT_SIZE=14;const COLOR_PICKER_DEFAULTS=["#000000","#434343","#666666","#999999","#B7B7B7","#CCCCCC","#D9D9D9","#EFEFEF","#F3F3F3","#FFFFFF","#980000","#FF0000","#FF9900","#FFFF00","#00FF00","#00FFFF","#4A86E8","#0000FF","#9900FF","#FF00FF","#E6B8AF","#F4CCCC","#FCE5CD","#FFF2CC","#D9EAD3","#D0E0E3","#C9DAF8","#CFE2F3","#D9D2E9","#EAD1DC","#DD7E6B","#EA9999","#F9CB9C","#FFE599","#B6D7A8","#A2C4C9","#A4C2F4","#9FC5E8","#B4A7D6","#D5A6BD","#CC4125","#E06666","#F6B26B","#FFD966","#93C47D","#76A5AF","#6D9EEB","#6FA8DC","#8E7CC3","#C27BA0","#A61C00","#CC0000","#E69138","#F1C232","#6AA84F","#45818E","#3C78D8","#3D85C6","#674EA7","#A64D79","#85200C","#990000","#B45F06","#BF9000","#38761D","#134F5C","#1155CC","#0B5394","#351C75","#741B47","#5B0F00","#660000","#783F04","#7F6000","#274E13","#0C343D","#1C4587","#073763","#20124D","#4C1130",];const MIN_ROW_HEIGHT=10;const MIN_COL_WIDTH=5;const HEADER_HEIGHT=26;const HEADER_WIDTH=48;const TOPBAR_HEIGHT=63;const TOPBAR_TOOLBAR_HEIGHT=34;const BOTTOMBAR_HEIGHT=36;const DEFAULT_CELL_WIDTH=96;const DEFAULT_CELL_HEIGHT=23;const SCROLLBAR_WIDTH=15;const AUTOFILL_EDGE_LENGTH=8;const ICON_EDGE_LENGTH=18;const MIN_CF_ICON_MARGIN=4;const MIN_CELL_TEXT_MARGIN=4;const CF_ICON_EDGE_LENGTH=15;const PADDING_AUTORESIZE_VERTICAL=3;const PADDING_AUTORESIZE_HORIZONTAL=MIN_CELL_TEXT_MARGIN;const GROUP_LAYER_WIDTH=21;const GRID_ICON_MARGIN=2;const GRID_ICON_EDGE_LENGTH=17;const FOOTER_HEIGHT=2*DEFAULT_CELL_HEIGHT;const MENU_WIDTH=250;const MENU_VERTICAL_PADDING=6;const MENU_ITEM_HEIGHT=26;const MENU_ITEM_PADDING_HORIZONTAL=11;const MENU_ITEM_PADDING_VERTICAL=4;const MENU_SEPARATOR_BORDER_WIDTH=1;const MENU_SEPARATOR_PADDING=5;const DEFAULT_STYLE={align:"left",verticalAlign:"bottom",wrapping:"overflow",bold:false,italic:false,strikethrough:false,underline:false,fontSize:10,fillColor:"",textColor:"",};const DEFAULT_VERTICAL_ALIGN=DEFAULT_STYLE.verticalAlign;const DEFAULT_WRAPPING_MODE=DEFAULT_STYLE.wrapping;const DEFAULT_FONT_WEIGHT="400";const DEFAULT_FONT_SIZE=DEFAULT_STYLE.fontSize;const HEADER_FONT_SIZE=11;const DEFAULT_FONT="'Roboto', arial";const DEFAULT_BORDER_DESC={style:"thin",color:"#000000"};const MAX_HISTORY_STEPS=99;const DEFAULT_REVISION_ID="START_REVISION";const DEFAULT_FIGURE_HEIGHT=335;const DEFAULT_FIGURE_WIDTH=536;const FIGURE_BORDER_WIDTH=1;const MIN_FIG_SIZE=80;const MAX_CHAR_LABEL=20;const FIGURE_ID_SPLITTER="??";const DEFAULT_GAUGE_LOWER_COLOR="#EA6175";const DEFAULT_GAUGE_MIDDLE_COLOR="#FFD86D";const DEFAULT_GAUGE_UPPER_COLOR="#43C5B1";const DEFAULT_SCORECARD_BASELINE_MODE="difference";const DEFAULT_SCORECARD_BASELINE_COLOR_UP="#43C5B1";const DEFAULT_SCORECARD_BASELINE_COLOR_DOWN="#EA6175";const LINE_FILL_TRANSPARENCY=0.4;const DEBOUNCE_TIME=200;const MESSAGE_VERSION=1;const FORBIDDEN_SHEET_CHARS=["'","*","?","/","\\","[","]"];const FORBIDDEN_IN_EXCEL_REGEX=/'|\*|\?|\/|\\|\[|\]/;const FORMULA_REF_IDENTIFIER="|";var ComponentsImportance;(function(ComponentsImportance){ComponentsImportance[ComponentsImportance["Grid"]=0]="Grid";ComponentsImportance[ComponentsImportance["Highlight"]=5]="Highlight";ComponentsImportance[ComponentsImportance["HeaderGroupingButton"]=6]="HeaderGroupingButton";ComponentsImportance[ComponentsImportance["Figure"]=10]="Figure";ComponentsImportance[ComponentsImportance["ScrollBar"]=15]="ScrollBar";ComponentsImportance[ComponentsImportance["GridPopover"]=19]="GridPopover";ComponentsImportance[ComponentsImportance["GridComposer"]=20]="GridComposer";ComponentsImportance[ComponentsImportance["Dropdown"]=21]="Dropdown";ComponentsImportance[ComponentsImportance["IconPicker"]=25]="IconPicker";ComponentsImportance[ComponentsImportance["TopBarComposer"]=30]="TopBarComposer";ComponentsImportance[ComponentsImportance["Popover"]=35]="Popover";ComponentsImportance[ComponentsImportance["FigureAnchor"]=1000]="FigureAnchor";ComponentsImportance[ComponentsImportance["FigureSnapLine"]=1001]="FigureSnapLine";})(ComponentsImportance||(ComponentsImportance={}));let DEFAULT_SHEETVIEW_SIZE=0;function getDefaultSheetViewSize(){return DEFAULT_SHEETVIEW_SIZE;}
function setDefaultSheetViewSize(size){DEFAULT_SHEETVIEW_SIZE=size;}
const MAXIMAL_FREEZABLE_RATIO=0.85;const NEWLINE="\n";const FONT_SIZES=[6,7,8,9,10,11,12,14,18,24,36];const PIVOT_TABLE_CONFIG={hasFilters:false,totalRow:false,firstColumn:true,lastColumn:false,numberOfHeaders:1,bandedRows:true,bandedColumns:false,styleId:"TableStyleMedium5",automaticAutofill:true,};const DEFAULT_CURRENCY={symbol:"$",position:"before",decimalPlaces:2,code:"",name:"Dollar",};function removeStringQuotes(str){if(str[0]==='"'){str=str.slice(1);}
if(str[str.length-1]==='"'&&str[str.length-2]!=="\\"){return str.slice(0,str.length-1);}
return str;}
function isCloneable(obj){return"clone"in obj&&obj.clone instanceof Function;}
function escapeRegExp(str){return str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}
function deepCopy(obj){const result=Array.isArray(obj)?[]:{};switch(typeof obj){case"object":{if(obj===null){return obj;}
else if(isCloneable(obj)){return obj.clone();}
else if(!(isPlainObject(obj)||obj instanceof Array)){throw new Error("Unsupported type: only objects and arrays are supported");}
for(const key in obj){result[key]=deepCopy(obj[key]);}
return result;}
case"number":case"string":case"boolean":case"function":case"undefined":return obj;default:throw new Error(`Unsupported type: ${typeof obj}`);}}
function isPlainObject(obj){return(typeof obj==="object"&&obj!==null&&(obj?.constructor===Object||obj?.constructor===undefined));}
function getUnquotedSheetName(sheetName){return unquote(sheetName,"'");}
function unquote(string,quoteChar='"'){if(string.startsWith(quoteChar)){string=string.slice(1);}
if(string.endsWith(quoteChar)){string=string.slice(0,-1);}
return string;}
function getCanonicalSymbolName(symbolName){if(symbolName.match(/\w/g)?.length!==symbolName.length){symbolName=`'${symbolName}'`;}
return symbolName;}
function clip(val,min,max){return val<min?min:val>max?max:val;}
function range(start,end,step=1){if(end<=start&&step>0){return[];}
if(step===0){throw new Error("range() step must not be zero");}
const length=Math.ceil(Math.abs((end-start)/step));const array=Array(length);for(let i=0;i<length;i++){array[i]=start+i*step;}
return array;}
function groupConsecutive(numbers){return numbers.reduce((groups,currentRow,index,rows)=>{if(Math.abs(currentRow-rows[index-1])===1){const lastGroup=groups[groups.length-1];lastGroup.push(currentRow);}
else{groups.push([currentRow]);}
return groups;},[]);}
function*linkNext(generator,nextGenerator){nextGenerator.next();for(const item of generator){const nextItem=nextGenerator.next();yield{...item,next:nextItem.done?undefined:nextItem.value,};}}
function isBoolean(str){const upperCased=str.toUpperCase();return upperCased==="TRUE"||upperCased==="FALSE";}
const MARKDOWN_LINK_REGEX=/^\[(.+)\]\((.+)\)$/;const WEB_LINK_REGEX=/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)$/;function isMarkdownLink(str){return MARKDOWN_LINK_REGEX.test(str);}
function isWebLink(str){return WEB_LINK_REGEX.test(str);}
function markdownLink(label,url){return`[${label}](${url})`;}
function parseMarkdownLink(str){const matches=str.match(MARKDOWN_LINK_REGEX)||[];const label=matches[1];const url=matches[2];if(!label||!url){throw new Error(`Could not parse markdown link ${str}.`);}
return{label,url,};}
const O_SPREADSHEET_LINK_PREFIX="o-spreadsheet://";function isSheetUrl(url){return url.startsWith(O_SPREADSHEET_LINK_PREFIX);}
function buildSheetLink(sheetId){return`${O_SPREADSHEET_LINK_PREFIX}${sheetId}`;}
function parseSheetUrl(sheetLink){if(sheetLink.startsWith(O_SPREADSHEET_LINK_PREFIX)){return sheetLink.substr(O_SPREADSHEET_LINK_PREFIX.length);}
throw new Error(`${sheetLink} is not a valid sheet link`);}
function isDefined(argument){return argument!==undefined;}
function isNotNull(argument){return argument!==null;}
function isObjectEmptyRecursive(argument){if(argument===undefined)
return true;return Object.values(argument).every((value)=>typeof value==="object"?isObjectEmptyRecursive(value):!value);}
function debounce(func,wait,immediate){let timeout=undefined;const debounced=function(){const context=this;const args=Array.from(arguments);function later(){timeout=undefined;if(!immediate){func.apply(context,args);}}
const callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow){func.apply(context,args);}};debounced.isDebouncePending=()=>timeout!==undefined;debounced.stopDebounce=()=>{clearTimeout(timeout);};return debounced;}
function batched(callback){let scheduled=false;return async(...args)=>{if(!scheduled){scheduled=true;await Promise.resolve();scheduled=false;callback(...args);}};}
function concat(chars){let output="";for(let i=0,len=chars.length;i<len;i++){output+=chars[i];}
return output;}
function lazy(fn){let isMemoized=false;let memo;const lazyValue=()=>{if(!isMemoized){memo=fn instanceof Function?fn():fn;isMemoized=true;}
return memo;};lazyValue.map=(callback)=>lazy(()=>callback(lazyValue()));return lazyValue;}
function findNextDefinedValue(arr,index){let value=arr.slice(index).find((val)=>val);if(!value){value=arr.slice(0,index).reverse().find((val)=>val);}
return value||"";}
function getAddHeaderStartIndex(position,base){return position==="after"?base+1:base;}
function deepEquals(o1,o2){if(o1===o2)
return true;if((o1&&!o2)||(o2&&!o1))
return false;if(typeof o1!==typeof o2)
return false;if(typeof o1!=="object")
return false;for(const key in o2){if(!(key in o1)&&o2[key]!==undefined){return false;}}
for(const key in o1){if(typeof o1[key]!==typeof o2[key])
return false;if(typeof o1[key]==="object"){if(!deepEquals(o1[key],o2[key]))
return false;}
else{if(o1[key]!==o2[key])
return false;}}
return true;}
function deepEqualsArray(arr1,arr2){if(arr1.length!==arr2.length){return false;}
for(let i=0;i<arr1.length;i++){if(!deepEquals(arr1[i],arr2[i])){return false;}}
return true;}
function includesAll(arr,values){return values.every((value)=>arr.includes(value));}
function removeFalsyAttributes(obj){if(!obj)
return obj;const cleanObject={...obj};Object.keys(cleanObject).forEach((key)=>!cleanObject[key]&&delete cleanObject[key]);return cleanObject;}
const whiteSpaceSpecialCharacters=["\t","\f","\v",String.fromCharCode(parseInt("00a0",16)),String.fromCharCode(parseInt("1680",16)),String.fromCharCode(parseInt("2000",16)),String.fromCharCode(parseInt("200a",16)),String.fromCharCode(parseInt("2028",16)),String.fromCharCode(parseInt("2029",16)),String.fromCharCode(parseInt("202f",16)),String.fromCharCode(parseInt("205f",16)),String.fromCharCode(parseInt("3000",16)),String.fromCharCode(parseInt("feff",16)),];const whiteSpaceRegexp=new RegExp(whiteSpaceSpecialCharacters.join("|")+"|(\r\n|\r|\n)","g");function replaceSpecialSpaces(text){if(!text)
return"";if(!whiteSpaceRegexp.test(text))
return text;return text.replace(whiteSpaceRegexp,(match,newLine)=>(newLine?NEWLINE:" "));}
function isConsecutive(iterable){const array=Array.from(iterable).sort((a,b)=>a-b);for(let i=1;i<array.length;i++){if(array[i]-array[i-1]!==1){return false;}}
return true;}
function memoize(func){const cache=new Map();const funcName=func.name?func.name+" (memoized)":"memoized";return{[funcName](...args){if(!cache.has(args[0])){cache.set(args[0],func(...args));}
return cache.get(args[0]);},}[funcName];}
function removeIndexesFromArray(array,indexes){return array.filter((_,index)=>!indexes.includes(index));}
function insertItemsAtIndex(array,items,index){const newArray=[...array];newArray.splice(index,0,...items);return newArray;}
function replaceItemAtIndex(array,newItem,index){const newArray=[...array];newArray.splice(index,1,newItem);return newArray;}
function trimContent(content){const contentLines=content.split("\n");return contentLines.map((line)=>line.replace(/\s+/g," ").trim()).join("\n");}
function isNumberBetween(value,min,max){if(min>max){return isNumberBetween(value,max,min);}
return value>=min&&value<=max;}
function getSearchRegex(searchStr,searchOptions){let searchValue=escapeRegExp(searchStr);const flags=!searchOptions.matchCase?"i":"";if(searchOptions.exactMatch){searchValue=`^${searchValue}$`;}
return RegExp(searchValue,flags);}
function largeMax(array){let len=array.length;if(len<100_000)
return Math.max(...array);let max=-Infinity;while(len--){max=array[len]>max?array[len]:max;}
return max;}
function largeMin(array){let len=array.length;if(len<100_000)
return Math.min(...array);let min=+Infinity;while(len--){min=array[len]<min?array[len]:min;}
return min;}
class TokenizingChars{text;currentIndex=0;current;constructor(text){this.text=text;this.current=text[0];}
shift(){const current=this.current;const next=this.text[++this.currentIndex];this.current=next;return current;}
advanceBy(length){this.currentIndex+=length;this.current=this.text[this.currentIndex];}
isOver(){return this.currentIndex>=this.text.length;}
remaining(){return this.text.substring(this.currentIndex);}
currentStartsWith(str){if(this.current!==str[0]){return false;}
for(let j=1;j<str.length;j++){if(this.text[this.currentIndex+j]!==str[j]){return false;}}
return true;}}
function removeDuplicates$1(array,cb=(a)=>a){const set=new Set();return array.filter((item)=>{const key=cb(item);if(set.has(key)){return false;}
set.add(key);return true;});}
function transpose2dPOJO(pojo){const result={};for(const key in pojo){for(const subKey in pojo[key]){if(!result[subKey]){result[subKey]={};}
result[subKey][key]=pojo[key][subKey];}}
return result;}
const RBA_REGEX=/rgba?\(|\s+|\)/gi;const HEX_MATCH=/^#([A-F\d]{2}){3,4}$/;const colors$1=["#eb6d00","#0074d9","#ad8e00","#169ed4","#b10dc9","#00a82d","#00a3a3","#f012be","#3d9970","#111111","#62A300","#ff4136","#949494","#85144b","#001f3f",];function colorNumberString(color){return toHex(color.toString(16).padStart(6,"0"));}
function toHex(color){let hexColor=color;if(color.startsWith("rgb")){hexColor=rgbaStringToHex(color);}
else{hexColor=color.replace("#","").toUpperCase();if(hexColor.length===3||hexColor.length===4){hexColor=hexColor.split("").reduce((acc,h)=>acc+h+h,"");}
hexColor=`#${hexColor}`;}
if(!HEX_MATCH.test(hexColor)){throw new Error(`invalid color input: ${color}`);}
return hexColor;}
function isColorValid(color){try{toHex(color);return true;}
catch(error){return false;}}
function isHSLAValid(color){try{hslaToHex(color);return true;}
catch(error){return false;}}
const isColorValueValid=(v)=>v>=0&&v<=255;function rgba(r,g,b,a=1){const isInvalid=!isColorValueValid(r)||!isColorValueValid(g)||!isColorValueValid(b)||a<0||a>1;if(isInvalid){throw new Error(`Invalid RGBA values ${[r, g, b, a]}`);}
return{a,b,g,r};}
function relativeLuminance(color){let{r,g,b}=colorToRGBA(color);r/=255;g/=255;b/=255;const toLinearValue=(c)=>(c<=0.03928?c/12.92:((c+0.055)/1.055)**2.4);const R=toLinearValue(r);const G=toLinearValue(g);const B=toLinearValue(b);return 0.2126*R+0.7152*G+0.0722*B;}
function rgbaStringToHex(color){const stringVals=color.replace(RBA_REGEX,"").split(",");let alphaHex=255;if(stringVals.length!==3&&stringVals.length!==4){throw new Error("invalid color");}
else if(stringVals.length===4){const alpha=parseFloat(stringVals.pop()||"1");alphaHex=Math.round((alpha||1)*255);}
const vals=stringVals.map((val)=>parseInt(val,10));if(alphaHex!==255){vals.push(alphaHex);}
return"#"+concat(vals.map((value)=>value.toString(16).padStart(2,"0"))).toUpperCase();}
function rgbaToHex(rgba){let r=rgba.r.toString(16);let g=rgba.g.toString(16);let b=rgba.b.toString(16);let a=Math.round(rgba.a*255).toString(16);if(r.length===1)
r="0"+r;if(g.length===1)
g="0"+g;if(b.length===1)
b="0"+b;if(a.length===1)
a="0"+a;if(a==="ff")
a="";return("#"+r+g+b+a).toUpperCase();}
function colorToRGBA(color){color=toHex(color);let r;let g;let b;let a;if(color.length===7){r=parseInt(color[1]+color[2],16);g=parseInt(color[3]+color[4],16);b=parseInt(color[5]+color[6],16);a=255;}
else if(color.length===9){r=parseInt(color[1]+color[2],16);g=parseInt(color[3]+color[4],16);b=parseInt(color[5]+color[6],16);a=parseInt(color[7]+color[8],16);}
else{throw new Error("Invalid color");}
a=+(a/255).toFixed(3);return{a,r,g,b};}
function hslaToRGBA(hsla){hsla={...hsla};hsla.s/=100;hsla.l/=100;let c=(1-Math.abs(2*hsla.l-1))*hsla.s;let x=c*(1-Math.abs(((hsla.h/60)%2)-1));let m=hsla.l-c/2;let r=0;let g=0;let b=0;if(0<=hsla.h&&hsla.h<60){r=c;g=x;b=0;}
else if(60<=hsla.h&&hsla.h<120){r=x;g=c;b=0;}
else if(120<=hsla.h&&hsla.h<180){r=0;g=c;b=x;}
else if(180<=hsla.h&&hsla.h<240){r=0;g=x;b=c;}
else if(240<=hsla.h&&hsla.h<300){r=x;g=0;b=c;}
else if(300<=hsla.h&&hsla.h<360){r=c;g=0;b=x;}
r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);return{a:hsla.a,r,g,b};}
function rgbaToHSLA(rgba){const r=rgba.r/255;const g=rgba.g/255;const b=rgba.b/255;let cMin=Math.min(r,g,b);let cMax=Math.max(r,g,b);let delta=cMax-cMin;let h=0;let s=0;let l=0;if(delta===0)
h=0;else if(cMax===r)
h=((g-b)/delta)%6;else if(cMax===g)
h=(b-r)/delta+2;else
h=(r-g)/delta+4;h=Math.round(h*60);if(h<0)
h+=360;l=(cMax+cMin)/2;s=delta===0?0:delta/(1-Math.abs(2*l-1));s=+(s*100).toFixed(1);l=+(l*100).toFixed(1);return{a:rgba.a,h,s,l};}
function hslaToHex(hsla){return rgbaToHex(hslaToRGBA(hsla));}
function hexToHSLA(hex){return rgbaToHSLA(colorToRGBA(hex));}
function isSameColor(color1,color2,tolerance=0){if(!(isColorValid(color1)&&isColorValid(color2))){return false;}
const rgb1=colorToRGBA(color1);const rgb2=colorToRGBA(color2);if(rgb1.a!==rgb2.a){return false;}
const diff=Math.sqrt(((rgb1.r-rgb2.r)/255)**2+((rgb1.g-rgb2.g)/255)**2+((rgb1.b-rgb2.b)/255)**2);return diff<=tolerance;}
function setColorAlpha(color,alpha){return alpha===1?toHex(color).slice(0,7):rgbaToHex({...colorToRGBA(color),a:alpha});}
function lightenColor(color,percentage){const hsla=hexToHSLA(color);if(percentage===1){return"#fff";}
hsla.l=percentage*(100-hsla.l)+hsla.l;return hslaToHex(hsla);}
function darkenColor(color,percentage){const hsla=hexToHSLA(color);if(percentage===1){return"#000";}
hsla.l=hsla.l-percentage*hsla.l;return hslaToHex(hsla);}
const COLORS_SM=["#4EA7F2","#EA6175","#43C5B1","#F4A261","#8481DD","#FFD86D",];const COLORS_MD=["#4EA7F2","#3188E6","#43C5B1","#00A78D","#EA6175","#CE4257","#F4A261","#F48935","#8481DD","#5752D1","#FFD86D","#FFBC2C",];const COLORS_LG=["#4EA7F2","#3188E6","#056BD9","#A76DBC","#7F4295","#6D2387","#EA6175","#CE4257","#982738","#43C5B1","#00A78D","#0E8270","#F4A261","#F48935","#BE5D10","#8481DD","#5752D1","#3A3580","#A4A8B6","#7E8290","#545B70","#FFD86D","#FFBC2C","#C08A16",];const COLORS_XL=["#4EA7F2","#3188E6","#056BD9","#155193","#A76DBC","#7F4295","#6D2387","#4F1565","#EA6175","#CE4257","#982738","#791B29","#43C5B1","#00A78D","#0E8270","#105F53","#F4A261","#F48935","#BE5D10","#7D380D","#8481DD","#5752D1","#3A3580","#26235F","#A4A8B6","#7E8290","#545B70","#3F4250","#FFD86D","#FFBC2C","#C08A16","#936A12",];function getNthColor(index,palette){return palette[index%palette.length];}
function getColorsPalette(quantity){if(quantity<=6){return COLORS_SM;}
else if(quantity<=12){return COLORS_MD;}
else if(quantity<=24){return COLORS_LG;}
else{return COLORS_XL;}}
class ColorGenerator{preferredColors;currentColorIndex=0;palette;constructor(paletteSize,preferredColors=[]){this.preferredColors=preferredColors;this.palette=getColorsPalette(paletteSize).filter((c)=>!preferredColors.includes(c));}
next(){return this.preferredColors?.[this.currentColorIndex]?this.preferredColors[this.currentColorIndex++]:getNthColor(this.currentColorIndex++,this.palette);}}
function numberToLetters(n){if(n<0){throw new Error(`number must be positive. Got ${n}`);}
if(n<26){return String.fromCharCode(65+n);}
else{return numberToLetters(Math.floor(n/26)-1)+numberToLetters(n%26);}}
function lettersToNumber(letters){let result=0;const l=letters.length;for(let i=0;i<l;i++){const charCode=letters.charCodeAt(i);const colIndex=charCode>=65&&charCode<=90?charCode-64:charCode-96;result=result*26+colIndex;}
return result-1;}
function isCharALetter(char){return(char>="A"&&char<="Z")||(char>="a"&&char<="z");}
function isCharADigit(char){return char>="0"&&char<="9";}
function toCartesian(xc){xc=xc.trim();let letterPart="";let numberPart="";let i=0;if(xc[i]==="$")
i++;while(i<xc.length&&isCharALetter(xc[i])){letterPart+=xc[i++];}
if(letterPart.length===0||letterPart.length>3){throw new Error(`Invalid cell description: ${xc}`);}
if(xc[i]==="$")
i++;while(i<xc.length&&isCharADigit(xc[i])){numberPart+=xc[i++];}
if(i!==xc.length||numberPart.length===0||numberPart.length>7){throw new Error(`Invalid cell description: ${xc}`);}
const col=lettersToNumber(letterPart);const row=Number(numberPart)-1;if(isNaN(row)){throw new Error(`Invalid cell description: ${xc}`);}
return{col,row};}
function toXC(col,row,rangePart={colFixed:false,rowFixed:false}){return((rangePart.colFixed?"$":"")+
numberToLetters(col)+
(rangePart.rowFixed?"$":"")+
String(row+1));}
function recomputeZones(zones,zonesToRemove=[]){if(zones.length<=1&&zonesToRemove.length===0){return zones;}
const profilesStartingPosition=[0];const profiles=new Map([[0,[]]]);modifyProfiles(profilesStartingPosition,profiles,zones,false);modifyProfiles(profilesStartingPosition,profiles,zonesToRemove,true);return constructZonesFromProfiles(profilesStartingPosition,profiles);}
function modifyProfiles(profilesStartingPosition,profiles,zones,toRemove=false){for(const zone of zones){const leftValue=zone.left;const rightValue=zone.right===undefined?undefined:zone.right+1;const leftIndex=findIndexAndCreateProfile(profilesStartingPosition,profiles,leftValue,true,0);const rightIndex=findIndexAndCreateProfile(profilesStartingPosition,profiles,rightValue,false,leftIndex);for(let i=leftIndex;i<=rightIndex;i++){const profile=profiles.get(profilesStartingPosition[i]);modifyProfile(profile,zone,toRemove);}
removeContiguousProfiles(profilesStartingPosition,profiles,leftIndex,rightIndex);}}
function findIndexAndCreateProfile(profilesStartingPosition,profiles,value,searchLeft,startIndex){if(value===undefined){return profilesStartingPosition.length-1;}
const predecessorIndex=binaryPredecessorSearch(profilesStartingPosition,value,startIndex);if(value!=profilesStartingPosition[predecessorIndex]){profilesStartingPosition.splice(predecessorIndex+1,0,value);profiles.set(value,[...profiles.get(profilesStartingPosition[predecessorIndex])]);return searchLeft?predecessorIndex+1:predecessorIndex;}
return searchLeft?predecessorIndex:predecessorIndex-1;}
function modifyProfile(profile,zone,toRemove=false){const topValue=zone.top;const bottomValue=zone.bottom===undefined?undefined:zone.bottom+1;const newPoints=[];const topPredIndex=binaryPredecessorSearch(profile,topValue,0,false);if((topPredIndex%2!==0&&!toRemove)||(topPredIndex%2===0&&toRemove)){newPoints.push(topValue);}
if(bottomValue===undefined){profile.splice(topPredIndex+1);profile.push(...newPoints);return;}
const bottomSuccIndex=binarySuccessorSearch(profile,bottomValue,0,false);if((bottomSuccIndex%2===0&&!toRemove)||(bottomSuccIndex%2!==0&&toRemove)){newPoints.push(bottomValue);}
profile.splice(topPredIndex+1,bottomSuccIndex-topPredIndex-1,...newPoints);}
function removeContiguousProfiles(profilesStartingPosition,profiles,leftIndex,rightIndex){const start=leftIndex-1===-1?0:leftIndex-1;const end=rightIndex===profilesStartingPosition.length-1?rightIndex:rightIndex+1;for(let i=end;i>start;i--){if(deepEqualsArray(profiles.get(profilesStartingPosition[i]),profiles.get(profilesStartingPosition[i-1]))){profiles.delete(profilesStartingPosition[i]);profilesStartingPosition.splice(i,1);}}}
function constructZonesFromProfiles(profilesStartingPosition,profiles){const mergedZone=[];let pendingZones=[];for(let colIndex=0;colIndex<profilesStartingPosition.length;colIndex++){const left=profilesStartingPosition[colIndex];const profile=profiles.get(left);if(!profile||profile.length===0){mergedZone.push(...pendingZones);pendingZones=[];continue;}
let right=profilesStartingPosition[colIndex+1];if(right!==undefined){right--;}
const nextPendingZones=[];for(let i=0;i<profile.length;i+=2){const top=profile[i];let bottom=profile[i+1];if(bottom!==undefined){bottom--;}
const profileZone={top,left,bottom,right,hasHeader:(bottom===undefined&&top!==0)||(right===undefined&&left!==0),};let findCorrespondingZone=false;for(let j=pendingZones.length-1;j>=0;j--){const pendingZone=pendingZones[j];if(pendingZone.top===profileZone.top&&pendingZone.bottom===profileZone.bottom){pendingZone.right=profileZone.right;pendingZones.splice(j,1);nextPendingZones.push(pendingZone);findCorrespondingZone=true;break;}}
if(!findCorrespondingZone){nextPendingZones.push(profileZone);}}
mergedZone.push(...pendingZones);pendingZones=nextPendingZones;}
mergedZone.push(...pendingZones);return mergedZone;}
function binaryPredecessorSearch(arr,val,start=0,matchEqual=true){let end=arr.length-1;let result=-1;while(start<=end){const mid=Math.floor((start+end)/2);if(arr[mid]===val&&matchEqual){return mid;}
else if(arr[mid]<val){result=mid;start=mid+1;}
else{end=mid-1;}}
return result;}
function binarySuccessorSearch(arr,val,start=0,matchEqual=true){let end=arr.length-1;let result=arr.length;while(start<=end){const mid=Math.floor((start+end)/2);if(arr[mid]===val&&matchEqual){return mid;}
else if(arr[mid]>val){result=mid;end=mid-1;}
else{start=mid+1;}}
return result;}
const defaultTranslate=(s)=>s;const defaultLoaded=()=>false;let _translate=defaultTranslate;let _loaded=defaultLoaded;function sprintf(s,...values){if(values.length===1&&typeof values[0]==="object"&&!(values[0]instanceof String)){const valuesDict=values[0];s=s.replace(/\%\(([^\)]+)\)s/g,(match,value)=>valuesDict[value]);}
else if(values.length>0){s=s.replace(/\%s/g,()=>values.shift());}
return s;}
function setTranslationMethod(tfn,loaded=()=>true){_translate=tfn;_loaded=loaded;}
function setDefaultTranslationMethod(){if(_translate===defaultTranslate&&_loaded===defaultLoaded){_loaded=()=>true;}}
const _t=function(s,...values){if(!_loaded()){return new LazyTranslatedString(s,values);}
return sprintf(_translate(s),...values);};class LazyTranslatedString extends String{values;constructor(str,values){super(str);this.values=values;}
valueOf(){const str=super.valueOf();return _loaded()?sprintf(_translate(str),...this.values):sprintf(str,...this.values);}
toString(){return this.valueOf();}}
const cellReference=new RegExp(/\$?([A-Z]{1,3})\$?([0-9]{1,7})/,"i");const singleCellReference=new RegExp(/^\$?([A-Z]{1,3})\$?([0-9]{1,7})$/,"i");const colHeader=new RegExp(/^\$?([A-Z]{1,3})+$/,"i");const rowHeader=new RegExp(/^\$?([0-9]{1,7})+$/,"i");const colReference=new RegExp(/^\s*('.+'!|[^']+!)?\$?([A-Z]{1,3})$/,"i");const rowReference=new RegExp(/^\s*('.+'!|[^']+!)?\$?([0-9]{1,7})$/,"i");const fullRowXc=/(\$?[A-Z]{1,3})?\$?[0-9]{1,7}\s*:\s*(\$?[A-Z]{1,3})?\$?[0-9]{1,7}\s*/i;const fullColXc=/\$?[A-Z]{1,3}(\$?[0-9]{1,7})?\s*:\s*\$?[A-Z]{1,3}(\$?[0-9]{1,7})?\s*/i;const rangeReference=new RegExp(/^\s*('.+'!|[^']+!)?/.source+"("+
[cellReference.source,fullRowXc.source,fullColXc.source].join("|")+")"+/$/.source,"i");function isColReference(xc){return colReference.test(xc);}
function isRowReference(xc){return rowReference.test(xc);}
function isColHeader(str){return colHeader.test(str);}
function isRowHeader(str){return rowHeader.test(str);}
function isSingleCellReference(xc){return singleCellReference.test(xc);}
function splitReference(ref){if(!ref.includes("!")){return{xc:ref};}
const parts=ref.split("!");const xc=parts.pop();const sheetName=getUnquotedSheetName(parts.join("!"))||undefined;return{sheetName,xc};}
function getFullReference(sheetName,xc){return sheetName!==undefined?`${getCanonicalSymbolName(sheetName)}!${xc}`:xc;}
function toZoneWithoutBoundaryChanges(xc){if(xc.includes("!")){xc=xc.split("!").at(-1);}
if(xc.includes("$")){xc=xc.replaceAll("$","");}
let firstRangePart="";let secondRangePart;if(xc.includes(":")){[firstRangePart,secondRangePart]=xc.split(":");firstRangePart=firstRangePart.trim();secondRangePart=secondRangePart.trim();}
else{firstRangePart=xc.trim();}
let top,bottom,left,right;let fullCol=false;let fullRow=false;let hasHeader=false;if(isColReference(firstRangePart)){left=right=lettersToNumber(firstRangePart);top=bottom=0;fullCol=true;}
else if(isRowReference(firstRangePart)){top=bottom=parseInt(firstRangePart,10)-1;left=right=0;fullRow=true;}
else{const c=toCartesian(firstRangePart);left=right=c.col;top=bottom=c.row;hasHeader=true;}
if(secondRangePart){if(isColReference(secondRangePart)){right=lettersToNumber(secondRangePart);fullCol=true;}
else if(isRowReference(secondRangePart)){bottom=parseInt(secondRangePart,10)-1;fullRow=true;}
else{const c=toCartesian(secondRangePart);right=c.col;bottom=c.row;top=fullCol?bottom:top;left=fullRow?right:left;hasHeader=true;}}
if(fullCol&&fullRow){throw new Error("Wrong zone xc. The zone cannot be at the same time a full column and a full row");}
const zone={top,left,bottom:fullCol?undefined:bottom,right:fullRow?undefined:right,};hasHeader=hasHeader&&(fullRow||fullCol);if(hasHeader){zone.hasHeader=hasHeader;}
return zone;}
function toUnboundedZone(xc){const zone=toZoneWithoutBoundaryChanges(xc);if(zone.right!==undefined&&zone.right<zone.left){const tmp=zone.left;zone.left=zone.right;zone.right=tmp;}
if(zone.bottom!==undefined&&zone.bottom<zone.top){const tmp=zone.top;zone.top=zone.bottom;zone.bottom=tmp;}
return zone;}
function toZone(xc){const zone=toUnboundedZone(xc);if(zone.bottom===undefined||zone.right===undefined){throw new Error("This does not support unbounded ranges");}
return zone;}
function isZoneValid(zone){const{bottom,top,left,right}=zone;if((bottom!==undefined&&isNaN(bottom))||isNaN(top)||isNaN(left)||(right!==undefined&&isNaN(right))){return false;}
return isZoneOrdered(zone)&&zone.top>=0&&zone.left>=0;}
function isZoneOrdered(zone){return((zone.bottom===undefined||(zone.bottom>=zone.top&&zone.bottom>=0))&&(zone.right===undefined||(zone.right>=zone.left&&zone.right>=0)));}
function zoneToXc(zone){const{top,bottom,left,right}=zone;const hasHeader="hasHeader"in zone?zone.hasHeader:false;const isOneCell=top===bottom&&left===right;if(bottom===undefined&&right!==undefined){return top===0&&!hasHeader?`${numberToLetters(left)}:${numberToLetters(right)}`:`${toXC(left, top)}:${numberToLetters(right)}`;}
else if(right===undefined&&bottom!==undefined){return left===0&&!hasHeader?`${top + 1}:${bottom + 1}`:`${toXC(left, top)}:${bottom + 1}`;}
else if(bottom!==undefined&&right!==undefined){return isOneCell?toXC(left,top):`${toXC(left, top)}:${toXC(right, bottom)}`;}
throw new Error(_t("Bad zone format"));}
function expandZoneOnInsertion(zone,start,base,position,quantity){const dimension=start==="left"?"columns":"rows";const baseElement=position==="before"?base-1:base;const end=start==="left"?"right":"bottom";const zoneEnd=zone[end];if(zone[start]<=baseElement&&zoneEnd&&zoneEnd>baseElement){return createAdaptedZone(zone,dimension,"RESIZE",quantity);}
if(baseElement<zone[start]){return createAdaptedZone(zone,dimension,"MOVE",quantity);}
return{...zone};}
function updateSelectionOnInsertion(selection,start,base,position,quantity){const dimension=start==="left"?"columns":"rows";const baseElement=position==="before"?base-1:base;const end=start==="left"?"right":"bottom";if(selection[start]<=baseElement&&selection[end]>baseElement){return createAdaptedZone(selection,dimension,"RESIZE",quantity);}
if(baseElement<selection[start]){return createAdaptedZone(selection,dimension,"MOVE",quantity);}
return{...selection};}
function updateSelectionOnDeletion(zone,start,elements){const end=start==="left"?"right":"bottom";let newStart=zone[start];let newEnd=zone[end];for(let removedElement of elements.sort((a,b)=>b-a)){if(zone[start]>removedElement){newStart--;newEnd--;}
if(zone[start]<removedElement&&zone[end]>=removedElement){newEnd--;}}
return{...zone,[start]:newStart,[end]:newEnd};}
function reduceZoneOnDeletion(zone,start,elements){const end=start==="left"?"right":"bottom";let newStart=zone[start];let newEnd=zone[end];const zoneEnd=zone[end];for(let removedElement of elements.sort((a,b)=>b-a)){if(zone[start]>removedElement){newStart--;if(newEnd!==undefined)
newEnd--;}
if(zoneEnd!==undefined&&newEnd!==undefined&&zone[start]<=removedElement&&zoneEnd>=removedElement){newEnd--;}}
if(newEnd!==undefined&&newStart>newEnd){return undefined;}
return{...zone,[start]:newStart,[end]:newEnd};}
function union(...zones){return{top:Math.min(...zones.map((zone)=>zone.top)),left:Math.min(...zones.map((zone)=>zone.left)),bottom:Math.max(...zones.map((zone)=>zone.bottom)),right:Math.max(...zones.map((zone)=>zone.right)),};}
function unionUnboundedZones(...zones){return{top:Math.min(...zones.map((zone)=>zone.top)),left:Math.min(...zones.map((zone)=>zone.left)),bottom:zones.some((zone)=>zone.bottom===undefined)?undefined:Math.max(...zones.map((zone)=>zone.bottom)),right:zones.some((zone)=>zone.right===undefined)?undefined:Math.max(...zones.map((zone)=>zone.right)),};}
function intersection(z1,z2){if(!overlap(z1,z2)){return undefined;}
return{top:Math.max(z1.top,z2.top),left:Math.max(z1.left,z2.left),bottom:Math.min(z1.bottom,z2.bottom),right:Math.min(z1.right,z2.right),};}
function isEqual(z1,z2){return(z1.left===z2.left&&z1.right===z2.right&&z1.top===z2.top&&z1.bottom===z2.bottom);}
function overlap(z1,z2){if(z1.bottom<z2.top||z2.bottom<z1.top){return false;}
if(z1.right<z2.left||z2.right<z1.left){return false;}
return true;}
function isInside(col,row,zone){const{left,right,top,bottom}=zone;return col>=left&&col<=right&&row>=top&&row<=bottom;}
function isZoneInside(smallZone,biggerZone){return isEqual(union(biggerZone,smallZone),biggerZone);}
function zoneToDimension(zone){return{numberOfRows:zone.bottom-zone.top+1,numberOfCols:zone.right-zone.left+1,};}
function isOneDimensional(zone){const{numberOfCols,numberOfRows}=zoneToDimension(zone);return numberOfCols===1||numberOfRows===1;}
function excludeTopLeft(zone){const{top,left,bottom,right}=zone;if(getZoneArea(zone)===1){return[];}
const leftColumnZone={top:top+1,bottom,left,right:left,};if(right===left){return[leftColumnZone];}
const rightPartZone={top,bottom,left:left+1,right,};if(top===bottom){return[rightPartZone];}
return[leftColumnZone,rightPartZone];}
function aggregatePositionsToZones(positions){const result={};for(const position of positions){result[position.sheetId]??=[];result[position.sheetId].push(positionToZone(position));}
for(const sheetId in result){result[sheetId]=recomputeZones(result[sheetId]);}
return result;}
function positions(zone){const positions=[];const{left,right,top,bottom}=reorderZone(zone);for(const col of range(left,right+1)){for(const row of range(top,bottom+1)){positions.push({col,row});}}
return positions;}
function reorderZone(zone){if(zone.left>zone.right){zone={left:zone.right,right:zone.left,top:zone.top,bottom:zone.bottom};}
if(zone.top>zone.bottom){zone={left:zone.left,right:zone.right,top:zone.bottom,bottom:zone.top};}
return zone;}
function createAdaptedZone(zone,dimension,operation,by){const offsetX=dimension==="both"?by[0]:dimension==="columns"?by:0;const offsetY=dimension==="both"?by[1]:dimension==="rows"?by:0;const hasHeader="hasHeader"in zone?zone.hasHeader:false;let shouldStartBeMoved;if(isFullCol(zone)&&!hasHeader){shouldStartBeMoved=dimension!=="rows";}
else if(isFullRow(zone)&&!hasHeader){shouldStartBeMoved=dimension!=="columns";}
else{shouldStartBeMoved=true;}
const newZone={...zone};if(shouldStartBeMoved&&operation==="MOVE"){newZone["left"]+=offsetX;newZone["top"]+=offsetY;}
if(newZone["right"]!==undefined){newZone["right"]+=offsetX;}
if(newZone["bottom"]!==undefined){newZone["bottom"]+=offsetY;}
return newZone;}
function uniqueZones(zones){return zones.reverse().filter((zone,index,self)=>index===self.findIndex((z)=>z.top===zone.top&&z.bottom===zone.bottom&&z.left===zone.left&&z.right===zone.right)).reverse();}
function mergeOverlappingZones(zones){return zones.reduce((dissociatedZones,zone)=>{const nextIndex=dissociatedZones.length;for(let i=0;i<nextIndex;i++){if(overlap(dissociatedZones[i],zone)){dissociatedZones[i]=union(dissociatedZones[i],zone);return dissociatedZones;}}
dissociatedZones[nextIndex]=zone;return dissociatedZones;},[]);}
function findCellInNewZone(oldZone,currentZone){let col,row;const{left:oldLeft,right:oldRight,top:oldTop,bottom:oldBottom}=oldZone;const{left,right,top,bottom}=currentZone;if(left!=oldLeft){col=left;}
else if(right!=oldRight){col=right;}
else{col=left;}
if(top!=oldTop){row=top;}
else if(bottom!=oldBottom){row=bottom;}
else{row=top;}
return{col,row};}
function positionToZone(position){return{left:position.col,right:position.col,top:position.row,bottom:position.row};}
function zoneToTopLeft(zone){return{...zone,right:zone.left,bottom:zone.top};}
function isFullRow(zone){return zone.right===undefined;}
function isFullCol(zone){return zone.bottom===undefined;}
function getZoneArea(zone){return(zone.bottom-zone.top+1)*(zone.right-zone.left+1);}
function areZonesContinuous(zones){if(zones.length<2)
return true;return recomputeZones(zones).length===1;}
function getZonesCols(zones){const set=new Set();for(let zone of recomputeZones(zones)){for(let col of range(zone.left,zone.right+1)){set.add(col);}}
return set;}
function getZonesRows(zones){const set=new Set();for(let zone of recomputeZones(zones)){for(let row of range(zone.top,zone.bottom+1)){set.add(row);}}
return set;}
function areZoneContiguous(zone1,zone2){if(zone1.right+1===zone2.left||zone1.left===zone2.right+1){return((zone1.top<=zone2.bottom&&zone1.top>=zone2.top)||(zone2.top<=zone1.bottom&&zone2.top>=zone1.top));}
if(zone1.bottom+1===zone2.top||zone1.top===zone2.bottom+1){return((zone1.left<=zone2.right&&zone1.left>=zone2.left)||(zone2.left<=zone1.right&&zone2.left>=zone1.left));}
return false;}
function mergeContiguousZones(zones){const mergedZones=[...zones];let hasMerged=true;while(hasMerged){hasMerged=false;for(let i=0;i<mergedZones.length;i++){const zone=mergedZones[i];const mergeableZoneIndex=mergedZones.findIndex((z,j)=>i!==j&&(areZoneContiguous(z,zone)||overlap(z,zone)));if(mergeableZoneIndex!==-1){mergedZones[i]=union(mergedZones[mergeableZoneIndex],zone);mergedZones.splice(mergeableZoneIndex,1);hasMerged=true;break;}}}
return mergedZones;}
function getItemId(item,itemsDic){for(const key in itemsDic){if(deepEquals(itemsDic[key],item)){return parseInt(key,10);}}
const ids=Object.keys(itemsDic);const maxId=ids.length===0?0:largeMax(ids.map((id)=>parseInt(id,10)));itemsDic[maxId+1]=item;return maxId+1;}
function groupItemIdsByZones(positionsByItemId){const result={};for(const itemId in positionsByItemId){const zones=recomputeZones(positionsByItemId[itemId].map(positionToZone));for(const zone of zones){result[zoneToXc(zone)]=Number(itemId);}}
return result;}
class DateTime{jsDate;constructor(year,month,day,hours=0,minutes=0,seconds=0){this.jsDate=new Date(Date.UTC(year,month,day,hours,minutes,seconds,0));}
static fromTimestamp(timestamp){const date=new Date(timestamp);return new DateTime(date.getUTCFullYear(),date.getUTCMonth(),date.getUTCDate(),date.getUTCHours(),date.getUTCMinutes(),date.getUTCSeconds());}
static now(){const now=new Date();return new DateTime(now.getFullYear(),now.getMonth(),now.getDate(),now.getHours(),now.getMinutes(),now.getSeconds());}
toString(){return this.jsDate.toString();}
toLocaleDateString(){return this.jsDate.toLocaleDateString();}
getTime(){return this.jsDate.getTime();}
getFullYear(){return this.jsDate.getUTCFullYear();}
getMonth(){return this.jsDate.getUTCMonth();}
getQuarter(){return Math.floor(this.getMonth()/3)+1;}
getDate(){return this.jsDate.getUTCDate();}
getDay(){return this.jsDate.getUTCDay();}
getHours(){return this.jsDate.getUTCHours();}
getMinutes(){return this.jsDate.getUTCMinutes();}
getSeconds(){return this.jsDate.getUTCSeconds();}
getIsoWeek(){const date=new Date(this.jsDate.getTime());const dayNumber=date.getUTCDay()||7;date.setUTCDate(date.getUTCDate()+4-dayNumber);const yearStart=new Date(Date.UTC(date.getUTCFullYear(),0,1));return Math.ceil(((date.getTime()-yearStart.getTime())/86400000+1)/7);}
setFullYear(year){return this.jsDate.setUTCFullYear(year);}
setMonth(month){return this.jsDate.setUTCMonth(month);}
setDate(date){return this.jsDate.setUTCDate(date);}
setHours(hours){return this.jsDate.setUTCHours(hours);}
setMinutes(minutes){return this.jsDate.setUTCMinutes(minutes);}
setSeconds(seconds){return this.jsDate.setUTCSeconds(seconds);}}
const INITIAL_1900_DAY=new DateTime(1899,11,30);const MS_PER_DAY=24*60*60*1000;const CURRENT_MILLENIAL=2000;const CURRENT_YEAR=DateTime.now().getFullYear();const CURRENT_MONTH=DateTime.now().getMonth();const INITIAL_JS_DAY=DateTime.fromTimestamp(0);const DATE_JS_1900_OFFSET=INITIAL_JS_DAY.getTime()-INITIAL_1900_DAY.getTime();const mdyDateRegexp=/^\d{1,2}(\/|-|\s)\d{1,2}((\/|-|\s)\d{1,4})?$/;const ymdDateRegexp=/^\d{3,4}(\/|-|\s)\d{1,2}(\/|-|\s)\d{1,2}$/;const dateSeparatorsRegex=/\/|-|\s/;const dateRegexp=/^(\d{1,4})[\/-\s](\d{1,4})([\/-\s](\d{1,4}))?$/;const timeRegexp=/((\d+(:\d+)?(:\d+)?\s*(AM|PM))|(\d+:\d+(:\d+)?))$/;function valueToDateNumber(value,locale){switch(typeof value){case"number":return value;case"string":if(isDateTime(value,locale)){return parseDateTime(value,locale)?.value;}
return!value||isNaN(Number(value))?undefined:Number(value);default:return undefined;}}
function isDateTime(str,locale){return parseDateTime(str,locale)!==null;}
const CACHE=new Map();function parseDateTime(str,locale){if(!CACHE.has(locale)){CACHE.set(locale,new Map());}
if(!CACHE.get(locale).has(str)){CACHE.get(locale).set(str,_parseDateTime(str,locale));}
return CACHE.get(locale).get(str);}
function _parseDateTime(str,locale){str=str.trim();let time=null;const timeMatch=str.match(timeRegexp);if(timeMatch){time=parseTime(timeMatch[0]);if(time===null){return null;}
str=str.replace(timeMatch[0],"").trim();}
let date=null;const dateParts=getDateParts(str,locale);if(dateParts){const separator=dateParts.dateString.match(dateSeparatorsRegex)[0];date=parseDate(dateParts,separator);if(date===null){return null;}
str=str.replace(dateParts.dateString,"").trim();}
if(str!==""||!(date||time)){return null;}
if(date&&date.jsDate&&time&&time.jsDate){return{value:date.value+time.value,format:date.format+" "+(time.format==="hhhh:mm:ss"?"hh:mm:ss":time.format),jsDate:new DateTime(date.jsDate.getFullYear()+time.jsDate.getFullYear()-1899,date.jsDate.getMonth()+time.jsDate.getMonth()-11,date.jsDate.getDate()+time.jsDate.getDate()-30,date.jsDate.getHours()+time.jsDate.getHours(),date.jsDate.getMinutes()+time.jsDate.getMinutes(),date.jsDate.getSeconds()+time.jsDate.getSeconds()),};}
return date||time;}
function getDateParts(dateString,locale){const match=dateString.match(dateRegexp);if(!match){return null;}
const[,part1,part2,,part3]=match;if(part1.length>2&&part3&&part3.length>2){return null;}
if(part1.length>2){return{year:part1,month:part2,day:part3,dateString,type:"ymd"};}
const localeDateType=getLocaleDateFormatType(locale);if(!part3){if(part2.length>2){return{month:part1,year:part2,day:undefined,dateString,type:localeDateType};}
if(localeDateType==="dmy"){return{day:part1,month:part2,year:part3,dateString,type:"dmy"};}
return{month:part1,day:part2,year:part3,dateString,type:"mdy"};}
if(part3.length>2){if(localeDateType==="mdy"){return{month:part1,day:part2,year:part3,dateString,type:"mdy"};}
return{day:part1,month:part2,year:part3,dateString,type:"dmy"};}
if(localeDateType==="mdy"){return{month:part1,day:part2,year:part3,dateString,type:"mdy"};}
if(localeDateType==="ymd"){return{year:part1,month:part2,day:part3,dateString,type:"ymd"};}
if(localeDateType==="dmy"){return{day:part1,month:part2,year:part3,dateString,type:"dmy"};}
return null;}
function getLocaleDateFormatType(locale){switch(locale.dateFormat[0]){case"d":return"dmy";case"m":return"mdy";case"y":return"ymd";}
throw new Error("Invalid date format in locale");}
function parseDate(parts,separator){let{year:yearStr,month:monthStr,day:dayStr}=parts;const month=inferMonth(monthStr);const day=inferDay(dayStr);const year=inferYear(yearStr);if(year===null||month===null||day===null){return null;}
const leadingZero=(monthStr?.length===2&&month+1<10)||(dayStr?.length===2&&day<10);const fullYear=yearStr?.length!==2;const jsDate=new DateTime(year,month,day);if(jsDate.getMonth()!==month||jsDate.getDate()!==day){return null;}
const delta=jsDate.getTime()-INITIAL_1900_DAY.getTime();const format=getFormatFromDateParts(parts,separator,leadingZero,fullYear);return{value:Math.round(delta/MS_PER_DAY),format:format,jsDate,};}
function getFormatFromDateParts(parts,sep,leadingZero,fullYear){const yearFmt=parts.year?(fullYear?"yyyy":"yy"):undefined;const monthFmt=parts.month?(leadingZero?"mm":"m"):undefined;const dayFmt=parts.day?(leadingZero?"dd":"d"):undefined;switch(parts.type){case"mdy":return[monthFmt,dayFmt,yearFmt].filter(isDefined).join(sep);case"ymd":return[yearFmt,monthFmt,dayFmt].filter(isDefined).join(sep);case"dmy":return[dayFmt,monthFmt,yearFmt].filter(isDefined).join(sep);}}
function inferYear(yearStr){if(!yearStr){return CURRENT_YEAR;}
const nbr=Number(yearStr);switch(yearStr.length){case 1:return CURRENT_MILLENIAL+nbr;case 2:const offset=CURRENT_MILLENIAL+nbr>CURRENT_YEAR+10?-100:0;const base=CURRENT_MILLENIAL+offset;return base+nbr;case 3:case 4:return nbr;}
return null;}
function inferMonth(monthStr){if(!monthStr){return CURRENT_MONTH;}
const nbr=Number(monthStr);if(nbr>=1&&nbr<=12){return nbr-1;}
return null;}
function inferDay(dayStr){if(!dayStr){return 1;}
const nbr=Number(dayStr);if(nbr>=0&&nbr<=31){return nbr;}
return null;}
function parseTime(str){str=str.trim();if(timeRegexp.test(str)){const isAM=/AM/i.test(str);const isPM=/PM/i.test(str);const strTime=isAM||isPM?str.substring(0,str.length-2).trim():str;const parts=strTime.split(/:/);const isMinutes=parts.length>=2;const isSeconds=parts.length===3;let hours=Number(parts[0]);let minutes=isMinutes?Number(parts[1]):0;let seconds=isSeconds?Number(parts[2]):0;let format=isSeconds?"hh:mm:ss":"hh:mm";if(isAM||isPM){format+=" a";}
else if(!isMinutes){return null;}
if(hours>=12&&isAM){hours-=12;}
else if(hours<12&&isPM){hours+=12;}
minutes+=Math.floor(seconds/60);seconds%=60;hours+=Math.floor(minutes/60);minutes%=60;if(hours>=24){format="hhhh:mm:ss";}
const jsDate=new DateTime(1899,11,30,hours,minutes,seconds);return{value:hours/24+minutes/1440+seconds/86400,format:format,jsDate:jsDate,};}
return null;}
function numberToJsDate(value){const truncValue=Math.trunc(value);let date=DateTime.fromTimestamp(truncValue*MS_PER_DAY-DATE_JS_1900_OFFSET);let time=value-truncValue;time=time<0?1+time:time;const hours=Math.round(time*24);const minutes=Math.round((time-hours/24)*24*60);const seconds=Math.round((time-hours/24-minutes/24/60)*24*60*60);date.setHours(hours);date.setMinutes(minutes);date.setSeconds(seconds);return date;}
function jsDateToRoundNumber(date){return Math.round(jsDateToNumber(date));}
function jsDateToNumber(date){const delta=date.getTime()-INITIAL_1900_DAY.getTime();return delta/MS_PER_DAY;}
function getDaysInMonth(date){return new DateTime(date.getFullYear(),date.getMonth()+1,0).getDate();}
function isLastDayOfMonth(date){return getDaysInMonth(date)===date.getDate();}
function addMonthsToDate(date,months,keepEndOfMonth){const yStart=date.getFullYear();const mStart=date.getMonth();const dStart=date.getDate();const jsDate=new DateTime(yStart,mStart+months,1);if(keepEndOfMonth&&dStart===getDaysInMonth(date)){jsDate.setDate(getDaysInMonth(jsDate));}
else if(dStart>getDaysInMonth(jsDate)){jsDate.setDate(getDaysInMonth(jsDate));}
else{jsDate.setDate(dStart);}
return jsDate;}
function isLeapYear(year){const _year=Math.trunc(year);return(_year%4===0&&_year%100!=0)||_year%400===0;}
function getYearFrac(startDate,endDate,_dayCountConvention){if(startDate===endDate){return 0;}
if(startDate>endDate){const stack=endDate;endDate=startDate;startDate=stack;}
const jsStartDate=numberToJsDate(startDate);const jsEndDate=numberToJsDate(endDate);let dayStart=jsStartDate.getDate();let dayEnd=jsEndDate.getDate();const monthStart=jsStartDate.getMonth();const monthEnd=jsEndDate.getMonth();const yearStart=jsStartDate.getFullYear();const yearEnd=jsEndDate.getFullYear();let yearsStart=0;let yearsEnd=0;switch(_dayCountConvention){case 0:if(dayStart===31)
dayStart=30;if(dayStart===30&&dayEnd===31)
dayEnd=30;if(monthStart===1&&dayStart===(isLeapYear(yearStart)?29:28)){dayStart=30;if(monthEnd===1&&dayEnd===(isLeapYear(yearEnd)?29:28)){dayEnd=30;}}
yearsStart=yearStart+(monthStart*30+dayStart)/360;yearsEnd=yearEnd+(monthEnd*30+dayEnd)/360;break;case 1:let daysInYear=365;const isSameYear=yearStart===yearEnd;const isOneDeltaYear=yearStart+1===yearEnd;const isMonthEndBigger=monthStart<monthEnd;const isSameMonth=monthStart===monthEnd;const isDayEndBigger=dayStart<dayEnd;if((!isSameYear&&!isOneDeltaYear)||(!isSameYear&&isMonthEndBigger)||(!isSameYear&&isSameMonth&&isDayEndBigger)){let countYears=0;let countDaysInYears=0;for(let y=yearStart;y<=yearEnd;y++){countYears++;countDaysInYears+=isLeapYear(y)?366:365;}
daysInYear=countDaysInYears/countYears;}
else if(!isSameYear){if(isLeapYear(yearStart)&&monthStart<2){daysInYear=366;}
if(isLeapYear(yearEnd)&&(monthEnd>1||(monthEnd===1&&dayEnd===29))){daysInYear=366;}}
else{if(isLeapYear(yearStart)){daysInYear=366;}}
yearsStart=startDate/daysInYear;yearsEnd=endDate/daysInYear;break;case 2:yearsStart=startDate/360;yearsEnd=endDate/360;break;case 3:yearsStart=startDate/365;yearsEnd=endDate/365;break;case 4:if(dayStart===31)
dayStart=30;if(dayEnd===31)
dayEnd=30;yearsStart=yearStart+(monthStart*30+dayStart)/360;yearsEnd=yearEnd+(monthEnd*30+dayEnd)/360;break;}
return yearsEnd-yearsStart;}
function getTimeDifferenceInWholeMonths(startDate,endDate){const months=(endDate.getFullYear()-startDate.getFullYear())*12+
endDate.getMonth()-
startDate.getMonth();return startDate.getDate()>endDate.getDate()?months-1:months;}
function getTimeDifferenceInWholeDays(startDate,endDate){const startUtc=startDate.getTime();const endUtc=endDate.getTime();return Math.floor((endUtc-startUtc)/MS_PER_DAY);}
function getTimeDifferenceInWholeYears(startDate,endDate){const years=endDate.getFullYear()-startDate.getFullYear();const monthStart=startDate.getMonth();const monthEnd=endDate.getMonth();const dateStart=startDate.getDate();const dateEnd=endDate.getDate();const isEndMonthDateBigger=monthEnd>monthStart||(monthEnd===monthStart&&dateEnd>=dateStart);return isEndMonthDateBigger?years:years-1;}
function areTwoDatesWithinOneYear(startDate,endDate){return getYearFrac(startDate,endDate,1)<1;}
function areDatesSameDay(startDate,endDate){return Math.trunc(startDate)===Math.trunc(endDate);}
function isDateBetween(date,startDate,endDate){if(startDate>endDate){return isDateBetween(date,endDate,startDate);}
date=Math.trunc(date);startDate=Math.trunc(startDate);endDate=Math.trunc(endDate);return date>=startDate&&date<=endDate;}
function isDateStrictlyBefore(date,dateBefore){return Math.trunc(date)<Math.trunc(dateBefore);}
function isDateBefore(date,dateBefore){return Math.trunc(date)<=Math.trunc(dateBefore);}
function isDateStrictlyAfter(date,dateAfter){return Math.trunc(date)>Math.trunc(dateAfter);}
function isDateAfter(date,dateAfter){return Math.trunc(date)>=Math.trunc(dateAfter);}
const getFormulaNumberRegex=memoize(function getFormulaNumberRegex(decimalSeparator){decimalSeparator=escapeRegExp(decimalSeparator);return new RegExp(`(?:^-?\\d+(?:${decimalSeparator}?\\d*(?:e\\d+)?)?|^-?${decimalSeparator}\\d+)(?!\\w|!)`);});const getNumberRegex=memoize(function getNumberRegex(locale){const decimalSeparator=escapeRegExp(locale.decimalSeparator);const thousandsSeparator=escapeRegExp(locale.thousandsSeparator||"");const pIntegerAndDecimals=`(?:\\d+(?:${thousandsSeparator}\\d{3,})*(?:${decimalSeparator}\\d*)?)`;const pOnlyDecimals=`(?:${decimalSeparator}\\d+)`;const pScientificFormat="(?:e(?:\\+|-)?\\d+)?";const pPercentFormat="(?:\\s*%)?";const pNumber="(?:\\s*"+
pIntegerAndDecimals+"|"+
pOnlyDecimals+")"+
pScientificFormat+
pPercentFormat;const pMinus="(?:\\s*-)?";const pCurrencyFormat="(?:\\s*[\\$€])?";const p1=pMinus+pCurrencyFormat+pNumber;const p2=pMinus+pNumber+pCurrencyFormat;const p3=pCurrencyFormat+pMinus+pNumber;const pNumberExp="^(?:(?:"+[p1,p2,p3].join(")|(?:")+"))$";const numberRegexp=new RegExp(pNumberExp,"i");return numberRegexp;});function isNumber(value,locale){if(!value)
return false;return getNumberRegex(locale).test(value.trim());}
const getInvaluableSymbolsRegexp=memoize(function getInvaluableSymbolsRegexp(locale){return new RegExp(`[\$€${escapeRegExp(locale.thousandsSeparator || "")}]`,"g");});function parseNumber(str,locale){if(locale.decimalSeparator!=="."){str=str.replace(locale.decimalSeparator,".");}
str=str.replace(getInvaluableSymbolsRegexp(locale),"");let n=Number(str);if(isNaN(n)&&str.includes("%")){n=Number(str.split("%")[0]);if(!isNaN(n)){return n/100;}}
return n;}
function percentile(values,percent,isInclusive){const sortedValues=[...values].sort((a,b)=>a-b);let percentIndex=(sortedValues.length+(isInclusive?-1:1))*percent;if(!isInclusive){percentIndex--;}
if(Number.isInteger(percentIndex)){return sortedValues[percentIndex];}
const indexSup=Math.ceil(percentIndex);const indexLow=Math.floor(percentIndex);return(sortedValues[indexSup]*(percentIndex-indexLow)+
sortedValues[indexLow]*(indexSup-percentIndex));}
var CellValueType;(function(CellValueType){CellValueType["boolean"]="boolean";CellValueType["number"]="number";CellValueType["text"]="text";CellValueType["empty"]="empty";CellValueType["error"]="error";})(CellValueType||(CellValueType={}));var ClipboardMIMEType;(function(ClipboardMIMEType){ClipboardMIMEType["PlainText"]="text/plain";ClipboardMIMEType["Html"]="text/html";ClipboardMIMEType["OSpreadsheet"]="web application/o-spreadsheet";})(ClipboardMIMEType||(ClipboardMIMEType={}));function isSheetDependent(cmd){return"sheetId"in cmd;}
function isHeadersDependant(cmd){return"dimension"in cmd&&"sheetId"in cmd&&"elements"in cmd;}
function isTargetDependent(cmd){return"target"in cmd&&"sheetId"in cmd;}
function isRangeDependant(cmd){return"ranges"in cmd;}
function isZoneDependent(cmd){return"zone"in cmd;}
function isPositionDependent(cmd){return"col"in cmd&&"row"in cmd&&"sheetId"in cmd;}
const invalidateEvaluationCommands=new Set(["RENAME_SHEET","DELETE_SHEET","CREATE_SHEET","DUPLICATE_SHEET","ADD_COLUMNS_ROWS","REMOVE_COLUMNS_ROWS","UNDO","REDO","ADD_MERGE","REMOVE_MERGE","UPDATE_LOCALE","ADD_PIVOT","UPDATE_PIVOT","INSERT_PIVOT","RENAME_PIVOT","REMOVE_PIVOT","DUPLICATE_PIVOT",]);const invalidateChartEvaluationCommands=new Set(["EVALUATE_CELLS","UPDATE_CELL","UNHIDE_COLUMNS_ROWS","HIDE_COLUMNS_ROWS","GROUP_HEADERS","UNGROUP_HEADERS","FOLD_ALL_HEADER_GROUPS","FOLD_HEADER_GROUP","FOLD_HEADER_GROUPS_IN_ZONE","UNFOLD_ALL_HEADER_GROUPS","UNFOLD_HEADER_GROUP","UNFOLD_HEADER_GROUPS_IN_ZONE","UPDATE_TABLE","UPDATE_FILTER","UNDO","REDO",]);const invalidateDependenciesCommands=new Set(["MOVE_RANGES"]);const invalidateCFEvaluationCommands=new Set(["DUPLICATE_SHEET","EVALUATE_CELLS","ADD_CONDITIONAL_FORMAT","REMOVE_CONDITIONAL_FORMAT","CHANGE_CONDITIONAL_FORMAT_PRIORITY",]);const invalidateBordersCommands=new Set(["AUTOFILL_CELL","SET_BORDER","SET_ZONE_BORDERS",]);const readonlyAllowedCommands=new Set(["START","ACTIVATE_SHEET","COPY","RESIZE_SHEETVIEW","SET_VIEWPORT_OFFSET","EVALUATE_CELLS","SET_FORMULA_VISIBILITY","UPDATE_FILTER",]);const coreTypes=new Set(["UPDATE_CELL","UPDATE_CELL_POSITION","CLEAR_CELL","CLEAR_CELLS","DELETE_CONTENT","ADD_COLUMNS_ROWS","REMOVE_COLUMNS_ROWS","RESIZE_COLUMNS_ROWS","HIDE_COLUMNS_ROWS","UNHIDE_COLUMNS_ROWS","SET_GRID_LINES_VISIBILITY","UNFREEZE_COLUMNS","UNFREEZE_ROWS","FREEZE_COLUMNS","FREEZE_ROWS","UNFREEZE_COLUMNS_ROWS","ADD_MERGE","REMOVE_MERGE","CREATE_SHEET","DELETE_SHEET","DUPLICATE_SHEET","MOVE_SHEET","RENAME_SHEET","COLOR_SHEET","HIDE_SHEET","SHOW_SHEET","MOVE_RANGES","ADD_CONDITIONAL_FORMAT","REMOVE_CONDITIONAL_FORMAT","CHANGE_CONDITIONAL_FORMAT_PRIORITY","CREATE_FIGURE","DELETE_FIGURE","UPDATE_FIGURE","SET_FORMATTING","CLEAR_FORMATTING","SET_BORDER","SET_ZONE_BORDERS","CREATE_CHART","UPDATE_CHART","CREATE_TABLE","REMOVE_TABLE","UPDATE_TABLE","CREATE_TABLE_STYLE","REMOVE_TABLE_STYLE","CREATE_IMAGE","GROUP_HEADERS","UNGROUP_HEADERS","UNFOLD_HEADER_GROUP","FOLD_HEADER_GROUP","FOLD_ALL_HEADER_GROUPS","UNFOLD_ALL_HEADER_GROUPS","UNFOLD_HEADER_GROUPS_IN_ZONE","FOLD_HEADER_GROUPS_IN_ZONE","ADD_DATA_VALIDATION_RULE","REMOVE_DATA_VALIDATION_RULE","UPDATE_LOCALE","ADD_PIVOT","UPDATE_PIVOT","INSERT_PIVOT","RENAME_PIVOT","REMOVE_PIVOT","DUPLICATE_PIVOT",]);function isCoreCommand(cmd){return coreTypes.has(cmd.type);}
function canExecuteInReadonly(cmd){return readonlyAllowedCommands.has(cmd.type);}
class DispatchResult{reasons;constructor(results=[]){if(!Array.isArray(results)){results=[results];}
results=[...new Set(results)];this.reasons=results.filter((result)=>result!=="Success");}
static get Success(){return SUCCESS;}
get isSuccessful(){return this.reasons.length===0;}
isCancelledBecause(reason){return this.reasons.includes(reason);}}
const SUCCESS=new DispatchResult();var CommandResult;(function(CommandResult){CommandResult["Success"]="Success";CommandResult["CancelledForUnknownReason"]="CancelledForUnknownReason";CommandResult["WillRemoveExistingMerge"]="WillRemoveExistingMerge";CommandResult["MergeIsDestructive"]="MergeIsDestructive";CommandResult["CellIsMerged"]="CellIsMerged";CommandResult["InvalidTarget"]="InvalidTarget";CommandResult["EmptyUndoStack"]="EmptyUndoStack";CommandResult["EmptyRedoStack"]="EmptyRedoStack";CommandResult["NotEnoughElements"]="NotEnoughElements";CommandResult["NotEnoughSheets"]="NotEnoughSheets";CommandResult["MissingSheetName"]="MissingSheetName";CommandResult["UnchangedSheetName"]="UnchangedSheetName";CommandResult["DuplicatedSheetName"]="DuplicatedSheetName";CommandResult["DuplicatedSheetId"]="DuplicatedSheetId";CommandResult["ForbiddenCharactersInSheetName"]="ForbiddenCharactersInSheetName";CommandResult["WrongSheetMove"]="WrongSheetMove";CommandResult["WrongSheetPosition"]="WrongSheetPosition";CommandResult["InvalidAnchorZone"]="InvalidAnchorZone";CommandResult["SelectionOutOfBound"]="SelectionOutOfBound";CommandResult["TargetOutOfSheet"]="TargetOutOfSheet";CommandResult["WrongCutSelection"]="WrongCutSelection";CommandResult["WrongPasteSelection"]="WrongPasteSelection";CommandResult["WrongPasteOption"]="WrongPasteOption";CommandResult["WrongFigurePasteOption"]="WrongFigurePasteOption";CommandResult["EmptyClipboard"]="EmptyClipboard";CommandResult["EmptyRange"]="EmptyRange";CommandResult["InvalidRange"]="InvalidRange";CommandResult["InvalidZones"]="InvalidZones";CommandResult["InvalidSheetId"]="InvalidSheetId";CommandResult["InvalidFigureId"]="InvalidFigureId";CommandResult["InputAlreadyFocused"]="InputAlreadyFocused";CommandResult["MaximumRangesReached"]="MaximumRangesReached";CommandResult["MinimumRangesReached"]="MinimumRangesReached";CommandResult["InvalidChartDefinition"]="InvalidChartDefinition";CommandResult["InvalidDataSet"]="InvalidDataSet";CommandResult["InvalidLabelRange"]="InvalidLabelRange";CommandResult["InvalidScorecardKeyValue"]="InvalidScorecardKeyValue";CommandResult["InvalidScorecardBaseline"]="InvalidScorecardBaseline";CommandResult["InvalidGaugeDataRange"]="InvalidGaugeDataRange";CommandResult["EmptyGaugeRangeMin"]="EmptyGaugeRangeMin";CommandResult["GaugeRangeMinNaN"]="GaugeRangeMinNaN";CommandResult["EmptyGaugeRangeMax"]="EmptyGaugeRangeMax";CommandResult["GaugeRangeMaxNaN"]="GaugeRangeMaxNaN";CommandResult["GaugeRangeMinBiggerThanRangeMax"]="GaugeRangeMinBiggerThanRangeMax";CommandResult["GaugeLowerInflectionPointNaN"]="GaugeLowerInflectionPointNaN";CommandResult["GaugeUpperInflectionPointNaN"]="GaugeUpperInflectionPointNaN";CommandResult["GaugeLowerBiggerThanUpper"]="GaugeLowerBiggerThanUpper";CommandResult["InvalidAutofillSelection"]="InvalidAutofillSelection";CommandResult["MinBiggerThanMax"]="MinBiggerThanMax";CommandResult["LowerBiggerThanUpper"]="LowerBiggerThanUpper";CommandResult["MidBiggerThanMax"]="MidBiggerThanMax";CommandResult["MinBiggerThanMid"]="MinBiggerThanMid";CommandResult["FirstArgMissing"]="FirstArgMissing";CommandResult["SecondArgMissing"]="SecondArgMissing";CommandResult["MinNaN"]="MinNaN";CommandResult["MidNaN"]="MidNaN";CommandResult["MaxNaN"]="MaxNaN";CommandResult["ValueUpperInflectionNaN"]="ValueUpperInflectionNaN";CommandResult["ValueLowerInflectionNaN"]="ValueLowerInflectionNaN";CommandResult["MinInvalidFormula"]="MinInvalidFormula";CommandResult["MidInvalidFormula"]="MidInvalidFormula";CommandResult["MaxInvalidFormula"]="MaxInvalidFormula";CommandResult["ValueUpperInvalidFormula"]="ValueUpperInvalidFormula";CommandResult["ValueLowerInvalidFormula"]="ValueLowerInvalidFormula";CommandResult["InvalidSortZone"]="InvalidSortZone";CommandResult["WaitingSessionConfirmation"]="WaitingSessionConfirmation";CommandResult["MergeOverlap"]="MergeOverlap";CommandResult["TooManyHiddenElements"]="TooManyHiddenElements";CommandResult["Readonly"]="Readonly";CommandResult["InvalidViewportSize"]="InvalidViewportSize";CommandResult["InvalidScrollingDirection"]="InvalidScrollingDirection";CommandResult["ViewportScrollLimitsReached"]="ViewportScrollLimitsReached";CommandResult["FigureDoesNotExist"]="FigureDoesNotExist";CommandResult["InvalidConditionalFormatId"]="InvalidConditionalFormatId";CommandResult["InvalidCellPopover"]="InvalidCellPopover";CommandResult["EmptyTarget"]="EmptyTarget";CommandResult["InvalidFreezeQuantity"]="InvalidFreezeQuantity";CommandResult["FrozenPaneOverlap"]="FrozenPaneOverlap";CommandResult["ValuesNotChanged"]="ValuesNotChanged";CommandResult["InvalidFilterZone"]="InvalidFilterZone";CommandResult["TableNotFound"]="TableNotFound";CommandResult["TableOverlap"]="TableOverlap";CommandResult["InvalidTableConfig"]="InvalidTableConfig";CommandResult["InvalidTableStyle"]="InvalidTableStyle";CommandResult["FilterNotFound"]="FilterNotFound";CommandResult["MergeInTable"]="MergeInTable";CommandResult["NonContinuousTargets"]="NonContinuousTargets";CommandResult["DuplicatedFigureId"]="DuplicatedFigureId";CommandResult["InvalidSelectionStep"]="InvalidSelectionStep";CommandResult["DuplicatedChartId"]="DuplicatedChartId";CommandResult["ChartDoesNotExist"]="ChartDoesNotExist";CommandResult["InvalidHeaderIndex"]="InvalidHeaderIndex";CommandResult["InvalidQuantity"]="InvalidQuantity";CommandResult["MoreThanOneColumnSelected"]="MoreThanOneColumnSelected";CommandResult["EmptySplitSeparator"]="EmptySplitSeparator";CommandResult["SplitWillOverwriteContent"]="SplitWillOverwriteContent";CommandResult["NoSplitSeparatorInSelection"]="NoSplitSeparatorInSelection";CommandResult["NoActiveSheet"]="NoActiveSheet";CommandResult["InvalidLocale"]="InvalidLocale";CommandResult["MoreThanOneRangeSelected"]="MoreThanOneRangeSelected";CommandResult["NoColumnsProvided"]="NoColumnsProvided";CommandResult["ColumnsNotIncludedInZone"]="ColumnsNotIncludedInZone";CommandResult["DuplicatesColumnsSelected"]="DuplicatesColumnsSelected";CommandResult["InvalidHeaderGroupStartEnd"]="InvalidHeaderGroupStartEnd";CommandResult["HeaderGroupAlreadyExists"]="HeaderGroupAlreadyExists";CommandResult["UnknownHeaderGroup"]="UnknownHeaderGroup";CommandResult["UnknownDataValidationRule"]="UnknownDataValidationRule";CommandResult["UnknownDataValidationCriterionType"]="UnknownDataValidationCriterionType";CommandResult["InvalidDataValidationCriterionValue"]="InvalidDataValidationCriterionValue";CommandResult["InvalidNumberOfCriterionValues"]="InvalidNumberOfCriterionValues";CommandResult["InvalidCopyPasteSelection"]="InvalidCopyPasteSelection";CommandResult["NoChanges"]="NoChanges";CommandResult["InvalidInputId"]="InvalidInputId";CommandResult["SheetIsHidden"]="SheetIsHidden";CommandResult["InvalidTableResize"]="InvalidTableResize";CommandResult["PivotIdNotFound"]="PivotIdNotFound";CommandResult["EmptyName"]="EmptyName";CommandResult["ValueCellIsInvalidFormula"]="ValueCellIsInvalidFormula";CommandResult["InvalidDefinition"]="InvalidDefinition";CommandResult["InvalidColor"]="InvalidColor";CommandResult["DataBarRangeValuesMismatch"]="DataBarRangeValuesMismatch";})(CommandResult||(CommandResult={}));const DEFAULT_LOCALES=[{name:"English (US)",code:"en_US",thousandsSeparator:",",decimalSeparator:".",weekStart:7,dateFormat:"m/d/yyyy",timeFormat:"hh:mm:ss a",formulaArgSeparator:",",},{name:"French",code:"fr_FR",thousandsSeparator:" ",decimalSeparator:",",weekStart:1,dateFormat:"dd/mm/yyyy",timeFormat:"hh:mm:ss",formulaArgSeparator:";",},];const DEFAULT_LOCALE=DEFAULT_LOCALES[0];const borderStyles=["thin","medium","thick","dashed","dotted"];function isMatrix(x){return Array.isArray(x)&&Array.isArray(x[0]);}
var DIRECTION;(function(DIRECTION){DIRECTION["UP"]="up";DIRECTION["DOWN"]="down";DIRECTION["LEFT"]="left";DIRECTION["RIGHT"]="right";})(DIRECTION||(DIRECTION={}));const LAYERS={Background:0,Highlights:1,Clipboard:2,Chart:4,Autofill:5,Selection:6,Headers:100,};const OrderedLayers=memoize(()=>Object.keys(LAYERS).sort((a,b)=>LAYERS[a]-LAYERS[b]));function addRenderingLayer(layer,priority){if(LAYERS[layer]){throw new Error(`Layer ${layer} already exists`);}
LAYERS[layer]=priority;}
const CellErrorType={NotAvailable:"#N/A",InvalidReference:"#REF",BadExpression:"#BAD_EXPR",CircularDependency:"#CYCLE",UnknownFunction:"#NAME?",DivisionByZero:"#DIV/0!",SpilledBlocked:"#SPILL!",GenericError:"#ERROR",NullError:"#NULL!",};const errorTypes=new Set(Object.values(CellErrorType));class EvaluationError extends Error{value;constructor(message=_t("Error"),value=CellErrorType.GenericError){super(message);this.value=value;}}
class BadExpressionError extends EvaluationError{constructor(message=_t("Invalid expression")){super(message,CellErrorType.BadExpression);}}
class CircularDependencyError extends EvaluationError{constructor(message=_t("Circular reference")){super(message,CellErrorType.CircularDependency);}}
class InvalidReferenceError extends EvaluationError{constructor(message=_t("Invalid reference")){super(message,CellErrorType.InvalidReference);}}
class NotAvailableError extends EvaluationError{constructor(message=_t("Data not available")){super(message,CellErrorType.NotAvailable);}}
class UnknownFunctionError extends EvaluationError{constructor(message=_t("Unknown function")){super(message,CellErrorType.UnknownFunction);}}
class SplillBlockedError extends EvaluationError{constructor(message=_t("Spill range is not empty")){super(message,CellErrorType.SpilledBlocked);}}
const SORT_TYPES_ORDER=["number","string","boolean","undefined"];function assert(condition,message,value){if(!condition()){throw new EvaluationError(message,value);}}
function inferFormat(data){if(data===undefined){return undefined;}
if(isMatrix(data)){return data[0][0]?.format;}
return data.format;}
function isEvaluationError(error){return typeof error==="string"&&errorTypes.has(error);}
const expectNumberValueError=(value)=>_t("The function [[FUNCTION_NAME]] expects a number value, but '%s' is a string, and cannot be coerced to a number.",value);const expectNumberRangeError=(lowerBound,upperBound,value)=>_t("The function [[FUNCTION_NAME]] expects a number value between %s and %s inclusive, but receives %s.",lowerBound.toString(),upperBound.toString(),value.toString());const expectStringSetError=(stringSet,value)=>{const stringSetString=stringSet.map((str)=>`'${str}'`).join(", ");return _t("The function [[FUNCTION_NAME]] has an argument with value '%s'. It should be one of: %s.",value,stringSetString);};function toNumber(data,locale){const value=toValue(data);switch(typeof value){case"number":return value;case"boolean":return value?1:0;case"string":if(isNumber(value,locale)||value===""){return parseNumber(value,locale);}
const internalDate=parseDateTime(value,locale);if(internalDate){return internalDate.value;}
throw new EvaluationError(expectNumberValueError(value));default:return 0;}}
function tryToNumber(value,locale){try{return toNumber(value,locale);}
catch(e){return undefined;}}
function toNumberMatrix(data,argName){return toMatrix(data).map((row)=>{return row.map((cell)=>{if(typeof cell.value!=="number"){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] expects number values for %s, but got a %s.",argName,typeof cell.value));}
return cell.value;});});}
function strictToNumber(data,locale){const value=toValue(data);if(value===""){throw new EvaluationError(expectNumberValueError(value));}
return toNumber(value,locale);}
function toInteger(value,locale){return Math.trunc(toNumber(value,locale));}
function strictToInteger(value,locale){return Math.trunc(strictToNumber(value,locale));}
function assertNumberGreaterThanOrEqualToOne(value){assert(()=>value>=1,_t("The function [[FUNCTION_NAME]] expects a number value to be greater than or equal to 1, but receives %s.",value.toString()));}
function assertNotZero(value){assert(()=>value!==0,_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."),CellErrorType.DivisionByZero);}
function toString(data){const value=toValue(data);switch(typeof value){case"string":return value;case"number":return value.toString();case"boolean":return value?"TRUE":"FALSE";default:return"";}}
const normalizeString=memoize(function normalizeString(str){return str.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"");});const expectBooleanValueError=(value)=>_t("The function [[FUNCTION_NAME]] expects a boolean value, but '%s' is a text, and cannot be coerced to a boolean.",value);function toBoolean(data){const value=toValue(data);switch(typeof value){case"boolean":return value;case"string":if(value){let uppercaseVal=value.toUpperCase();if(uppercaseVal==="TRUE"){return true;}
if(uppercaseVal==="FALSE"){return false;}
throw new EvaluationError(expectBooleanValueError(value));}
else{return false;}
case"number":return value?true:false;default:return false;}}
function strictToBoolean(data){const value=toValue(data);if(value===""){throw new EvaluationError(expectBooleanValueError(value));}
return toBoolean(value);}
function toJsDate(data,locale){const value=toValue(data);return numberToJsDate(toNumber(value,locale));}
function toValue(data){if(typeof data==="object"&&data!==null&&"value"in data){if(isEvaluationError(data.value)){throw data;}
return data.value;}
if(isEvaluationError(data)){throw new EvaluationError("",data);}
return data;}
function visitArgs(args,cellCb,dataCb){for(let arg of args){if(isMatrix(arg)){const lenRow=arg.length;const lenCol=arg[0].length;for(let y=0;y<lenCol;y++){for(let x=0;x<lenRow;x++){cellCb(arg[x][y]);}}}
else{dataCb(arg);}}}
function visitAny(args,cb){visitArgs(args,(cell)=>{if(isEvaluationError(cell.value)){throw cell;}
cb(cell);},(arg)=>{if(isEvaluationError(arg?.value)){throw arg;}
cb(arg);});}
function visitNumbers(args,cb,locale){visitArgs(args,(cell)=>{if(typeof cell?.value==="number"){cb(cell);}
if(isEvaluationError(cell?.value)){throw cell;}},(arg)=>{cb({value:strictToNumber(arg,locale),format:arg?.format});});}
function reduceArgs(args,cellCb,dataCb,initialValue,dir="rowFirst"){let val=initialValue;for(let arg of args){if(isMatrix(arg)){const numberOfCols=arg.length;const numberOfRows=arg[0].length;if(dir==="rowFirst"){for(let row=0;row<numberOfRows;row++){for(let col=0;col<numberOfCols;col++){val=cellCb(val,arg[col][row]);}}}
else{for(let col=0;col<numberOfCols;col++){for(let row=0;row<numberOfRows;row++){val=cellCb(val,arg[col][row]);}}}}
else{val=dataCb(val,arg);}}
return val;}
function reduceAny(args,cb,initialValue,dir="rowFirst"){return reduceArgs(args,cb,cb,initialValue,dir);}
function reduceNumbers(args,cb,initialValue,locale){return reduceArgs(args,(acc,arg)=>{const argValue=arg?.value;if(typeof argValue==="number"){return cb(acc,argValue);}
else if(isEvaluationError(argValue)){throw arg;}
return acc;},(acc,arg)=>{return cb(acc,strictToNumber(arg,locale));},initialValue);}
function reduceNumbersTextAs0(args,cb,initialValue,locale){return reduceArgs(args,(acc,arg)=>{const argValue=arg?.value;if(argValue!==undefined&&argValue!==null){if(typeof argValue==="number"){return cb(acc,argValue);}
else if(typeof argValue==="boolean"){return cb(acc,toNumber(argValue,locale));}
else if(isEvaluationError(argValue)){throw arg;}
else{return cb(acc,0);}}
return acc;},(acc,arg)=>{return cb(acc,toNumber(arg,locale));},initialValue);}
function generateMatrix(nColumns,nRows,callback){const returned=Array(nColumns);for(let col=0;col<nColumns;col++){returned[col]=Array(nRows);for(let row=0;row<nRows;row++){returned[col][row]=callback(col,row);}}
return returned;}
function matrixMap(matrix,callback){if(matrix.length===0){return[];}
return generateMatrix(matrix.length,matrix[0].length,(col,row)=>callback(matrix[col][row]));}
function matrixForEach(matrix,fn){const numberOfCols=matrix.length;const numberOfRows=matrix[0]?.length??0;for(let col=0;col<numberOfCols;col++){for(let row=0;row<numberOfRows;row++){fn(matrix[col][row]);}}}
function transposeMatrix(matrix){if(!matrix.length){return[];}
return generateMatrix(matrix[0].length,matrix.length,(i,j)=>matrix[j][i]);}
function conditionalVisitArgs(args,cellCb,dataCb){for(let arg of args){if(isMatrix(arg)){const lenRow=arg.length;const lenCol=arg[0].length;for(let y=0;y<lenCol;y++){for(let x=0;x<lenRow;x++){if(!cellCb(arg[x][y]??undefined))
return;}}}
else{if(!dataCb(arg))
return;}}}
function conditionalVisitBoolean(args,cb){return conditionalVisitArgs(args,(arg)=>{const argValue=arg?.value;if(typeof argValue==="boolean"){return cb(argValue);}
if(typeof argValue==="number"){return cb(argValue?true:false);}
if(isEvaluationError(argValue)){throw arg;}
return true;},(arg)=>{if(arg!==undefined&&arg.value!==null){return cb(strictToBoolean(arg));}
return true;});}
function getPredicate(descr,locale){let operator;let operand;let subString=descr.substring(0,2);if(subString==="<="||subString===">="||subString==="<>"){operator=subString;operand=descr.substring(2);}
else{subString=descr.substring(0,1);if(subString==="<"||subString===">"||subString==="="){operator=subString;operand=descr.substring(1);}
else{operator="=";operand=descr;}}
if(isNumber(operand,locale)||isDateTime(operand,locale)){operand=toNumber(operand,locale);}
else if(operand==="TRUE"||operand==="FALSE"){operand=toBoolean(operand);}
return{operator,operand};}
const wildcardToRegExp=memoize(function wildcardToRegExp(operand){if(operand==="*"){return/.+/;}
let exp="";let predecessor="";for(let char of operand){if(char==="?"&&predecessor!=="~"){exp+=".";}
else if(char==="*"&&predecessor!=="~"){exp+=".*";}
else{if(char==="*"||char==="?"){exp=exp.slice(0,-1);}
if(["^",".","[","]","$","(",")","*","+","?","|","{","}","\\"].includes(char)){exp+="\\";}
exp+=char;}
predecessor=char;}
return new RegExp("^"+exp+"$","i");});function evaluatePredicate(value="",criterion,locale){const{operator,operand}=criterion;if(operand===undefined||value===null||operand===null){return false;}
if(typeof operand==="number"&&operator==="="){if(typeof value==="string"&&(isNumber(value,locale)||isDateTime(value,locale))){return toNumber(value,locale)===operand;}
return value===operand;}
if(operator==="<>"||operator==="="){let result;if(typeof value===typeof operand){if(typeof value==="string"&&typeof operand==="string"){result=wildcardToRegExp(operand).test(value);}
else{result=value===operand;}}
else{result=false;}
return operator==="="?result:!result;}
if(typeof value===typeof operand){switch(operator){case"<":return value<operand;case">":return value>operand;case"<=":return value<=operand;case">=":return value>=operand;}}
return false;}
function visitMatchingRanges(args,cb,locale,isQuery=false){const countArg=args.length;if(countArg%2===1){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] expects criteria_range and criterion to be in pairs."));}
const firstArg=toMatrix(args[0]);const dimRow=firstArg.length;const dimCol=firstArg[0].length;let predicates=[];for(let i=0;i<countArg-1;i+=2){const criteriaRange=toMatrix(args[i]);if(criteriaRange.length!==dimRow||criteriaRange[0].length!==dimCol){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] expects criteria_range to have the same dimension"));}
const description=toString(args[i+1]);const predicate=getPredicate(description,locale);if(isQuery&&typeof predicate.operand==="string"){predicate.operand+="*";}
predicates.push(predicate);}
for(let i=0;i<dimRow;i++){for(let j=0;j<dimCol;j++){let validatedPredicates=true;for(let k=0;k<countArg-1;k+=2){const criteriaValue=toMatrix(args[k])[i][j].value;const criterion=predicates[k/2];validatedPredicates=evaluatePredicate(criteriaValue??undefined,criterion,locale);if(!validatedPredicates){break;}}
if(validatedPredicates){cb(i,j);}}}}
function dichotomicSearch(data,target,mode,sortOrder,rangeLength,getValueInData){if(target===undefined||target.value===null){return-1;}
if(isEvaluationError(target.value)){throw target;}
const _target=normalizeValue(target.value);const targetType=typeof _target;let matchVal=undefined;let matchValIndex=undefined;let indexLeft=0;let indexRight=rangeLength-1;let indexMedian;let currentIndex;let currentVal;let currentType;while(indexRight-indexLeft>=0){indexMedian=Math.floor((indexLeft+indexRight)/2);currentIndex=indexMedian;currentVal=normalizeValue(getValueInData(data,currentIndex));currentType=typeof currentVal;while(indexLeft<currentIndex&&targetType!==currentType){currentIndex--;currentVal=normalizeValue(getValueInData(data,currentIndex));currentType=typeof currentVal;}
if(currentType!==targetType||currentVal===undefined||currentVal===null){indexLeft=indexMedian+1;continue;}
if(mode==="strict"&&currentVal===_target){matchVal=currentVal;matchValIndex=currentIndex;}
else if(mode==="nextSmaller"&&currentVal<=_target){if(matchVal===undefined||matchVal===null||matchVal<currentVal||(matchVal===currentVal&&sortOrder==="asc"&&matchValIndex<currentIndex)||(matchVal===currentVal&&sortOrder==="desc"&&matchValIndex>currentIndex)){matchVal=currentVal;matchValIndex=currentIndex;}}
else if(mode==="nextGreater"&&currentVal>=_target){if(matchVal===undefined||matchVal>currentVal||(matchVal===currentVal&&sortOrder==="asc"&&matchValIndex<currentIndex)||(matchVal===currentVal&&sortOrder==="desc"&&matchValIndex>currentIndex)){matchVal=currentVal;matchValIndex=currentIndex;}}
if((sortOrder==="asc"&&currentVal>_target)||(sortOrder==="desc"&&currentVal<=_target)){indexRight=currentIndex-1;}
else{indexLeft=indexMedian+1;}}
return matchValIndex!==undefined?matchValIndex:-1;}
function linearSearch(data,target,mode,numberOfValues,getValueInData,reverseSearch=false){if(target===undefined||target.value===null){return-1;}
if(isEvaluationError(target.value)){throw target;}
const _target=normalizeValue(target.value);const getValue=reverseSearch?(data,i)=>getValueInData(data,numberOfValues-i-1):getValueInData;let indexMatchTarget=(i)=>{return normalizeValue(getValue(data,i))===_target;};if(mode==="wildcard"&&typeof _target==="string"&&(_target.includes("*")||_target.includes("?"))){const regExp=wildcardToRegExp(_target);indexMatchTarget=(i)=>{const value=normalizeValue(getValue(data,i));if(typeof value==="string"){return regExp.test(value);}
return false;};}
let closestMatch=undefined;let closestMatchIndex=-1;if(mode==="nextSmaller"){indexMatchTarget=(i)=>{const value=normalizeValue(getValue(data,i));if((!closestMatch&&compareCellValues(_target,value)>=0)||(compareCellValues(_target,value)>=0&&compareCellValues(value,closestMatch)>0)){closestMatch=value;closestMatchIndex=i;}
return value===_target;};}
if(mode==="nextGreater"){indexMatchTarget=(i)=>{const value=normalizeValue(getValue(data,i));if((!closestMatch&&compareCellValues(_target,value)<=0)||(compareCellValues(_target,value)<=0&&compareCellValues(value,closestMatch)<0)){closestMatch=value;closestMatchIndex=i;}
return value===_target;};}
for(let i=0;i<numberOfValues;i++){if(indexMatchTarget(i)){return reverseSearch?numberOfValues-i-1:i;}}
return reverseSearch?numberOfValues-closestMatchIndex-1:closestMatchIndex;}
function normalizeValue(value){return typeof value==="string"?normalizeString(value):value;}
function compareCellValues(left,right){let typeOrder=SORT_TYPES_ORDER.indexOf(typeof left)-SORT_TYPES_ORDER.indexOf(typeof right);if(typeOrder===0){if(typeof left==="string"&&typeof right==="string"){typeOrder=left.localeCompare(right);}
else if(typeof left==="number"&&typeof right==="number"){typeOrder=left-right;}
else if(typeof left==="boolean"&&typeof right==="boolean"){typeOrder=Number(left)-Number(right);}}
return typeOrder;}
function toMatrix(data){if(data===undefined){return[[]];}
return isMatrix(data)?data:[[data]];}
function flattenRowFirst(items,callback){return reduceAny(items,(array,val)=>{array.push(callback(val));return array;},[],"rowFirst");}
function isDataNonEmpty(data){if(data===undefined){return false;}
const{value}=data;if(value===null||value===""){return false;}
return true;}
function toCriterionDateNumber(dateValue){const today=DateTime.now();switch(dateValue){case"today":return jsDateToNumber(today);case"yesterday":return jsDateToNumber(DateTime.fromTimestamp(today.setDate(today.getDate()-1)));case"tomorrow":return jsDateToNumber(DateTime.fromTimestamp(today.setDate(today.getDate()+1)));case"lastWeek":return jsDateToNumber(DateTime.fromTimestamp(today.setDate(today.getDate()-7)));case"lastMonth":return jsDateToNumber(DateTime.fromTimestamp(today.setMonth(today.getMonth()-1)));case"lastYear":return jsDateToNumber(DateTime.fromTimestamp(today.setFullYear(today.getFullYear()-1)));}}
function getDateNumberCriterionValues(criterion,locale){if("dateValue"in criterion&&criterion.dateValue!=="exactDate"){return[toCriterionDateNumber(criterion.dateValue)];}
return criterion.values.map((value)=>valueToDateNumber(value,locale));}
function getCriterionValuesAsNumber(criterion,locale){return criterion.values.map((value)=>tryToNumber(value,locale));}
const MAX_DELAY=140;const MIN_DELAY=20;const ACCELERATION=0.035;function scrollDelay(value){return MIN_DELAY+(MAX_DELAY-MIN_DELAY)*Math.exp(-ACCELERATION*(value-1));}
function tokenizeFormat(str){const chars=new TokenizingChars(str);const result=[];let currentFormatPart=[];result.push(currentFormatPart);while(!chars.isOver()){if(chars.current===";"){currentFormatPart=[];result.push(currentFormatPart);chars.shift();continue;}
let token=tokenizeDigit(chars)||tokenizeString$1(chars)||tokenizeEscapedChars(chars)||tokenizeThousandsSeparator(chars)||tokenizeDecimalPoint(chars)||tokenizePercent(chars)||tokenizeDatePart(chars)||tokenizeTextPlaceholder(chars)||tokenizeRepeatedChar(chars);if(!token){throw new Error("Unknown token at "+chars.remaining());}
currentFormatPart.push(token);}
return result;}
function tokenizeString$1(chars){let enfOfStringChar;if(chars.current==='"'){chars.shift();enfOfStringChar='"';}
else if(chars.currentStartsWith("[$")){chars.advanceBy(2);enfOfStringChar="]";}
if(!enfOfStringChar){return null;}
let letters="";while(chars.current&&chars.current!==enfOfStringChar){letters+=chars.shift();}
if(chars.current===enfOfStringChar){chars.shift();}
else{throw new Error("Unterminated string in format");}
return{type:"STRING",value:letters,};}
const alwaysEscapedCharsInFormat=new Set("$+-/():!^&~{}<>= ");function tokenizeEscapedChars(chars){if(chars.current==="\\"){chars.shift();const escapedChar=chars.shift();if(!escapedChar){throw new Error("Unexpected end of format string");}
return{type:"CHAR",value:escapedChar,};}
if(alwaysEscapedCharsInFormat.has(chars.current)){return{type:"CHAR",value:chars.shift(),};}
return null;}
function tokenizeThousandsSeparator(chars){if(chars.current===","){chars.shift();return{type:"THOUSANDS_SEPARATOR",value:","};}
return null;}
function tokenizeTextPlaceholder(chars){if(chars.current==="@"){chars.shift();return{type:"TEXT_PLACEHOLDER",value:"@"};}
return null;}
function tokenizeDecimalPoint(chars){if(chars.current==="."){chars.shift();return{type:"DECIMAL_POINT",value:"."};}
return null;}
function tokenizePercent(chars){if(chars.current==="%"){chars.shift();return{type:"PERCENT",value:"%"};}
return null;}
function tokenizeDigit(chars){if(chars.current==="0"||chars.current==="#"){const value=chars.current;chars.shift();return{type:"DIGIT",value};}
return null;}
const dateSymbols=new Set("dmqyhsa");function tokenizeDatePart(chars){if(!dateSymbols.has(chars.current)){return null;}
const char=chars.current;let value="";while(chars.current===char){value+=chars.shift();}
return{type:"DATE_PART",value};}
function tokenizeRepeatedChar(chars){if(chars.current!=="*"){return null;}
chars.shift();const repeatedChar=chars.shift();if(!repeatedChar){throw new Error("Unexpected end of format string");}
return{type:"REPEATED_CHAR",value:repeatedChar,};}
const MAX_DECIMAL_PLACES=20;const internalFormatCache={};function parseFormat(formatString){let internalFormat=internalFormatCache[formatString];if(internalFormat===undefined){internalFormat=convertFormatToInternalFormat(formatString);internalFormatCache[formatString]=internalFormat;}
return internalFormat;}
function convertFormatToInternalFormat(format){const formatParts=tokenizeFormat(format);for(const part of formatParts){const repeatedCharTokens=part.filter((token)=>token.type==="REPEATED_CHAR");for(const repeatedCharToken of repeatedCharTokens.slice(1)){repeatedCharToken.type="CHAR";}}
const positiveFormat=parseDateFormatTokens(formatParts[0])||parseNumberFormatTokens(formatParts[0])||tokensToTextInternalFormat(formatParts[0]);if(!positiveFormat){throw new Error("Invalid first format part of: "+format);}
if(formatParts.length>1&&positiveFormat.type==="text"){throw new Error("The first format in a multi-part format must be a number format: "+format);}
const negativeFormat=parseDateFormatTokens(formatParts[1])||parseNumberFormatTokens(formatParts[1]);if(formatParts[1]?.length&&!negativeFormat){throw new Error("Invalid second format part of: "+format);}
const zeroFormat=parseDateFormatTokens(formatParts[2])||parseNumberFormatTokens(formatParts[2]);if(formatParts[2]?.length&&!zeroFormat){throw new Error("Invalid third format part of: "+format);}
const textFormat=tokensToTextInternalFormat(formatParts[3]);if(formatParts[3]?.length&&!textFormat){throw new Error("Invalid fourth format part of: "+format);}
return{positive:positiveFormat,negative:negativeFormat,zero:zeroFormat,text:textFormat};}
function areValidDateFormatTokens(tokens){return tokens.every((token)=>token.type==="DATE_PART"||token.type==="DECIMAL_POINT"||token.type==="THOUSANDS_SEPARATOR"||token.type==="STRING"||token.type==="CHAR"||token.type==="REPEATED_CHAR");}
function areValidNumberFormatTokens(tokens){return tokens.every((token)=>token.type==="DIGIT"||token.type==="DECIMAL_POINT"||token.type==="THOUSANDS_SEPARATOR"||token.type==="PERCENT"||token.type==="STRING"||token.type==="CHAR"||token.type==="REPEATED_CHAR");}
function areValidTextFormatTokens(tokens){return tokens.every((token)=>token.type==="STRING"||token.type==="TEXT_PLACEHOLDER"||token.type==="CHAR"||token.type==="REPEATED_CHAR");}
function parseNumberFormatTokens(tokens){if(!tokens||!areValidNumberFormatTokens(tokens)){return undefined;}
const integerPart=[];let decimalPart=undefined;let parsedPart=integerPart;let percentSymbols=0;let magnitude=0;let lastIndexOfDigit=tokens.findLastIndex((token)=>token.type==="DIGIT");let hasThousandSeparator=false;let numberOfDecimalsDigits=0;for(let i=0;i<tokens.length;i++){const token=tokens[i];switch(token.type){case"DIGIT":if(parsedPart===integerPart){parsedPart.push(token);}
else if(numberOfDecimalsDigits<MAX_DECIMAL_PLACES){parsedPart.push(token);numberOfDecimalsDigits++;}
break;case"DECIMAL_POINT":if(parsedPart===integerPart){decimalPart=[];parsedPart=decimalPart;}
else{throw new Error("Multiple decimal points in a number format");}
break;case"REPEATED_CHAR":case"CHAR":case"STRING":parsedPart.push(token);break;case"PERCENT":percentSymbols++;parsedPart.push(token);break;case"THOUSANDS_SEPARATOR":if(i-1===lastIndexOfDigit){magnitude+=1;lastIndexOfDigit++;parsedPart.push(token);}
else if(tokens[i+1]?.type==="DIGIT"&&tokens[i-1]?.type==="DIGIT"){if(parsedPart===integerPart){hasThousandSeparator=true;}
parsedPart.push(token);}
else{parsedPart.push({type:"CHAR",value:","});}
break;}}
return{type:"number",integerPart,decimalPart,percentSymbols,thousandsSeparator:hasThousandSeparator,magnitude,};}
function parseDateFormatTokens(tokens){const internalFormat=tokens&&areValidDateFormatTokens(tokens)?{type:"date",tokens}:undefined;if(!internalFormat){return undefined;}
if(internalFormat.tokens.length&&internalFormat.tokens.every((token)=>token.type==="DATE_PART"&&token.value==="a")){throw new Error("Invalid date format");}
const dateTokens=internalFormat.tokens.map((token)=>{if(token.type==="THOUSANDS_SEPARATOR"||token.type==="DECIMAL_POINT"){return{type:"CHAR",value:token.value};}
return token;});const convertedTokens=convertTokensToMinutesInDateFormat(dateTokens);return{type:"date",tokens:convertedTokens};}
function tokensToTextInternalFormat(tokens){return tokens&&areValidTextFormatTokens(tokens)?{type:"text",tokens}:undefined;}
function convertTokensToMinutesInDateFormat(tokens){const dateParts=tokens.filter((token)=>token.type==="DATE_PART");for(let i=0;i<dateParts.length;i++){if(!dateParts[i].value.startsWith("m")||dateParts[i].value.length>2){continue;}
if(dateParts[i-1]?.value.startsWith("h")||dateParts[i+1]?.value.startsWith("s")){dateParts[i].value=dateParts[i].value.replaceAll("m","M");}}
return tokens;}
function convertInternalFormatToFormat(internalFormat){return[internalFormatPartToFormat(internalFormat.positive),internalFormatPartToFormat(internalFormat.negative),internalFormatPartToFormat(internalFormat.zero),internalFormatPartToFormat(internalFormat.text),].filter(isDefined).join(";");}
function internalFormatPartToFormat(internalFormat){if(!internalFormat){return undefined;}
let format="";const tokens=internalFormat.type!=="number"?internalFormat.tokens:numberInternalFormatToTokenList(internalFormat);for(let token of tokens){switch(token.type){case"STRING":format+=`[$${token.value}]`;break;case"CHAR":format+=shouldEscapeFormatChar(token.value)?`\\${token.value}`:token.value;break;case"REPEATED_CHAR":format+="*"+token.value;break;default:format+=token.value;}}
return format;}
function numberInternalFormatToTokenList(internalFormat){let tokens=[...internalFormat.integerPart];if(internalFormat.decimalPart){tokens.push({type:"DECIMAL_POINT",value:"."});tokens.push(...internalFormat.decimalPart);}
return tokens;}
function shouldEscapeFormatChar(char){return!alwaysEscapedCharsInFormat.has(char);}
const DEFAULT_FORMAT_NUMBER_OF_DIGITS=11;const REPEATED_CHAR_PLACEHOLDER="REPEATED_CHAR_PLACEHOLDER_";const MONTHS={0:_t("January"),1:_t("February"),2:_t("March"),3:_t("April"),4:_t("May"),5:_t("June"),6:_t("July"),7:_t("August"),8:_t("September"),9:_t("October"),10:_t("November"),11:_t("December"),};const DAYS$1={0:_t("Sunday"),1:_t("Monday"),2:_t("Tuesday"),3:_t("Wednesday"),4:_t("Thursday"),5:_t("Friday"),6:_t("Saturday"),};function formatValue(value,{format,locale,formatWidth}){if(typeof value==="boolean"){value=value?"TRUE":"FALSE";}
switch(typeof value){case"string":{if(value.includes('\\"')){value=value.replaceAll(/\\"/g,'"');}
if(!format){return value;}
const internalFormat=parseFormat(format);let formatToApply=internalFormat.text||internalFormat.positive;if(!formatToApply||formatToApply.type!=="text"){return value;}
return applyTextInternalFormat(value,formatToApply,formatWidth);}
case"number":if(!format){format=createDefaultFormat(value);}
const internalFormat=parseFormat(format);if(internalFormat.positive.type==="text"){return applyTextInternalFormat(value.toString(),internalFormat.positive,formatWidth);}
let formatToApply=internalFormat.positive;if(value<0&&internalFormat.negative){formatToApply=internalFormat.negative;value=-value;}
else if(value===0&&internalFormat.zero){formatToApply=internalFormat.zero;}
if(formatToApply.type==="date"){return repeatCharToFitWidth(applyDateTimeFormat(value,formatToApply),formatWidth);}
const isNegative=value<0;const formatted=repeatCharToFitWidth(applyInternalNumberFormat(Math.abs(value),formatToApply,locale),formatWidth);return isNegative?"-"+formatted:formatted;case"object":return"";}}
function applyTextInternalFormat(value,internalFormat,formatWidth){let formattedValue="";for(const token of internalFormat.tokens){switch(token.type){case"TEXT_PLACEHOLDER":formattedValue+=value;break;case"CHAR":case"STRING":formattedValue+=token.value;break;case"REPEATED_CHAR":formattedValue+=REPEATED_CHAR_PLACEHOLDER+token.value;break;}}
return repeatCharToFitWidth(formattedValue,formatWidth);}
function repeatCharToFitWidth(formattedValue,formatWidth){const placeholderIndex=formattedValue.indexOf(REPEATED_CHAR_PLACEHOLDER);if(placeholderIndex===-1){return formattedValue;}
const prefix=formattedValue.slice(0,placeholderIndex);const suffix=formattedValue.slice(placeholderIndex+REPEATED_CHAR_PLACEHOLDER.length+1);const repeatedChar=formattedValue[placeholderIndex+REPEATED_CHAR_PLACEHOLDER.length];function getTimesToRepeat(){if(!formatWidth){return{timesToRepeat:0,padding:""};}
const widthTaken=formatWidth.measureText(prefix+suffix);const charWidth=formatWidth.measureText(repeatedChar);const availableWidth=formatWidth.availableWidth-widthTaken;if(availableWidth<=0){return{timesToRepeat:0,padding:""};}
const timesToRepeat=Math.floor(availableWidth/charWidth);const remainingWidth=availableWidth-timesToRepeat*charWidth;const paddingChar="\u2009";const paddingWidth=formatWidth.measureText(paddingChar);const padding=paddingChar.repeat(Math.floor(remainingWidth/paddingWidth));return{timesToRepeat,padding};}
const{timesToRepeat,padding}=getTimesToRepeat();return prefix+repeatedChar.repeat(timesToRepeat)+padding+suffix;}
function applyInternalNumberFormat(value,format,locale){if(value===Infinity){return"∞"+(format.percentSymbols?"%":"");}
const multiplier=format.percentSymbols*2-format.magnitude*3;value=value*10**multiplier;let maxDecimals=0;if(format.decimalPart!==undefined){maxDecimals=format.decimalPart.filter((token)=>token.type==="DIGIT").length;}
const{integerDigits,decimalDigits}=splitNumber(Math.abs(value),maxDecimals);let formattedValue=applyIntegerFormat(integerDigits,format,format.thousandsSeparator?locale.thousandsSeparator:undefined);if(format.decimalPart!==undefined){formattedValue+=locale.decimalSeparator+applyDecimalFormat(decimalDigits||"",format);}
return formattedValue;}
function applyIntegerFormat(integerDigits,internalFormat,thousandsSeparator){let tokens=internalFormat.integerPart;if(!tokens.some((token)=>token.type==="DIGIT")){tokens=[...tokens,{type:"DIGIT",value:"#"}];}
if(integerDigits==="0"){integerDigits="";}
let formattedInteger="";const firstDigitIndex=tokens.findIndex((token)=>token.type==="DIGIT");let indexInIntegerString=integerDigits.length-1;function appendDigitToFormattedValue(digit,digitType){if(digitType==="0"){digit=digit||"0";}
if(!digit)
return;const digitIndex=integerDigits.length-1-indexInIntegerString;if(thousandsSeparator&&digitIndex>0&&digitIndex%3===0){formattedInteger=digit+thousandsSeparator+formattedInteger;}
else{formattedInteger=digit+formattedInteger;}}
for(let i=tokens.length-1;i>=0;i--){const token=tokens[i];switch(token.type){case"DIGIT":let digit=integerDigits[indexInIntegerString];appendDigitToFormattedValue(digit,token.value);indexInIntegerString--;if(firstDigitIndex===i){while(indexInIntegerString>=0){appendDigitToFormattedValue(integerDigits[indexInIntegerString],"0");indexInIntegerString--;}}
break;case"THOUSANDS_SEPARATOR":break;case"REPEATED_CHAR":formattedInteger=REPEATED_CHAR_PLACEHOLDER+token.value+formattedInteger;break;default:formattedInteger=token.value+formattedInteger;break;}}
return formattedInteger;}
function applyDecimalFormat(decimalDigits,internalFormat){if(!internalFormat.decimalPart){return"";}
let formattedDecimals="";let indexInDecimalString=0;for(const token of internalFormat.decimalPart){switch(token.type){case"DIGIT":const digit=token.value==="#"?decimalDigits[indexInDecimalString]||"":decimalDigits[indexInDecimalString]||"0";formattedDecimals+=digit;indexInDecimalString++;break;case"THOUSANDS_SEPARATOR":break;case"REPEATED_CHAR":formattedDecimals+=REPEATED_CHAR_PLACEHOLDER+token.value;break;default:formattedDecimals+=token.value;break;}}
return formattedDecimals;}
const numberRepresentation=[];function splitNumber(value,maxDecimals=MAX_DECIMAL_PLACES){const asString=value.toString();if(asString.includes("e"))
return splitNumberIntl(value,maxDecimals);if(Number.isInteger(value)){return{integerDigits:asString,decimalDigits:undefined};}
const indexOfDot=asString.indexOf(".");let integerDigits=asString.substring(0,indexOfDot);let decimalDigits=asString.substring(indexOfDot+1);if(maxDecimals===0){if(Number(decimalDigits[0])>=5){integerDigits=(Number(integerDigits)+1).toString();}
return{integerDigits,decimalDigits:undefined};}
if(decimalDigits.length>maxDecimals){const{integerDigits:roundedIntegerDigits,decimalDigits:roundedDecimalDigits}=limitDecimalDigits(decimalDigits,maxDecimals);decimalDigits=roundedDecimalDigits;if(roundedIntegerDigits!=="0"){integerDigits=(Number(integerDigits)+Number(roundedIntegerDigits)).toString();}}
return{integerDigits,decimalDigits:removeTrailingZeroes(decimalDigits||"")};}
function removeTrailingZeroes(numberString){let i=numberString.length-1;while(i>=0&&numberString[i]==="0"){i--;}
return numberString.slice(0,i+1)||undefined;}
const leadingZeroesRegexp=/^0+/;function limitDecimalDigits(decimalDigits,maxDecimals){let integerDigits="0";let resultDecimalDigits=decimalDigits;let slicedDecimalDigits=decimalDigits.slice(0,maxDecimals);const i=maxDecimals;if(Number(decimalDigits[i])<5){return{integerDigits,decimalDigits:slicedDecimalDigits};}
const leadingZeroes=slicedDecimalDigits.match(leadingZeroesRegexp)?.[0]||"";const slicedRoundedUp=(Number(slicedDecimalDigits)+1).toString();const withoutLeadingZeroes=slicedDecimalDigits.slice(leadingZeroes.length);const carryOver=slicedRoundedUp.length>withoutLeadingZeroes.length;if(carryOver&&!leadingZeroes){integerDigits="1";resultDecimalDigits=undefined;}
else if(carryOver){resultDecimalDigits=leadingZeroes.slice(0,-1)+slicedRoundedUp;}
else{resultDecimalDigits=leadingZeroes+slicedRoundedUp;}
return{integerDigits,decimalDigits:resultDecimalDigits};}
function splitNumberIntl(value,maxDecimals=MAX_DECIMAL_PLACES){let formatter=numberRepresentation[maxDecimals];if(!formatter){formatter=new Intl.NumberFormat("en-US",{maximumFractionDigits:maxDecimals,useGrouping:false,});numberRepresentation[maxDecimals]=formatter;}
const[integerDigits,decimalDigits]=formatter.format(value).split(".");return{integerDigits,decimalDigits};}
function numberToString(number,decimalSeparator){const{integerDigits,decimalDigits}=splitNumber(number,20);return decimalDigits?integerDigits+decimalSeparator+decimalDigits:integerDigits;}
const isDateTimeFormat=memoize(function isDateTimeFormat(format){if(!format){return false;}
try{const internalFormat=parseFormat(format);return internalFormat.positive.type==="date";}
catch(error){return false;}});function applyDateTimeFormat(value,internalFormat){const jsDate=numberToJsDate(value);const isMeridian=internalFormat.tokens.some((token)=>token.type==="DATE_PART"&&token.value==="a");let currentValue="";for(const token of internalFormat.tokens){switch(token.type){case"DATE_PART":currentValue+=formatJSDatePart(jsDate,token.value,isMeridian);break;case"REPEATED_CHAR":currentValue+=REPEATED_CHAR_PLACEHOLDER+token.value;break;default:currentValue+=token.value;break;}}
return currentValue;}
function formatJSDatePart(jsDate,tokenValue,isMeridian){switch(tokenValue){case"d":return jsDate.getDate();case"dd":return jsDate.getDate().toString().padStart(2,"0");case"ddd":return DAYS$1[jsDate.getDay()].slice(0,3);case"dddd":return DAYS$1[jsDate.getDay()].toString();case"m":return jsDate.getMonth()+1;case"mm":return String(jsDate.getMonth()+1).padStart(2,"0");case"mmm":return MONTHS[jsDate.getMonth()].slice(0,3);case"mmmm":return MONTHS[jsDate.getMonth()].toString();case"mmmmm":return MONTHS[jsDate.getMonth()].slice(0,1);case"qq":return _t("Q%(quarter)s",{quarter:jsDate.getQuarter()}).toString();case"qqqq":return _t("Quarter %(quarter)s",{quarter:jsDate.getQuarter()}).toString();case"yy":const fullYear=String(jsDate.getFullYear()).replace("-","").padStart(2,"0");return fullYear.slice(fullYear.length-2);case"yyyy":return jsDate.getFullYear();case"hhhh":const elapsedHours=Math.floor((jsDate.getTime()-INITIAL_1900_DAY.getTime())/(60*60*1000));return elapsedHours.toString();case"hh":const dateHours=jsDate.getHours();let hours=dateHours;if(isMeridian){hours=hours===0?12:hours>12?hours-12:hours;}
return hours.toString().padStart(2,"0");case"MM":return jsDate.getMinutes().toString().padStart(2,"0");case"ss":return jsDate.getSeconds().toString().padStart(2,"0");case"a":return jsDate.getHours()>=12?"PM":"AM";default:throw new Error(`invalid date format token: ${tokenValue}`);}}
const getDecimalNumberRegex=memoize(function getDecimalNumberRegex(locale){return new RegExp(`[0-9]+${escapeRegExp(locale.decimalSeparator)}[0-9]`);});function createDefaultFormat(value){let{integerDigits,decimalDigits}=splitNumber(value);if(!decimalDigits)
return"0";const digitsInIntegerPart=integerDigits.replace("-","").length;if(digitsInIntegerPart+2>DEFAULT_FORMAT_NUMBER_OF_DIGITS){return"0";}
const spaceForDecimalsDigits=DEFAULT_FORMAT_NUMBER_OF_DIGITS-digitsInIntegerPart-1;({decimalDigits}=splitNumber(value,Math.min(spaceForDecimalsDigits,decimalDigits.length)));return decimalDigits?"0."+"0".repeat(decimalDigits.length):"0";}
function detectDateFormat(content,locale){if(!isDateTime(content,locale)){return undefined;}
const internalDate=parseDateTime(content,locale);return internalDate.format;}
function detectNumberFormat(content){const digitBase=content.includes(".")?"0.00":"0";const matchedCurrencies=content.match(/[\$€]/);if(matchedCurrencies){const matchedFirstDigit=content.match(/[\d]/);const currency="[$"+matchedCurrencies.values().next().value+"]";if(matchedFirstDigit.index<matchedCurrencies.index){return"#,##"+digitBase+currency;}
return currency+"#,##"+digitBase;}
if(content.includes("%")){return digitBase+"%";}
return undefined;}
function createCurrencyFormat(currency){const decimalPlaces=currency.decimalPlaces??2;const position=currency.position??"before";const code=currency.code??"";const symbol=currency.symbol??"";const decimalRepresentation=decimalPlaces?"."+"0".repeat(decimalPlaces):"";const numberFormat="#,##0"+decimalRepresentation;let textExpression=`${code} ${symbol}`.trim();if(position==="after"&&code){textExpression=" "+textExpression;}
return insertTextInFormat(textExpression,position,numberFormat);}
function createAccountingFormat(currency){const decimalPlaces=currency.decimalPlaces??2;const position=currency.position??"before";const code=currency.code??"";const symbol=currency.symbol??"";const decimalRepresentation=decimalPlaces?"."+"0".repeat(decimalPlaces):"";const numberFormat="#,##0"+decimalRepresentation;let textExpression=`${code} ${symbol}`.trim();if(position==="after"&&code){textExpression=" "+textExpression;}
const positivePart=insertTextInAccountingFormat(textExpression,position,` ${numberFormat} `);const negativePart=insertTextInAccountingFormat(textExpression,position,`(${numberFormat})`);const zeroPart=insertTextInAccountingFormat(textExpression,position,"  -  ");return[positivePart,negativePart,zeroPart].join(";");}
function insertTextInAccountingFormat(text,position,format){const textExpression=`[$${text}]`;return position==="before"?textExpression+"* "+format:format+"* "+textExpression;}
function insertTextInFormat(text,position,format){const textExpression=`[$${text}]`;return position==="before"?textExpression+format:format+textExpression;}
function roundFormat(format){const multiPartFormat=parseFormat(format);const roundedInternalFormat={positive:_roundFormat(multiPartFormat.positive),negative:multiPartFormat.negative?_roundFormat(multiPartFormat.negative):undefined,zero:multiPartFormat.zero?_roundFormat(multiPartFormat.zero):undefined,text:multiPartFormat.text,};return convertInternalFormatToFormat(roundedInternalFormat);}
function _roundFormat(internalFormat){if(internalFormat.type!=="number"||!internalFormat.decimalPart){return internalFormat;}
const nonDigitDecimalPart=internalFormat.decimalPart.filter((token)=>token.type!=="DIGIT");return{...internalFormat,decimalPart:undefined,integerPart:[...internalFormat.integerPart,...nonDigitDecimalPart],};}
function humanizeNumber({value,format},locale){const numberFormat=formatLargeNumber({value,format,},undefined,locale);return formatValue(value,{format:numberFormat,locale});}
function formatLargeNumber(arg,unit,locale){let value=0;try{value=Math.abs(toNumber(arg?.value,locale));}
catch(e){return"";}
const format=arg?.format;if(unit!==undefined){const postFix=unit?.value;switch(postFix){case"k":return createLargeNumberFormat(format,1,"k");case"m":return createLargeNumberFormat(format,2,"m");case"b":return createLargeNumberFormat(format,3,"b");default:throw new EvaluationError(_t("The formatting unit should be 'k', 'm' or 'b'."));}}
if(value<1e5){return createLargeNumberFormat(format,0,"");}
else if(value<1e8){return createLargeNumberFormat(format,1,"k");}
else if(value<1e11){return createLargeNumberFormat(format,2,"m");}
return createLargeNumberFormat(format,3,"b");}
function createLargeNumberFormat(format,magnitude,postFix,locale){const multiPartFormat=parseFormat(format||"#,##0");const roundedInternalFormat={positive:_createLargeNumberFormat(multiPartFormat.positive,magnitude,postFix),negative:multiPartFormat.negative?_createLargeNumberFormat(multiPartFormat.negative,magnitude,postFix):undefined,zero:multiPartFormat.zero?_createLargeNumberFormat(multiPartFormat.zero,magnitude,postFix):undefined,text:multiPartFormat.text,};return convertInternalFormatToFormat(roundedInternalFormat);}
function _createLargeNumberFormat(format,magnitude,postFix){if(format.type!=="number"){return format;}
const postFixToken={type:"STRING",value:postFix};let newIntegerPart=[...format.integerPart];const lastDigitIndex=newIntegerPart.findLastIndex((token)=>token.type==="DIGIT");if(lastDigitIndex===-1){throw new Error("Cannot create a large number format from a format with no digit.");}
while(newIntegerPart[lastDigitIndex+1]?.type==="THOUSANDS_SEPARATOR"){newIntegerPart=removeIndexesFromArray(newIntegerPart,[lastDigitIndex+1]);}
const tokenAfterDigits=newIntegerPart[lastDigitIndex+1];if(tokenAfterDigits?.type==="STRING"&&["m","k","b"].includes(tokenAfterDigits.value)){newIntegerPart=replaceItemAtIndex(newIntegerPart,postFixToken,lastDigitIndex+1);}
else{newIntegerPart=insertItemsAtIndex(newIntegerPart,[postFixToken],lastDigitIndex+1);}
if(magnitude>0){newIntegerPart=insertItemsAtIndex(newIntegerPart,Array(magnitude).fill({type:"THOUSANDS_SEPARATOR",value:","}),lastDigitIndex+1);}
const missingPercents=format.percentSymbols-newIntegerPart.filter((tk)=>tk.type==="PERCENT").length;newIntegerPart.push(...new Array(missingPercents).fill({type:"PERCENT",value:"%"}));return{...format,integerPart:newIntegerPart,decimalPart:undefined,magnitude};}
function changeDecimalPlaces(format,step){const multiPartFormat=parseFormat(format);const newInternalFormat={positive:_changeDecimalPlace(multiPartFormat.positive,step),negative:multiPartFormat.negative?_changeDecimalPlace(multiPartFormat.negative,step):undefined,zero:multiPartFormat.zero?_changeDecimalPlace(multiPartFormat.zero,step):undefined,text:multiPartFormat.text,};return convertInternalFormatToFormat(parseFormat(convertInternalFormatToFormat(newInternalFormat)));}
function _changeDecimalPlace(format,step){if(format.type!=="number"){return format;}
return(step>0?addDecimalPlaces(format,step):removeDecimalPlaces(format,Math.abs(step)));}
function removeDecimalPlaces(format,step){let decimalPart=format.decimalPart;if(!decimalPart){return format;}
const indexesToRemove=[];let digitCount=0;for(let i=decimalPart.length-1;i>=0;i--){if(digitCount>=Math.abs(step)){break;}
if(decimalPart[i].type==="DIGIT"){digitCount++;indexesToRemove.push(i);}}
decimalPart=removeIndexesFromArray(decimalPart,indexesToRemove);if(decimalPart.some((token)=>token.type==="DIGIT")){return{...format,decimalPart};}
return{...format,decimalPart:undefined,integerPart:[...format.integerPart,...decimalPart],};}
function addDecimalPlaces(format,step){let integerPart=format.integerPart;let decimalPart=format.decimalPart;if(!decimalPart){const lastDigitIndex=integerPart.findLastIndex((token)=>token.type==="DIGIT");decimalPart=integerPart.slice(lastDigitIndex+1);integerPart=integerPart.slice(0,lastDigitIndex+1);}
const digitsToAdd=range(0,step).map(()=>({type:"DIGIT",value:"0"}));const lastDigitIndex=decimalPart.findLastIndex((token)=>token.type==="DIGIT");if(lastDigitIndex===-1){decimalPart=[...digitsToAdd,...decimalPart];}
else{decimalPart=insertItemsAtIndex(decimalPart,digitsToAdd,lastDigitIndex+1);}
return{...format,decimalPart,integerPart};}
function isExcelCompatible(format){const internalFormat=parseFormat(format);for(const part of[internalFormat.positive,internalFormat.negative,internalFormat.zero]){if(part&&part.type==="date"&&part.tokens.some((token)=>token.type==="DATE_PART"&&token.value.includes("q"))){return false;}}
return true;}
function isTextFormat(format){if(!format)
return false;try{const internalFormat=parseFormat(format);return internalFormat.positive.type==="text";}
catch{return false;}}
class RangeImpl{getSheetSize;_zone;parts;invalidXc;prefixSheet=false;sheetId;invalidSheetName;constructor(args,getSheetSize){this.getSheetSize=getSheetSize;this._zone=args.zone;this.prefixSheet=args.prefixSheet;this.invalidXc=args.invalidXc;this.sheetId=args.sheetId;this.invalidSheetName=args.invalidSheetName;let _fixedParts=[...args.parts];if(args.parts.length===1&&getZoneArea(this.zone)>1){_fixedParts.push({...args.parts[0]});}
else if(args.parts.length===2&&getZoneArea(this.zone)===1){_fixedParts.pop();}
this.parts=_fixedParts;}
static fromRange(range,getters){if(range instanceof RangeImpl){return range;}
return new RangeImpl(range,getters.getSheetSize);}
get unboundedZone(){return this._zone;}
get zone(){const{left,top,bottom,right}=this._zone;if(right!==undefined&&bottom!==undefined){return this._zone;}
else if(bottom===undefined&&right!==undefined){return{right,top,left,bottom:this.getSheetSize(this.sheetId).numberOfRows-1};}
else if(right===undefined&&bottom!==undefined){return{bottom,left,top,right:this.getSheetSize(this.sheetId).numberOfCols-1};}
throw new Error(_t("Bad zone format"));}
static getRangeParts(xc,zone){const parts=xc.split(":").map((p)=>{const isFullRow=isRowReference(p);return{colFixed:isFullRow?false:p.startsWith("$"),rowFixed:isFullRow?p.startsWith("$"):p.includes("$",1),};});const isFullCol=zone.bottom===undefined;const isFullRow=zone.right===undefined;if(isFullCol){parts[0].rowFixed=parts[0].rowFixed||parts[1].rowFixed;parts[1].rowFixed=parts[0].rowFixed||parts[1].rowFixed;}
if(isFullRow){parts[0].colFixed=parts[0].colFixed||parts[1].colFixed;parts[1].colFixed=parts[0].colFixed||parts[1].colFixed;}
return parts;}
get isFullCol(){return this._zone.bottom===undefined;}
get isFullRow(){return this._zone.right===undefined;}
get rangeData(){return{_zone:this._zone,_sheetId:this.sheetId,};}
orderZone(){if(isZoneOrdered(this._zone)){return this;}
const zone={...this._zone};let parts=this.parts;if(zone.right!==undefined&&zone.right<zone.left){let right=zone.right;zone.right=zone.left;zone.left=right;parts=[{colFixed:parts[1]?.colFixed||false,rowFixed:parts[0]?.rowFixed||false,},{colFixed:parts[0]?.colFixed||false,rowFixed:parts[1]?.rowFixed||false,},];}
if(zone.bottom!==undefined&&zone.bottom<zone.top){let bottom=zone.bottom;zone.bottom=zone.top;zone.top=bottom;parts=[{colFixed:parts[0]?.colFixed||false,rowFixed:parts[1]?.rowFixed||false,},{colFixed:parts[1]?.colFixed||false,rowFixed:parts[0]?.rowFixed||false,},];}
return this.clone({zone,parts});}
clone(rangeParams){return new RangeImpl({zone:rangeParams?.zone?rangeParams.zone:{...this._zone},sheetId:rangeParams?.sheetId?rangeParams.sheetId:this.sheetId,invalidSheetName:rangeParams&&"invalidSheetName"in rangeParams?rangeParams.invalidSheetName:this.invalidSheetName,invalidXc:rangeParams&&"invalidXc"in rangeParams?rangeParams.invalidXc:this.invalidXc,parts:rangeParams?.parts?rangeParams.parts:this.parts.map((part)=>{return{rowFixed:part.rowFixed,colFixed:part.colFixed};}),prefixSheet:rangeParams?.prefixSheet!==undefined?rangeParams.prefixSheet:this.prefixSheet,},this.getSheetSize);}}
function copyRangeWithNewSheetId(sheetIdFrom,sheetIdTo,range){const sheetId=range.sheetId===sheetIdFrom?sheetIdTo:range.sheetId;return range.clone({sheetId});}
function createValidRange(getters,sheetId,xc){if(!xc)
return;const range=getters.getRangeFromSheetXC(sheetId,xc);return!(range.invalidSheetName||range.invalidXc)?range:undefined;}
function spreadRange(getters,dataSets){const postProcessedRanges=[];for(const dataSet of dataSets){const range=dataSet.dataRange;if(!getters.isRangeValid(range)){postProcessedRanges.push(dataSet);continue;}
const{sheetName}=splitReference(range);const sheetPrefix=sheetName?`${sheetName}!`:"";const zone=toUnboundedZone(range);if(zone.bottom!==zone.top&&zone.left!=zone.right){if(zone.right){for(let j=zone.left;j<=zone.right;++j){postProcessedRanges.push({...dataSet,dataRange:`${sheetPrefix}${zoneToXc({
                            left: j,
                            right: j,
                            top: zone.top,
                            bottom: zone.bottom,
                        })}`,});}}
else{for(let j=zone.top;j<=zone.bottom;++j){postProcessedRanges.push({...dataSet,dataRange:`${sheetPrefix}${zoneToXc({
                            left: zone.left,
                            right: zone.right,
                            top: j,
                            bottom: j,
                        })}`,});}}}
else{postProcessedRanges.push(dataSet);}}
return postProcessedRanges;}
function getCellPositionsInRanges(ranges){const cellPositions=[];for(const range of ranges){for(const position of positions(range.zone)){cellPositions.push({...position,sheetId:range.sheetId});}}
return cellPositions;}
function fuzzyMatch(pattern,str){pattern=pattern.toLocaleLowerCase();str=str.toLocaleLowerCase();let totalScore=0;let currentScore=0;let len=str.length;let patternIndex=0;for(let i=0;i<len;i++){if(str[i]===pattern[patternIndex]){patternIndex++;currentScore+=100+currentScore-i/200;}
else{currentScore=0;}
totalScore=totalScore+currentScore;}
return patternIndex===pattern.length?totalScore:0;}
function fuzzyLookup(pattern,list,fn){const results=[];list.forEach((data)=>{const score=fuzzyMatch(pattern,fn(data));if(score>0){results.push({score,elem:data});}});results.sort((a,b)=>b.score-a.score);return results.map((r)=>r.elem);}
function createDefaultRows(rowNumber){const rows=[];for(let i=0;i<rowNumber;i++){const row={cells:{},};rows.push(row);}
return rows;}
function moveHeaderIndexesOnHeaderAddition(indexHeaderAdded,numberAdded,headers){return headers.map((header)=>{if(header>=indexHeaderAdded){return header+numberAdded;}
return header;});}
function moveHeaderIndexesOnHeaderDeletion(deletedHeaders,headers){deletedHeaders=[...deletedHeaders].sort((a,b)=>b-a);return headers.map((header)=>{for(const deletedHeader of deletedHeaders){if(header>deletedHeader){header--;}
else if(header===deletedHeader){return undefined;}}
return header;}).filter(isDefined);}
function computeTextLinesHeight(textLineHeight,numberOfLines=1){return numberOfLines*(textLineHeight+MIN_CELL_TEXT_MARGIN)-MIN_CELL_TEXT_MARGIN;}
function getDefaultCellHeight(ctx,cell,colSize){if(!cell||(!cell.isFormula&&!cell.content)){return DEFAULT_CELL_HEIGHT;}
const maxWidth=cell.style?.wrapping==="wrap"?colSize-2*MIN_CELL_TEXT_MARGIN:undefined;const numberOfLines=cell.isFormula?1:splitTextToWidth(ctx,cell.content,cell.style,maxWidth).length;const fontSize=computeTextFontSizeInPixels(cell.style);return computeTextLinesHeight(fontSize,numberOfLines)+2*PADDING_AUTORESIZE_VERTICAL;}
function getDefaultContextFont(fontSize,bold=false,italic=false){const italicStr=italic?"italic":"";const weight=bold?"bold":"";return`${italicStr} ${weight} ${fontSize}px ${DEFAULT_FONT}`;}
const textWidthCache={};function computeTextWidth(context,text,style,fontUnit="pt"){const font=computeTextFont(style,fontUnit);context.save();context.font=font;const width=computeCachedTextWidth(context,text);context.restore();return width;}
function computeCachedTextWidth(context,text){const font=context.font;if(!textWidthCache[font]){textWidthCache[font]={};}
if(textWidthCache[font][text]===undefined){const textWidth=context.measureText(text).width;textWidthCache[font][text]=textWidth;}
return textWidthCache[font][text];}
const textDimensionsCache={};function computeTextDimension(context,text,style,fontUnit="pt"){const font=computeTextFont(style,fontUnit);context.save();context.font=font;const dimensions=computeCachedTextDimension(context,text);context.restore();return dimensions;}
function computeCachedTextDimension(context,text){const font=context.font;if(!textDimensionsCache[font]){textDimensionsCache[font]={};}
if(textDimensionsCache[font][text]===undefined){const measure=context.measureText(text);const width=measure.width;const height=measure.fontBoundingBoxAscent+measure.fontBoundingBoxDescent;textDimensionsCache[font][text]={width,height};}
return textDimensionsCache[font][text];}
function fontSizeInPixels(fontSize){return Math.round((fontSize*96)/72);}
function computeTextFont(style,fontUnit="pt"){const italic=style.italic?"italic ":"";const weight=style.bold?"bold":DEFAULT_FONT_WEIGHT;const size=fontUnit==="pt"?computeTextFontSizeInPixels(style):style.fontSize;return`${italic}${weight} ${size ?? DEFAULT_FONT_SIZE}px ${DEFAULT_FONT}`;}
function computeTextFontSizeInPixels(style){const sizeInPt=style?.fontSize||DEFAULT_FONT_SIZE;return fontSizeInPixels(sizeInPt);}
function splitWordToSpecificWidth(ctx,word,width,style){const wordWidth=computeTextWidth(ctx,word,style);if(wordWidth<=width){return[word];}
const splitWord=[];let wordPart="";for(let l of word){const wordPartWidth=computeTextWidth(ctx,wordPart+l,style);if(wordPartWidth>width){splitWord.push(wordPart);wordPart=l;}
else{wordPart+=l;}}
splitWord.push(wordPart);return splitWord;}
function splitTextToWidth(ctx,text,style,width){if(!style)
style={};const brokenText=[];const lines=text.includes(NEWLINE)?text.split(NEWLINE):[text];for(const line of lines){const words=line.includes(" ")?line.split(" "):[line];if(!width){brokenText.push(line);continue;}
let textLine="";let availableWidth=width;for(let word of words){const splitWord=splitWordToSpecificWidth(ctx,word,width,style);const lastPart=splitWord.pop();const lastPartWidth=computeTextWidth(ctx,lastPart,style);if(splitWord.length){if(textLine!==""){brokenText.push(textLine);textLine="";availableWidth=width;}
splitWord.forEach((wordPart)=>{brokenText.push(wordPart);});textLine=lastPart;availableWidth=width-lastPartWidth;}
else{const _word=textLine===""?lastPart:" "+lastPart;const wordWidth=computeTextWidth(ctx,_word,style);if(wordWidth<=availableWidth){textLine+=_word;availableWidth-=wordWidth;}
else{brokenText.push(textLine);textLine=lastPart;availableWidth=width-lastPartWidth;}}}
if(textLine!==""){brokenText.push(textLine);}}
return brokenText;}
function getFontSizeMatchingWidth(lineWidth,maxFontSize,getTextWidth,precision=0.25){let minFontSize=1;if(getTextWidth(minFontSize)>lineWidth)
return minFontSize;if(getTextWidth(maxFontSize)<lineWidth)
return maxFontSize;let fontSize=(minFontSize+maxFontSize)/2;let currentTextWidth=getTextWidth(fontSize);let iterations=0;while(Math.abs(currentTextWidth-lineWidth)>precision&&iterations<20){if(currentTextWidth>=lineWidth){maxFontSize=(minFontSize+maxFontSize)/2;}
else{minFontSize=(minFontSize+maxFontSize)/2;}
fontSize=(minFontSize+maxFontSize)/2;currentTextWidth=getTextWidth(fontSize);iterations++;}
return fontSize;}
function computeIconWidth(style){return computeTextFontSizeInPixels(style)+2*MIN_CF_ICON_MARGIN;}
function toLowerCase(str){return str?str.toLowerCase():"";}
const pxRegex=/([0-9\.]*)px/;function getContextFontSize(font){return Number(font.match(pxRegex)?.[1]);}
function clipTextWithEllipsis(ctx,text,maxWidth){let width=computeCachedTextWidth(ctx,text);if(width<=maxWidth){return text;}
const ellipsis="…";const ellipsisWidth=computeCachedTextWidth(ctx,ellipsis);if(width<=ellipsisWidth){return text;}
let len=text.length;while(width>=maxWidth-ellipsisWidth&&len-->0){text=text.substring(0,len);width=computeCachedTextWidth(ctx,text);}
return text+ellipsis;}
function drawDecoratedText(context,text,position,underline=false,strikethrough=false,strokeWidth=getContextFontSize(context.font)/10){context.fillText(text,position.x,position.y);if(!underline&&!strikethrough){return;}
const measure=context.measureText(text);const textWidth=measure.width;const textHeight=measure.actualBoundingBoxAscent+measure.actualBoundingBoxDescent;const boxHeight=measure.fontBoundingBoxAscent+measure.fontBoundingBoxDescent;let{x,y}=position;let strikeY=y,underlineY=y;switch(context.textAlign){case"center":x-=textWidth/2;break;case"right":x-=textWidth;break;}
switch(context.textBaseline){case"top":underlineY+=boxHeight-2*strokeWidth;strikeY+=boxHeight/2-strokeWidth;break;case"middle":underlineY+=boxHeight/2-strokeWidth;break;case"alphabetic":underlineY+=2*strokeWidth;strikeY-=3*strokeWidth;break;case"bottom":underlineY=y;strikeY-=textHeight/2-strokeWidth/2;break;}
if(underline){context.lineWidth=strokeWidth;context.strokeStyle=context.fillStyle;context.beginPath();context.moveTo(x,underlineY);context.lineTo(x+textWidth,underlineY);context.stroke();}
if(strikethrough){context.lineWidth=strokeWidth;context.strokeStyle=context.fillStyle;context.beginPath();context.moveTo(x,strikeY);context.lineTo(x+textWidth,strikeY);context.stroke();}}
class UuidGenerator{isFastIdStrategy=false;fastIdStart=0;setIsFastStrategy(isFast){this.isFastIdStrategy=isFast;}
uuidv4(){if(this.isFastIdStrategy){this.fastIdStart++;return String(this.fastIdStart);}
else if(window.crypto&&window.crypto.getRandomValues){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(c)=>(c^(crypto.getRandomValues(new Uint8Array(1))[0]&(15>>(c/4)))).toString(16));}
else{return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(Math.random()*16)|0,v=c==="x"?r:(r&0x3)|0x8;return v.toString(16);});}}}
function getClipboardDataPositions(sheetId,zones){const lefts=new Set(zones.map((z)=>z.left));const rights=new Set(zones.map((z)=>z.right));const tops=new Set(zones.map((z)=>z.top));const bottoms=new Set(zones.map((z)=>z.bottom));const areZonesCompatible=(tops.size===1&&bottoms.size===1)||(lefts.size===1&&rights.size===1);const clippedZones=areZonesCompatible?mergeOverlappingZones(zones):[zones[zones.length-1]];const cellsPosition=clippedZones.map((zone)=>positions(zone)).flat();const columnsIndexes=[...new Set(cellsPosition.map((p)=>p.col))].sort((a,b)=>a-b);const rowsIndexes=[...new Set(cellsPosition.map((p)=>p.row))].sort((a,b)=>a-b);return{sheetId,zones,clippedZones,columnsIndexes,rowsIndexes};}
function splitZoneForPaste(selection,splitWidth,splitHeight){const right=Math.max(selection.right-splitWidth+1,selection.left);const bottom=Math.max(selection.bottom-splitHeight+1,selection.top);const zones=[];for(let left=selection.left;left<=right;left+=splitWidth){for(let top=selection.top;top<=bottom;top+=splitHeight){zones.push({left,top,bottom:top+splitHeight-1,right:left+splitWidth-1,});}}
return zones;}
function getPasteZones(target,content){if(!content.length||!content[0].length){return target;}
const width=content[0].length,height=content.length;return target.map((t)=>splitZoneForPaste(t,width,height)).flat();}
class ClipboardHandler{getters;dispatch;constructor(getters,dispatch){this.getters=getters;this.dispatch=dispatch;}
copy(data){return;}
paste(target,clippedContent,options){}
isPasteAllowed(sheetId,target,content,option){return"Success";}
isCutAllowed(data){return"Success";}
getPasteTarget(sheetId,target,content,options){return{zones:[],sheetId};}
convertOSClipboardData(data){return;}}
class AbstractCellClipboardHandler extends ClipboardHandler{copy(data){return;}
pasteFromCopy(sheetId,target,content,options){if(target.length===1){for(const zone of getPasteZones(target,content)){this.pasteZone(sheetId,zone.left,zone.top,content,options);}}
else{for(const zone of recomputeZones(target)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){this.pasteZone(sheetId,col,row,content,options);}}}}}
pasteZone(sheetId,col,row,data,clipboardOptions){}}
class BorderClipboardHandler extends AbstractCellClipboardHandler{copy(data){const sheetId=data.sheetId;if(data.zones.length===0){return;}
const{rowsIndexes,columnsIndexes}=data;const borders=[];for(const row of rowsIndexes){const bordersInRow=[];for(const col of columnsIndexes){const position={col,row,sheetId};bordersInRow.push(this.getters.getCellBorder(position));}
borders.push(bordersInRow);}
return{borders};}
paste(target,content,options){const sheetId=target.sheetId;if(options.pasteOption==="asValue"){return;}
const zones=target.zones;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,content.borders);}
else{const{left,top}=zones[0];this.pasteZone(sheetId,left,top,content.borders);}}
pasteZone(sheetId,col,row,borders){for(const[r,rowBorders]of borders.entries()){for(const[c,originBorders]of rowBorders.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteBorder(originBorders,position);}}}
pasteBorder(originBorders,target){const targetBorders=this.getters.getCellBorder(target);const border={...targetBorders,...originBorders,};this.dispatch("SET_BORDER",{...target,border});}}
const POSTFIX_UNARY_OPERATORS=["%"];const OPERATORS="+,-,*,/,:,=,<>,>=,>,<=,<,^,&".split(",").concat(POSTFIX_UNARY_OPERATORS);function tokenize(str,locale=DEFAULT_LOCALE){str=replaceSpecialSpaces(str);const chars=new TokenizingChars(str);const result=[];while(!chars.isOver()){let token=tokenizeSpace(chars)||tokenizeArgsSeparator(chars,locale)||tokenizeParenthesis(chars)||tokenizeOperator(chars)||tokenizeString(chars)||tokenizeDebugger(chars)||tokenizeInvalidRange(chars)||tokenizeNumber(chars,locale)||tokenizeSymbol(chars);if(!token){token={type:"UNKNOWN",value:chars.shift()};}
result.push(token);}
return result;}
function tokenizeDebugger(chars){if(chars.current==="?"){chars.shift();return{type:"DEBUGGER",value:"?"};}
return null;}
const parenthesis={"(":{type:"LEFT_PAREN",value:"("},")":{type:"RIGHT_PAREN",value:")"},};function tokenizeParenthesis(chars){if(chars.current==="("||chars.current===")"){const value=chars.shift();return parenthesis[value];}
return null;}
function tokenizeArgsSeparator(chars,locale){if(chars.current===locale.formulaArgSeparator){const value=chars.shift();const type="ARG_SEPARATOR";return{type,value};}
return null;}
function tokenizeOperator(chars){for(let op of OPERATORS){if(chars.currentStartsWith(op)){chars.advanceBy(op.length);return{type:"OPERATOR",value:op};}}
return null;}
const FIRST_POSSIBLE_NUMBER_CHARS=new Set("0123456789");function tokenizeNumber(chars,locale){if(!FIRST_POSSIBLE_NUMBER_CHARS.has(chars.current)&&chars.current!==locale.decimalSeparator){return null;}
const match=chars.remaining().match(getFormulaNumberRegex(locale.decimalSeparator));if(match){chars.advanceBy(match[0].length);return{type:"NUMBER",value:match[0]};}
return null;}
function tokenizeString(chars){if(chars.current==='"'){const startChar=chars.shift();let letters=startChar;while(chars.current&&(chars.current!==startChar||letters[letters.length-1]==="\\")){letters+=chars.shift();}
if(chars.current==='"'){letters+=chars.shift();}
return{type:"STRING",value:letters,};}
return null;}
const SYMBOL_CHARS=new Set("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_.!$");function tokenizeSymbol(chars){let result="";if(chars.current==="'"){let lastChar=chars.shift();result+=lastChar;while(chars.current){lastChar=chars.shift();result+=lastChar;if(lastChar==="'"){if(chars.current&&chars.current==="'"){lastChar=chars.shift();result+=lastChar;}
else{break;}}}
if(lastChar!=="'"){return{type:"UNKNOWN",value:result,};}}
while(chars.current&&SYMBOL_CHARS.has(chars.current)){result+=chars.shift();}
if(result.length){const value=result;const isReference=rangeReference.test(value);if(isReference){return{type:"REFERENCE",value};}
return{type:"SYMBOL",value};}
return null;}
function tokenizeSpace(chars){let length=0;while(chars.current===NEWLINE){length++;chars.shift();}
if(length){return{type:"SPACE",value:NEWLINE.repeat(length)};}
while(chars.current===" "){length++;chars.shift();}
if(length){return{type:"SPACE",value:" ".repeat(length)};}
return null;}
function tokenizeInvalidRange(chars){if(chars.currentStartsWith(CellErrorType.InvalidReference)){chars.advanceBy(CellErrorType.InvalidReference.length);return{type:"INVALID_REFERENCE",value:CellErrorType.InvalidReference};}
return null;}
function isValidLocale(locale){if(!locale||typeof locale!=="object"||!(!locale.thousandsSeparator||typeof locale.thousandsSeparator==="string")){return false;}
for(const property of["code","name","decimalSeparator","dateFormat","timeFormat","formulaArgSeparator",]){if(!locale[property]||typeof locale[property]!=="string"){return false;}}
if(locale.formulaArgSeparator===locale.decimalSeparator){return false;}
if(locale.thousandsSeparator===locale.decimalSeparator){return false;}
try{formatValue(1,{locale,format:"#,##0.00"});formatValue(1,{locale,format:locale.dateFormat});formatValue(1,{locale,format:locale.timeFormat});}
catch{return false;}
return true;}
function canonicalizeNumberContent(content,locale){return content.startsWith("=")?canonicalizeFormula$1(content,locale):canonicalizeNumberLiteral(content,locale);}
function canonicalizeContent(content,locale){return content.startsWith("=")?canonicalizeFormula$1(content,locale):canonicalizeLiteral(content,locale);}
function localizeContent(content,locale){return content.startsWith("=")?localizeFormula(content,locale):localizeLiteral(content,locale);}
function canonicalizeFormula$1(formula,locale){return _localizeFormula$1(formula,locale,DEFAULT_LOCALE);}
function localizeFormula(formula,locale){return _localizeFormula$1(formula,DEFAULT_LOCALE,locale);}
function _localizeFormula$1(formula,fromLocale,toLocale){if(fromLocale.formulaArgSeparator===toLocale.formulaArgSeparator&&fromLocale.decimalSeparator===toLocale.decimalSeparator){return formula;}
const tokens=tokenize(formula,fromLocale);let localizedFormula="";for(const token of tokens){if(token.type==="NUMBER"){localizedFormula+=token.value.replace(fromLocale.decimalSeparator,toLocale.decimalSeparator);}
else if(token.type==="ARG_SEPARATOR"){localizedFormula+=toLocale.formulaArgSeparator;}
else{localizedFormula+=token.value;}}
return localizedFormula;}
function canonicalizeNumberLiteral(content,locale){if(locale.decimalSeparator==="."||!isNumber(content,locale)){return content;}
if(locale.thousandsSeparator){content=content.replaceAll(locale.thousandsSeparator,"");}
return content.replace(locale.decimalSeparator,".");}
function canonicalizeLiteral(content,locale){if(isDateTime(content,locale)){const dateNumber=toNumber(content,locale);let format=DEFAULT_LOCALE.dateFormat;if(!Number.isInteger(dateNumber)){format+=" "+DEFAULT_LOCALE.timeFormat;}
return formatValue(dateNumber,{locale:DEFAULT_LOCALE,format});}
return canonicalizeNumberLiteral(content,locale);}
function localizeNumberLiteral(literal,locale){if(locale.decimalSeparator==="."||!isNumber(literal,DEFAULT_LOCALE)){return literal;}
const decimalNumberRegex=getDecimalNumberRegex(DEFAULT_LOCALE);const localized=literal.replace(decimalNumberRegex,(match)=>{return match.replace(".",locale.decimalSeparator);});return localized;}
function localizeLiteral(literal,locale){if(isDateTime(literal,DEFAULT_LOCALE)){const dateNumber=toNumber(literal,DEFAULT_LOCALE);let format=locale.dateFormat;if(!Number.isInteger(dateNumber)){format+=" "+locale.timeFormat;}
return formatValue(dateNumber,{locale,format});}
return localizeNumberLiteral(literal,locale);}
function canonicalizeCFRule(cf,locale){return changeCFRuleLocale(cf,(content)=>canonicalizeContent(content,locale));}
function localizeCFRule(cf,locale){return changeCFRuleLocale(cf,(content)=>localizeContent(content,locale));}
function localizeDataValidationRule(rule,locale){const localizedDVRule=deepCopy(rule);localizedDVRule.criterion.values=localizedDVRule.criterion.values.map((content)=>localizeContent(content,locale));return localizedDVRule;}
function changeCFRuleLocale(rule,changeContentLocale){rule=deepCopy(rule);switch(rule.type){case"CellIsRule":switch(rule.operator){case"Between":case"NotBetween":case"Equal":case"NotEqual":case"GreaterThan":case"GreaterThanOrEqual":case"LessThan":case"LessThanOrEqual":rule.values=rule.values.map((v)=>changeContentLocale(v));return rule;case"BeginsWith":case"ContainsText":case"EndsWith":case"NotContains":case"IsEmpty":case"IsNotEmpty":return rule;}
case"DataBarRule":return rule;case"ColorScaleRule":rule.minimum=changeCFRuleThresholdLocale(rule.minimum,changeContentLocale);rule.maximum=changeCFRuleThresholdLocale(rule.maximum,changeContentLocale);if(rule.midpoint){rule.midpoint=changeCFRuleThresholdLocale(rule.midpoint,changeContentLocale);}
return rule;case"IconSetRule":rule.lowerInflectionPoint.value=changeContentLocale(rule.lowerInflectionPoint.value);rule.upperInflectionPoint.value=changeContentLocale(rule.upperInflectionPoint.value);return rule;}}
function changeCFRuleThresholdLocale(threshold,changeContentLocale){if(!threshold?.value){return threshold;}
const value=threshold.type==="formula"?"="+threshold.value:threshold.value;const modified=changeContentLocale(value);const newValue=threshold.type==="formula"?modified.slice(1):modified;return{...threshold,value:newValue};}
function getDateTimeFormat(locale){return locale.dateFormat+" "+locale.timeFormat;}
function canonicalizeNumberValue(content,locale){return content.startsWith("=")?canonicalizeFormula(content,locale):canonicalizeNumberLiteral(content,locale);}
function canonicalizeFormula(formula,locale){return _localizeFormula(formula,locale,DEFAULT_LOCALE);}
function _localizeFormula(formula,fromLocale,toLocale){if(fromLocale.formulaArgSeparator===toLocale.formulaArgSeparator&&fromLocale.decimalSeparator===toLocale.decimalSeparator){return formula;}
const tokens=tokenize(formula,fromLocale);let localizedFormula="";for(const token of tokens){if(token.type==="NUMBER"){localizedFormula+=token.value.replace(fromLocale.decimalSeparator,toLocale.decimalSeparator);}
else if(token.type==="ARG_SEPARATOR"){localizedFormula+=toLocale.formulaArgSeparator;}
else{localizedFormula+=token.value;}}
return localizedFormula;}
function boolAnd(args){let foundBoolean=false;let acc=true;conditionalVisitBoolean(args,(arg)=>{foundBoolean=true;acc=acc&&arg;return acc;});return{foundBoolean,result:acc,};}
function boolOr(args){let foundBoolean=false;let acc=false;conditionalVisitBoolean(args,(arg)=>{foundBoolean=true;acc=acc||arg;return!acc;});return{foundBoolean,result:acc,};}
function sum(values,locale){return reduceNumbers(values,(acc,a)=>acc+a,0,locale);}
function countUnique(args){return reduceAny(args,(acc,a)=>(isDataNonEmpty(a)?acc.add(a?.value):acc),new Set()).size;}
function getUnitMatrix(n){const matrix=Array(n);for(let i=0;i<n;i++){matrix[i]=Array(n).fill(0);matrix[i][i]=1;}
return matrix;}
function invertMatrix(M){if(M.length!==M[0].length){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] invert matrix error, only square matrices are invertible"));}
let determinant=1;const dim=M.length;const I=getUnitMatrix(dim);const C=M.map((row)=>row.slice());for(let pivot=0;pivot<dim;pivot++){let diagonalElement=C[pivot][pivot];if(diagonalElement===0){for(let row=pivot+1;row<dim;row++){if(C[pivot][row]!=0){swapMatrixRows(C,pivot,row);swapMatrixRows(I,pivot,row);determinant*=-1;break;}}
diagonalElement=C[pivot][pivot];if(diagonalElement===0){return{determinant:0};}}
for(let col=0;col<dim;col++){C[col][pivot]=C[col][pivot]/diagonalElement;I[col][pivot]=I[col][pivot]/diagonalElement;}
determinant*=diagonalElement;for(let row=0;row<dim;row++){if(row===pivot){continue;}
const e=C[pivot][row];for(let col=0;col<dim;col++){C[col][row]-=e*C[col][pivot];I[col][row]-=e*I[col][pivot];}}}
return{inverted:I,determinant};}
function swapMatrixRows(matrix,row1,row2){for(let i=0;i<matrix.length;i++){const tmp=matrix[i][row1];matrix[i][row1]=matrix[i][row2];matrix[i][row2]=tmp;}}
function multiplyMatrices(matrix1,matrix2){if(matrix1.length!==matrix2[0].length){throw new EvaluationError(_t("Cannot multiply matrices : incompatible matrices size."));}
const rowsM1=matrix1[0].length;const colsM2=matrix2.length;const n=matrix1.length;const result=Array(colsM2);for(let col=0;col<colsM2;col++){result[col]=Array(rowsM1);for(let row=0;row<rowsM1;row++){let sum=0;for(let k=0;k<n;k++){sum+=matrix1[k][row]*matrix2[col][k];}
result[col][row]=sum;}}
return result;}
function toScalar(matrix){if(!isMatrix(matrix)){return matrix;}
if(matrix.length!==1||matrix[0].length!==1){throw new EvaluationError(_t("The value should be a scalar or a 1x1 matrix"));}
return matrix[0][0];}
function assertSameNumberOfElements(...args){const dims=args[0].length;args.forEach((arg,i)=>assert(()=>arg.length===dims,_t("[[FUNCTION_NAME]] has mismatched dimensions for argument %s (%s vs %s).",i.toString(),dims.toString(),arg.length.toString())));}
function average(values,locale){let count=0;const sum=reduceNumbers(values,(acc,a)=>{count+=1;return acc+a;},0,locale);assertNotZero(count);return sum/count;}
function countNumbers(values,locale){let count=0;for(let n of values){if(isMatrix(n)){for(let i of n){for(let j of i){if(typeof j.value==="number"){count+=1;}}}}
else{const value=n?.value;if(!isEvaluationError(value)&&(typeof value!=="string"||isNumber(value,locale)||parseDateTime(value,locale))){count+=1;}}}
return count;}
function countAny(values){return reduceAny(values,(acc,a)=>(a!==undefined&&a.value!==null?acc+1:acc),0);}
function max(values,locale){let max={value:-Infinity};visitNumbers(values,(a)=>{if(a.value>=max.value){max=a;}},locale);return max.value===-Infinity?{value:0}:max;}
function min(values,locale){let min={value:Infinity};visitNumbers(values,(a)=>{if(a.value<=min.value){min=a;}},locale);return min.value===Infinity?{value:0}:min;}
function prepareDataForRegression(X,Y,newX){const _X=X[0].length?X:[range(1,Y.flat().length+1)];const nVar=_X.length;let _newX=newX[0].length?newX:_X;_newX=_newX.length===nVar?transposeMatrix(_newX):_newX;return{_X,_newX};}
function fullLinearRegression(X,Y,computeIntercept=true,verbose=false){const y=Y.flat();const n=y.length;let{_X}=prepareDataForRegression(X,Y,[[]]);_X=_X.length===n?transposeMatrix(_X):_X.slice();assertSameNumberOfElements(_X[0],y);const nVar=_X.length;const nDeg=n-nVar-(computeIntercept?1:0);const yMatrix=[y];const xMatrix=transposeMatrix(_X.reverse());let avgX=[];for(let i=0;i<nVar;i++){avgX.push(0);if(computeIntercept){for(const xij of _X[i]){avgX[i]+=xij;}
avgX[i]/=n;}}
let avgY=0;if(computeIntercept){for(const yi of y){avgY+=yi;}
avgY/=n;}
const redX=xMatrix.map((row)=>row.map((value,i)=>value-avgX[i]));if(computeIntercept){xMatrix.forEach((row)=>row.push(1));}
const coeffs=getLMSCoefficients(xMatrix,yMatrix);if(!computeIntercept){coeffs.push([0]);}
if(!verbose){return coeffs;}
const dot1=multiplyMatrices(redX,transposeMatrix(redX));const{inverted:dotInv}=invertMatrix(dot1);if(dotInv===undefined){throw new EvaluationError(_t("Matrix is not invertible"));}
let SSE=0,SSR=0;for(let i=0;i<n;i++){const yi=y[i]-avgY;let temp=0;for(let j=0;j<nVar;j++){const xi=redX[i][j];temp+=xi*coeffs[j][0];}
const ei=yi-temp;SSE+=ei*ei;SSR+=temp*temp;}
const RMSE=Math.sqrt(SSE/nDeg);const r2=SSR/(SSR+SSE);const f_stat=SSR/nVar/(SSE/nDeg);const deltaCoeffs=[];for(let i=0;i<nVar;i++){deltaCoeffs.push(RMSE*Math.sqrt(dotInv[i][i]));}
if(computeIntercept){const dot2=multiplyMatrices(dotInv,[avgX]);const dot3=multiplyMatrices(transposeMatrix([avgX]),dot2);deltaCoeffs.push(RMSE*Math.sqrt(dot3[0][0]+1/y.length));}
const returned=[[coeffs[0][0],deltaCoeffs[0],r2,f_stat,SSR],[coeffs[1][0],deltaCoeffs[1],RMSE,nDeg,SSE],];for(let i=2;i<nVar;i++){returned.push([coeffs[i][0],deltaCoeffs[i],"","",""]);}
if(computeIntercept){returned.push([coeffs[nVar][0],deltaCoeffs[nVar],"","",""]);}
else{returned.push([0,"","","",""]);}
return returned;}
function polynomialRegression(flatY,flatX,order,intercept){assertSameNumberOfElements(flatX,flatY);assert(()=>order>=1,_t("Function [[FUNCTION_NAME]] A regression of order less than 1 cannot be possible."));const yMatrix=[flatY];const xMatrix=flatX.map((x)=>range(0,order).map((i)=>Math.pow(x,order-i)));if(intercept){xMatrix.forEach((row)=>row.push(1));}
const coeffs=getLMSCoefficients(xMatrix,yMatrix);if(!intercept){coeffs.push([0]);}
return coeffs;}
function getLMSCoefficients(xMatrix,yMatrix){const xMatrixT=transposeMatrix(xMatrix);const dot1=multiplyMatrices(xMatrix,xMatrixT);const{inverted:dotInv}=invertMatrix(dot1);if(dotInv===undefined){throw new EvaluationError(_t("Matrix is not invertible"));}
const dot2=multiplyMatrices(xMatrix,yMatrix);return transposeMatrix(multiplyMatrices(dotInv,dot2));}
function evaluatePolynomial(coeffs,x,order){return coeffs.reduce((acc,coeff,i)=>acc+coeff*Math.pow(x,order-i),0);}
function expM(M){return M.map((col)=>col.map((cell)=>Math.exp(cell)));}
function logM(M){return M.map((col)=>col.map((cell)=>Math.log(cell)));}
function predictLinearValues(Y,X,newX,computeIntercept){const{_X,_newX}=prepareDataForRegression(X,Y,newX);const coeffs=fullLinearRegression(_X,Y,computeIntercept,false);const nVar=coeffs.length-1;const newY=_newX.map((col)=>{let value=0;for(let i=0;i<nVar;i++){value+=coeffs[i][0]*col[nVar-i-1];}
value+=coeffs[nVar][0];return[value];});return newY.length===newX.length?newY:transposeMatrix(newY);}
const PREVIOUS_VALUE="(previous)";const NEXT_VALUE="(next)";function getDomainOfParentRow(pivot,domain){const{colDomain,rowDomain}=domainToColRowDomain(pivot,domain);return[...colDomain,...rowDomain.slice(0,rowDomain.length-1)];}
function getDomainOfParentCol(pivot,domain){const{colDomain,rowDomain}=domainToColRowDomain(pivot,domain);return[...colDomain.slice(0,colDomain.length-1),...rowDomain];}
function domainToColRowDomain(pivot,domain){const rowFields=pivot.definition.rows.map((c)=>c.nameWithGranularity);const rowDomain=domain.filter((node)=>rowFields.includes(node.field));const columnFields=pivot.definition.columns.map((c)=>c.nameWithGranularity);const colDomain=domain.filter((node)=>columnFields.includes(node.field));return{colDomain,rowDomain};}
function getDimensionDomain(pivot,dimension,domain){return dimension==="column"?domainToColRowDomain(pivot,domain).colDomain:domainToColRowDomain(pivot,domain).rowDomain;}
function getFieldValueInDomain(fieldNameWithGranularity,domain){const node=domain.find((n)=>n.field===fieldNameWithGranularity);return node?.value;}
function isDomainIsInPivot(pivot,domain){const{rowDomain,colDomain}=domainToColRowDomain(pivot,domain);return(checkIfDomainInInTree(rowDomain,pivot.getTableStructure().getRowTree())&&checkIfDomainInInTree(colDomain,pivot.getTableStructure().getColTree()));}
function checkIfDomainInInTree(domain,tree){return walkDomainTree(domain,tree)!==undefined;}
function walkDomainTree(domain,tree,stopAtField){let currentTreeNode=tree;for(const node of domain){const child=currentTreeNode.find((n)=>n.value===node.value);if(!child){return undefined;}
if(child.field===stopAtField){return currentTreeNode;}
currentTreeNode=child.children;}
return currentTreeNode;}
function getFieldParentDomain(pivot,parentFieldName,domain){let{rowDomain,colDomain}=domainToColRowDomain(pivot,domain);const dimension=getFieldDimensionType(pivot,parentFieldName);if(dimension==="row"){const index=rowDomain.findIndex((node)=>node.field===parentFieldName);if(index===-1){return domain;}
rowDomain=rowDomain.slice(0,index+1);}
else{const index=colDomain.findIndex((node)=>node.field===parentFieldName);if(index===-1){return domain;}
colDomain=colDomain.slice(0,index+1);}
return[...rowDomain,...colDomain];}
function replaceFieldValueInDomain(domain,fieldNameWithGranularity,value){domain=deepCopy(domain);const node=domain.find((n)=>n.field===fieldNameWithGranularity);if(!node){return domain;}
node.value=value;return domain;}
function isFieldInDomain(nameWithGranularity,domain){return domain.some((node)=>node.field===nameWithGranularity);}
function getFieldDimensionType(pivot,nameWithGranularity){const rowFields=pivot.definition.rows.map((c)=>c.nameWithGranularity);if(rowFields.includes(nameWithGranularity)){return"row";}
const columnFields=pivot.definition.columns.map((c)=>c.nameWithGranularity);if(columnFields.includes(nameWithGranularity)){return"column";}
throw new Error(`Field ${nameWithGranularity} not found in pivot`);}
function getPreviousOrNextValueDomain(pivot,domain,fieldNameWithGranularity,direction){const dimension=getFieldDimensionType(pivot,fieldNameWithGranularity);const tree=dimension==="row"?pivot.getTableStructure().getRowTree():pivot.getTableStructure().getColTree();const dimDomain=getDimensionDomain(pivot,dimension,domain);const currentTreeNode=walkDomainTree(dimDomain,tree,fieldNameWithGranularity);const values=currentTreeNode?.map((n)=>n.value)??[];const value=getFieldValueInDomain(fieldNameWithGranularity,domain);if(value===undefined){return undefined;}
const valueIndex=values.indexOf(value);if(value===undefined||valueIndex===-1){return undefined;}
const offset=direction===PREVIOUS_VALUE?-1:1;const newIndex=clip(valueIndex+offset,0,values.length-1);return replaceFieldValueInDomain(domain,fieldNameWithGranularity,values[newIndex]);}
function domainToString(domain){return domain?domain.map(domainNodeToString).join(", "):"";}
function domainNodeToString(domainNode){return domainNode?`${domainNode.field}=${domainNode.value}`:"";}
function getRankingDomainKey(domain,fieldNameWithGranularity){const index=domain.findIndex((node)=>node.field===fieldNameWithGranularity);if(index===-1){return"";}
const parent=domain.slice(0,index);const lastNode=domain.at(-1);return domainToString(lastNode.field===fieldNameWithGranularity?parent:[...parent,lastNode]);}
function getRunningTotalDomainKey(domain,fieldNameWithGranularity){const index=domain.findIndex((node)=>node.field===fieldNameWithGranularity);if(index===-1){return"";}
return domainToString([...domain.slice(0,index),...domain.slice(index+1)]);}
const pivotTimeAdapterRegistry=new Registry();function pivotTimeAdapter(granularity){return pivotTimeAdapterRegistry.get(granularity);}
const dayAdapter={normalizeFunctionValue(value){return toNumber(value,DEFAULT_LOCALE);},toValueAndFormat(normalizedValue,locale){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"dd mmm yyyy",};},toFunctionValue(normalizedValue){const date=toNumber(normalizedValue,DEFAULT_LOCALE);return`"${formatValue(date, { locale: DEFAULT_LOCALE, format: "mm/dd/yyyy" })}"`;},};const dayOfMonthAdapter={normalizeFunctionValue(value){const day=toNumber(value,DEFAULT_LOCALE);if(day<1||day>31){throw new EvaluationError(_t("%s is not a valid day of month (it should be a number between 1 and 31)",day));}
return day;},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"0",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const dayOfWeekAdapter={normalizeFunctionValue(value){const day=toNumber(value,DEFAULT_LOCALE);if(day<1||day>7){throw new EvaluationError(_t("%s is not a valid day of week (it should be a number between 1 and 7)",day));}
return day;},toValueAndFormat(normalizedValue,locale){const index=(normalizedValue-1+(locale||DEFAULT_LOCALE).weekStart)%7;return{value:DAYS$1[index].toString(),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const isoWeekNumberAdapter={normalizeFunctionValue(value){const isoWeek=toNumber(value,DEFAULT_LOCALE);if(isoWeek<0||isoWeek>53){throw new EvaluationError(_t("%s is not a valid week (it should be a number between 0 and 53)",isoWeek));}
return isoWeek;},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"0",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const monthNumberAdapter={normalizeFunctionValue(value){const month=toNumber(value,DEFAULT_LOCALE);if(month<1||month>12){throw new EvaluationError(_t("%s is not a valid month (it should be a number between 1 and 12)",month));}
return month;},toValueAndFormat(normalizedValue){return{value:MONTHS[toNumber(normalizedValue,DEFAULT_LOCALE)-1].toString(),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const quarterNumberAdapter={normalizeFunctionValue(value){const quarter=toNumber(value,DEFAULT_LOCALE);if(quarter<1||quarter>4){throw new EvaluationError(_t("%s is not a valid quarter (it should be a number between 1 and 4)",quarter));}
return quarter;},toValueAndFormat(normalizedValue){return{value:_t("Q%(quarter_number)s",{quarter_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const yearAdapter={normalizeFunctionValue(value){return toNumber(value,DEFAULT_LOCALE);},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"0",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const hourNumberAdapter={normalizeFunctionValue(value){const hour=toNumber(value,DEFAULT_LOCALE);if(hour<0||hour>23){throw new EvaluationError(_t("%s is not a valid hour (it should be a number between 0 and 23)",hour));}
return hour;},toValueAndFormat(normalizedValue){return{value:_t("%(hour_number)sh",{hour_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const minuteNumberAdapter={normalizeFunctionValue(value){const minute=toNumber(value,DEFAULT_LOCALE);if(minute<0||minute>59){throw new EvaluationError(_t("%s is not a valid minute (it should be a number between 0 and 59)",minute));}
return minute;},toValueAndFormat(normalizedValue){return{value:_t("%(minute_number)s'",{minute_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const secondNumberAdapter={normalizeFunctionValue(value){const second=toNumber(value,DEFAULT_LOCALE);if(second<0||second>59){throw new EvaluationError(_t("%s is not a valid second (it should be a number between 0 and 59)",second));}
return second;},toValueAndFormat(normalizedValue){return{value:_t("%(second_number)s''",{second_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};function nullHandlerDecorator(adapter){return{normalizeFunctionValue(value){if(value===null){return null;}
return adapter.normalizeFunctionValue(value);},toValueAndFormat(normalizedValue,locale){if(normalizedValue===null){return{value:_t("(Undefined)")};}
return adapter.toValueAndFormat(normalizedValue,locale);},toFunctionValue(normalizedValue){if(normalizedValue===null){return"false";}
return adapter.toFunctionValue(normalizedValue);},};}
pivotTimeAdapterRegistry.add("day",nullHandlerDecorator(dayAdapter)).add("year",nullHandlerDecorator(yearAdapter)).add("day_of_month",nullHandlerDecorator(dayOfMonthAdapter)).add("iso_week_number",nullHandlerDecorator(isoWeekNumberAdapter)).add("month_number",nullHandlerDecorator(monthNumberAdapter)).add("quarter_number",nullHandlerDecorator(quarterNumberAdapter)).add("day_of_week",nullHandlerDecorator(dayOfWeekAdapter)).add("hour_number",nullHandlerDecorator(hourNumberAdapter)).add("minute_number",nullHandlerDecorator(minuteNumberAdapter)).add("second_number",nullHandlerDecorator(secondNumberAdapter));const AGGREGATOR_NAMES={count:_t("Count"),count_distinct:_t("Count Distinct"),bool_and:_t("Boolean And"),bool_or:_t("Boolean Or"),max:_t("Maximum"),min:_t("Minimum"),avg:_t("Average"),sum:_t("Sum"),};const NUMBER_CHAR_AGGREGATORS=["max","min","avg","sum","count_distinct","count"];const AGGREGATORS_BY_FIELD_TYPE={integer:NUMBER_CHAR_AGGREGATORS,char:NUMBER_CHAR_AGGREGATORS,boolean:["count_distinct","count","bool_and","bool_or"],};const AGGREGATORS={};for(const type in AGGREGATORS_BY_FIELD_TYPE){AGGREGATORS[type]={};for(const aggregator of AGGREGATORS_BY_FIELD_TYPE[type]){AGGREGATORS[type][aggregator]=AGGREGATOR_NAMES[aggregator];}}
const AGGREGATORS_FN={count:(args)=>({value:countAny([args]),format:"0",}),count_distinct:(args)=>({value:countUnique([args]),format:"0",}),bool_and:(args)=>({value:boolAnd([args]).result,}),bool_or:(args)=>({value:boolOr([args]).result,}),max:(args,locale)=>max([args],locale),min:(args,locale)=>min([args],locale),avg:(args,locale)=>({value:average([args],locale),format:inferFormat(args),}),sum:(args,locale)=>({value:sum([args],locale),format:inferFormat(args),}),};function getMaxObjectId(o){const keys=Object.keys(o);if(!keys.length){return 0;}
const nums=keys.map((id)=>parseInt(id,10));const max=Math.max(...nums);return max;}
const ALL_PERIODS={year:_t("Year"),quarter:_t("Quarter & Year"),month:_t("Month & Year"),week:_t("Week & Year"),day:_t("Day"),quarter_number:_t("Quarter"),month_number:_t("Month"),iso_week_number:_t("Week"),day_of_month:_t("Day of Month"),day_of_week:_t("Day of Week"),hour_number:_t("Hour"),minute_number:_t("Minute"),second_number:_t("Second"),};const DATE_FIELDS=["date","datetime"];function parseDimension(dimension){const[fieldName,granularity]=dimension.split(":");if(granularity){return{fieldName,granularity};}
return{fieldName};}
function isDateOrDatetimeField(field){return DATE_FIELDS.includes(field.type);}
function generatePivotArgs(formulaId,domain,measure){const args=[formulaId];if(measure){args.push(`"${measure}"`);}
for(const{field,value,type}of domain){if(field==="measure"){args.push(`"measure"`,`"${value}"`);continue;}
const{granularity}=parseDimension(field);const formattedValue=toFunctionPivotValue(value,{type,granularity});args.push(`"${field}"`,formattedValue);}
return args;}
function areDomainArgsFieldsValid(dimensions,definition){let argIndex=0;let definitionIndex=0;const cols=definition.columns.map((col)=>col.nameWithGranularity);const rows=definition.rows.map((row)=>row.nameWithGranularity);while(dimensions[argIndex]!==undefined&&dimensions[argIndex]===rows[definitionIndex]){argIndex++;definitionIndex++;}
definitionIndex=0;while(dimensions[argIndex]!==undefined&&dimensions[argIndex]===cols[definitionIndex]){argIndex++;definitionIndex++;}
return dimensions.length===argIndex;}
function createPivotFormula(formulaId,cell){switch(cell.type){case"HEADER":return`=PIVOT.HEADER(${generatePivotArgs(formulaId, cell.domain).join(",")})`;case"VALUE":return`=PIVOT.VALUE(${generatePivotArgs(formulaId, cell.domain, cell.measure).join(",")})`;case"MEASURE_HEADER":return`=PIVOT.HEADER(${generatePivotArgs(formulaId, [
                ...cell.domain,
                { field: "measure", value: cell.measure, type: "char" },
            ]).join(",")})`;}
return"";}
function toNormalizedPivotValue(dimension,groupValue){if(groupValue===null||groupValue==="null"){return null;}
const groupValueString=typeof groupValue==="boolean"?toString(groupValue).toLocaleLowerCase():toString(groupValue);if(groupValueString==="null"){return null;}
if(!pivotNormalizationValueRegistry.contains(dimension.type)){throw new EvaluationError(_t("Field %(field)s is not supported because of its type (%(type)s)",{field:dimension.displayName,type:dimension.type,}));}
if(groupValueString.toLowerCase()==="false"){return false;}
const normalizer=pivotNormalizationValueRegistry.get(dimension.type);return normalizer(groupValueString,dimension.granularity);}
function normalizeDateTime(value,granularity){if(!granularity){throw new Error("Missing granularity");}
return pivotTimeAdapter(granularity).normalizeFunctionValue(value);}
function toFunctionPivotValue(value,dimension){if(value===null){return`"null"`;}
if(!pivotToFunctionValueRegistry.contains(dimension.type)){return`"${value}"`;}
return pivotToFunctionValueRegistry.get(dimension.type)(value,dimension.granularity);}
function toFunctionValueDateTime(value,granularity){if(!granularity){throw new Error("Missing granularity");}
return pivotTimeAdapter(granularity).toFunctionValue(value);}
const pivotNormalizationValueRegistry=new Registry();pivotNormalizationValueRegistry.add("date",normalizeDateTime).add("datetime",normalizeDateTime).add("integer",(value)=>toNumber(value,DEFAULT_LOCALE)).add("boolean",(value)=>toBoolean(value)).add("char",(value)=>toString(value));const pivotToFunctionValueRegistry=new Registry();pivotToFunctionValueRegistry.add("date",toFunctionValueDateTime).add("datetime",toFunctionValueDateTime).add("integer",(value)=>`${toNumber(value, DEFAULT_LOCALE)}`).add("boolean",(value)=>(toBoolean(value)?"TRUE":"FALSE")).add("char",(value)=>`"${toString(value).replace(/"/g, '\\"')}"`);function getFieldDisplayName(field){return field.displayName+(field.granularity?` (${ALL_PERIODS[field.granularity]})`:"");}
function addIndentAndAlignToPivotHeader(pivot,domain,functionResult){const{rowDomain,colDomain}=domainToColRowDomain(pivot,domain);if(rowDomain.length===0&&colDomain.length===0){return functionResult;}
if(rowDomain.length===0&&colDomain.length>0){return{...functionResult,format:(functionResult.format||"@")+"* ",};}
const indent=rowDomain.length-1;const format=functionResult.format||"@";return{...functionResult,format:`${"    ".repeat(indent)}${format}* `,};}
class CellClipboardHandler extends AbstractCellClipboardHandler{isCutAllowed(data){if(data.zones.length!==1){return"WrongCutSelection";}
return"Success";}
copy(data){const sheetId=data.sheetId;const{clippedZones,rowsIndexes,columnsIndexes}=data;const clippedCells=[];const isCopyingOneCell=rowsIndexes.length==1&&columnsIndexes.length==1;for(let row of rowsIndexes){let cellsInRow=[];for(let col of columnsIndexes){const position={col,row,sheetId};let cell=this.getters.getCell(position);const evaluatedCell=this.getters.getEvaluatedCell(position);const pivotId=this.getters.getPivotIdFromPosition(position);const spreader=this.getters.getArrayFormulaSpreadingOn(position);if(pivotId&&spreader){const pivotZone=this.getters.getSpreadZone(spreader);if((!deepEquals(spreader,position)||!isCopyingOneCell)&&pivotZone&&!data.zones.some((z)=>isZoneInside(pivotZone,z))){const pivotCell=this.getters.getPivotCellFromPosition(position);const formulaPivotId=this.getters.getPivotFormulaId(pivotId);const pivotFormula=createPivotFormula(formulaPivotId,pivotCell);cell={id:cell?.id||"",style:cell?.style,format:cell?.format,content:pivotFormula,isFormula:false,parsedValue:evaluatedCell.value,};}}
else{if(spreader&&!deepEquals(spreader,position)){const isSpreaderCopied=rowsIndexes.includes(spreader.row)&&columnsIndexes.includes(spreader.col);const content=isSpreaderCopied?"":formatValue(evaluatedCell.value,{locale:this.getters.getLocale()});cell={id:cell?.id||"",style:cell?.style,format:evaluatedCell.format,content,isFormula:false,parsedValue:evaluatedCell.value,};}}
cellsInRow.push({content:cell?.content??"",style:cell?.style,format:cell?.format,tokens:cell?.isFormula?cell.compiledFormula.tokens.map(({value,type})=>({value,type})):[],border:this.getters.getCellBorder(position)||undefined,evaluatedCell,position,});}
clippedCells.push(cellsInRow);}
return{cells:clippedCells,zones:clippedZones,sheetId:data.sheetId,};}
isPasteAllowed(sheetId,target,content,clipboardOptions){if(!content.cells){return"Success";}
if(clipboardOptions?.isCutOperation&&clipboardOptions?.pasteOption!==undefined){return"WrongPasteOption";}
if(target.length>1){if(content.cells.length>1||content.cells[0].length>1){return"WrongPasteSelection";}}
const clipboardHeight=content.cells.length;const clipboardWidth=content.cells[0].length;for(const zone of getPasteZones(target,content.cells)){if(this.getters.doesIntersectMerge(sheetId,zone)){if(target.length>1||!this.getters.isSingleCellOrMerge(sheetId,target[0])||clipboardHeight*clipboardWidth!==1){return"WillRemoveExistingMerge";}}}
return"Success";}
paste(target,content,options){const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,content.cells,options);}
else{this.pasteFromCut(sheetId,zones,content,options);}}
getPasteTarget(sheetId,target,content,options){const width=content.cells[0].length;const height=content.cells.length;if(options?.isCutOperation){return{sheetId,zones:[{left:target[0].left,top:target[0].top,right:target[0].left+width-1,bottom:target[0].top+height-1,},],};}
if(width===1&&height===1){return{zones:[],sheetId};}
return{sheetId,zones:getPasteZones(target,content.cells)};}
pasteFromCut(sheetId,target,content,options){this.clearClippedZones(content);const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.cells,options);this.dispatch("MOVE_RANGES",{target:content.zones,sheetId:content.sheetId,targetSheetId:sheetId,col:selection.left,row:selection.top,});}
clearClippedZones(content){this.dispatch("CLEAR_CELLS",{sheetId:content.sheetId,target:content.zones,});this.dispatch("CLEAR_FORMATTING",{sheetId:content.sheetId,target:content.zones,});}
pasteZone(sheetId,col,row,cells,clipboardOptions){for(const[r,rowCells]of cells.entries()){for(const[c,origin]of rowCells.entries()){if(!origin){continue;}
const position={col:col+c,row:row+r,sheetId};this.pasteCell(origin,position,clipboardOptions);}}}
pasteCell(origin,target,clipboardOption){const{sheetId,col,row}=target;const targetCell=this.getters.getEvaluatedCell(target);const originFormat=origin?.format??origin.evaluatedCell.format;if(clipboardOption?.pasteOption==="asValue"){this.dispatch("UPDATE_CELL",{...target,content:origin.evaluatedCell.value?.toString()||"",format:originFormat,});return;}
if(clipboardOption?.pasteOption==="onlyFormat"){this.dispatch("UPDATE_CELL",{...target,style:origin?.style??null,format:originFormat??targetCell.format,});return;}
let content=origin?.content;if(origin?.tokens&&origin.tokens.length>0&&!clipboardOption?.isCutOperation){content=this.getters.getTranslatedCellFormula(sheetId,col-origin.position.col,row-origin.position.row,origin.tokens);}
else if(origin?.tokens&&origin.tokens.length>0){content=this.getters.getFormulaMovedInSheet(origin.position.sheetId,sheetId,origin.tokens);}
if(content!==""||origin?.format||origin?.style){this.dispatch("UPDATE_CELL",{...target,content,style:origin?.style||null,format:origin?.format,});}
else if(targetCell){this.dispatch("CLEAR_CELL",target);}}
convertOSClipboardData(text){const locale=this.getters.getLocale();const copiedData={cells:[],};const values=[];let rowLength=0;for(const[i,row]of text.replace(/\r/g,"").split("\n").entries()){values.push(row.split("\t"));if(values[i].length>rowLength){rowLength=values[i].length;}}
for(const row of values){const cells=[];for(let i=0;i<rowLength;i++){const content=canonicalizeNumberValue(row[i]||"",locale);cells.push({content:content,evaluatedCell:{formattedValue:content,},});}
copiedData.cells.push(cells);}
return copiedData;}}
class AbstractFigureClipboardHandler extends ClipboardHandler{copy(data){return;}}
class ChartClipboardHandler extends AbstractFigureClipboardHandler{copy(data){const sheetId=data.sheetId;const figure=this.getters.getFigure(sheetId,data.figureId);if(!figure){throw new Error(`No figure for the given id: ${data.figureId}`);}
if(figure.tag!=="chart"){return;}
const copiedFigure={...figure};const chart=this.getters.getChart(data.figureId);if(!chart){throw new Error(`No chart for the given id: ${data.figureId}`);}
const copiedChart=chart.copyInSheetId(sheetId);return{figureId:data.figureId,copiedFigure,copiedChart,};}
getPasteTarget(sheetId,target,content,options){const newId=new UuidGenerator().uuidv4();return{zones:[],figureId:newId,sheetId};}
paste(target,clippedContent,options){if(!target.figureId){return;}
const{zones,figureId}=target;const sheetId=target.sheetId;const numCols=this.getters.getNumberCols(sheetId);const numRows=this.getters.getNumberRows(sheetId);const targetX=this.getters.getColDimensions(sheetId,zones[0].left).start;const targetY=this.getters.getRowDimensions(sheetId,zones[0].top).start;const maxX=this.getters.getColDimensions(sheetId,numCols-1).end;const maxY=this.getters.getRowDimensions(sheetId,numRows-1).end;const{width,height}=clippedContent.copiedFigure;const position={x:maxX<width?0:Math.min(targetX,maxX-width),y:maxY<height?0:Math.min(targetY,maxY-height),};const copy=clippedContent.copiedChart.copyInSheetId(sheetId);this.dispatch("CREATE_CHART",{id:figureId,sheetId,position,size:{height,width},definition:copy.getDefinition(),});if(options.isCutOperation){this.dispatch("DELETE_FIGURE",{sheetId:clippedContent.copiedChart.sheetId,id:clippedContent.copiedFigure.id,});}
this.dispatch("SELECT_FIGURE",{id:figureId});}
isPasteAllowed(sheetId,target,content,option){if(target.length===0){return"EmptyTarget";}
if(option?.pasteOption!==undefined){return"WrongFigurePasteOption";}
return"Success";}}
class ConditionalFormatClipboardHandler extends AbstractCellClipboardHandler{uuidGenerator=new UuidGenerator();copy(data){if(!data.zones.length){return;}
const{rowsIndexes,columnsIndexes}=data;const sheetId=data.sheetId;const cfRules=[];for(const row of rowsIndexes){const cfRuleInRow=[];for(const col of columnsIndexes){const cfRules=Array.from(this.getters.getRulesByCell(sheetId,col,row));cfRuleInRow.push({position:{col,row,sheetId},rules:cfRules,});}
cfRules.push(cfRuleInRow);}
return{cfRules};}
paste(target,clippedContent,options){if(options.pasteOption==="asValue"){return;}
const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,clippedContent.cfRules,options);}
else{this.pasteFromCut(sheetId,zones,clippedContent);}}
pasteFromCut(sheetId,target,content){const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.cfRules,{isCutOperation:true,});}
pasteZone(sheetId,col,row,cfRules,clipboardOptions){for(const[r,rowCells]of cfRules.entries()){for(const[c,origin]of rowCells.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteCf(origin,position,clipboardOptions?.isCutOperation);}}}
pasteCf(origin,target,isCutOperation){if(origin?.rules&&origin.rules.length>0){const zone=positionToZone(target);for(const rule of origin.rules){const toRemoveZones=[];if(isCutOperation){toRemoveZones.push(positionToZone(origin.position));}
if(origin.position.sheetId===target.sheetId){this.adaptCFRules(origin.position.sheetId,rule,[zone],toRemoveZones);}
else{this.adaptCFRules(origin.position.sheetId,rule,[],toRemoveZones);const cfToCopyTo=this.getCFToCopyTo(target.sheetId,rule);this.adaptCFRules(target.sheetId,cfToCopyTo,[zone],[]);}}}}
adaptCFRules(sheetId,cf,toAdd,toRemove){const newRangesXc=this.getters.getAdaptedCfRanges(sheetId,cf,toAdd,toRemove);if(!newRangesXc){return;}
if(newRangesXc.length===0){this.dispatch("REMOVE_CONDITIONAL_FORMAT",{id:cf.id,sheetId});return;}
this.dispatch("ADD_CONDITIONAL_FORMAT",{cf:{id:cf.id,rule:cf.rule,stopIfTrue:cf.stopIfTrue,},ranges:newRangesXc,sheetId,});}
getCFToCopyTo(targetSheetId,originCF){const cfInTarget=this.getters.getConditionalFormats(targetSheetId).find((cf)=>cf.stopIfTrue===originCF.stopIfTrue&&deepEquals(cf.rule,originCF.rule));return cfInTarget?cfInTarget:{...originCF,id:this.uuidGenerator.uuidv4(),ranges:[]};}}
class DataValidationClipboardHandler extends AbstractCellClipboardHandler{uuidGenerator=new UuidGenerator();copy(data){const{rowsIndexes,columnsIndexes}=data;const sheetId=data.sheetId;const dvRules=[];for(const row of rowsIndexes){const dvRuleInRow=[];for(const col of columnsIndexes){const position={sheetId,col,row};const rule=this.getters.getValidationRuleForCell(position);dvRuleInRow.push({position,rule});}
dvRules.push(dvRuleInRow);}
return{dvRules};}
paste(target,clippedContent,options){if(options.pasteOption){return;}
const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,clippedContent.dvRules);}
else{this.pasteFromCut(sheetId,zones,clippedContent);}}
pasteFromCut(sheetId,target,content){const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.dvRules,{isCutOperation:true,});}
pasteZone(sheetId,col,row,dvRules,clipboardOptions){for(const[r,rowCells]of dvRules.entries()){for(const[c,origin]of rowCells.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteDataValidation(origin,position,clipboardOptions?.isCutOperation);}}}
pasteDataValidation(origin,target,isCutOperation){if(origin){const zone=positionToZone(target);const rule=origin.rule;if(!rule){const targetRule=this.getters.getValidationRuleForCell(target);if(targetRule){this.adaptDataValidationRule(target.sheetId,targetRule,[],[zone]);}
return;}
const toRemoveZone=[];if(isCutOperation){toRemoveZone.push(positionToZone(origin.position));}
if(origin.position.sheetId===target.sheetId){const copyToRule=this.getDataValidationRuleToCopyTo(target.sheetId,rule,false);this.adaptDataValidationRule(origin.position.sheetId,copyToRule,[zone],toRemoveZone);}
else{const originRule=this.getters.getValidationRuleForCell(origin.position);if(originRule){this.adaptDataValidationRule(origin.position.sheetId,originRule,[],toRemoveZone);}
const copyToRule=this.getDataValidationRuleToCopyTo(target.sheetId,rule);this.adaptDataValidationRule(target.sheetId,copyToRule,[zone],[]);}}}
getDataValidationRuleToCopyTo(targetSheetId,originRule,newId=true){const ruleInTargetSheet=this.getters.getDataValidationRules(targetSheetId).find((rule)=>deepEquals(originRule.criterion,rule.criterion)&&originRule.isBlocking===rule.isBlocking);return ruleInTargetSheet?ruleInTargetSheet:{...originRule,id:newId?this.uuidGenerator.uuidv4():originRule.id,ranges:[]};}
adaptDataValidationRule(sheetId,rule,toAdd,toRemove){const dvZones=rule.ranges.map((range)=>range.zone);const newDvZones=recomputeZones([...dvZones,...toAdd],toRemove);if(newDvZones.length===0){this.dispatch("REMOVE_DATA_VALIDATION_RULE",{sheetId,id:rule.id});return;}
this.dispatch("ADD_DATA_VALIDATION_RULE",{rule,ranges:newDvZones.map((zone)=>this.getters.getRangeDataFromZone(sheetId,zone)),sheetId,});}}
class ImageClipboardHandler extends AbstractFigureClipboardHandler{copy(data){const sheetId=data.sheetId;const figure=this.getters.getFigure(sheetId,data.figureId);if(!figure){throw new Error(`No figure for the given id: ${data.figureId}`);}
const copiedFigure={...figure};if(figure.tag!=="image"){return;}
const image=this.getters.getImage(data.figureId);const copiedImage=deepCopy(image);return{figureId:data.figureId,copiedFigure,copiedImage,sheetId,};}
getPasteTarget(sheetId,target,content,options){const newId=new UuidGenerator().uuidv4();return{sheetId,zones:[],figureId:newId};}
paste(target,clippedContent,options){if(!target.figureId){return;}
const{zones,figureId}=target;const sheetId=this.getters.getActiveSheetId();const numCols=this.getters.getNumberCols(sheetId);const numRows=this.getters.getNumberRows(sheetId);const targetX=this.getters.getColDimensions(sheetId,zones[0].left).start;const targetY=this.getters.getRowDimensions(sheetId,zones[0].top).start;const maxX=this.getters.getColDimensions(sheetId,numCols-1).end;const maxY=this.getters.getRowDimensions(sheetId,numRows-1).end;const{width,height}=clippedContent.copiedFigure;const position={x:maxX<width?0:Math.min(targetX,maxX-width),y:maxY<height?0:Math.min(targetY,maxY-height),};const copy=deepCopy(clippedContent.copiedImage);this.dispatch("CREATE_IMAGE",{figureId,sheetId,position,size:{height,width},definition:copy,});if(options.isCutOperation){this.dispatch("DELETE_FIGURE",{sheetId:clippedContent.sheetId,id:clippedContent.copiedFigure.id,});}
this.dispatch("SELECT_FIGURE",{id:figureId});}
isPasteAllowed(sheetId,target,content,option){if(target.length===0){return"EmptyTarget";}
if(option?.pasteOption!==undefined){return"WrongFigurePasteOption";}
return"Success";}}
class MergeClipboardHandler extends AbstractCellClipboardHandler{copy(data){const sheetId=this.getters.getActiveSheetId();const{rowsIndexes,columnsIndexes}=data;const merges=[];for(const row of rowsIndexes){const mergesInRow=[];for(const col of columnsIndexes){const position={col,row,sheetId};mergesInRow.push(this.getters.getMerge(position));}
merges.push(mergesInRow);}
return{merges};}
paste(target,content,options){if(options.isCutOperation){return;}
this.pasteFromCopy(target.sheetId,target.zones,content.merges,options);}
pasteZone(sheetId,col,row,merges){for(const[r,rowMerges]of merges.entries()){for(const[c,originMerge]of rowMerges.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteMerge(originMerge,position);}}}
pasteMerge(originMerge,target){if(!originMerge){return;}
if(this.getters.isInMerge(target)){return;}
const{sheetId,col,row}=target;this.dispatch("ADD_MERGE",{sheetId,force:true,target:[{left:col,top:row,right:col+originMerge.right-originMerge.left,bottom:row+originMerge.bottom-originMerge.top,},],});}}
class SheetClipboardHandler extends AbstractCellClipboardHandler{isPasteAllowed(sheetId,target,content,options){if(!("cells"in content)){return"Success";}
const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);for(const zone of getPasteZones(target,content.cells)){if((zone.left<xSplit&&zone.right>=xSplit)||(zone.top<ySplit&&zone.bottom>=ySplit)){return"FrozenPaneOverlap";}}
return"Success";}}
class TableClipboardHandler extends AbstractCellClipboardHandler{copy(data){const sheetId=data.sheetId;const{rowsIndexes,columnsIndexes,zones}=data;const copiedTablesIds=new Set();const tableCells=[];for(let row of rowsIndexes){let tableCellsInRow=[];tableCells.push(tableCellsInRow);for(let col of columnsIndexes){const position={col,row,sheetId};const table=this.getters.getTable(position);if(!table){tableCellsInRow.push({});continue;}
const coreTable=this.getters.getCoreTable(position);const tableZone=coreTable?.range.zone;let copiedTable=undefined;if(!copiedTablesIds.has(table.id)&&coreTable&&tableZone&&zones.some((z)=>isZoneInside(tableZone,z))){copiedTablesIds.add(table.id);const values=[];for(const col of range(tableZone.left,tableZone.right+1)){values.push(this.getters.getFilterHiddenValues({sheetId,col,row:tableZone.top}));}
copiedTable={range:coreTable.range.rangeData,config:coreTable.config,type:coreTable.type,};}
tableCellsInRow.push({table:copiedTable,style:this.getTableStyleToCopy(position),isWholeTableCopied:copiedTablesIds.has(table.id),});}}
return{tableCells,sheetId:data.sheetId,};}
getTableStyleToCopy(cellPosition){const styleFromTable=this.getters.getCellTableStyle(cellPosition);const cellStyle=this.getters.getCellStyle(cellPosition);const bordersFromTable=this.getters.getCellTableBorder(cellPosition);const cellBorder=this.getters.getCellBorder(cellPosition);return{style:{...styleFromTable,...removeFalsyAttributes(cellStyle)},border:{...bordersFromTable,...removeFalsyAttributes(cellBorder)},};}
paste(target,content,options){const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,content.tableCells,options);}
else{this.pasteFromCut(sheetId,zones,content,options);}}
pasteFromCut(sheetId,target,content,options){for(const row of content.tableCells){for(const tableCell of row){if(tableCell.table){this.dispatch("REMOVE_TABLE",{sheetId:content.sheetId,target:[this.getters.getRangeFromRangeData(tableCell.table.range).zone],});}}}
const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.tableCells,options);}
pasteZone(sheetId,col,row,tableCells,clipboardOptions){for(let r=0;r<tableCells.length;r++){const rowCells=tableCells[r];for(let c=0;c<rowCells.length;c++){const tableCell=rowCells[c];if(!tableCell){continue;}
const position={col:col+c,row:row+r,sheetId};this.pasteTableCell(sheetId,tableCell,position,clipboardOptions);}}
if(tableCells.length===1){for(let c=0;c<tableCells[0].length;c++){this.dispatch("AUTOFILL_TABLE_COLUMN",{col:col+c,row,sheetId});}}}
pasteTableCell(sheetId,tableCell,position,options){if(tableCell.table&&!options?.pasteOption){const{range:tableRange}=tableCell.table;const zoneDims=zoneToDimension(this.getters.getRangeFromRangeData(tableRange).zone);const newTableZone={left:position.col,top:position.row,right:position.col+zoneDims.numberOfCols-1,bottom:position.row+zoneDims.numberOfRows-1,};this.dispatch("CREATE_TABLE",{sheetId:position.sheetId,ranges:[this.getters.getRangeDataFromZone(sheetId,newTableZone)],config:tableCell.table.config,tableType:tableCell.table.type,});}
if(this.getters.getCoreTable(position)||options?.pasteOption==="asValue"){return;}
if((!options?.pasteOption&&!tableCell.isWholeTableCopied)||options?.pasteOption==="onlyFormat"){if(tableCell.style?.style){this.dispatch("UPDATE_CELL",{...position,style:tableCell.style.style});}
if(tableCell.style?.border){this.dispatch("SET_BORDER",{...position,border:tableCell.style.border});}}}}
const clipboardHandlersRegistries={figureHandlers:new Registry(),cellHandlers:new Registry(),};clipboardHandlersRegistries.figureHandlers.add("chart",ChartClipboardHandler).add("image",ImageClipboardHandler);clipboardHandlersRegistries.cellHandlers.add("dataValidation",DataValidationClipboardHandler).add("cell",CellClipboardHandler).add("sheet",SheetClipboardHandler).add("merge",MergeClipboardHandler).add("border",BorderClipboardHandler).add("table",TableClipboardHandler).add("conditionalFormat",ConditionalFormatClipboardHandler);function transformZone(zone,executed){if(executed.type==="REMOVE_COLUMNS_ROWS"){return reduceZoneOnDeletion(zone,executed.dimension==="COL"?"left":"top",executed.elements);}
if(executed.type==="ADD_COLUMNS_ROWS"){return expandZoneOnInsertion(zone,executed.dimension==="COL"?"left":"top",executed.base,executed.position,executed.quantity);}
return{...zone};}
function transformRangeData(range,executed){const deletedSheet=executed.type==="DELETE_SHEET"&&executed.sheetId;if("sheetId"in executed&&range._sheetId!==executed.sheetId){return range;}
else{const newZone=transformZone(range._zone,executed);if(newZone&&deletedSheet!==range._sheetId){return{...range,_zone:newZone};}}
return undefined;}
class EventBus{subscriptions={};on(type,owner,callback){if(!callback){throw new Error("Missing callback");}
if(!this.subscriptions[type]){this.subscriptions[type]=[];}
this.subscriptions[type].push({owner,callback,});}
trigger(type,payload){const subs=this.subscriptions[type]||[];for(let i=0,iLen=subs.length;i<iLen;i++){const sub=subs[i];sub.callback.call(sub.owner,payload);}}
off(eventType,owner){const subs=this.subscriptions[eventType];if(subs){this.subscriptions[eventType]=subs.filter((s)=>s.owner!==owner);}}
clear(){this.subscriptions={};}}
class DependencyContainer extends EventBus{dependencies=new Map();factory=new StoreFactory(this.get.bind(this));inject(Store,instance){if(this.dependencies.has(Store)&&this.dependencies.get(Store)!==instance){throw new Error(`Store ${Store.name} already has an instance`);}
this.dependencies.set(Store,instance);}
get(Store){if(!this.dependencies.has(Store)){this.dependencies.set(Store,this.instantiate(Store));}
return this.dependencies.get(Store);}
instantiate(Store,...args){return this.factory.build(Store,...args);}
resetStores(){this.dependencies.clear();}}
class StoreFactory{get;pendingBuilds=new Set();constructor(get){this.get=get;}
build(Store,...args){if(this.pendingBuilds.has(Store)){throw new Error(`Circular dependency detected: ${[...this.pendingBuilds, Store]
                .map((s) => s.name)
                .join(" -> ")}`);}
this.pendingBuilds.add(Store);const instance=new Store(this.get,...args);this.pendingBuilds.delete(Store);return instance;}}
function createAbstractStore(storeName){class MetaStore{constructor(get){throw new Error(`This is a abstract store for ${storeName}, it cannot be instantiated.
Did you forget to inject your store instance?

const stores = useStoreProvider();
stores.inject(MyMetaStore, storeInstance);
`);}}
return MetaStore;}
class DisposableStore{get;disposeCallbacks=[];constructor(get){this.get=get;}
onDispose(callback){this.disposeCallbacks.push(callback);}
dispose(){this.disposeCallbacks.forEach((cb)=>cb());}}
function useStoreProvider(){const env=useEnv();if(env.__spreadsheet_stores__ instanceof DependencyContainer){return env.__spreadsheet_stores__;}
const container=new DependencyContainer();useSubEnv({__spreadsheet_stores__:container,getStore:(Store)=>{const store=container.get(Store);return proxifyStoreMutation(store,()=>container.trigger("store-updated"));},});return container;}
function useStore(Store){const env=useEnv();const container=getDependencyContainer(env);const store=container.get(Store);return useStoreRenderProxy(container,store);}
function useLocalStore(Store,...args){const env=useEnv();const container=getDependencyContainer(env);const store=container.instantiate(Store,...args);onWillUnmount(()=>store.dispose());return useStoreRenderProxy(container,store);}
function useStoreRenderProxy(container,store){const component=useComponent();const proxy=proxifyStoreMutation(store,()=>{if(status(component)==="mounted"){container.trigger("store-updated");}});return proxy;}
function proxifyStoreMutation(store,callback){const proxy=new Proxy(store,{get(target,property,receiver){const thisStore=target;const value=Reflect.get(target,property,thisStore);if(store.mutators?.includes(property)){const functionProxy=new Proxy(value,{apply(target,thisArg,argArray){Reflect.apply(target,thisStore,argArray);callback();},});return functionProxy;}
return value;},});return proxy;}
function getDependencyContainer(env){const container=env.__spreadsheet_stores__;if(!(container instanceof DependencyContainer)){throw new Error("No store provider found. Did you forget to call useStoreProvider()?");}
return container;}
const ModelStore=createAbstractStore("Model");class RendererStore{mutators=["register","unRegister"];renderers={};register(renderer){if(!renderer.renderingLayers.length){return;}
for(const layer of renderer.renderingLayers){if(!this.renderers[layer]){this.renderers[layer]=[];}
this.renderers[layer].push(renderer);}}
unRegister(renderer){for(const layer of Object.keys(this.renderers)){this.renderers[layer]=this.renderers[layer].filter((r)=>r!==renderer);}}
drawLayer(context,layer){const renderers=this.renderers[layer];if(!renderers){return;}
for(const renderer of renderers){context.ctx.save();renderer.drawLayer(context,layer);context.ctx.restore();}}}
class SpreadsheetStore extends DisposableStore{model=this.get(ModelStore);getters=this.model.getters;renderer=this.get(RendererStore);constructor(get){super(get);this.model.on("command-dispatched",this,this.handle);this.model.on("command-finalized",this,this.finalize);this.renderer.register(this);this.onDispose(()=>{this.model.off("command-dispatched",this);this.model.off("command-finalized",this);this.renderer.unRegister(this);});}
get renderingLayers(){return[];}
handle(cmd){}
finalize(){}
drawLayer(ctx,layer){}}
const VOID_COMPOSER={id:"void-composer",get editionMode(){return"inactive";},startEdition:()=>{throw new Error("No composer is registered");},stopEdition:()=>{throw new Error("No composer is registered");},setCurrentContent:()=>{throw new Error("No composer is registered");},};class ComposerFocusStore extends SpreadsheetStore{mutators=["focusComposer","focusActiveComposer"];activeComposer=VOID_COMPOSER;_focusMode="inactive";get focusMode(){return this.activeComposer.editionMode==="inactive"?"inactive":this._focusMode;}
focusComposer(listener,args){this.activeComposer=listener;if(this.getters.isReadonly()){return;}
this._focusMode=args.focusMode||"contentFocus";if(this._focusMode!=="inactive"){this.setComposerContent(args);}}
focusActiveComposer(args){if(this.getters.isReadonly()){return;}
if(!this.activeComposer){throw new Error("No composer is registered");}
this._focusMode=args.focusMode||"contentFocus";if(this._focusMode!=="inactive"){this.setComposerContent(args);}}
setComposerContent({content,selection,}){if(this.activeComposer.editionMode==="inactive"){this.activeComposer.startEdition(content,selection);}
else if(content){this.activeComposer.setCurrentContent(content,selection);}}}
const TREND_LINE_XAXIS_ID="x1";function updateChartRangesWithDataSets(getters,applyChange,chartDataSets,chartLabelRange){let isStale=false;const dataSetsWithUndefined=[];for(let index in chartDataSets){let ds=chartDataSets[index];if(ds.labelCell){const labelCell=adaptChartRange(ds.labelCell,applyChange);if(ds.labelCell!==labelCell){isStale=true;ds={...ds,labelCell:labelCell,};}}
const dataRange=adaptChartRange(ds.dataRange,applyChange);if(dataRange===undefined||getters.getRangeString(dataRange,dataRange.sheetId)===CellErrorType.InvalidReference){isStale=true;ds=undefined;}
else if(dataRange!==ds.dataRange){isStale=true;ds={...ds,dataRange,};}
dataSetsWithUndefined[index]=ds;}
let labelRange=chartLabelRange;const range=adaptChartRange(labelRange,applyChange);if(range!==labelRange){isStale=true;labelRange=range;}
const dataSets=dataSetsWithUndefined.filter(isDefined);return{isStale,dataSets,labelRange,};}
function copyDataSetsWithNewSheetId(sheetIdFrom,sheetIdTo,dataSets){return dataSets.map((ds)=>{return{dataRange:copyRangeWithNewSheetId(sheetIdFrom,sheetIdTo,ds.dataRange),labelCell:ds.labelCell?copyRangeWithNewSheetId(sheetIdFrom,sheetIdTo,ds.labelCell):undefined,};});}
function copyLabelRangeWithNewSheetId(sheetIdFrom,sheetIdTo,range){return range?copyRangeWithNewSheetId(sheetIdFrom,sheetIdTo,range):undefined;}
function adaptChartRange(range,applyChange){if(!range){return undefined;}
const change=applyChange(range);switch(change.changeType){case"NONE":return range;case"REMOVE":return undefined;default:return change.range;}}
function createDataSets(getters,customizedDataSets,sheetId,dataSetsHaveTitle){const dataSets=[];for(const dataSet of customizedDataSets){const dataRange=getters.getRangeFromSheetXC(sheetId,dataSet.dataRange);const{unboundedZone:zone,sheetId:dataSetSheetId,invalidSheetName,invalidXc}=dataRange;if(invalidSheetName||invalidXc){continue;}
if(zone.left!==zone.right&&zone.top!==zone.bottom){if(zone.right===undefined){continue;}
for(let column=zone.left;column<=zone.right;column++){const columnZone={...zone,left:column,right:column,};dataSets.push({...createDataSet(getters,dataSetSheetId,columnZone,dataSetsHaveTitle?{top:columnZone.top,bottom:columnZone.top,left:columnZone.left,right:columnZone.left,}:undefined),backgroundColor:dataSet.backgroundColor,rightYAxis:dataSet.yAxisId==="y1",customLabel:dataSet.label,});}}
else{dataSets.push({...createDataSet(getters,dataSetSheetId,zone,dataSetsHaveTitle?{top:zone.top,bottom:zone.top,left:zone.left,right:zone.left,}:undefined),backgroundColor:dataSet.backgroundColor,rightYAxis:dataSet.yAxisId==="y1",customLabel:dataSet.label,});}}
return dataSets;}
function createDataSet(getters,sheetId,fullZone,titleZone){if(fullZone.left!==fullZone.right&&fullZone.top!==fullZone.bottom){throw new Error(`Zone should be a single column or row: ${zoneToXc(fullZone)}`);}
if(titleZone){const dataXC=zoneToXc(fullZone);const labelCellXC=zoneToXc(titleZone);return{labelCell:getters.getRangeFromSheetXC(sheetId,labelCellXC),dataRange:getters.getRangeFromSheetXC(sheetId,dataXC),};}
else{return{labelCell:undefined,dataRange:getters.getRangeFromSheetXC(sheetId,zoneToXc(fullZone)),};}}
function toExcelDataset(getters,ds){const labelZone=ds.labelCell?.zone;let dataZone=ds.dataRange.zone;if(labelZone){const{numberOfRows,numberOfCols}=zoneToDimension(dataZone);if(numberOfRows===1){dataZone={...dataZone,left:dataZone.left+1};}
else if(numberOfCols===1){dataZone={...dataZone,top:dataZone.top+1};}}
const dataRange=ds.dataRange.clone({zone:dataZone});let label={};if(ds.customLabel){label={text:ds.customLabel,};}
else if(ds.labelCell){label={reference:getters.getRangeString(ds.labelCell,"forceSheetReference",{useFixedReference:true,}),};}
return{label,range:getters.getRangeString(dataRange,"forceSheetReference",{useFixedReference:true}),backgroundColor:ds.backgroundColor,rightYAxis:ds.rightYAxis,};}
function toExcelLabelRange(getters,labelRange,shouldRemoveFirstLabel){if(!labelRange)
return undefined;let zone={...labelRange.zone,};if(shouldRemoveFirstLabel&&labelRange.zone.bottom>labelRange.zone.top){zone.top=zone.top+1;}
const range=labelRange.clone({zone});return getters.getRangeString(range,"forceSheetReference",{useFixedReference:true});}
function transformChartDefinitionWithDataSetsWithZone(definition,executed){let labelRange;if(definition.labelRange){const labelZone=transformZone(toUnboundedZone(definition.labelRange),executed);labelRange=labelZone?zoneToXc(labelZone):undefined;}
const dataSets=definition.dataSets.map((ds)=>toUnboundedZone(ds.dataRange)).map((zone)=>transformZone(zone,executed)).filter(isDefined).map((xc)=>({dataRange:zoneToXc(xc)}));return{...definition,labelRange,dataSets,};}
function chartFontColor(backgroundColor){if(!backgroundColor){return"#000000";}
return relativeLuminance(backgroundColor)<0.3?"#FFFFFF":"#000000";}
function checkDataset(definition){if(definition.dataSets){const invalidRanges=definition.dataSets.find((range)=>!rangeReference.test(range.dataRange))!==undefined;if(invalidRanges){return"InvalidDataSet";}
const zones=definition.dataSets.map((ds)=>toUnboundedZone(ds.dataRange));if(zones.some((zone)=>zone.top!==zone.bottom&&isFullRow(zone))){return"InvalidDataSet";}}
return"Success";}
function checkLabelRange(definition){if(definition.labelRange){const invalidLabels=!rangeReference.test(definition.labelRange||"");if(invalidLabels){return"InvalidLabelRange";}}
return"Success";}
function shouldRemoveFirstLabel(labelRange,dataset,dataSetsHaveTitle){if(!dataSetsHaveTitle)
return false;if(!labelRange)
return false;if(!dataset)
return true;const datasetLength=getZoneArea(dataset.dataRange.zone);const labelLength=getZoneArea(labelRange.zone);if(labelLength<datasetLength){return false;}
return true;}
function getChartPositionAtCenterOfViewport(getters,chartSize){const{x,y}=getters.getMainViewportCoordinates();const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();const{width,height}=getters.getVisibleRect(getters.getActiveMainViewport());const position={x:x+scrollX+Math.max(0,(width-chartSize.width)/2),y:y+scrollY+Math.max(0,(height-chartSize.height)/2),};return position;}
function getChartAxisTitleRuntime(design){if(design?.title?.text){const{text,color,align,italic,bold}=design.title;return{display:true,text,color,font:{style:italic?"italic":"normal",weight:bold?"bold":"normal",},align:align==="left"?"start":align==="right"?"end":"center",};}
return;}
function getDefinedAxis(definition){let useLeftAxis=false,useRightAxis=false;if("horizontal"in definition&&definition.horizontal){return{useLeftAxis:true,useRightAxis:false};}
for(const design of definition.dataSets||[]){if(design.yAxisId==="y1"){useRightAxis=true;}
else{useLeftAxis=true;}}
useLeftAxis||=!useRightAxis;return{useLeftAxis,useRightAxis};}
function computeChartPadding({displayTitle,displayLegend,}){let top=25;if(displayTitle){top=0;}
else if(displayLegend){top=10;}
return{left:20,right:20,top,bottom:10};}
function getTrendDatasetForBarChart(config,dataset){const filteredValues=[];const filteredLabels=[];const labels=[];for(let i=0;i<dataset.data.length;i++){if(typeof dataset.data[i]==="number"){filteredValues.push(dataset.data[i]);filteredLabels.push(i+1);}
labels.push(i+1);}
const newLabels=range(0.5,labels.length+0.55,0.2);const newValues=interpolateData(config,filteredValues,filteredLabels,newLabels);if(!newValues.length){return;}
return getFullTrendingLineDataSet(dataset,config,newValues);}
function getFullTrendingLineDataSet(dataset,config,data){const defaultBorderColor=colorToRGBA(dataset.backgroundColor);defaultBorderColor.a=1;const borderColor=config.color||lightenColor(rgbaToHex(defaultBorderColor),0.5);const backgroundRGBA=colorToRGBA(borderColor);if(dataset?.fill){backgroundRGBA.a=LINE_FILL_TRANSPARENCY;}
return{...dataset,type:"line",xAxisID:TREND_LINE_XAXIS_ID,label:dataset.label?_t("Trend line for %s",dataset.label):"",data,order:-1,showLine:true,pointRadius:0,backgroundColor:rgbaToHex(backgroundRGBA),borderColor,borderDash:[5,5],borderWidth:undefined,};}
function interpolateData(config,values,labels,newLabels){if(values.length<2||labels.length<2||newLabels.length===0){return[];}
switch(config.type){case"polynomial":{const order=config.order??2;if(order===1){return predictLinearValues([values],[labels],[newLabels],true)[0];}
const coeffs=polynomialRegression(values,labels,order,true).flat();return newLabels.map((v)=>evaluatePolynomial(coeffs,v,order));}
case"exponential":{const positiveLogValues=[];const filteredLabels=[];for(let i=0;i<values.length;i++){if(values[i]>0){positiveLogValues.push(Math.log(values[i]));filteredLabels.push(labels[i]);}}
if(!filteredLabels.length){return[];}
return expM(predictLinearValues([positiveLogValues],[filteredLabels],[newLabels],true))[0];}
case"logarithmic":{return predictLinearValues([values],logM([labels]),logM([newLabels]),true)[0];}
default:return[];}}
function formatTickValue(localeFormat){return(value)=>{value=Number(value);if(isNaN(value))
return value;const{locale,format}=localeFormat;return formatValue(value,{locale,format:!format&&Math.abs(value)>=1000?"#,##":format,});};}
function getChartColorsGenerator(definition,dataSetsSize){return new ColorGenerator(dataSetsSize,definition.dataSets.map((ds)=>ds.backgroundColor));}
const CHART_AXIS_CHOICES=[{value:"left",label:_t("Left")},{value:"right",label:_t("Right")},];const chartShowValuesPlugin={id:"chartShowValuesPlugin",afterDatasetsDraw(chart,args,options){if(!options.showValues){return;}
const drawData=chart._metasets?.[0]?.data;if(!drawData){return;}
const ctx=chart.ctx;ctx.save();ctx.textAlign="center";ctx.textBaseline="middle";ctx.fillStyle=chartFontColor(options.background);ctx.strokeStyle=chartFontColor(ctx.fillStyle);chart._metasets.forEach(function(dataset){if(dataset.xAxisID===TREND_LINE_XAXIS_ID){return;}
switch(dataset.type){case"doughnut":case"pie":{for(let i=0;i<dataset._parsed.length;i++){const bar=dataset.data[i];const{startAngle,endAngle,innerRadius,outerRadius}=bar;const midAngle=(startAngle+endAngle)/2;const midRadius=(innerRadius+outerRadius)/2;const x=bar.x+midRadius*Math.cos(midAngle);const y=bar.y+midRadius*Math.sin(midAngle)+7;ctx.fillStyle=chartFontColor(bar.options.backgroundColor);ctx.strokeStyle=chartFontColor(ctx.fillStyle);const value=options.callback(dataset._parsed[i]);ctx.strokeText(value,x,y);ctx.fillText(value,x,y);}
break;}
case"bar":case"line":{const yOffset=dataset.type==="bar"&&!options.horizontal?0:3;for(let i=0;i<dataset._parsed.length;i++){const point=dataset.data[i];const value=options.horizontal?dataset._parsed[i].x:dataset._parsed[i].y;const displayedValue=options.callback(value-0);let xPosition=0,yPosition=0;if(options.horizontal){yPosition=point.y;if(value<0){ctx.textAlign="right";xPosition=point.x-yOffset;}
else{ctx.textAlign="left";xPosition=point.x+yOffset;}}
else{xPosition=point.x;if(value<0){ctx.textBaseline="top";yPosition=point.y+yOffset;}
else{ctx.textBaseline="bottom";yPosition=point.y-yOffset;}}
ctx.strokeText(displayedValue,xPosition,yPosition);ctx.fillText(displayedValue,xPosition,yPosition);}
break;}}});ctx.restore();},};const waterfallLinesPlugin={id:"waterfallLinesPlugin",beforeDraw(chart,args,options){if(!options.showConnectorLines){return;}
const drawData=chart._metasets?.[0]?.data;if(!drawData){return;}
const ctx=chart.ctx;ctx.save();ctx.setLineDash([3,2]);for(let i=0;i<drawData.length;i++){const bar=drawData[i];if(bar.height===0){continue;}
const nextBar=getNextNonEmptyBar(drawData,i);if(!nextBar){break;}
const rect=getBarElementRect(bar);const nextBarRect=getBarElementRect(nextBar);const rawBarValues=bar.$context.raw;const value=rawBarValues[1]-rawBarValues[0];const lineY=Math.round(value<0?rect.bottom-1:rect.top);const lineStart=Math.round(rect.right);const lineEnd=Math.round(nextBarRect.left);ctx.strokeStyle="#999";ctx.beginPath();ctx.moveTo(lineStart+1,lineY+0.5);ctx.lineTo(lineEnd,lineY+0.5);ctx.stroke();}
ctx.restore();},};function getBarElementRect(bar){const flipped=bar.base<bar.y;return{left:bar.x-bar.width/2,right:bar.x+bar.width/2,bottom:flipped?bar.base+bar.height:bar.y+bar.height,top:flipped?bar.base:bar.y,};}
function getNextNonEmptyBar(bars,startIndex){return bars.find((bar,i)=>i>startIndex&&bar.height!==0);}
window.Chart?.register(waterfallLinesPlugin);window.Chart?.register(chartShowValuesPlugin);class ChartJsComponent extends Component{static template="o-spreadsheet-ChartJsComponent";static props={figure:Object,};canvas=useRef("graphContainer");chart;currentRuntime;get background(){return this.chartRuntime.background;}
get canvasStyle(){return`background-color: ${this.background}`;}
get chartRuntime(){const runtime=this.env.model.getters.getChartRuntime(this.props.figure.id);if(!("chartJsConfig"in runtime)){throw new Error("Unsupported chart runtime");}
return runtime;}
setup(){onMounted(()=>{const runtime=this.chartRuntime;this.currentRuntime=runtime;this.createChart(deepCopy(runtime.chartJsConfig));});onWillUnmount(()=>this.chart?.destroy());useEffect(()=>{const runtime=this.chartRuntime;if(runtime!==this.currentRuntime){if(runtime.chartJsConfig.type!==this.currentRuntime.chartJsConfig.type){this.chart?.destroy();this.createChart(deepCopy(runtime.chartJsConfig));}
else{this.updateChartJs(deepCopy(runtime));}
this.currentRuntime=runtime;}});}
createChart(chartData){const canvas=this.canvas.el;const ctx=canvas.getContext("2d");this.chart=new window.Chart(ctx,chartData);}
updateChartJs(chartRuntime){const chartData=chartRuntime.chartJsConfig;if(chartData.data&&chartData.data.datasets){this.chart.data=chartData.data;if(chartData.options?.plugins?.title){this.chart.config.options.plugins.title=chartData.options.plugins.title;}}
else{this.chart.data.datasets=[];}
this.chart.config.options=chartData.options;this.chart.update();}}
class AbstractChart{sheetId;title;getters;constructor(definition,sheetId,getters){this.title=definition.title;this.sheetId=sheetId;this.getters=getters;}
static validateChartDefinition(validator,definition){throw new Error("This method should be implemented by sub class");}
static transformDefinition(definition,executed){throw new Error("This method should be implemented by sub class");}
static getDefinitionFromContextCreation(context){throw new Error("This method should be implemented by sub class");}}
function getBaselineText(baseline,keyValue,baselineMode,humanize,locale){if(!baseline){return"";}
else if(baselineMode==="text"||keyValue?.type!==CellValueType.number||baseline.type!==CellValueType.number){if(humanize){return humanizeNumber(baseline,locale);}
return baseline.formattedValue;}
let{value,format}=baseline;if(baselineMode==="progress"){value=keyValue.value/value;format="0.0%";}
else{value=Math.abs(keyValue.value-value);if(baselineMode==="percentage"&&value!==0){value=value/baseline.value;}
if(baselineMode==="percentage"){format="0.0%";}
if(!format){value=Math.round(value*100)/100;}}
if(humanize){return humanizeNumber({value,format},locale);}
return formatValue(value,{format,locale});}
function getKeyValueText(keyValueCell,humanize,locale){if(!keyValueCell){return"";}
if(humanize){return humanizeNumber(keyValueCell,locale);}
return keyValueCell.formattedValue??String(keyValueCell.value??"");}
function getBaselineColor(baseline,baselineMode,keyValue,colorUp,colorDown){if(baselineMode==="text"||baselineMode==="progress"||baseline?.type!==CellValueType.number||keyValue?.type!==CellValueType.number){return undefined;}
const diff=keyValue.value-baseline.value;if(diff>0){return colorUp;}
else if(diff<0){return colorDown;}
return undefined;}
function getBaselineArrowDirection(baseline,keyValue,baselineMode){if(baselineMode==="text"||baseline?.type!==CellValueType.number||keyValue?.type!==CellValueType.number){return"neutral";}
const diff=keyValue.value-baseline.value;if(diff>0){return"up";}
else if(diff<0){return"down";}
return"neutral";}
function checkKeyValue(definition){return definition.keyValue&&!rangeReference.test(definition.keyValue)?"InvalidScorecardKeyValue":"Success";}
function checkBaseline(definition){return definition.baseline&&!rangeReference.test(definition.baseline)?"InvalidScorecardBaseline":"Success";}
const arrowDownPath=new window.Path2D("M8.6 4.8a.5.5 0 0 1 0 .75l-3.9 3.9a.5 .5 0 0 1 -.75 0l-3.8 -3.9a.5 .5 0 0 1 0 -.75l.4-.4a.5.5 0 0 1 .75 0l2.3 2.4v-5.7c0-.25.25-.5.5-.5h.6c.25 0 .5.25.5.5v5.8l2.3 -2.4a.5.5 0 0 1 .75 0z");const arrowUpPath=new window.Path2D("M8.7 5.5a.5.5 0 0 0 0-.75l-3.8-4a.5.5 0 0 0-.75 0l-3.8 4a.5.5 0 0 0 0 .75l.4.4a.5.5 0 0 0 .75 0l2.3-2.4v5.8c0 .25.25.5.5.5h.6c.25 0 .5-.25.5-.5v-5.8l2.2 2.4a.5.5 0 0 0 .75 0z");let ScorecardChart$1=class ScorecardChart extends AbstractChart{keyValue;baseline;baselineMode;baselineDescr;progressBar=false;background;baselineColorUp;baselineColorDown;fontColor;humanize;type="scorecard";constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.keyValue=createValidRange(getters,sheetId,definition.keyValue);this.baseline=createValidRange(getters,sheetId,definition.baseline);this.baselineMode=definition.baselineMode;this.baselineDescr=definition.baselineDescr;this.background=definition.background;this.baselineColorUp=definition.baselineColorUp??DEFAULT_SCORECARD_BASELINE_COLOR_UP;this.baselineColorDown=definition.baselineColorDown??DEFAULT_SCORECARD_BASELINE_COLOR_DOWN;this.humanize=definition.humanize??false;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkKeyValue,checkBaseline);}
static getDefinitionFromContextCreation(context){return{background:context.background,type:"scorecard",keyValue:context.range?context.range[0].dataRange:undefined,title:context.title||{text:""},baselineMode:DEFAULT_SCORECARD_BASELINE_MODE,baselineColorUp:DEFAULT_SCORECARD_BASELINE_COLOR_UP,baselineColorDown:DEFAULT_SCORECARD_BASELINE_COLOR_DOWN,baseline:context.auxiliaryRange||"",};}
static transformDefinition(definition,executed){let baselineZone;let keyValueZone;if(definition.baseline){baselineZone=transformZone(toUnboundedZone(definition.baseline),executed);}
if(definition.keyValue){keyValueZone=transformZone(toUnboundedZone(definition.keyValue),executed);}
return{...definition,baseline:baselineZone?zoneToXc(baselineZone):undefined,keyValue:keyValueZone?zoneToXc(keyValueZone):undefined,};}
copyForSheetId(sheetId){const baseline=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.baseline);const keyValue=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.keyValue);const definition=this.getDefinitionWithSpecificRanges(baseline,keyValue,sheetId);return new ScorecardChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificRanges(this.baseline,this.keyValue,sheetId);return new ScorecardChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificRanges(this.baseline,this.keyValue);}
getContextCreation(){return{...this,range:this.keyValue?[{dataRange:this.getters.getRangeString(this.keyValue,this.sheetId)}]:undefined,auxiliaryRange:this.baseline?this.getters.getRangeString(this.baseline,this.sheetId):undefined,};}
getDefinitionWithSpecificRanges(baseline,keyValue,targetSheetId){return{baselineColorDown:this.baselineColorDown,baselineColorUp:this.baselineColorUp,baselineMode:this.baselineMode,title:this.title,type:"scorecard",background:this.background,baseline:baseline?this.getters.getRangeString(baseline,targetSheetId||this.sheetId):undefined,baselineDescr:this.baselineDescr,keyValue:keyValue?this.getters.getRangeString(keyValue,targetSheetId||this.sheetId):undefined,humanize:this.humanize,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const baseline=adaptChartRange(this.baseline,applyChange);const keyValue=adaptChartRange(this.keyValue,applyChange);if(this.baseline===baseline&&this.keyValue===keyValue){return this;}
const definition=this.getDefinitionWithSpecificRanges(baseline,keyValue);return new ScorecardChart(definition,this.sheetId,this.getters);}};function drawScoreChart(structure,canvas){const ctx=canvas.getContext("2d");canvas.width=structure.canvas.width;const availableWidth=canvas.width-DEFAULT_CHART_PADDING;canvas.height=structure.canvas.height;ctx.fillStyle=structure.canvas.backgroundColor;ctx.fillRect(0,0,structure.canvas.width,structure.canvas.height);if(structure.title){ctx.font=structure.title.style.font;ctx.fillStyle=structure.title.style.color;const baseline=ctx.textBaseline;ctx.textBaseline="middle";ctx.fillText(clipTextWithEllipsis(ctx,structure.title.text,availableWidth-structure.title.position.x),structure.title.position.x,structure.title.position.y);ctx.textBaseline=baseline;}
if(structure.baseline){ctx.font=structure.baseline.style.font;ctx.fillStyle=structure.baseline.style.color;drawDecoratedText(ctx,structure.baseline.text,structure.baseline.position,structure.baseline.style.underline,structure.baseline.style.strikethrough);}
if(structure.baselineArrow&&structure.baselineArrow.style.size>0){ctx.save();ctx.fillStyle=structure.baselineArrow.style.color;ctx.translate(structure.baselineArrow.position.x,structure.baselineArrow.position.y);const ratio=structure.baselineArrow.style.size/10;ctx.scale(ratio,ratio);switch(structure.baselineArrow.direction){case"down":{ctx.fill(arrowDownPath);break;}
case"up":{ctx.fill(arrowUpPath);break;}}
ctx.restore();}
if(structure.baselineDescr){const descr=structure.baselineDescr[0];ctx.font=descr.style.font;ctx.fillStyle=descr.style.color;for(const description of structure.baselineDescr){ctx.fillText(clipTextWithEllipsis(ctx,description.text,availableWidth-description.position.x),description.position.x,description.position.y);}}
if(structure.key){ctx.font=structure.key.style.font;ctx.fillStyle=structure.key.style.color;drawDecoratedText(ctx,clipTextWithEllipsis(ctx,structure.key.text,availableWidth-structure.key.position.x),structure.key.position,structure.key.style.underline,structure.key.style.strikethrough);}
if(structure.progressBar){ctx.fillStyle=structure.progressBar.style.backgroundColor;ctx.beginPath();ctx.roundRect(structure.progressBar.position.x,structure.progressBar.position.y,structure.progressBar.dimension.width,structure.progressBar.dimension.height,structure.progressBar.dimension.height/2);ctx.fill();ctx.fillStyle=structure.progressBar.style.color;ctx.beginPath();if(structure.progressBar.value>0){ctx.roundRect(structure.progressBar.position.x,structure.progressBar.position.y,structure.progressBar.dimension.width*Math.max(0,Math.min(1.0,structure.progressBar.value)),structure.progressBar.dimension.height,structure.progressBar.dimension.height/2);}
else{const width=structure.progressBar.dimension.width*Math.max(0,Math.min(1.0,-structure.progressBar.value));ctx.roundRect(structure.progressBar.position.x+structure.progressBar.dimension.width-width,structure.progressBar.position.y,width,structure.progressBar.dimension.height,structure.progressBar.dimension.height/2);}
ctx.fill();}}
function createScorecardChartRuntime(chart,getters){let formattedKeyValue="";let keyValueCell;const locale=getters.getLocale();if(chart.keyValue){const keyValuePosition={sheetId:chart.keyValue.sheetId,col:chart.keyValue.zone.left,row:chart.keyValue.zone.top,};keyValueCell=getters.getEvaluatedCell(keyValuePosition);formattedKeyValue=getKeyValueText(keyValueCell,chart.humanize??false,locale);}
let baselineCell;const baseline=chart.baseline;if(baseline){const baselinePosition={sheetId:baseline.sheetId,col:baseline.zone.left,row:baseline.zone.top,};baselineCell=getters.getEvaluatedCell(baselinePosition);}
const{background,fontColor}=getters.getStyleOfSingleCellChart(chart.background,chart.keyValue);const baselineDisplay=getBaselineText(baselineCell,keyValueCell,chart.baselineMode,chart.humanize??false,locale);const baselineValue=chart.baselineMode==="progress"&&isNumber(baselineDisplay,locale)?toNumber(baselineDisplay,locale):0;return{title:{...chart.title,text:chart.title.text?_t(chart.title.text):"",},keyValue:formattedKeyValue,baselineDisplay,baselineArrow:getBaselineArrowDirection(baselineCell,keyValueCell,chart.baselineMode),baselineColor:getBaselineColor(baselineCell,chart.baselineMode,keyValueCell,chart.baselineColorUp,chart.baselineColorDown),baselineDescr:chart.baselineMode!=="progress"&&chart.baselineDescr?_t(chart.baselineDescr):"",fontColor,background,baselineStyle:chart.baselineMode!=="percentage"&&chart.baselineMode!=="progress"&&baseline?getters.getCellStyle({sheetId:baseline.sheetId,col:baseline.zone.left,row:baseline.zone.top,}):undefined,keyValueStyle:chart.keyValue?getters.getCellStyle({sheetId:chart.keyValue.sheetId,col:chart.keyValue.zone.left,row:chart.keyValue.zone.top,}):undefined,progressBar:chart.baselineMode==="progress"?{value:baselineValue,color:baselineValue>0?chart.baselineColorUp:chart.baselineColorDown,}:undefined,};}
const CHART_PADDING=SCORECARD_GAUGE_CHART_PADDING;const BOTTOM_PADDING_RATIO=0.05;const CHART_TITLE_FONT_SIZE=SCORECARD_GAUGE_CHART_FONT_SIZE;const KEY_VALUE_FONT_SIZE=32;const BASELINE_MAX_FONT_SIZE=16;function formatBaselineDescr(baselineDescr,baseline){const _baselineDescr=baselineDescr||"";return baseline&&_baselineDescr?" "+_baselineDescr:_baselineDescr;}
function getScorecardConfiguration({width,height},runtime){const designer=new ScorecardChartConfigBuilder({width,height},runtime);return designer.computeDesign();}
class ScorecardChartConfigBuilder{runtime;context;width;height;constructor({width,height},runtime){this.runtime=runtime;const canvas=document.createElement("canvas");this.width=canvas.width=width;this.height=canvas.height=height;this.context=canvas.getContext("2d");}
computeDesign(){const structure={canvas:{width:this.width,height:this.height,backgroundColor:this.backgroundColor,},};const style=this.getTextStyles();let titleHeight=0;if(this.title){let x,titleWidth;({height:titleHeight,width:titleWidth}=this.getFullTextDimensions(this.title,style.title.font));switch(this.runtime.title.align){case"center":x=(this.width-titleWidth)/2;break;case"right":x=this.width-titleWidth-CHART_PADDING;break;case"left":default:x=CHART_PADDING;}
structure.title={text:this.title,style:style.title,position:{x,y:CHART_PADDING+titleHeight/2,},};}
const baselineArrowSize=style.baselineArrow?.size??0;let{height:baselineHeight,width:baselineWidth}=this.getTextDimensions(this.baseline,style.baselineValue.font);if(!this.baseline){baselineHeight=this.getTextDimensions(this.baselineDescr,style.baselineDescr.font).height;}
const baselineDescrWidth=this.getTextDimensions(this.baselineDescr,style.baselineDescr.font).width;structure.baseline={text:this.baseline,style:style.baselineValue,position:{x:(this.width-baselineWidth-baselineDescrWidth+baselineArrowSize)/2,y:this.keyValue?this.height*(1-BOTTOM_PADDING_RATIO*(this.runtime.progressBar?1:2)):this.height-(this.height-titleHeight-baselineHeight)/2-CHART_PADDING,},};const minimalBaselinePosition=baselineArrowSize+DEFAULT_CHART_PADDING;if(structure.baseline.position.x<minimalBaselinePosition){structure.baseline.position.x=minimalBaselinePosition;}
if(style.baselineArrow&&!this.runtime.progressBar){structure.baselineArrow={direction:this.baselineArrow,style:style.baselineArrow,position:{x:structure.baseline.position.x-baselineArrowSize,y:structure.baseline.position.y-(baselineHeight+baselineArrowSize)/2,},};}
if(this.baselineDescr){const position={x:structure.baseline.position.x+baselineWidth,y:structure.baseline.position.y,};structure.baselineDescr=[{text:this.baselineDescr,style:style.baselineDescr,position,},];}
let progressBarHeight=0;if(this.runtime.progressBar){progressBarHeight=this.height*0.05;structure.progressBar={position:{x:2*CHART_PADDING,y:this.height*(1-2*BOTTOM_PADDING_RATIO)-baselineHeight-progressBarHeight,},dimension:{height:progressBarHeight,width:this.width-4*CHART_PADDING,},value:this.runtime.progressBar.value,style:{color:this.runtime.progressBar.color,backgroundColor:this.secondaryFontColor,},};}
const{width:keyWidth,height:keyHeight}=this.getFullTextDimensions(this.keyValue,style.keyValue.font);if(this.keyValue){structure.key={text:this.keyValue,style:style.keyValue,position:{x:Math.max(CHART_PADDING,(this.width-keyWidth)/2),y:this.height*(0.5-BOTTOM_PADDING_RATIO*2)+
CHART_PADDING/2+
(titleHeight+keyHeight/2)/2,},};}
return structure;}
get title(){return this.runtime.title.text??"";}
get keyValue(){return this.runtime.keyValue;}
get baseline(){return this.runtime.baselineDisplay;}
get baselineDescr(){return formatBaselineDescr(this.runtime.baselineDescr,this.baseline);}
get baselineArrow(){return this.runtime.baselineArrow;}
get backgroundColor(){return this.runtime.background;}
get secondaryFontColor(){return relativeLuminance(this.backgroundColor)>0.3?"#525252":"#C8C8C8";}
getTextDimensions(text,font){this.context.font=font;const measure=this.context.measureText(text);return{width:measure.width,height:measure.actualBoundingBoxAscent+measure.actualBoundingBoxDescent,};}
getFullTextDimensions(text,font){this.context.font=font;const measure=this.context.measureText(text);return{width:measure.width,height:measure.fontBoundingBoxAscent+measure.fontBoundingBoxDescent,};}
getTextStyles(){let baselineValueFontSize=BASELINE_MAX_FONT_SIZE;const baselineDescrFontSize=Math.floor(0.9*baselineValueFontSize);if(this.runtime.progressBar){baselineValueFontSize/=1.5;}
return{title:{font:getDefaultContextFont(CHART_TITLE_FONT_SIZE,this.runtime.title.bold,this.runtime.title.italic),color:this.runtime.title.color??this.secondaryFontColor,},keyValue:{color:this.runtime.keyValueStyle?.textColor||this.runtime.fontColor,font:getDefaultContextFont(KEY_VALUE_FONT_SIZE,this.runtime.keyValueStyle?.bold,this.runtime.keyValueStyle?.italic),strikethrough:this.runtime.keyValueStyle?.strikethrough,underline:this.runtime.keyValueStyle?.underline,},baselineValue:{font:getDefaultContextFont(baselineValueFontSize,this.runtime.baselineStyle?.bold,this.runtime.baselineStyle?.italic),strikethrough:this.runtime.baselineStyle?.strikethrough,underline:this.runtime.baselineStyle?.underline,color:this.runtime.baselineStyle?.textColor||this.runtime.baselineColor||this.secondaryFontColor,},baselineDescr:{font:getDefaultContextFont(baselineDescrFontSize),color:this.secondaryFontColor,},baselineArrow:this.baselineArrow==="neutral"||this.runtime.progressBar?undefined:{size:this.keyValue?0.8*baselineValueFontSize:0,color:this.runtime.baselineColor||this.secondaryFontColor,},};}}
class ScorecardChart extends Component{static template="o-spreadsheet-ScorecardChart";static props={figure:Object,};canvas=useRef("chartContainer");get runtime(){return this.env.model.getters.getChartRuntime(this.props.figure.id);}
get title(){const title=this.env.model.getters.getChartDefinition(this.props.figure.id).title.text??"";return _t(title);}
setup(){useEffect(this.createChart.bind(this),()=>{const canvas=this.canvas.el;const rect=canvas.getBoundingClientRect();return[rect.width,rect.height,this.runtime,this.canvas.el];});}
createChart(){const canvas=this.canvas.el;const config=getScorecardConfiguration(canvas.getBoundingClientRect(),this.runtime);drawScoreChart(config,canvas);}}
const autoCompleteProviders=new Registry();autoCompleteProviders.add("dataValidation",{getProposals(tokenAtCursor,content){if(content.startsWith("=")){return[];}
if(!this.composer.currentEditedCell){return[];}
const position=this.composer.currentEditedCell;const rule=this.getters.getValidationRuleForCell(position);if(!rule||(rule.criterion.type!=="isValueInList"&&rule.criterion.type!=="isValueInRange")){return[];}
let values;if(rule.criterion.type==="isValueInList"){values=rule.criterion.values;}
else{const range=this.getters.getRangeFromSheetXC(position.sheetId,rule.criterion.values[0]);values=Array.from(new Set(this.getters.getRangeValues(range).filter(isNotNull).map((value)=>value.toString()).filter((val)=>val!=="")));}
return values.map((value)=>({text:value}));},selectProposal(tokenAtCursor,value){this.composer.setCurrentContent(value);this.composer.stopEdition();},});function getHtmlContentFromPattern(pattern,value,highlightColor,className){const pendingHtmlContent=[];pattern=pattern.toLowerCase();for(const patternChar of pattern){const index=value.toLocaleLowerCase().indexOf(patternChar);if(index===-1){continue;}
pendingHtmlContent.push({value:value.slice(0,index),color:""},{value:value[index],color:highlightColor,class:className});value=value.slice(index+1);}
pendingHtmlContent.push({value});const htmlContent=pendingHtmlContent.filter((content)=>content.value);return htmlContent;}
const ARG_REGEXP=/(.*?)\((.*?)\)(.*)/;const ARG_TYPES=["ANY","BOOLEAN","DATE","NUMBER","STRING","RANGE","RANGE<BOOLEAN>","RANGE<DATE>","RANGE<NUMBER>","RANGE<STRING>","META",];function arg(definition,description=""){return makeArg(definition,description);}
function makeArg(str,description){let parts=str.match(ARG_REGEXP);let name=parts[1].trim();if(!name){throw new Error(`Function argument definition is missing a name: '${str}'.`);}
let types=[];let isOptional=false;let isRepeating=false;let defaultValue;for(let param of parts[2].split(",")){const key=param.trim().toUpperCase();let type=ARG_TYPES.find((t)=>key===t);if(type){types.push(type);}
else if(key==="RANGE<ANY>"){types.push("RANGE");}
else if(key==="OPTIONAL"){isOptional=true;}
else if(key==="REPEATING"){isRepeating=true;}
else if(key.startsWith("DEFAULT=")){defaultValue=param.trim().slice(8);}}
const result={name,description,type:types,};if(isOptional){result.optional=true;}
if(isRepeating){result.repeating=true;}
if(defaultValue!==undefined){result.default=true;result.defaultValue=defaultValue;}
if(types.some((t)=>t.startsWith("RANGE"))){result.acceptMatrix=true;}
if(types.every((t)=>t.startsWith("RANGE"))){result.acceptMatrixOnly=true;}
return result;}
function addMetaInfoFromArg(addDescr){let countArg=0;let minArg=0;let repeatingArg=0;for(let arg of addDescr.args){countArg++;if(!arg.optional&&!arg.repeating&&!arg.default){minArg++;}
if(arg.repeating){repeatingArg++;}}
const descr=addDescr;descr.minArgRequired=minArg;descr.maxArgPossible=repeatingArg?Infinity:countArg;descr.nbrArgRepeating=repeatingArg;descr.getArgToFocus=argTargeting(countArg,repeatingArg);descr.hidden=addDescr.hidden||false;return descr;}
function argTargeting(countArg,repeatingArg){if(!repeatingArg){return(argPosition)=>argPosition;}
if(repeatingArg===1){return(argPosition)=>Math.min(argPosition,countArg);}
const argBeforeRepeat=countArg-repeatingArg;return(argPosition)=>{if(argPosition<=argBeforeRepeat){return argPosition;}
const argAfterRepeat=(argPosition-argBeforeRepeat)%repeatingArg||repeatingArg;return argBeforeRepeat+argAfterRepeat;};}
function validateArguments(args){let previousArgRepeating=false;let previousArgOptional=false;let previousArgDefault=false;for(let current of args){if(current.type.includes("META")&&current.type.length>1){throw new Error(_t("Function ${name} has an argument that has been declared with more than one type whose type 'META'. The 'META' type can only be declared alone."));}
if(previousArgRepeating&&!current.repeating){throw new Error(_t("Function ${name} has no-repeatable arguments declared after repeatable ones. All repeatable arguments must be declared last."));}
const previousIsOptional=previousArgOptional||previousArgRepeating||previousArgDefault;const currentIsntOptional=!(current.optional||current.repeating||current.default);if(previousIsOptional&&currentIsntOptional){throw new Error(_t("Function ${name} has at mandatory arguments declared after optional ones. All optional arguments must be after all mandatory arguments."));}
previousArgRepeating=current.repeating;previousArgOptional=current.optional;previousArgDefault=current.default;}}
function assertSingleColOrRow(errorStr,arg){assert(()=>arg.length===1||arg[0].length===1,errorStr);}
function assertSameDimensions(errorStr,...args){if(args.every(isMatrix)){const cols=args[0].length;const rows=args[0][0].length;for(const arg of args){assert(()=>arg.length===cols&&arg[0].length===rows,errorStr);}
return;}
if(args.some((arg)=>Array.isArray(arg)&&(arg.length!==1||arg[0].length!==1))){throw new EvaluationError(errorStr);}}
function assertPositive(errorStr,arg){assert(()=>arg>0,errorStr);}
function assertSquareMatrix(errorStr,arg){assert(()=>arg.length===arg[0].length,errorStr);}
const ARRAY_CONSTRAIN={description:_t("Returns a result array constrained to a specific width and height."),args:[arg("input_range (any, range<any>)",_t("The range to constrain.")),arg("rows (number)",_t("The number of rows in the constrained array.")),arg("columns (number)",_t("The number of columns in the constrained array.")),],compute:function(array,rows,columns){const _array=toMatrix(array);const _rowsArg=toInteger(rows?.value,this.locale);const _columnsArg=toInteger(columns?.value,this.locale);assertPositive(_t("The rows argument (%s) must be strictly positive.",_rowsArg.toString()),_rowsArg);assertPositive(_t("The columns argument (%s) must be strictly positive.",_rowsArg.toString()),_columnsArg);const _nbRows=Math.min(_rowsArg,_array[0].length);const _nbColumns=Math.min(_columnsArg,_array.length);return generateMatrix(_nbColumns,_nbRows,(col,row)=>_array[col][row]);},isExported:false,};const CHOOSECOLS={description:_t("Creates a new array from the selected columns in the existing range."),args:[arg("array (any, range<any>)",_t("The array that contains the columns to be returned.")),arg("col_num (number, range<number>)",_t("The first column index of the columns to be returned.")),arg("col_num2 (number, range<number>, repeating)",_t("The columns indexes of the columns to be returned.")),],compute:function(array,...columns){const _array=toMatrix(array);const _columns=flattenRowFirst(columns,(item)=>toInteger(item?.value,this.locale));const argOutOfRange=_columns.filter((col)=>col===0||_array.length<Math.abs(col));assert(()=>argOutOfRange.length===0,_t("The columns arguments must be between -%s and %s (got %s), excluding 0.",_array.length.toString(),_array.length.toString(),argOutOfRange.join(",")));const result=Array(_columns.length);for(let col=0;col<_columns.length;col++){if(_columns[col]>0){result[col]=_array[_columns[col]-1];}
else{result[col]=_array[_array.length+_columns[col]];}}
return result;},isExported:true,};const CHOOSEROWS={description:_t("Creates a new array from the selected rows in the existing range."),args:[arg("array (any, range<any>)",_t("The array that contains the rows to be returned.")),arg("row_num (number, range<number>)",_t("The first row index of the rows to be returned.")),arg("row_num2 (number, range<number>, repeating)",_t("The rows indexes of the rows to be returned.")),],compute:function(array,...rows){const _array=toMatrix(array);const _rows=flattenRowFirst(rows,(item)=>toInteger(item?.value,this.locale));const _nbColumns=_array.length;const argOutOfRange=_rows.filter((row)=>row===0||_array[0].length<Math.abs(row));assert(()=>argOutOfRange.length===0,_t("The rows arguments must be between -%s and %s (got %s), excluding 0.",_array[0].length.toString(),_array[0].length.toString(),argOutOfRange.join(",")));return generateMatrix(_nbColumns,_rows.length,(col,row)=>{if(_rows[row]>0){return _array[col][_rows[row]-1];}
return _array[col][_array[col].length+_rows[row]];});},isExported:true,};const EXPAND={description:_t("Expands or pads an array to specified row and column dimensions."),args:[arg("array (any, range<any>)",_t("The array to expand.")),arg("rows (number)",_t("The number of rows in the expanded array. If missing, rows will not be expanded.")),arg("columns (number, optional)",_t("The number of columns in the expanded array. If missing, columns will not be expanded.")),arg("pad_with (any, default=0)",_t("The value with which to pad.")),],compute:function(arg,rows,columns,padWith={value:0}){const _array=toMatrix(arg);const _nbRows=toInteger(rows?.value,this.locale);const _nbColumns=columns!==undefined?toInteger(columns.value,this.locale):_array.length;assert(()=>_nbRows>=_array[0].length,_t("The rows arguments (%s) must be greater or equal than the number of rows of the array.",_nbRows.toString()));assert(()=>_nbColumns>=_array.length,_t("The columns arguments (%s) must be greater or equal than the number of columns of the array.",_nbColumns.toString()));return generateMatrix(_nbColumns,_nbRows,(col,row)=>col>=_array.length||row>=_array[col].length?padWith:_array[col][row]);},isExported:true,};const FLATTEN={description:_t("Flattens all the values from one or more ranges into a single column."),args:[arg("range (any, range<any>)",_t("The first range to flatten.")),arg("range2 (any, range<any>, repeating)",_t("Additional ranges to flatten.")),],compute:function(...ranges){return[flattenRowFirst(ranges,(val)=>(val===undefined?{value:""}:val))];},isExported:false,};const FREQUENCY={description:_t("Calculates the frequency distribution of a range."),args:[arg("data (range<number>)",_t("The array of ranges containing the values to be counted.")),arg("classes (number, range<number>)",_t("The range containing the set of classes.")),],compute:function(data,classes){const _data=flattenRowFirst([data],(data)=>data.value).filter((val)=>typeof val==="number");const _classes=flattenRowFirst([classes],(data)=>data.value).filter((val)=>typeof val==="number");const sortedClasses=_classes.map((value,index)=>({initialIndex:index,value,count:0})).sort((a,b)=>a.value-b.value);sortedClasses.push({initialIndex:sortedClasses.length,value:Infinity,count:0});const sortedData=_data.sort((a,b)=>a-b);let index=0;for(const val of sortedData){while(val>sortedClasses[index].value&&index<sortedClasses.length-1){index++;}
sortedClasses[index].count++;}
const result=sortedClasses.sort((a,b)=>a.initialIndex-b.initialIndex).map((val)=>val.count);return[result];},isExported:true,};const HSTACK={description:_t("Appends ranges horizontally and in sequence to return a larger array."),args:[arg("range1 (any, range<any>)",_t("The first range to be appended.")),arg("range2 (any, range<any>, repeating)",_t("Additional ranges to add to range1.")),],compute:function(...ranges){const nbRows=Math.max(...ranges.map((r)=>r?.[0]?.length??0));const result=[];for(const range of ranges){const _range=toMatrix(range);for(let col=0;col<_range.length;col++){const array=Array(nbRows).fill({value:null});for(let row=0;row<_range[col].length;row++){array[row]=_range[col][row];}
result.push(array);}}
return result;},isExported:true,};const MDETERM={description:_t("Returns the matrix determinant of a square matrix."),args:[arg("square_matrix (number, range<number>)",_t("An range with an equal number of rows and columns representing a matrix whose determinant will be calculated.")),],compute:function(matrix){const _matrix=toNumberMatrix(matrix,"square_matrix");assertSquareMatrix(_t("The argument square_matrix must have the same number of columns and rows."),_matrix);return invertMatrix(_matrix).determinant;},isExported:true,};const MINVERSE={description:_t("Returns the multiplicative inverse of a square matrix."),args:[arg("square_matrix (number, range<number>)",_t("An range with an equal number of rows and columns representing a matrix whose multiplicative inverse will be calculated.")),],compute:function(matrix){const _matrix=toNumberMatrix(matrix,"square_matrix");assertSquareMatrix(_t("The argument square_matrix must have the same number of columns and rows."),_matrix);const{inverted}=invertMatrix(_matrix);if(!inverted){throw new EvaluationError(_t("The matrix is not invertible."));}
return inverted;},isExported:true,};const MMULT={description:_t("Calculates the matrix product of two matrices."),args:[arg("matrix1 (number, range<number>)",_t("The first matrix in the matrix multiplication operation.")),arg("matrix2 (number, range<number>)",_t("The second matrix in the matrix multiplication operation.")),],compute:function(matrix1,matrix2){const _matrix1=toNumberMatrix(matrix1,"matrix1");const _matrix2=toNumberMatrix(matrix2,"matrix2");assert(()=>_matrix1.length===_matrix2[0].length,_t("In [[FUNCTION_NAME]], the number of columns of the first matrix (%s) must be equal to the \
        number of rows of the second matrix (%s).",_matrix1.length.toString(),_matrix2[0].length.toString()));return multiplyMatrices(_matrix1,_matrix2);},isExported:true,};const SUMPRODUCT={description:_t("Calculates the sum of the products of corresponding entries in equal-sized ranges."),args:[arg("range1 (number, range<number>)",_t("The first range whose entries will be multiplied with corresponding entries in the other ranges.")),arg("range2 (number, range<number>, repeating)",_t("The other range whose entries will be multiplied with corresponding entries in the other ranges.")),],compute:function(...args){assertSameDimensions(_t("All the ranges must have the same dimensions."),...args);const _args=args.map(toMatrix);let result=0;for(let col=0;col<_args[0].length;col++){for(let row=0;row<_args[0][col].length;row++){if(!_args.every((range)=>typeof range[col][row].value==="number")){continue;}
let product=1;for(const range of _args){product*=toNumber(range[col][row],this.locale);}
result+=product;}}
return result;},isExported:true,};function getSumXAndY(arrayX,arrayY,cb){assertSameDimensions("The arguments array_x and array_y must have the same dimensions.",arrayX,arrayY);const _arrayX=toMatrix(arrayX);const _arrayY=toMatrix(arrayY);let validPairFound=false;let result=0;for(const col in _arrayX){for(const row in _arrayX[col]){const arrayXValue=_arrayX[col][row].value;const arrayYValue=_arrayY[col][row].value;if(typeof arrayXValue!=="number"||typeof arrayYValue!=="number"){continue;}
validPairFound=true;result+=cb(arrayXValue,arrayYValue);}}
if(!validPairFound){throw new EvaluationError(_t("The arguments array_x and array_y must contain at least one pair of numbers."));}
return result;}
const SUMX2MY2={description:_t("Calculates the sum of the difference of the squares of the values in two array."),args:[arg("array_x (number, range<number>)",_t("The array or range of values whose squares will be reduced by the squares of corresponding entries in array_y and added together.")),arg("array_y (number, range<number>)",_t("The array or range of values whose squares will be subtracted from the squares of corresponding entries in array_x and added together.")),],compute:function(arrayX,arrayY){return getSumXAndY(arrayX,arrayY,(x,y)=>x**2-y**2);},isExported:true,};const SUMX2PY2={description:_t("Calculates the sum of the sum of the squares of the values in two array."),args:[arg("array_x (number, range<number>)",_t("The array or range of values whose squares will be added to the squares of corresponding entries in array_y and added together.")),arg("array_y (number, range<number>)",_t("The array or range of values whose squares will be added to the squares of corresponding entries in array_x and added together.")),],compute:function(arrayX,arrayY){return getSumXAndY(arrayX,arrayY,(x,y)=>x**2+y**2);},isExported:true,};const SUMXMY2={description:_t("Calculates the sum of squares of the differences of values in two array."),args:[arg("array_x (number, range<number>)",_t("The array or range of values that will be reduced by corresponding entries in array_y, squared, and added together.")),arg("array_y (number, range<number>)",_t("The array or range of values that will be subtracted from corresponding entries in array_x, the result squared, and all such results added together.")),],compute:function(arrayX,arrayY){return getSumXAndY(arrayX,arrayY,(x,y)=>(x-y)**2);},isExported:true,};const TO_COL_ROW_DEFAULT_IGNORE=0;const TO_COL_ROW_DEFAULT_SCAN=false;const TO_COL_ROW_ARGS=[arg("array (any, range<any>)",_t("The array which will be transformed.")),arg(`ignore (number, default=${TO_COL_ROW_DEFAULT_IGNORE})`,_t("The control to ignore blanks and errors. 0 (default) is to keep all values, 1 is to ignore blanks, 2 is to ignore errors, and 3 is to ignore blanks and errors.")),arg(`scan_by_column (number, default=${TO_COL_ROW_DEFAULT_SCAN})`,_t("Whether the array should be scanned by column. True scans the array by column and false (default) \
      scans the array by row.")),];function shouldKeepValue(ignore){const _ignore=Math.trunc(ignore);if(_ignore===0){return()=>true;}
if(_ignore===1){return(data)=>data.value!==null;}
if(_ignore===2){return(data)=>!isEvaluationError(data.value);}
if(_ignore===3){return(data)=>data.value!==null&&!isEvaluationError(data.value);}
throw new EvaluationError(_t("Argument ignore must be between 0 and 3"));}
const TOCOL={description:_t("Transforms a range of cells into a single column."),args:TO_COL_ROW_ARGS,compute:function(array,ignore={value:TO_COL_ROW_DEFAULT_IGNORE},scanByColumn={value:TO_COL_ROW_DEFAULT_SCAN}){const _array=toMatrix(array);const _ignore=toNumber(ignore.value,this.locale);const _scanByColumn=toBoolean(scanByColumn.value);const result=(_scanByColumn?_array:transposeMatrix(_array)).flat().filter(shouldKeepValue(_ignore));if(result.length===0){throw new NotAvailableError(_t("No results for the given arguments of TOCOL."));}
return[result];},isExported:true,};const TOROW={description:_t("Transforms a range of cells into a single row."),args:TO_COL_ROW_ARGS,compute:function(array,ignore={value:TO_COL_ROW_DEFAULT_IGNORE},scanByColumn={value:TO_COL_ROW_DEFAULT_SCAN}){const _array=toMatrix(array);const _ignore=toNumber(ignore.value,this.locale);const _scanByColumn=toBoolean(scanByColumn.value);const result=(_scanByColumn?_array:transposeMatrix(_array)).flat().filter(shouldKeepValue(_ignore)).map((item)=>[item]);if(result.length===0||result[0].length===0){throw new NotAvailableError(_t("No results for the given arguments of TOROW."));}
return result;},isExported:true,};const TRANSPOSE={description:_t("Transposes the rows and columns of a range."),args:[arg("range (any, range<any>)",_t("The range to be transposed."))],compute:function(arg){const _array=toMatrix(arg);const nbColumns=_array[0].length;const nbRows=_array.length;return generateMatrix(nbColumns,nbRows,(col,row)=>_array[row][col]);},isExported:true,};const VSTACK={description:_t("Appends ranges vertically and in sequence to return a larger array."),args:[arg("range1 (any, range<any>)",_t("The first range to be appended.")),arg("range2 (any, range<any>, repeating)",_t("Additional ranges to add to range1.")),],compute:function(...ranges){const nbColumns=Math.max(...ranges.map((range)=>toMatrix(range).length));const nbRows=ranges.reduce((acc,range)=>acc+toMatrix(range)[0].length,0);const result=Array(nbColumns).fill([]).map(()=>Array(nbRows).fill({value:0}));let currentRow=0;for(const range of ranges){const _array=toMatrix(range);for(let col=0;col<_array.length;col++){for(let row=0;row<_array[col].length;row++){result[col][currentRow+row]=_array[col][row];}}
currentRow+=_array[0].length;}
return result;},isExported:true,};const WRAPCOLS={description:_t("Wraps the provided row or column of cells by columns after a specified number of elements to form a new array."),args:[arg("range (any, range<any>)",_t("The range to wrap.")),arg("wrap_count (number)",_t("The maximum number of cells for each column, rounded down to the nearest whole number.")),arg("pad_with  (any, default=0)",_t("The value with which to fill the extra cells in the range.")),],compute:function(range,wrapCount,padWith={value:0}){const _array=toMatrix(range);const nbRows=toInteger(wrapCount?.value,this.locale);assertSingleColOrRow(_t("Argument range must be a single row or column."),_array);const array=_array.flat();const nbColumns=Math.ceil(array.length/nbRows);return generateMatrix(nbColumns,nbRows,(col,row)=>{const index=col*nbRows+row;return index<array.length?array[index]:padWith;});},isExported:true,};const WRAPROWS={description:_t("Wraps the provided row or column of cells by rows after a specified number of elements to form a new array."),args:[arg("range (any, range<any>)",_t("The range to wrap.")),arg("wrap_count (number)",_t("The maximum number of cells for each row, rounded down to the nearest whole number.")),arg("pad_with  (any, default=0)",_t("The value with which to fill the extra cells in the range.")),],compute:function(range,wrapCount,padWith={value:0}){const _array=toMatrix(range);const nbColumns=toInteger(wrapCount?.value,this.locale);assertSingleColOrRow(_t("Argument range must be a single row or column."),_array);const array=_array.flat();const nbRows=Math.ceil(array.length/nbColumns);return generateMatrix(nbColumns,nbRows,(col,row)=>{const index=row*nbColumns+col;return index<array.length?array[index]:padWith;});},isExported:true,};var array=Object.freeze({__proto__:null,ARRAY_CONSTRAIN:ARRAY_CONSTRAIN,CHOOSECOLS:CHOOSECOLS,CHOOSEROWS:CHOOSEROWS,EXPAND:EXPAND,FLATTEN:FLATTEN,FREQUENCY:FREQUENCY,HSTACK:HSTACK,MDETERM:MDETERM,MINVERSE:MINVERSE,MMULT:MMULT,SUMPRODUCT:SUMPRODUCT,SUMX2MY2:SUMX2MY2,SUMX2PY2:SUMX2PY2,SUMXMY2:SUMXMY2,TOCOL:TOCOL,TOROW:TOROW,TRANSPOSE:TRANSPOSE,VSTACK:VSTACK,WRAPCOLS:WRAPCOLS,WRAPROWS:WRAPROWS});const FORMAT_LARGE_NUMBER={description:_t("Apply a large number format"),args:[arg("value (number)",_t("The number.")),arg("unit (string, optional)",_t("The formatting unit. Use 'k', 'm', or 'b' to force the unit")),],compute:function(value,unite){return{value:toNumber(value,this.locale),format:formatLargeNumber(value,unite,this.locale),};},};var misc=Object.freeze({__proto__:null,FORMAT_LARGE_NUMBER:FORMAT_LARGE_NUMBER});const DEFAULT_FACTOR=1;const DEFAULT_MODE=0;const DEFAULT_PLACES=0;const DEFAULT_SIGNIFICANCE=1;const DECIMAL_REPRESENTATION=/^-?[a-z0-9]+$/i;const ABS={description:_t("Absolute value of a number."),args:[arg("value (number)",_t("The number of which to return the absolute value."))],compute:function(value){return Math.abs(toNumber(value,this.locale));},isExported:true,};const ACOS={description:_t("Inverse cosine of a value, in radians."),args:[arg("value (number)",_t("The value for which to calculate the inverse cosine. Must be between -1 and 1, inclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>Math.abs(_value)<=1,_t("The value (%s) must be between -1 and 1 inclusive.",_value.toString()));return Math.acos(_value);},isExported:true,};const ACOSH={description:_t("Inverse hyperbolic cosine of a number."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic cosine. Must be greater than or equal to 1.")),],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>_value>=1,_t("The value (%s) must be greater than or equal to 1.",_value.toString()));return Math.acosh(_value);},isExported:true,};const ACOT={description:_t("Inverse cotangent of a value."),args:[arg("value (number)",_t("The value for which to calculate the inverse cotangent."))],compute:function(value){const _value=toNumber(value,this.locale);const sign=Math.sign(_value)||1;return(sign*Math.PI)/2-Math.atan(_value);},isExported:true,};const ACOTH={description:_t("Inverse hyperbolic cotangent of a value."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic cotangent. Must not be between -1 and 1, inclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>Math.abs(_value)>1,_t("The value (%s) cannot be between -1 and 1 inclusive.",_value.toString()));return Math.log((_value+1)/(_value-1))/2;},isExported:true,};const ASIN={description:_t("Inverse sine of a value, in radians."),args:[arg("value (number)",_t("The value for which to calculate the inverse sine. Must be between -1 and 1, inclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>Math.abs(_value)<=1,_t("The value (%s) must be between -1 and 1 inclusive.",_value.toString()));return Math.asin(_value);},isExported:true,};const ASINH={description:_t("Inverse hyperbolic sine of a number."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic sine.")),],compute:function(value){return Math.asinh(toNumber(value,this.locale));},isExported:true,};const ATAN={description:_t("Inverse tangent of a value, in radians."),args:[arg("value (number)",_t("The value for which to calculate the inverse tangent."))],compute:function(value){return Math.atan(toNumber(value,this.locale));},isExported:true,};const ATAN2={description:_t("Angle from the X axis to a point (x,y), in radians."),args:[arg("x (number)",_t("The x coordinate of the endpoint of the line segment for which to calculate the angle from the x-axis.")),arg("y (number)",_t("The y coordinate of the endpoint of the line segment for which to calculate the angle from the x-axis.")),],compute:function(x,y){const _x=toNumber(x,this.locale);const _y=toNumber(y,this.locale);assert(()=>_x!==0||_y!==0,_t("Function [[FUNCTION_NAME]] caused a divide by zero error."),CellErrorType.DivisionByZero);return Math.atan2(_y,_x);},isExported:true,};const ATANH={description:_t("Inverse hyperbolic tangent of a number."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic tangent. Must be between -1 and 1, exclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>Math.abs(_value)<1,_t("The value (%s) must be between -1 and 1 exclusive.",_value.toString()));return Math.atanh(_value);},isExported:true,};const CEILING={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("value (number)",_t("The value to round up to the nearest integer multiple of factor.")),arg(`factor (number, default=${DEFAULT_FACTOR})`,_t("The number to whose multiples value will be rounded.")),],compute:function(value,factor={value:DEFAULT_FACTOR}){const _value=toNumber(value,this.locale);const _factor=toNumber(factor,this.locale);assert(()=>_factor>=0||_value<=0,_t("The factor (%s) must be positive when the value (%s) is positive.",_factor.toString(),_value.toString()));return{value:_factor?Math.ceil(_value/_factor)*_factor:0,format:value?.format,};},isExported:true,};function ceilingMath(number,significance,mode=0){if(significance===0){return 0;}
significance=Math.abs(significance);if(number>=0){return Math.ceil(number/significance)*significance;}
if(mode===0){return-Math.floor(Math.abs(number)/significance)*significance;}
return-Math.ceil(Math.abs(number)/significance)*significance;}
const CEILING_MATH={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round up to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded. The sign of significance will be ignored.")),arg(`mode (number, default=${DEFAULT_MODE})`,_t("If number is negative, specifies the rounding direction. If 0 or blank, it is rounded towards zero. Otherwise, it is rounded away from zero.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE},mode={value:DEFAULT_MODE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);const _mode=toNumber(mode,this.locale);return{value:ceilingMath(_number,_significance,_mode),format:number?.format,};},isExported:true,};const CEILING_PRECISE={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round up to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);return{value:ceilingMath(_number,_significance),format:number?.format,};},isExported:true,};const COS={description:_t("Cosine of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the cosine of, in radians."))],compute:function(angle){return Math.cos(toNumber(angle,this.locale));},isExported:true,};const COSH={description:_t("Hyperbolic cosine of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic cosine of."))],compute:function(value){return Math.cosh(toNumber(value,this.locale));},isExported:true,};const COT={description:_t("Cotangent of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the cotangent of, in radians."))],compute:function(angle){const _angle=toNumber(angle,this.locale);assertNotZero(_angle);return 1/Math.tan(_angle);},isExported:true,};const COTH={description:_t("Hyperbolic cotangent of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic cotangent of."))],compute:function(value){const _value=toNumber(value,this.locale);assertNotZero(_value);return 1/Math.tanh(_value);},isExported:true,};const COUNTBLANK={description:_t("Number of empty values."),args:[arg("value1 (any, range)",_t("The first value or range in which to count the number of blanks.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges in which to count the number of blanks.")),],compute:function(...args){return reduceAny(args,(acc,a)=>{if(a===undefined){return acc+1;}
if(a.value===null){return acc+1;}
if(a.value===""){return acc+1;}
return acc;},0);},isExported:true,};const COUNTIF={description:_t("A conditional count across a range."),args:[arg("range (range)",_t("The range that is tested against criterion.")),arg("criterion (string)",_t("The pattern or test to apply to range.")),],compute:function(...args){let count=0;visitMatchingRanges(args,(i,j)=>{count+=1;},this.locale);return count;},isExported:true,};const COUNTIFS={description:_t("Count values depending on multiple criteria."),args:[arg("criteria_range1 (range)",_t("The range to check against criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("Additional criteria to check.")),],compute:function(...args){let count=0;visitMatchingRanges(args,(i,j)=>{count+=1;},this.locale);return count;},isExported:true,};const COUNTUNIQUE={description:_t("Counts number of unique values in a range."),args:[arg("value1 (any, range)",_t("The first value or range to consider for uniqueness.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider for uniqueness.")),],compute:function(...args){return countUnique(args);},};const COUNTUNIQUEIFS={description:_t("Counts number of unique values in a range, filtered by a set of criteria."),args:[arg("range (range)",_t("The range of cells from which the number of unique values will be counted.")),arg("criteria_range1 (range)",_t("The range of cells over which to evaluate criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1, such that each cell that evaluates to TRUE will be included in the filtered set.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(range,...args){let uniqueValues=new Set();visitMatchingRanges(args,(i,j)=>{const data=range[i]?.[j];if(isDataNonEmpty(data)){uniqueValues.add(data.value);}},this.locale);return uniqueValues.size;},};const CSC={description:_t("Cosecant of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the cosecant of, in radians."))],compute:function(angle){const _angle=toNumber(angle,this.locale);assertNotZero(_angle);return 1/Math.sin(_angle);},isExported:true,};const CSCH={description:_t("Hyperbolic cosecant of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic cosecant of."))],compute:function(value){const _value=toNumber(value,this.locale);assertNotZero(_value);return 1/Math.sinh(_value);},isExported:true,};const DECIMAL={description:_t("Converts from another base to decimal."),args:[arg("value (string)",_t("The number to convert.")),arg("base (number)",_t("The base to convert the value from.")),],compute:function(value,base){let _base=toNumber(base,this.locale);_base=Math.floor(_base);assert(()=>2<=_base&&_base<=36,_t("The base (%s) must be between 2 and 36 inclusive.",_base.toString()));const _value=toString(value);if(_value===""){return 0;}
assert(()=>!!DECIMAL_REPRESENTATION.test(_value),_t("The value (%s) must be a valid base %s representation.",_value,_base.toString()));const deci=parseInt(_value,_base);assert(()=>!isNaN(deci),_t("The value (%s) must be a valid base %s representation.",_value,_base.toString()));return deci;},isExported:true,};const DEGREES={description:_t("Converts an angle value in radians to degrees."),args:[arg("angle (number)",_t("The angle to convert from radians to degrees."))],compute:function(angle){return(toNumber(angle,this.locale)*180)/Math.PI;},isExported:true,};const EXP={description:_t("Euler's number, e (~2.718) raised to a power."),args:[arg("value (number)",_t("The exponent to raise e."))],compute:function(value){return Math.exp(toNumber(value,this.locale));},isExported:true,};const FLOOR={description:_t("Rounds number down to nearest multiple of factor."),args:[arg("value (number)",_t("The value to round down to the nearest integer multiple of factor.")),arg(`factor (number, default=${DEFAULT_FACTOR})`,_t("The number to whose multiples value will be rounded.")),],compute:function(value,factor={value:DEFAULT_FACTOR}){const _value=toNumber(value,this.locale);const _factor=toNumber(factor,this.locale);assert(()=>_factor>=0||_value<=0,_t("The factor (%s) must be positive when the value (%s) is positive.",_factor.toString(),_value.toString()));return{value:_factor?Math.floor(_value/_factor)*_factor:0,format:value?.format,};},isExported:true,};function floorMath(number,significance,mode=0){if(significance===0){return 0;}
significance=Math.abs(significance);if(number>=0){return Math.floor(number/significance)*significance;}
if(mode===0){return-Math.ceil(Math.abs(number)/significance)*significance;}
return-Math.floor(Math.abs(number)/significance)*significance;}
const FLOOR_MATH={description:_t("Rounds number down to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round down to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded. The sign of significance will be ignored.")),arg(`mode (number, default=${DEFAULT_MODE})`,_t("If number is negative, specifies the rounding direction. If 0 or blank, it is rounded away from zero. Otherwise, it is rounded towards zero.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE},mode={value:DEFAULT_MODE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);const _mode=toNumber(mode,this.locale);return{value:floorMath(_number,_significance,_mode),format:number?.format,};},isExported:true,};const FLOOR_PRECISE={description:_t("Rounds number down to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round down to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);return{value:floorMath(_number,_significance),format:number?.format,};},isExported:true,};const ISEVEN={description:_t("Whether the provided value is even."),args:[arg("value (number)",_t("The value to be verified as even."))],compute:function(value){const _value=strictToNumber(value,this.locale);return Math.floor(Math.abs(_value))&1?false:true;},isExported:true,};const ISO_CEILING={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round up to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE}){const _number=toNumber(number,this.locale);const _significance=toNumber(significance,this.locale);return{value:ceilingMath(_number,_significance),format:number?.format,};},isExported:true,};const ISODD={description:_t("Whether the provided value is even."),args:[arg("value (number)",_t("The value to be verified as even."))],compute:function(value){const _value=strictToNumber(value,this.locale);return Math.floor(Math.abs(_value))&1?true:false;},isExported:true,};const LN={description:_t("The logarithm of a number, base e (euler's number)."),args:[arg("value (number)",_t("The value for which to calculate the logarithm, base e."))],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>_value>0,_t("The value (%s) must be strictly positive.",_value.toString()));return Math.log(_value);},isExported:true,};function mod(dividend,divisor){assert(()=>divisor!==0,_t("The divisor must be different from 0."),CellErrorType.DivisionByZero);const modulus=dividend%divisor;if((modulus>0&&divisor<0)||(modulus<0&&divisor>0)){return modulus+divisor;}
return modulus;}
const MOD={description:_t("Modulo (remainder) operator."),args:[arg("dividend (number)",_t("The number to be divided to find the remainder.")),arg("divisor (number)",_t("The number to divide by.")),],compute:function(dividend,divisor){const _divisor=toNumber(divisor,this.locale);const _dividend=toNumber(dividend,this.locale);return{value:mod(_dividend,_divisor),format:dividend?.format,};},isExported:true,};const MUNIT={description:_t("Returns a n x n unit matrix, where n is the input dimension."),args:[arg("dimension (number)",_t("An integer specifying the dimension size of the unit matrix. It must be positive.")),],compute:function(n){const _n=toInteger(n,this.locale);assertPositive(_t("The argument dimension must be positive"),_n);return getUnitMatrix(_n);},isExported:true,};const ODD={description:_t("Rounds a number up to the nearest odd integer."),args:[arg("value (number)",_t("The value to round to the next greatest odd number."))],compute:function(value){const _value=toNumber(value,this.locale);let temp=Math.ceil(Math.abs(_value));temp=temp&1?temp:temp+1;return{value:_value<0?-temp:temp,format:value?.format,};},isExported:true,};const PI={description:_t("The number pi."),args:[],compute:function(){return Math.PI;},isExported:true,};const POWER={description:_t("A number raised to a power."),args:[arg("base (number)",_t("The number to raise to the exponent power.")),arg("exponent (number)",_t("The exponent to raise base to.")),],compute:function(base,exponent){const _base=toNumber(base,this.locale);const _exponent=toNumber(exponent,this.locale);assert(()=>_base>=0||Number.isInteger(_exponent),_t("The exponent (%s) must be an integer when the base is negative.",_exponent.toString()));return{value:Math.pow(_base,_exponent),format:base?.format};},isExported:true,};const PRODUCT={description:_t("Result of multiplying a series of numbers together."),args:[arg("factor1 (number, range<number>)",_t("The first number or range to calculate for the product.")),arg("factor2 (number, range<number>, repeating)",_t("More numbers or ranges to calculate for the product.")),],compute:function(...factors){let count=0;let acc=1;for(let n of factors){if(isMatrix(n)){for(let i of n){for(let j of i){const f=j.value;if(typeof f==="number"){acc*=f;count+=1;}
if(isEvaluationError(f)){throw j;}}}}
else if(n!==undefined&&n.value!==null){acc*=strictToNumber(n,this.locale);count+=1;}}
return{value:count===0?0:acc,format:inferFormat(factors[0]),};},isExported:true,};const RAND={description:_t("A random number between 0 inclusive and 1 exclusive."),args:[],compute:function(){return Math.random();},isExported:true,};const RANDARRAY={description:_t("Returns a grid of random numbers between 0 inclusive and 1 exclusive."),args:[arg("rows (number, default=1)",_t("The number of rows to be returned.")),arg("columns (number, default=1)",_t("The number of columns to be returned.")),arg("min (number, default=0)",_t("The minimum number you would like returned.")),arg("max (number, default=1)",_t("The maximum number you would like returned.")),arg("whole_number (number, default=FALSE)",_t("Return a whole number or a decimal value.")),],compute:function(rows={value:1},columns={value:1},min={value:0},max={value:1},wholeNumber={value:false}){const _cols=toInteger(columns,this.locale);const _rows=toInteger(rows,this.locale);const _min=toNumber(min,this.locale);const _max=toNumber(max,this.locale);const _whole_number=toBoolean(wholeNumber);assertPositive(_t("The number of columns (%s) must be positive.",_cols.toString()),_cols);assertPositive(_t("The number of rows (%s) must be positive.",_rows.toString()),_rows);assert(()=>_min<=_max,_t("The maximum (%s) must be greater than or equal to the minimum (%s).",_max.toString(),_min.toString()));if(_whole_number){assert(()=>Number.isInteger(_min)&&Number.isInteger(_max),_t("The maximum (%s) and minimum (%s) must be integers when whole_number is TRUE.",_max.toString(),_min.toString()));}
const result=Array(_cols);for(let col=0;col<_cols;col++){result[col]=Array(_rows);for(let row=0;row<_rows;row++){if(!_whole_number){result[col][row]=_min+Math.random()*(_max-_min);}
else{result[col][row]=Math.floor(Math.random()*(_max-_min+1)+_min);}}}
return result;},isExported:true,};const RANDBETWEEN={description:_t("Random integer between two values, inclusive."),args:[arg("low (number)",_t("The low end of the random range.")),arg("high (number)",_t("The high end of the random range.")),],compute:function(low,high){let _low=toNumber(low,this.locale);if(!Number.isInteger(_low)){_low=Math.ceil(_low);}
let _high=toNumber(high,this.locale);if(!Number.isInteger(_high)){_high=Math.floor(_high);}
assert(()=>_low<=_high,_t("The high (%s) must be greater than or equal to the low (%s).",_high.toString(),_low.toString()));return{value:_low+Math.ceil((_high-_low+1)*Math.random())-1,format:low?.format,};},isExported:true,};const ROUND={description:_t("Rounds a number according to standard rules."),args:[arg("value (number)",_t("The value to round to places number of places.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of decimal places to which to round.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);let _places=toNumber(places,this.locale);const absValue=Math.abs(_value);let tempResult;if(_places===0){tempResult=Math.round(absValue);}
else{if(!Number.isInteger(_places)){_places=Math.trunc(_places);}
tempResult=Math.round(absValue*Math.pow(10,_places))/Math.pow(10,_places);}
return{value:_value>=0?tempResult:-tempResult,format:value?.format,};},isExported:true,};const ROUNDDOWN={description:_t("Rounds down a number."),args:[arg("value (number)",_t("The value to round to places number of places, always rounding down.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of decimal places to which to round.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);let _places=toNumber(places,this.locale);const absValue=Math.abs(_value);let tempResult;if(_places===0){tempResult=Math.floor(absValue);}
else{if(!Number.isInteger(_places)){_places=Math.trunc(_places);}
tempResult=Math.floor(absValue*Math.pow(10,_places))/Math.pow(10,_places);}
return{value:_value>=0?tempResult:-tempResult,format:value?.format,};},isExported:true,};const ROUNDUP={description:_t("Rounds up a number."),args:[arg("value (number)",_t("The value to round to places number of places, always rounding up.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of decimal places to which to round.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);let _places=toNumber(places,this.locale);const absValue=Math.abs(_value);let tempResult;if(_places===0){tempResult=Math.ceil(absValue);}
else{if(!Number.isInteger(_places)){_places=Math.trunc(_places);}
tempResult=Math.ceil(absValue*Math.pow(10,_places))/Math.pow(10,_places);}
return{value:_value>=0?tempResult:-tempResult,format:value?.format,};},isExported:true,};const SEC={description:_t("Secant of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the secant of, in radians."))],compute:function(angle){return 1/Math.cos(toNumber(angle,this.locale));},isExported:true,};const SECH={description:_t("Hyperbolic secant of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic secant of."))],compute:function(value){return 1/Math.cosh(toNumber(value,this.locale));},isExported:true,};const SEQUENCE={description:_t("Returns a sequence of numbers."),args:[arg("rows (number)",_t("The number of rows to return")),arg("columns (number, optional, default=1)",_t("The number of columns to return")),arg("start (number, optional, default=1)",_t("The first number in the sequence")),arg("step (number, optional, default=1)",_t("The amount to increment each value in the sequence")),],compute:function(rows,columns={value:1},start={value:1},step={value:1}){const _start=toNumber(start,this.locale);const _step=toNumber(step,this.locale);const _rows=toInteger(rows,this.locale);const _columns=toInteger(columns,this.locale);assertPositive(_t("The number of columns (%s) must be positive.",_columns),_columns);assertPositive(_t("The number of rows (%s) must be positive.",_rows),_rows);return generateMatrix(_columns,_rows,(col,row)=>{return{value:_start+row*_columns*_step+col*_step,};});},isExported:true,};const SIN={description:_t("Sine of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the sine of, in radians."))],compute:function(angle){return Math.sin(toNumber(angle,this.locale));},isExported:true,};const SINH={description:_t("Hyperbolic sine of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic sine of."))],compute:function(value){return Math.sinh(toNumber(value,this.locale));},isExported:true,};const SQRT={description:_t("Positive square root of a positive number."),args:[arg("value (number)",_t("The number for which to calculate the positive square root."))],compute:function(value){const _value=toNumber(value,this.locale);assert(()=>_value>=0,_t("The value (%s) must be positive or null.",_value.toString()));return{value:Math.sqrt(_value),format:value?.format};},isExported:true,};const SUM={description:_t("Sum of a series of numbers and/or cells."),args:[arg("value1 (number, range<number>)",_t("The first number or range to add together.")),arg("value2 (number, range<number>, repeating)",_t("Additional numbers or ranges to add to value1.")),],compute:function(...values){const v1=values[0];return{value:sum(values,this.locale),format:inferFormat(v1),};},isExported:true,};const SUMIF={description:_t("A conditional sum across a range."),args:[arg("criteria_range (range)",_t("The range which is tested against criterion.")),arg("criterion (string)",_t("The pattern or test to apply to range.")),arg("sum_range (range, default=criteria_range)",_t("The range to be summed, if different from range.")),],compute:function(criteriaRange,criterion,sumRange){if(sumRange===undefined){sumRange=criteriaRange;}
let sum=0;visitMatchingRanges([criteriaRange,criterion],(i,j)=>{const value=sumRange[i]?.[j]?.value;if(typeof value==="number"){sum+=value;}},this.locale);return sum;},isExported:true,};const SUMIFS={description:_t("Sums a range depending on multiple criteria."),args:[arg("sum_range (range)",_t("The range to sum.")),arg("criteria_range1 (range)",_t("The range to check against criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges to check.")),arg("criterion2 (string, repeating)",_t("Additional criteria to check.")),],compute:function(sumRange,...criters){let sum=0;visitMatchingRanges(criters,(i,j)=>{const value=sumRange[i]?.[j]?.value;if(typeof value==="number"){sum+=value;}},this.locale);return sum;},isExported:true,};const TAN={description:_t("Tangent of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the tangent of, in radians."))],compute:function(angle){return Math.tan(toNumber(angle,this.locale));},isExported:true,};const TANH={description:_t("Hyperbolic tangent of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic tangent of."))],compute:function(value){return Math.tanh(toNumber(value,this.locale));},isExported:true,};function trunc(value,places){if(places===0){return Math.trunc(value);}
if(!Number.isInteger(places)){places=Math.trunc(places);}
return Math.trunc(value*Math.pow(10,places))/Math.pow(10,places);}
const TRUNC={description:_t("Truncates a number."),args:[arg("value (number)",_t("The value to be truncated.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of significant digits to the right of the decimal point to retain.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);const _places=toNumber(places,this.locale);return{value:trunc(_value,_places),format:value?.format};},isExported:true,};const INT={description:_t("Rounds a number down to the nearest integer that is less than or equal to it."),args:[arg("value (number)",_t("The number to round down to the nearest integer."))],compute:function(value){return Math.floor(toNumber(value,this.locale));},isExported:true,};var math=Object.freeze({__proto__:null,ABS:ABS,ACOS:ACOS,ACOSH:ACOSH,ACOT:ACOT,ACOTH:ACOTH,ASIN:ASIN,ASINH:ASINH,ATAN:ATAN,ATAN2:ATAN2,ATANH:ATANH,CEILING:CEILING,CEILING_MATH:CEILING_MATH,CEILING_PRECISE:CEILING_PRECISE,COS:COS,COSH:COSH,COT:COT,COTH:COTH,COUNTBLANK:COUNTBLANK,COUNTIF:COUNTIF,COUNTIFS:COUNTIFS,COUNTUNIQUE:COUNTUNIQUE,COUNTUNIQUEIFS:COUNTUNIQUEIFS,CSC:CSC,CSCH:CSCH,DECIMAL:DECIMAL,DEGREES:DEGREES,EXP:EXP,FLOOR:FLOOR,FLOOR_MATH:FLOOR_MATH,FLOOR_PRECISE:FLOOR_PRECISE,INT:INT,ISEVEN:ISEVEN,ISODD:ISODD,ISO_CEILING:ISO_CEILING,LN:LN,MOD:MOD,MUNIT:MUNIT,ODD:ODD,PI:PI,POWER:POWER,PRODUCT:PRODUCT,RAND:RAND,RANDARRAY:RANDARRAY,RANDBETWEEN:RANDBETWEEN,ROUND:ROUND,ROUNDDOWN:ROUNDDOWN,ROUNDUP:ROUNDUP,SEC:SEC,SECH:SECH,SEQUENCE:SEQUENCE,SIN:SIN,SINH:SINH,SQRT:SQRT,SUM:SUM,SUMIF:SUMIF,SUMIFS:SUMIFS,TAN:TAN,TANH:TANH,TRUNC:TRUNC});function filterAndFlatData(dataY,dataX){const _flatDataY=[];const _flatDataX=[];let lenY=0;let lenX=0;visitAny([dataY],(y)=>{_flatDataY.push(y);lenY+=1;});visitAny([dataX],(x)=>{_flatDataX.push(x);lenX+=1;});assert(()=>lenY===lenX,_t("[[FUNCTION_NAME]] has mismatched argument count %s vs %s.",lenY,lenX));const flatDataX=[];const flatDataY=[];for(let i=0;i<lenY;i++){const valueY=_flatDataY[i]?.value;const valueX=_flatDataX[i]?.value;if(typeof valueY==="number"&&typeof valueX==="number"){flatDataY.push(valueY);flatDataX.push(valueX);}}
return{flatDataX,flatDataY};}
function covariance(dataY,dataX,isSample){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const count=flatDataY.length;assert(()=>count!==0&&(!isSample||count!==1),_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."),CellErrorType.DivisionByZero);let sumY=0;let sumX=0;for(let i=0;i<count;i++){sumY+=flatDataY[i];sumX+=flatDataX[i];}
const averageY=sumY/count;const averageX=sumX/count;let acc=0;for(let i=0;i<count;i++){acc+=(flatDataY[i]-averageY)*(flatDataX[i]-averageX);}
return acc/(count-(isSample?1:0));}
function variance(args,isSample,textAs0,locale){let count=0;let sum=0;const reduceFunction=textAs0?reduceNumbersTextAs0:reduceNumbers;sum=reduceFunction(args,(acc,a)=>{count+=1;return acc+a;},0,locale);assert(()=>count!==0&&(!isSample||count!==1),_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."),CellErrorType.DivisionByZero);const average=sum/count;return(reduceFunction(args,(acc,a)=>acc+Math.pow(a-average,2),0,locale)/(count-(isSample?1:0)));}
function centile(data,percent,isInclusive,locale){const _percent=toNumber(percent,locale);assert(()=>(isInclusive?0<=_percent&&_percent<=1:0<_percent&&_percent<1),_t("Function [[FUNCTION_NAME]] parameter 2 value is out of range."));let sortedArray=[];let index;let count=0;visitAny(data,(d)=>{const value=d?.value;if(typeof value==="number"){index=dichotomicSearch(sortedArray,d,"nextSmaller","asc",sortedArray.length,(array,i)=>array[i]);sortedArray.splice(index+1,0,value);count++;}});assert(()=>count!==0,_t("[[FUNCTION_NAME]] has no valid input data."));if(!isInclusive){assert(()=>1/(count+1)<=_percent&&_percent<=count/(count+1),_t("Function [[FUNCTION_NAME]] parameter 2 value is out of range."));}
return percentile(sortedArray,_percent,isInclusive);}
const AVEDEV={description:_t("Average magnitude of deviations from mean."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...values){let count=0;const sum=reduceNumbers(values,(acc,a)=>{count+=1;return acc+a;},0,this.locale);assertNotZero(count);const average=sum/count;return reduceNumbers(values,(acc,a)=>acc+Math.abs(average-a),0,this.locale)/count;},isExported:true,};const AVERAGE={description:_t("Numerical average value in a dataset, ignoring text."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the average value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the average value.")),],compute:function(...values){return{value:average(values,this.locale),format:inferFormat(values[0]),};},isExported:true,};const rangeError=_t("[[FUNCTION_NAME]] has mismatched range sizes.");const negativeWeightError=_t("[[FUNCTION_NAME]] expects the weight to be positive or equal to 0.");const AVERAGE_WEIGHTED={description:_t("Weighted average."),args:[arg("values (number, range<number>)",_t("Values to average.")),arg("weights (number, range<number>)",_t("Weights for each corresponding value.")),arg("additional_values (number, range<number>, repeating)",_t("Additional values to average.")),arg("additional_weights (number, range<number>, repeating)",_t("Additional weights.")),],compute:function(...args){let sum=0;let count=0;for(let n=0;n<args.length-1;n+=2){const argN=args[n];const argN1=args[n+1];assertSameDimensions(rangeError,argN,argN1);if(isMatrix(argN)){for(let i=0;i<argN.length;i++){for(let j=0;j<argN[0].length;j++){const value=argN[i][j].value;const weight=isMatrix(argN1)?argN1?.[i][j].value:toNumber(argN1,this.locale);const valueIsNumber=typeof value==="number";const weightIsNumber=typeof weight==="number";if(valueIsNumber&&weightIsNumber){assert(()=>weight>=0,negativeWeightError);sum+=value*weight;count+=weight;continue;}
assert(()=>valueIsNumber===weightIsNumber,_t("[[FUNCTION_NAME]] expects number values."));}}}
else{const value=toNumber(argN,this.locale);const weight=isMatrix(argN1)?argN1?.[0][0].value:toNumber(argN1,this.locale);if(typeof weight==="number"){assert(()=>weight>=0,negativeWeightError);sum+=value*weight;count+=weight;}}}
assertNotZero(count);return{value:sum/count,format:inferFormat(args[0])};},};const AVERAGEA={description:_t("Numerical average value in a dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the average value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the average value.")),],compute:function(...args){let count=0;const sum=reduceNumbersTextAs0(args,(acc,a)=>{count+=1;return acc+a;},0,this.locale);assertNotZero(count);return{value:sum/count,format:inferFormat(args[0]),};},isExported:true,};const AVERAGEIF={description:_t("Average of values depending on criteria."),args:[arg("criteria_range (number, range<number>)",_t("The range to check against criterion.")),arg("criterion (string)",_t("The pattern or test to apply to criteria_range.")),arg("average_range (number, range<number>, default=criteria_range)",_t("The range to average. If not included, criteria_range is used for the average instead.")),],compute:function(criteriaRange,criterion,averageRange){const _averageRange=averageRange===undefined?toMatrix(criteriaRange):toMatrix(averageRange);let count=0;let sum=0;visitMatchingRanges([criteriaRange,criterion],(i,j)=>{const value=_averageRange[i]?.[j]?.value;if(typeof value==="number"){count+=1;sum+=value;}},this.locale);assertNotZero(count);return sum/count;},isExported:true,};const AVERAGEIFS={description:_t("Average of values depending on multiple criteria."),args:[arg("average_range (range)",_t("The range to average.")),arg("criteria_range1 (range)",_t("The range to check against criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1.")),arg("criteria_range2 (any, range, repeating)",_t("Additional criteria_range and criterion to check.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(averageRange,...args){const _averageRange=toMatrix(averageRange);let count=0;let sum=0;visitMatchingRanges(args,(i,j)=>{const value=_averageRange[i]?.[j]?.value;if(typeof value==="number"){count+=1;sum+=value;}},this.locale);assertNotZero(count);return sum/count;},isExported:true,};const COUNT={description:_t("The number of numeric values in dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when counting.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when counting.")),],compute:function(...values){return countNumbers(values,this.locale);},isExported:true,};const COUNTA={description:_t("The number of values in a dataset."),args:[arg("value1 (any, range)",_t("The first value or range to consider when counting.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider when counting.")),],compute:function(...values){return countAny(values);},isExported:true,};const COVAR={description:_t("The covariance of a dataset."),args:[arg("data_y (any, range)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (any, range)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return covariance(dataY,dataX,false);},isExported:true,};const COVARIANCE_P={description:_t("The covariance of a dataset."),args:[arg("data_y (any, range)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (any, range)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return covariance(dataY,dataX,false);},isExported:true,};const COVARIANCE_S={description:_t("The sample covariance of a dataset."),args:[arg("data_y (any, range)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (any, range)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return covariance(dataY,dataX,true);},isExported:true,};const FORECAST={description:_t("Calculates the expected y-value for a specified x based on a linear regression of a dataset."),args:[arg("x (number, range<number>)",_t("The value(s) on the x-axis to forecast.")),arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(x,dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);return predictLinearValues([flatDataY],[flatDataX],matrixMap(toMatrix(x),(value)=>toNumber(value,this.locale)),true);},isExported:true,};const GROWTH={description:_t("Fits points to exponential growth trend."),args:[arg("known_data_y (range<number>)",_t("The array or range containing dependent (y) values that are already known, used to curve fit an ideal exponential growth curve.")),arg("known_data_x (range<number>, default={1;2;3;...})",_t("The values of the independent variable(s) corresponding with known_data_y.")),arg("new_data_x (any, range, default=known_data_x)",_t("The data points to return the y values for on the ideal curve fit.")),arg("b (boolean, default=TRUE)",_t("Given a general exponential form of y = b*m^x for a curve fit, calculates b if TRUE or forces b to be 1 and only calculates the m values if FALSE.")),],compute:function(knownDataY,knownDataX=[[]],newDataX=[[]],b={value:true}){return expM(predictLinearValues(logM(toNumberMatrix(knownDataY,"the first argument (known_data_y)")),toNumberMatrix(knownDataX,"the second argument (known_data_x)"),toNumberMatrix(newDataX,"the third argument (new_data_y)"),toBoolean(b)));},};const INTERCEPT={description:_t("Compute the intercept of the linear regression."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const[[],[intercept]]=fullLinearRegression([flatDataX],[flatDataY]);return intercept;},isExported:true,};const LARGE={description:_t("Nth largest element from a data set."),args:[arg("data (any, range)",_t("Array or range containing the dataset to consider.")),arg("n (number)",_t("The rank from largest to smallest of the element to return.")),],compute:function(data,n){const _n=Math.trunc(toNumber(n?.value,this.locale));let largests=[];let index;let count=0;visitAny([data],(d)=>{if(typeof d?.value==="number"){index=dichotomicSearch(largests,d,"nextSmaller","asc",largests.length,(array,i)=>array[i].value);largests.splice(index+1,0,d);count++;if(count>_n){largests.shift();count--;}}});const result=largests.shift();assert(()=>result!==undefined,_t("[[FUNCTION_NAME]] has no valid input data."));assert(()=>count>=_n,_t("Function [[FUNCTION_NAME]] parameter 2 value (%s) is out of range.",_n));return result;},isExported:true,};const LINEST={description:_t("Given partial data about a linear trend, calculates various parameters about the ideal linear trend using the least-squares method."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>, default={1;2;3;...})",_t("The range representing the array or matrix of independent data.")),arg("calculate_b (boolean, default=TRUE)",_t("A flag specifying wheter to compute the slope or not")),arg("verbose (boolean, default=FALSE)",_t("A flag specifying whether to return additional regression statistics or only the linear coefficients and the y-intercept")),],compute:function(dataY,dataX=[[]],calculateB={value:true},verbose={value:false}){return fullLinearRegression(toNumberMatrix(dataX,"the first argument (data_y)"),toNumberMatrix(dataY,"the second argument (data_x)"),toBoolean(calculateB),toBoolean(verbose));},isExported:true,};const LOGEST={description:_t("Given partial data about an exponential growth curve, calculates various parameters about the best fit ideal exponential growth curve."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>, optional, default={1;2;3;...})",_t("The range representing the array or matrix of independent data.")),arg("calculate_b (boolean, default=TRUE)",_t("A flag specifying wheter to compute the slope or not")),arg("verbose (boolean, default=FALSE)",_t("A flag specifying whether to return additional regression statistics or only the linear coefficients and the y-intercept")),],compute:function(dataY,dataX=[[]],calculateB={value:true},verbose={value:false}){const coeffs=fullLinearRegression(toNumberMatrix(dataX,"the second argument (data_x)"),logM(toNumberMatrix(dataY,"the first argument (data_y)")),toBoolean(calculateB),toBoolean(verbose));for(let i=0;i<coeffs.length;i++){coeffs[i][0]=Math.exp(coeffs[i][0]);}
return coeffs;},isExported:true,};const MATTHEWS={description:_t("Compute the Matthews correlation coefficient of a dataset."),args:[arg("data_x (range)",_t("The range representing the array or matrix of observed data.")),arg("data_y (range)",_t("The range representing the array or matrix of predicted data.")),],compute:function(dataX,dataY){const flatX=dataX.flat();const flatY=dataY.flat();assertSameNumberOfElements(flatX,flatY);if(flatX.length===0){throw new EvaluationError(_t("[[FUNCTION_NAME]] expects non-empty ranges for both parameters."));}
const n=flatX.length;let trueN=0,trueP=0,falseP=0,falseN=0;for(let i=0;i<n;++i){const isTrue1=toBoolean(flatX[i]);const isTrue2=toBoolean(flatY[i]);if(isTrue1===isTrue2){if(isTrue1){trueP++;}
else{trueN++;}}
else{if(isTrue1){falseN++;}
else{falseP++;}}}
return((trueP*trueN-falseP*falseN)/Math.sqrt((trueP+falseP)*(trueP+falseN)*(trueN+falseP)*(trueN+falseN)));},isExported:false,};const MAX={description:_t("Maximum value in a numeric dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the maximum value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the maximum value.")),],compute:function(...values){return max(values,this.locale);},isExported:true,};const MAXA={description:_t("Maximum numeric value in a dataset."),args:[arg("value1 (any, range)",_t("The first value or range to consider when calculating the maximum value.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider when calculating the maximum value.")),],compute:function(...args){const maxa=reduceNumbersTextAs0(args,(acc,a)=>{return Math.max(a,acc);},-Infinity,this.locale);return{value:maxa===-Infinity?0:maxa,format:inferFormat(args[0])};},isExported:true,};const MAXIFS={description:_t("Returns the maximum value in a range of cells, filtered by a set of criteria."),args:[arg("range (range)",_t("The range of cells from which the maximum will be determined.")),arg("criteria_range1 (range)",_t("The range of cells over which to evaluate criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1, such that each cell that evaluates to TRUE will be included in the filtered set.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(range,...args){let result=-Infinity;visitMatchingRanges(args,(i,j)=>{const value=range[i]?.[j]?.value;if(typeof value==="number"){result=result<value?value:result;}},this.locale);return result===-Infinity?0:result;},isExported:true,};const MEDIAN={description:_t("Median value in a numeric dataset."),args:[arg("value1 (any, range)",_t("The first value or range to consider when calculating the median value.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider when calculating the median value.")),],compute:function(...values){let data=[];visitNumbers(values,(value)=>{data.push(value);},this.locale);return{value:centile(data,{value:0.5},true,this.locale),format:inferFormat(data[0]),};},isExported:true,};const MIN={description:_t("Minimum value in a numeric dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the minimum value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the minimum value.")),],compute:function(...values){return min(values,this.locale);},isExported:true,};const MINA={description:_t("Minimum numeric value in a dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the minimum value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the minimum value.")),],compute:function(...args){const mina=reduceNumbersTextAs0(args,(acc,a)=>{return Math.min(a,acc);},Infinity,this.locale);return{value:mina===Infinity?0:mina,format:inferFormat(args[0])};},isExported:true,};const MINIFS={description:_t("Returns the minimum value in a range of cells, filtered by a set of criteria."),args:[arg("range (range)",_t("The range of cells from which the minimum will be determined.")),arg("criteria_range1 (range)",_t("The range of cells over which to evaluate criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1, such that each cell that evaluates to TRUE will be included in the filtered set.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(range,...args){let result=Infinity;visitMatchingRanges(args,(i,j)=>{const value=range[i]?.[j]?.value;if(typeof value==="number"){result=result>value?value:result;}},this.locale);return result===Infinity?0:result;},isExported:true,};function pearson(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);if(flatDataX.length===0){throw new EvaluationError(_t("[[FUNCTION_NAME]] expects non-empty ranges for both parameters."));}
if(flatDataX.length<2){throw new EvaluationError(_t("[[FUNCTION_NAME]] needs at least two values for both parameters."));}
const n=flatDataX.length;let sumX=0,sumY=0,sumXY=0,sumXX=0,sumYY=0;for(let i=0;i<n;i++){const xij=flatDataX[i];const yij=flatDataY[i];sumX+=xij;sumY+=yij;sumXY+=xij*yij;sumXX+=xij*xij;sumYY+=yij*yij;}
return((n*sumXY-sumX*sumY)/Math.sqrt((n*sumXX-sumX*sumX)*(n*sumYY-sumY*sumY)));}
const PEARSON={description:_t("Compute the Pearson product-moment correlation coefficient of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return pearson(dataY,dataX);},isExported:true,};const CORREL=PEARSON;const PERCENTILE={description:_t("Value at a given percentile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("percentile (number)",_t("The percentile whose value within data will be calculated and returned.")),],compute:function(data,percentile){return PERCENTILE_INC.compute.bind(this)(data,percentile);},isExported:true,};const PERCENTILE_EXC={description:_t("Value at a given percentile of a dataset exclusive of 0 and 1."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("percentile (number)",_t("The percentile, exclusive of 0 and 1, whose value within 'data' will be calculated and returned.")),],compute:function(data,percentile){return{value:centile([data],percentile,false,this.locale),format:inferFormat(data),};},isExported:true,};const PERCENTILE_INC={description:_t("Value at a given percentile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("percentile (number)",_t("The percentile whose value within data will be calculated and returned.")),],compute:function(data,percentile){return{value:centile([data],percentile,true,this.locale),format:inferFormat(data),};},isExported:true,};const POLYFIT_COEFFS={description:_t("Compute the coefficients of polynomial regression of the dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),arg("order (number)",_t("The order of the polynomial to fit the data, between 1 and 6.")),arg("intercept (boolean, default=TRUE)",_t("A flag specifying whether to compute the intercept or not.")),],compute:function(dataY,dataX,order,intercept={value:true}){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);return polynomialRegression(flatDataY,flatDataX,toNumber(order,this.locale),toBoolean(intercept));},isExported:false,};const POLYFIT_FORECAST={description:_t("Predict value by computing a polynomial regression of the dataset."),args:[arg("x (number, range<number>)",_t("The value(s) on the x-axis to forecast.")),arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),arg("order (number)",_t("The order of the polynomial to fit the data, between 1 and 6.")),arg("intercept (boolean, default=TRUE)",_t("A flag specifying whether to compute the intercept or not.")),],compute:function(x,dataY,dataX,order,intercept={value:true}){const _order=toNumber(order,this.locale);const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const coeffs=polynomialRegression(flatDataY,flatDataX,_order,toBoolean(intercept)).flat();return matrixMap(toMatrix(x),(xij)=>evaluatePolynomial(coeffs,toNumber(xij,this.locale),_order));},isExported:false,};const QUARTILE={description:_t("Value nearest to a specific quartile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("quartile_number (number)",_t("Which quartile value to return.")),],compute:function(data,quartileNumber){return QUARTILE_INC.compute.bind(this)(data,quartileNumber);},isExported:true,};const QUARTILE_EXC={description:_t("Value nearest to a specific quartile of a dataset exclusive of 0 and 4."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("quartile_number (number)",_t("Which quartile value, exclusive of 0 and 4, to return.")),],compute:function(data,quartileNumber){const _quartileNumber=Math.trunc(toNumber(quartileNumber,this.locale));const percent={value:0.25*_quartileNumber};return{value:centile([data],percent,false,this.locale),format:inferFormat(data),};},isExported:true,};const QUARTILE_INC={description:_t("Value nearest to a specific quartile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("quartile_number (number)",_t("Which quartile value to return.")),],compute:function(data,quartileNumber){const percent={value:0.25*Math.trunc(toNumber(quartileNumber,this.locale))};return{value:centile([data],percent,true,this.locale),format:inferFormat(data),};},isExported:true,};const RANK={description:_t("Returns the rank of a specified value in a dataset."),args:[arg("value (number)",_t("The value whose rank will be determined.")),arg("data (range)",_t("The range containing the dataset to consider.")),arg("is_ascending (boolean, default=FALSE)",_t("Whether to consider the values in data in descending or ascending order.")),],compute:function(value,data,isAscending={value:false}){const _isAscending=toBoolean(isAscending);const _value=toNumber(value,this.locale);let rank=1;let found=false;for(const row of data){for(const cell of row){if(typeof cell.value!=="number"){continue;}
const _cell=toNumber(cell,this.locale);if(_cell===_value){found=true;}
else if(_cell>_value!==_isAscending){rank++;}}}
if(!found){throw new NotAvailableError(_t("Value not found in the given data."));}
return rank;},isExported:true,};const RSQ={description:_t("Compute the square of r, the Pearson product-moment correlation coefficient of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return Math.pow(pearson(dataX,dataY),2.0);},isExported:true,};const SLOPE={description:_t("Compute the slope of the linear regression."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const[[slope]]=fullLinearRegression([flatDataX],[flatDataY]);return slope;},isExported:true,};const SMALL={description:_t("Nth smallest element in a data set."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("n (number)",_t("The rank from smallest to largest of the element to return.")),],compute:function(data,n){const _n=Math.trunc(toNumber(n?.value,this.locale));let largests=[];let index;let count=0;visitAny([data],(d)=>{if(typeof d?.value==="number"){index=dichotomicSearch(largests,d,"nextSmaller","asc",largests.length,(array,i)=>array[i].value);largests.splice(index+1,0,d);count++;if(count>_n){largests.pop();count--;}}});const result=largests.pop();assert(()=>result!==undefined,_t("[[FUNCTION_NAME]] has no valid input data."));assert(()=>count>=_n,_t("Function [[FUNCTION_NAME]] parameter 2 value (%s) is out of range.",_n));return result;},isExported:true,};const SPEARMAN={description:_t("Compute the Spearman rank correlation coefficient of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataX,dataY){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const n=flatDataX.length;const order=flatDataX.map((e,i)=>[e,flatDataY[i]]);order.sort((a,b)=>a[0]-b[0]);for(let i=0;i<n;++i){order[i][0]=i;}
order.sort((a,b)=>a[1]-b[1]);let sum=0.0;for(let i=0;i<n;++i){sum+=(order[i][0]-i)**2;}
return 1-(6*sum)/(n**3-n);},isExported:false,};const STDEV={description:_t("Standard deviation."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return Math.sqrt(VAR.compute.bind(this)(...args));},isExported:true,};const STDEV_P={description:_t("Standard deviation of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return Math.sqrt(VAR_P.compute.bind(this)(...args));},isExported:true,};const STDEV_S={description:_t("Standard deviation."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return Math.sqrt(VAR_S.compute.bind(this)(...args));},isExported:true,};const STDEVA={description:_t("Standard deviation of sample (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return Math.sqrt(VARA.compute.bind(this)(...args));},isExported:true,};const STDEVP={description:_t("Standard deviation of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return Math.sqrt(VARP.compute.bind(this)(...args));},isExported:true,};const STDEVPA={description:_t("Standard deviation of entire population (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return Math.sqrt(VARPA.compute.bind(this)(...args));},isExported:true,};const STEYX={description:_t("Calculates the standard error of the predicted y-value for each x in the regression of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const data=fullLinearRegression([flatDataX],[flatDataY],true,true);return data[1][2];},isExported:true,};const TREND={description:_t("Fits points to linear trend derived via least-squares."),args:[arg("known_data_y (number, range<number>)",_t("The array or range containing dependent (y) values that are already known, used to curve fit an ideal linear trend.")),arg("known_data_x (number, range<number>, optional, default={1;2;3;...})",_t("The values of the independent variable(s) corresponding with known_data_y.")),arg("new_data_x (number, range<number>, optional, default=known_data_x)",_t("The data points to return the y values for on the ideal curve fit.")),arg("b (boolean, optional, default=TRUE)",_t("Given a general linear form of y = m*x+b for a curve fit, calculates b if TRUE or forces b to be 0 and only calculates the m values if FALSE, i.e. forces the curve fit to pass through the origin.")),],compute:function(knownDataY,knownDataX=[[]],newDataX=[[]],b={value:true}){return predictLinearValues(toNumberMatrix(knownDataY,"the first argument (known_data_y)"),toNumberMatrix(knownDataX,"the second argument (known_data_x)"),toNumberMatrix(newDataX,"the third argument (new_data_y)"),toBoolean(b));},};const VAR={description:_t("Variance."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return variance(args,true,false,this.locale);},isExported:true,};const VAR_P={description:_t("Variance of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return variance(args,false,false,this.locale);},isExported:true,};const VAR_S={description:_t("Variance."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return variance(args,true,false,this.locale);},isExported:true,};const VARA={description:_t("Variance of sample (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return variance(args,true,true,this.locale);},isExported:true,};const VARP={description:_t("Variance of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return variance(args,false,false,this.locale);},isExported:true,};const VARPA={description:_t("Variance of entire population (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return variance(args,false,true,this.locale);},isExported:true,};var statistical=Object.freeze({__proto__:null,AVEDEV:AVEDEV,AVERAGE:AVERAGE,AVERAGEA:AVERAGEA,AVERAGEIF:AVERAGEIF,AVERAGEIFS:AVERAGEIFS,AVERAGE_WEIGHTED:AVERAGE_WEIGHTED,CORREL:CORREL,COUNT:COUNT,COUNTA:COUNTA,COVAR:COVAR,COVARIANCE_P:COVARIANCE_P,COVARIANCE_S:COVARIANCE_S,FORECAST:FORECAST,GROWTH:GROWTH,INTERCEPT:INTERCEPT,LARGE:LARGE,LINEST:LINEST,LOGEST:LOGEST,MATTHEWS:MATTHEWS,MAX:MAX,MAXA:MAXA,MAXIFS:MAXIFS,MEDIAN:MEDIAN,MIN:MIN,MINA:MINA,MINIFS:MINIFS,PEARSON:PEARSON,PERCENTILE:PERCENTILE,PERCENTILE_EXC:PERCENTILE_EXC,PERCENTILE_INC:PERCENTILE_INC,POLYFIT_COEFFS:POLYFIT_COEFFS,POLYFIT_FORECAST:POLYFIT_FORECAST,QUARTILE:QUARTILE,QUARTILE_EXC:QUARTILE_EXC,QUARTILE_INC:QUARTILE_INC,RANK:RANK,RSQ:RSQ,SLOPE:SLOPE,SMALL:SMALL,SPEARMAN:SPEARMAN,STDEV:STDEV,STDEVA:STDEVA,STDEVP:STDEVP,STDEVPA:STDEVPA,STDEV_P:STDEV_P,STDEV_S:STDEV_S,STEYX:STEYX,TREND:TREND,VAR:VAR,VARA:VARA,VARP:VARP,VARPA:VARPA,VAR_P:VAR_P,VAR_S:VAR_S});function getMatchingCells(database,field,criteria,locale){const indexColNameDB=new Map();const dimRowDB=database.length;for(let indexCol=dimRowDB-1;indexCol>=0;indexCol--){indexColNameDB.set(toString(database[indexCol][0]).toUpperCase(),indexCol);}
const fieldValue=field?.value;if(typeof fieldValue!=="number"&&typeof fieldValue!=="string"){throw new EvaluationError(_t("The field must be a number or a string"));}
let index;if(typeof fieldValue==="number"){index=Math.trunc(fieldValue)-1;if(index<0||dimRowDB-1<index){throw new EvaluationError(_t("The field (%(fieldValue)s) must be one of %(dimRowDB)s or must be a number between 1 and %s inclusive.",{fieldValue:fieldValue.toString(),dimRowDB:dimRowDB.toString(),}));}}
else{const colName=toString(field).toUpperCase();index=indexColNameDB.get(colName)??-1;if(index===-1){throw new EvaluationError(_t("The field (%s) must be one of %s.",toString(field),[...indexColNameDB.keys()].toString()));}}
const dimColCriteria=criteria[0].length;if(dimColCriteria<2){throw new EvaluationError(_t("The criteria range contains %s row, it must be at least 2 rows.",dimColCriteria.toString()));}
let matchingRows=new Set();const dimColDB=database[0].length;for(let indexRow=1;indexRow<dimColCriteria;indexRow++){let args=[];let existColNameDB=true;for(let indexCol=0;indexCol<criteria.length;indexCol++){const currentName=toString(criteria[indexCol][0]).toUpperCase();const indexColDB=indexColNameDB.get(currentName);const criter=criteria[indexCol][indexRow];if(criter.value!==null){if(indexColDB!==undefined){args.push([database[indexColDB].slice(1,dimColDB)]);args.push(criter);}
else{existColNameDB=false;break;}}}
if(existColNameDB){if(args.length>0){visitMatchingRanges(args,(i,j)=>{matchingRows.add(j);},locale,true);}
else{matchingRows=new Set(Array(dimColDB-1).keys());break;}}}
const fieldCol=database[index];const matchingCells=[...matchingRows].map((x)=>fieldCol[x+1]);return matchingCells;}
const databaseArgs=[arg("database (range)",_t("The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values.")),arg("field (any)",_t("Indicates which column in database contains the values to be extracted and operated on.")),arg("criteria (range)",_t("An array or range containing zero or more criteria to filter the database values by before operating.")),];const DAVERAGE={description:_t("Average of a set of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return AVERAGE.compute.bind(this)([cells]);},isExported:true,};const DCOUNT={description:_t("Counts values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return COUNT.compute.bind(this)([cells]);},isExported:true,};const DCOUNTA={description:_t("Counts values and text from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return COUNTA.compute.bind(this)([cells]);},isExported:true,};const DGET={description:_t("Single value from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);assert(()=>cells.length===1,_t("More than one match found in DGET evaluation."));return cells[0];},isExported:true,};const DMAX={description:_t("Maximum of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return MAX.compute.bind(this)([cells]);},isExported:true,};const DMIN={description:_t("Minimum of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return MIN.compute.bind(this)([cells]);},isExported:true,};const DPRODUCT={description:_t("Product of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return PRODUCT.compute.bind(this)([cells]);},isExported:true,};const DSTDEV={description:_t("Standard deviation of population sample from table."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return STDEV.compute.bind(this)([cells]);},isExported:true,};const DSTDEVP={description:_t("Standard deviation of entire population from table."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return STDEVP.compute.bind(this)([cells]);},isExported:true,};const DSUM={description:_t("Sum of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return SUM.compute.bind(this)([cells]);},isExported:true,};const DVAR={description:_t("Variance of population sample from table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return VAR.compute.bind(this)([cells]);},isExported:true,};const DVARP={description:_t("Variance of a population from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return VARP.compute.bind(this)([cells]);},isExported:true,};var database=Object.freeze({__proto__:null,DAVERAGE:DAVERAGE,DCOUNT:DCOUNT,DCOUNTA:DCOUNTA,DGET:DGET,DMAX:DMAX,DMIN:DMIN,DPRODUCT:DPRODUCT,DSTDEV:DSTDEV,DSTDEVP:DSTDEVP,DSUM:DSUM,DVAR:DVAR,DVARP:DVARP});const DEFAULT_TYPE=1;const DEFAULT_WEEKEND=1;var TIME_UNIT;(function(TIME_UNIT){TIME_UNIT["WHOLE_YEARS"]="Y";TIME_UNIT["WHOLE_MONTHS"]="M";TIME_UNIT["WHOLE_DAYS"]="D";TIME_UNIT["DAYS_WITHOUT_WHOLE_MONTHS"]="MD";TIME_UNIT["MONTH_WITHOUT_WHOLE_YEARS"]="YM";TIME_UNIT["DAYS_BETWEEN_NO_MORE_THAN_ONE_YEAR"]="YD";})(TIME_UNIT||(TIME_UNIT={}));const DATE={description:_t("Converts year/month/day into a date."),args:[arg("year (number)",_t("The year component of the date.")),arg("month (number)",_t("The month component of the date.")),arg("day (number)",_t("The day component of the date.")),],compute:function(year,month,day){let _year=Math.trunc(toNumber(year,this.locale));const _month=Math.trunc(toNumber(month,this.locale));const _day=Math.trunc(toNumber(day,this.locale));assert(()=>0<=_year&&_year<=9999,_t("The year (%s) must be between 0 and 9999 inclusive.",_year.toString()));if(_year<1900){_year+=1900;}
const jsDate=new DateTime(_year,_month-1,_day);const result=jsDateToRoundNumber(jsDate);assert(()=>result>=0,_t("The function [[FUNCTION_NAME]] result must be greater than or equal 01/01/1900."));return{value:result,format:this.locale.dateFormat,};},isExported:true,};const DATEDIF={description:_t("Calculates the number of days, months, or years between two dates."),args:[arg("start_date (date)",_t("The start date to consider in the calculation. Must be a reference to a cell containing a DATE, a function returning a DATE type, or a number.")),arg("end_date (date)",_t("The end date to consider in the calculation. Must be a reference to a cell containing a DATE, a function returning a DATE type, or a number.")),arg("unit (string)",_t('A text abbreviation for unit of time. Accepted values are "Y" (the number of whole years between start_date and end_date), "M" (the number of whole months between start_date and end_date), "D" (the number of days between start_date and end_date), "MD" (the number of days between start_date and end_date after subtracting whole months), "YM" (the number of whole months between start_date and end_date after subtracting whole years), "YD" (the number of days between start_date and end_date, assuming start_date and end_date were no more than one year apart).')),],compute:function(startDate,endDate,unit){const _unit=toString(unit).toUpperCase();assert(()=>Object.values(TIME_UNIT).includes(_unit),expectStringSetError(Object.values(TIME_UNIT),toString(unit)));const _startDate=Math.trunc(toNumber(startDate,this.locale));const _endDate=Math.trunc(toNumber(endDate,this.locale));const jsStartDate=numberToJsDate(_startDate);const jsEndDate=numberToJsDate(_endDate);assert(()=>_endDate>=_startDate,_t("start_date (%s) should be on or before end_date (%s).",jsStartDate.toLocaleDateString(),jsEndDate.toLocaleDateString()));switch(_unit){case TIME_UNIT.WHOLE_YEARS:return getTimeDifferenceInWholeYears(jsStartDate,jsEndDate);case TIME_UNIT.WHOLE_MONTHS:return getTimeDifferenceInWholeMonths(jsStartDate,jsEndDate);case TIME_UNIT.WHOLE_DAYS:{return getTimeDifferenceInWholeDays(jsStartDate,jsEndDate);}
case TIME_UNIT.MONTH_WITHOUT_WHOLE_YEARS:{return(getTimeDifferenceInWholeMonths(jsStartDate,jsEndDate)-
getTimeDifferenceInWholeYears(jsStartDate,jsEndDate)*12);}
case TIME_UNIT.DAYS_WITHOUT_WHOLE_MONTHS:let days=jsEndDate.getDate()-jsStartDate.getDate();if(days<0){const monthBeforeEndMonth=new DateTime(jsEndDate.getFullYear(),jsEndDate.getMonth()-1,1);const daysInMonthBeforeEndMonth=getDaysInMonth(monthBeforeEndMonth);days=daysInMonthBeforeEndMonth-Math.abs(days);}
return days;case TIME_UNIT.DAYS_BETWEEN_NO_MORE_THAN_ONE_YEAR:{if(areTwoDatesWithinOneYear(_startDate,_endDate)){return getTimeDifferenceInWholeDays(jsStartDate,jsEndDate);}
const endDateWithinOneYear=new DateTime(jsStartDate.getFullYear(),jsEndDate.getMonth(),jsEndDate.getDate());let days=getTimeDifferenceInWholeDays(jsStartDate,endDateWithinOneYear);if(days<0){endDateWithinOneYear.setFullYear(jsStartDate.getFullYear()+1);days=getTimeDifferenceInWholeDays(jsStartDate,endDateWithinOneYear);}
return days;}}},isExported:true,};const DATEVALUE={description:_t("Converts a date string to a date value."),args:[arg("date_string (string)",_t("The string representing the date."))],compute:function(dateString){const _dateString=toString(dateString);const internalDate=parseDateTime(_dateString,this.locale);assert(()=>internalDate!==null,_t("The date_string (%s) cannot be parsed to date/time.",_dateString.toString()));return Math.trunc(internalDate.value);},isExported:true,};const DAY={description:_t("Day of the month that a specific date falls on."),args:[arg("date (string)",_t("The date from which to extract the day."))],compute:function(date){return toJsDate(date,this.locale).getDate();},isExported:true,};const DAYS={description:_t("Number of days between two dates."),args:[arg("end_date (date)",_t("The end of the date range.")),arg("start_date (date)",_t("The start of the date range.")),],compute:function(endDate,startDate){const _endDate=toJsDate(endDate,this.locale);const _startDate=toJsDate(startDate,this.locale);const dateDif=_endDate.getTime()-_startDate.getTime();return Math.round(dateDif/MS_PER_DAY);},isExported:true,};const DEFAULT_DAY_COUNT_METHOD=0;const DAYS360={description:_t("Number of days between two dates on a 360-day year (months of 30 days)."),args:[arg("start_date (date)",_t("The start date to consider in the calculation.")),arg("end_date (date)",_t("The end date to consider in the calculation.")),arg(`method (number, default=${DEFAULT_DAY_COUNT_METHOD})`,_t("An indicator of what day count method to use. (0) US NASD method (1) European method")),],compute:function(startDate,endDate,method={value:DEFAULT_DAY_COUNT_METHOD}){const _startDate=Math.trunc(toNumber(startDate,this.locale));const _endDate=Math.trunc(toNumber(endDate,this.locale));const dayCountConvention=toBoolean(method)?4:0;const yearFrac=getYearFrac(_startDate,_endDate,dayCountConvention);return Math.sign(_endDate-_startDate)*Math.round(yearFrac*360);},isExported:true,};const EDATE={description:_t("Date a number of months before/after another date."),args:[arg("start_date (date)",_t("The date from which to calculate the result.")),arg("months (number)",_t("The number of months before (negative) or after (positive) 'start_date' to calculate.")),],compute:function(startDate,months){const _startDate=toJsDate(startDate,this.locale);const _months=Math.trunc(toNumber(months,this.locale));const jsDate=addMonthsToDate(_startDate,_months,false);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},isExported:true,};const EOMONTH={description:_t("Last day of a month before or after a date."),args:[arg("start_date (date)",_t("The date from which to calculate the result.")),arg("months (number)",_t("The number of months before (negative) or after (positive) 'start_date' to consider.")),],compute:function(startDate,months){const _startDate=toJsDate(startDate,this.locale);const _months=Math.trunc(toNumber(months,this.locale));const yStart=_startDate.getFullYear();const mStart=_startDate.getMonth();const jsDate=new DateTime(yStart,mStart+_months+1,0);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},isExported:true,};const HOUR={description:_t("Hour component of a specific time."),args:[arg("time (date)",_t("The time from which to calculate the hour component."))],compute:function(date){return toJsDate(date,this.locale).getHours();},isExported:true,};const ISOWEEKNUM={description:_t("ISO week number of the year."),args:[arg("date (date)",_t("The date for which to determine the ISO week number. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),],compute:function(date){const _date=toJsDate(date,this.locale);const y=_date.getFullYear();let firstThursday=1;while(new DateTime(y,0,firstThursday).getDay()!==4){firstThursday+=1;}
const firstDayOfFirstWeek=new DateTime(y,0,firstThursday-3);let lastThursday=31;while(new DateTime(y,11,lastThursday).getDay()!==4){lastThursday-=1;}
const lastDayOfLastWeek=new DateTime(y,11,lastThursday+3);let offsetYear;if(firstDayOfFirstWeek.getTime()<=_date.getTime()){if(_date.getTime()<=lastDayOfLastWeek.getTime()){offsetYear=0;}
else{offsetYear=1;}}
else{offsetYear=-1;}
let firstDay;switch(offsetYear){case 0:firstDay=firstDayOfFirstWeek;break;case 1:firstDay=new DateTime(y,11,lastThursday+3+1);break;case-1:let firstThursdayPreviousYear=1;while(new DateTime(y-1,0,firstThursdayPreviousYear).getDay()!==4){firstThursdayPreviousYear+=1;}
firstDay=new DateTime(y-1,0,firstThursdayPreviousYear-3);break;}
const diff=(_date.getTime()-firstDay.getTime())/MS_PER_DAY;return Math.floor(diff/7)+1;},isExported:true,};const MINUTE={description:_t("Minute component of a specific time."),args:[arg("time (date)",_t("The time from which to calculate the minute component."))],compute:function(date){return toJsDate(date,this.locale).getMinutes();},isExported:true,};const MONTH={description:_t("Month of the year a specific date falls in"),args:[arg("date (date)",_t("The date from which to extract the month."))],compute:function(date){return toJsDate(date,this.locale).getMonth()+1;},isExported:true,};const NETWORKDAYS={description:_t("Net working days between two provided days."),args:[arg("start_date (date)",_t("The start date of the period from which to calculate the number of net working days.")),arg("end_date (date)",_t("The end date of the period from which to calculate the number of net working days.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the date serial numbers to consider holidays.")),],compute:function(startDate,endDate,holidays){return NETWORKDAYS_INTL.compute.bind(this)(startDate,endDate,{value:1},holidays);},isExported:true,};function weekendToDayNumber(data){const weekend=data?.value;if(typeof weekend==="string"){assert(()=>{if(weekend.length!==7){return false;}
for(let day of weekend){if(day!=="0"&&day!=="1"){return false;}}
return true;},_t('When weekend is a string (%s) it must be composed of "0" or "1".',weekend));let result=[];for(let i=0;i<7;i++){if(weekend[i]==="1"){result.push((i+1)%7);}}
return result;}
if(typeof weekend==="number"){assert(()=>(1<=weekend&&weekend<=7)||(11<=weekend&&weekend<=17),_t("The weekend (%s) must be a string or a number in the range 1-7 or 11-17.",weekend.toString()));if(weekend<=7){return[weekend-2===-1?6:weekend-2,weekend-1];}
return[weekend-11];}
throw new EvaluationError(_t("The weekend must be a number or a string."));}
const NETWORKDAYS_INTL={description:_t("Net working days between two dates (specifying weekends)."),args:[arg("start_date (date)",_t("The start date of the period from which to calculate the number of net working days.")),arg("end_date (date)",_t("The end date of the period from which to calculate the number of net working days.")),arg(`weekend (any, default=${DEFAULT_WEEKEND})`,_t("A number or string representing which days of the week are considered weekends.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the dates to consider as holidays.")),],compute:function(startDate,endDate,weekend={value:DEFAULT_WEEKEND},holidays){const _startDate=toJsDate(startDate,this.locale);const _endDate=toJsDate(endDate,this.locale);const daysWeekend=weekendToDayNumber(weekend);let timesHoliday=new Set();if(holidays!==undefined){visitAny([holidays],(h)=>{const holiday=toJsDate(h,this.locale);timesHoliday.add(holiday.getTime());});}
const invertDate=_startDate.getTime()>_endDate.getTime();const stopDate=DateTime.fromTimestamp((invertDate?_startDate:_endDate).getTime());let stepDate=DateTime.fromTimestamp((invertDate?_endDate:_startDate).getTime());const timeStopDate=stopDate.getTime();let timeStepDate=stepDate.getTime();let netWorkingDay=0;while(timeStepDate<=timeStopDate){if(!daysWeekend.includes(stepDate.getDay())&&!timesHoliday.has(timeStepDate)){netWorkingDay+=1;}
stepDate.setDate(stepDate.getDate()+1);timeStepDate=stepDate.getTime();}
return invertDate?-netWorkingDay:netWorkingDay;},isExported:true,};const NOW={description:_t("Current date and time as a date value."),args:[],compute:function(){const today=DateTime.now();const delta=today.getTime()-INITIAL_1900_DAY.getTime();const time=today.getHours()/24+today.getMinutes()/1440+today.getSeconds()/86400;return{value:Math.floor(delta/MS_PER_DAY)+time,format:getDateTimeFormat(this.locale),};},isExported:true,};const SECOND={description:_t("Minute component of a specific time."),args:[arg("time (date)",_t("The time from which to calculate the second component."))],compute:function(date){return toJsDate(date,this.locale).getSeconds();},isExported:true,};const TIME={description:_t("Converts hour/minute/second into a time."),args:[arg("hour (number)",_t("The hour component of the time.")),arg("minute (number)",_t("The minute component of the time.")),arg("second (number)",_t("The second component of the time.")),],compute:function(hour,minute,second){let _hour=Math.trunc(toNumber(hour,this.locale));let _minute=Math.trunc(toNumber(minute,this.locale));let _second=Math.trunc(toNumber(second,this.locale));_minute+=Math.floor(_second/60);_second=(_second%60)+(_second<0?60:0);_hour+=Math.floor(_minute/60);_minute=(_minute%60)+(_minute<0?60:0);_hour%=24;assert(()=>_hour>=0,_t("The function [[FUNCTION_NAME]] result cannot be negative"));return{value:_hour/24+_minute/(24*60)+_second/(24*60*60),format:this.locale.timeFormat,};},isExported:true,};const TIMEVALUE={description:_t("Converts a time string into its serial number representation."),args:[arg("time_string (string)",_t("The string that holds the time representation."))],compute:function(timeString){const _timeString=toString(timeString);const internalDate=parseDateTime(_timeString,this.locale);assert(()=>internalDate!==null,_t("The time_string (%s) cannot be parsed to date/time.",_timeString));const result=internalDate.value-Math.trunc(internalDate.value);return result<0?1+result:result;},isExported:true,};const TODAY={description:_t("Current date as a date value."),args:[],compute:function(){const today=DateTime.now();const jsDate=new DateTime(today.getFullYear(),today.getMonth(),today.getDate());return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},isExported:true,};const WEEKDAY={description:_t("Day of the week of the date provided (as number)."),args:[arg("date (date)",_t("The date for which to determine the day of the week. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg(`type (number, default=${DEFAULT_TYPE})`,_t("A number indicating which numbering system to use to represent weekdays. By default, counts starting with Sunday = 1.")),],compute:function(date,type={value:DEFAULT_TYPE}){const _date=toJsDate(date,this.locale);const _type=Math.round(toNumber(type,this.locale));const m=_date.getDay();assert(()=>[1,2,3].includes(_type),_t("The type (%s) must be 1, 2 or 3.",_type.toString()));if(_type===1)
return m+1;if(_type===2)
return m===0?7:m;return m===0?6:m-1;},isExported:true,};const WEEKNUM={description:_t("Week number of the year."),args:[arg("date (date)",_t("The date for which to determine the week number. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg(`type (number, default=${DEFAULT_TYPE})`,_t("A number representing the day that a week starts on. Sunday = 1.")),],compute:function(date,type={value:DEFAULT_TYPE}){const _date=toJsDate(date,this.locale);const _type=Math.round(toNumber(type,this.locale));assert(()=>_type===1||_type===2||(11<=_type&&_type<=17)||_type===21,_t("The type (%s) is out of range.",_type.toString()));if(_type===21){return ISOWEEKNUM.compute.bind(this)(date);}
let startDayOfWeek;if(_type===1||_type===2){startDayOfWeek=_type-1;}
else{startDayOfWeek=_type-10===7?0:_type-10;}
const y=_date.getFullYear();let dayStart=1;let startDayOfFirstWeek=new DateTime(y,0,dayStart);while(startDayOfFirstWeek.getDay()!==startDayOfWeek){dayStart+=1;startDayOfFirstWeek=new DateTime(y,0,dayStart);}
const dif=(_date.getTime()-startDayOfFirstWeek.getTime())/MS_PER_DAY;if(dif<0){return 1;}
return Math.floor(dif/7)+(dayStart===1?1:2);},isExported:true,};const WORKDAY={description:_t("Date after a number of workdays."),args:[arg("start_date (date)",_t("The date from which to begin counting.")),arg("num_days (number)",_t("The number of working days to advance from start_date. If negative, counts backwards.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the dates to consider holidays.")),],compute:function(startDate,numDays,holidays={value:null}){return WORKDAY_INTL.compute.bind(this)(startDate,numDays,{value:1},holidays);},isExported:true,};const WORKDAY_INTL={description:_t("Date after a number of workdays (specifying weekends)."),args:[arg("start_date (date)",_t("The date from which to begin counting.")),arg("num_days (number)",_t("The number of working days to advance from start_date. If negative, counts backwards.")),arg(`weekend (any, default=${DEFAULT_WEEKEND})`,_t("A number or string representing which days of the week are considered weekends.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the dates to consider holidays.")),],compute:function(startDate,numDays,weekend={value:DEFAULT_WEEKEND},holidays){let _startDate=toJsDate(startDate,this.locale);let _numDays=Math.trunc(toNumber(numDays,this.locale));if(typeof weekend.value==="string"){assert(()=>weekend.value!=="1111111",_t("The weekend must be different from '1111111'."));}
const daysWeekend=weekendToDayNumber(weekend);let timesHoliday=new Set();if(holidays!==undefined){visitAny([holidays],(h)=>{const holiday=toJsDate(h,this.locale);timesHoliday.add(holiday.getTime());});}
let stepDate=DateTime.fromTimestamp(_startDate.getTime());let timeStepDate=stepDate.getTime();const unitDay=Math.sign(_numDays);let stepDay=Math.abs(_numDays);while(stepDay>0){stepDate.setDate(stepDate.getDate()+unitDay);timeStepDate=stepDate.getTime();if(!daysWeekend.includes(stepDate.getDay())&&!timesHoliday.has(timeStepDate)){stepDay-=1;}}
const delta=timeStepDate-INITIAL_1900_DAY.getTime();return{value:Math.round(delta/MS_PER_DAY),format:this.locale.dateFormat,};},isExported:true,};const YEAR={description:_t("Year specified by a given date."),args:[arg("date (date)",_t("The date from which to extract the year."))],compute:function(date){return toJsDate(date,this.locale).getFullYear();},isExported:true,};const DEFAULT_DAY_COUNT_CONVENTION$1=0;const YEARFRAC={description:_t("Exact number of years between two dates."),args:[arg("start_date (date)",_t("The start date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg("end_date (date)",_t("The end date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION$1})`,_t("An indicator of what day count method to use.")),],compute:function(startDate,endDate,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION$1}){let _startDate=Math.trunc(toNumber(startDate,this.locale));let _endDate=Math.trunc(toNumber(endDate,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assert(()=>_startDate>=0,_t("The start_date (%s) must be positive or null.",_startDate.toString()));assert(()=>_endDate>=0,_t("The end_date (%s) must be positive or null.",_endDate.toString()));assert(()=>0<=_dayCountConvention&&_dayCountConvention<=4,_t("The day_count_convention (%s) must be between 0 and 4 inclusive.",_dayCountConvention.toString()));return getYearFrac(_startDate,_endDate,_dayCountConvention);},};const MONTH_START={description:_t("First day of the month preceding a date."),args:[arg("date (date)",_t("The date from which to calculate the result."))],compute:function(date){const _startDate=toJsDate(date,this.locale);const yStart=_startDate.getFullYear();const mStart=_startDate.getMonth();const jsDate=new DateTime(yStart,mStart,1);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const MONTH_END={description:_t("Last day of the month following a date."),args:[arg("date (date)",_t("The date from which to calculate the result."))],compute:function(date){return EOMONTH.compute.bind(this)(date,{value:0});},};const QUARTER={description:_t("Quarter of the year a specific date falls in"),args:[arg("date (date)",_t("The date from which to extract the quarter."))],compute:function(date){return Math.ceil((toJsDate(date,this.locale).getMonth()+1)/3);},};const QUARTER_START={description:_t("First day of the quarter of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the start of quarter."))],compute:function(date){const quarter=QUARTER.compute.bind(this)(date);const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year,(quarter-1)*3,1);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const QUARTER_END={description:_t("Last day of the quarter of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the end of quarter."))],compute:function(date){const quarter=QUARTER.compute.bind(this)(date);const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year,quarter*3,0);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const YEAR_START={description:_t("First day of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the start of the year."))],compute:function(date){const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year,0,1);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const YEAR_END={description:_t("Last day of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the end of the year."))],compute:function(date){const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year+1,0,0);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};var date=Object.freeze({__proto__:null,DATE:DATE,DATEDIF:DATEDIF,DATEVALUE:DATEVALUE,DAY:DAY,DAYS:DAYS,DAYS360:DAYS360,EDATE:EDATE,EOMONTH:EOMONTH,HOUR:HOUR,ISOWEEKNUM:ISOWEEKNUM,MINUTE:MINUTE,MONTH:MONTH,MONTH_END:MONTH_END,MONTH_START:MONTH_START,NETWORKDAYS:NETWORKDAYS,NETWORKDAYS_INTL:NETWORKDAYS_INTL,NOW:NOW,QUARTER:QUARTER,QUARTER_END:QUARTER_END,QUARTER_START:QUARTER_START,SECOND:SECOND,TIME:TIME,TIMEVALUE:TIMEVALUE,TODAY:TODAY,WEEKDAY:WEEKDAY,WEEKNUM:WEEKNUM,WORKDAY:WORKDAY,WORKDAY_INTL:WORKDAY_INTL,YEAR:YEAR,YEARFRAC:YEARFRAC,YEAR_END:YEAR_END,YEAR_START:YEAR_START});const DEFAULT_DELTA_ARG=0;const DELTA={description:_t("Compare two numeric values, returning 1 if they're equal."),args:[arg("number1 (number)",_t("The first number to compare.")),arg(`number2 (number, default=${DEFAULT_DELTA_ARG})`,_t("The second number to compare.")),],compute:function(number1,number2={value:DEFAULT_DELTA_ARG}){const _number1=toNumber(number1,this.locale);const _number2=toNumber(number2,this.locale);return _number1===_number2?1:0;},isExported:true,};var engineering=Object.freeze({__proto__:null,DELTA:DELTA});const SORT_TYPES=[CellValueType.number,CellValueType.error,CellValueType.text,CellValueType.boolean,];function cellsSortingCriterion(sortingOrder){const inverse=sortingOrder==="ascending"?1:-1;return(left,right)=>{if(left.type===CellValueType.empty){return right.type===CellValueType.empty?0:1;}
else if(right.type===CellValueType.empty){return-1;}
let typeOrder=SORT_TYPES.indexOf(left.type)-SORT_TYPES.indexOf(right.type);if(typeOrder===0){if(left.type===CellValueType.text||left.type===CellValueType.error){typeOrder=left.value.localeCompare(right.value);}
else{typeOrder=left.value-right.value;}}
return inverse*typeOrder;};}
function sortCells(cells,sortDirection,emptyCellAsZero){const cellsWithIndex=cells.map((cell,index)=>({index,type:cell.type,value:cell.value,}));const cellsToSort=emptyCellAsZero?cellsWithIndex.map((cell)=>cell.type===CellValueType.empty?{...cell,type:CellValueType.number,value:0}:cell):cellsWithIndex;return cellsToSort.sort(cellsSortingCriterion(sortDirection));}
function interactiveSortSelection(env,sheetId,anchor,zone,sortDirection){let result=DispatchResult.Success;let multiColumns=zone.right>zone.left;if(env.model.getters.doesIntersectMerge(sheetId,zone)){multiColumns=false;let table;for(let row=zone.top;row<=zone.bottom;row++){table=[];for(let col=zone.left;col<=zone.right;col++){let merge=env.model.getters.getMerge({sheetId,col,row});if(merge&&!table.includes(merge.id.toString())){table.push(merge.id.toString());}}
if(table.length>=2){multiColumns=true;break;}}}
const{col,row}=anchor;if(multiColumns){result=env.model.dispatch("SORT_CELLS",{sheetId,col,row,zone,sortDirection});}
else{const contiguousZone=env.model.getters.getContiguousZone(sheetId,zone);if(isEqual(contiguousZone,zone)){result=env.model.dispatch("SORT_CELLS",{sheetId,col,row,zone,sortDirection,});}
else{env.askConfirmation(_t("We found data next to your selection. Since this data was not selected, it will not be sorted. Do you want to extend your selection?"),()=>{zone=contiguousZone;result=env.model.dispatch("SORT_CELLS",{sheetId,col,row,zone,sortDirection,});},()=>{result=env.model.dispatch("SORT_CELLS",{sheetId,col,row,zone,sortDirection,});});}}
if(result.isCancelledBecause("InvalidSortZone")){const{col,row}=anchor;env.model.selection.selectZone({cell:{col,row},zone});env.raiseError(_t("Cannot sort. To sort, select only cells or only merges that have the same size."));}}
function sortMatrix(matrix,locale,...criteria){for(const[i,value]of criteria.entries()){assert(()=>value!==undefined,_t("Value for parameter %d is missing, while the function [[FUNCTION_NAME]] expect a number or a range.",i+1));}
const sortingOrders=[];const sortColumns=[];const nRows=matrix.length;for(let i=0;i<criteria.length;i+=2){sortingOrders.push(toBoolean(toScalar(criteria[i+1])?.value)?"ascending":"descending");const sortColumn=criteria[i];if(isMatrix(sortColumn)&&(sortColumn.length>1||sortColumn[0].length>1)){assert(()=>sortColumn.length===1&&sortColumn[0].length===nRows,_t("Wrong size for %s. Expected a range of size 1x%s. Got %sx%s.",`sort_column${i + 1}`,nRows,sortColumn.length,sortColumn[0].length));sortColumns.push(sortColumn.flat().map((c)=>c.value));}
else{const colIndex=toNumber(toScalar(sortColumn)?.value,locale);if(colIndex<1||colIndex>matrix[0].length){return matrix;}
sortColumns.push(matrix.map((row)=>row[colIndex-1].value));}}
if(sortColumns.length===0){for(let i=0;i<matrix[0].length;i++){sortColumns.push(matrix.map((row)=>row[i].value));sortingOrders.push("ascending");}}
const sortingCriteria={descending:cellsSortingCriterion("descending"),ascending:cellsSortingCriterion("ascending"),};const indexes=range(0,matrix.length);indexes.sort((a,b)=>{for(const[i,sortColumn]of sortColumns.entries()){const left=sortColumn[a];const right=sortColumn[b];const leftCell={value:left,type:left===null?CellValueType.empty:typeof left==="string"?CellValueType.text:typeof left,};const rightCell={value:right,type:right===null?CellValueType.empty:typeof right==="string"?CellValueType.text:typeof right,};const result=sortingCriteria[sortingOrders[i]](leftCell,rightCell);if(result!==0){return result;}}
return 0;});return indexes.map((i)=>matrix[i]);}
const FILTER={description:_t("Returns a filtered version of the source range, returning only rows or columns that meet the specified conditions."),args:[arg("range (any, range<any>)",_t("The data to be filtered.")),arg("condition1 (boolean, range<boolean>)",_t("A column or row containing true or false values corresponding to the first column or row of range.")),arg("condition2 (boolean, range<boolean>, repeating)",_t("Additional column or row containing true or false values.")),],compute:function(range,...conditions){let _array=toMatrix(range);const _conditionsMatrices=conditions.map((cond)=>matrixMap(toMatrix(cond),(data)=>data.value));_conditionsMatrices.map((c)=>assertSingleColOrRow(_t("The arguments condition must be a single column or row."),c));assertSameDimensions(_t("The arguments conditions must have the same dimensions."),...conditions);const _conditions=_conditionsMatrices.map((c)=>c.flat());const mode=_conditionsMatrices[0].length===1?"row":"col";_array=mode==="row"?transposeMatrix(_array):_array;assert(()=>_conditions.every((cond)=>cond.length===_array.length),_t("FILTER has mismatched sizes on the range and conditions."));const result=[];for(let i=0;i<_array.length;i++){const row=_array[i];if(_conditions.every((c)=>c[i])){result.push(row);}}
if(!result.length){throw new NotAvailableError(_t("No match found in FILTER evaluation"));}
return mode==="row"?transposeMatrix(result):result;},isExported:true,};const SORT={description:_t("Sorts the rows of a given array or range by the values in one or more columns."),args:[arg("range (range)",_t("The data to be sorted.")),arg("sort_column (any, range<number>, repeating)",_t("The index of the column in range or a range outside of range containing the values by which to sort.")),arg("is_ascending (boolean, repeating)",_t("TRUE or FALSE indicating whether to sort sort_column in ascending order. FALSE sorts in descending order.")),],compute:function(range,...sortingCriteria){const _range=transposeMatrix(range);return transposeMatrix(sortMatrix(_range,this.locale,...sortingCriteria));},isExported:true,};const SORTN={description:_t("Returns the first n items in a data set after performing a sort."),args:[arg("range (range)",_t("The data to be sorted.")),arg("n (number, default=1)",_t("The number of items to return.")),arg("display_ties_mode (number, default=0)",_t("A number representing the way to display ties.")),arg("sort_column (number, range<number>, repeating)",_t("The index of the column in range or a range outside of range containing the values by which to sort.")),arg("is_ascending (boolean, repeating)",_t("TRUE or FALSE indicating whether to sort sort_column in ascending order. FALSE sorts in descending order.")),],compute:function(range,n,displayTiesMode,...sortingCriteria){const _n=toNumber(n?.value??1,this.locale);assert(()=>_n>=0,_t("Wrong value of 'n'. Expected a positive number. Got %s.",_n));const _displayTiesMode=toNumber(displayTiesMode?.value??0,this.locale);assert(()=>_displayTiesMode>=0&&_displayTiesMode<=3,_t("Wrong value of 'display_ties_mode'. Expected a positive number between 0 and 3. Got %s.",_displayTiesMode));const sortedData=sortMatrix(transposeMatrix(range),this.locale,...sortingCriteria);const sameRows=(i,j)=>JSON.stringify(sortedData[i].map((c)=>c.value))===JSON.stringify(sortedData[j].map((c)=>c.value));switch(_displayTiesMode){case 0:return transposeMatrix(sortedData.slice(0,_n));case 1:for(let i=_n;i<sortedData.length;i++){if(!sameRows(i,_n-1)){return transposeMatrix(sortedData.slice(0,i));}}
return transposeMatrix(sortedData);case 2:{const uniques=[sortedData[0]];for(let i=1;i<sortedData.length;i++){for(let j=0;j<i;j++){if(sameRows(i,j)){break;}
if(j===i-1){uniques.push(sortedData[i]);}}}
return transposeMatrix(uniques.slice(0,_n));}
case 3:{const uniques=[sortedData[0]];let counter=1;for(let i=1;i<sortedData.length;i++){if(!sameRows(i,i-1)){counter++;}
if(counter>_n){break;}
uniques.push(sortedData[i]);}
return transposeMatrix(uniques);}}},isExported:true,};const UNIQUE={description:_t("Unique rows in the provided source range."),args:[arg("range (any, range<any>)",_t("The data to filter by unique entries.")),arg("by_column (boolean, default=FALSE)",_t("Whether to filter the data by columns or by rows.")),arg("exactly_once (boolean, default=FALSE)",_t("Whether to return only entries with no duplicates.")),],compute:function(range={value:""},byColumn,exactlyOnce){if(!isMatrix(range)){return[[range]];}
const _byColumn=toBoolean(byColumn?.value)||false;const _exactlyOnce=toBoolean(exactlyOnce?.value)||false;if(!_byColumn){range=transposeMatrix(range);}
const map=new Map();for(const data of range){const key=JSON.stringify(data.map((item)=>item.value));const occurrence=map.get(key);if(!occurrence){map.set(key,{data,count:1});}
else{occurrence.count++;}}
const result=[];for(const row of map.values()){if(_exactlyOnce&&row.count>1){continue;}
result.push(row.data);}
if(!result.length)
throw new EvaluationError(_t("No unique values found"));return _byColumn?result:transposeMatrix(result);},isExported:true,};var filter=Object.freeze({__proto__:null,FILTER:FILTER,SORT:SORT,SORTN:SORTN,UNIQUE:UNIQUE});function assertMaturityAndSettlementDatesAreValid(settlement,maturity){assert(()=>settlement<maturity,_t("The maturity (%s) must be strictly greater than the settlement (%s).",maturity.toString(),settlement.toString()));}
function assertSettlementAndIssueDatesAreValid(settlement,issue){assert(()=>issue<settlement,_t("The settlement date (%s) must be strictly greater than the issue date (%s).",settlement.toString(),issue.toString()));}
function assertCouponFrequencyIsValid(frequency){assert(()=>[1,2,4].includes(frequency),_t("The frequency (%s) must be one of %s",frequency.toString(),[1,2,4].toString()));}
function assertDayCountConventionIsValid(dayCountConvention){assert(()=>0<=dayCountConvention&&dayCountConvention<=4,_t("The day_count_convention (%s) must be between 0 and 4 inclusive.",dayCountConvention.toString()));}
function assertRedemptionStrictlyPositive(redemption){assert(()=>redemption>0,_t("The redemption (%s) must be strictly positive.",redemption.toString()));}
function assertPriceStrictlyPositive(price){assert(()=>price>0,_t("The price (%s) must be strictly positive.",price.toString()));}
function assertNumberOfPeriodsStrictlyPositive(nPeriods){assert(()=>nPeriods>0,_t("The number_of_periods (%s) must be greater than 0.",nPeriods.toString()));}
function assertRateStrictlyPositive(rate){assert(()=>rate>0,_t("The rate (%s) must be strictly positive.",rate.toString()));}
function assertLifeStrictlyPositive(life){assert(()=>life>0,_t("The life (%s) must be strictly positive.",life.toString()));}
function assertCostStrictlyPositive(cost){assert(()=>cost>0,_t("The cost (%s) must be strictly positive.",cost.toString()));}
function assertPurchaseDatePositiveOrZero(purchaseDate){assert(()=>purchaseDate>=0,_t("The purchase_date (%s) must be positive or null.",purchaseDate.toString()));}
function assertIssuePositiveOrZero(issue){assert(()=>issue>=0,_t("The issue (%s) must be positive or null.",issue.toString()));}
function assertCostPositiveOrZero(cost){assert(()=>cost>=0,_t("The cost (%s) must be positive or null.",cost.toString()));}
function assertPeriodStrictlyPositive(period){assert(()=>period>0,_t("The period (%s) must be strictly positive.",period.toString()));}
function assertPeriodPositiveOrZero(period){assert(()=>period>=0,_t("The period (%s) must be positive or null.",period.toString()));}
function assertSalvagePositiveOrZero(salvage){assert(()=>salvage>=0,_t("The salvage (%s) must be positive or null.",salvage.toString()));}
function assertSalvageSmallerOrEqualThanCost(salvage,cost){assert(()=>salvage<=cost,_t("The salvage (%s) must be smaller or equal than the cost (%s).",salvage.toString(),cost.toString()));}
function assertPresentValueStrictlyPositive(pv){assert(()=>pv>0,_t("The present value (%s) must be strictly positive.",pv.toString()));}
function assertPeriodSmallerOrEqualToLife(period,life){assert(()=>period<=life,_t("The period (%s) must be less than or equal life (%s).",period.toString(),life.toString()));}
function assertInvestmentStrictlyPositive(investment){assert(()=>investment>0,_t("The investment (%s) must be strictly positive.",investment.toString()));}
function assertDiscountStrictlyPositive(discount){assert(()=>discount>0,_t("The discount (%s) must be strictly positive.",discount.toString()));}
function assertDiscountStrictlySmallerThanOne(discount){assert(()=>discount<1,_t("The discount (%s) must be smaller than 1.",discount.toString()));}
function assertDeprecationFactorStrictlyPositive(factor){assert(()=>factor>0,_t("The depreciation factor (%s) must be strictly positive.",factor.toString()));}
function assertSettlementLessThanOneYearBeforeMaturity(settlement,maturity,locale){const startDate=toJsDate(settlement,locale);const endDate=toJsDate(maturity,locale);const startDatePlusOneYear=toJsDate(settlement,locale);startDatePlusOneYear.setFullYear(startDate.getFullYear()+1);assert(()=>endDate.getTime()<=startDatePlusOneYear.getTime(),_t("The settlement date (%s) must at most one year after the maturity date (%s).",settlement.toString(),maturity.toString()));}
function assertFirstAndLastPeriodsAreValid(firstPeriod,lastPeriod,numberOfPeriods){assertNumberOfPeriodsStrictlyPositive(numberOfPeriods);assert(()=>firstPeriod>0,_t("The first_period (%s) must be strictly positive.",firstPeriod.toString()));assert(()=>lastPeriod>0,_t("The last_period (%s) must be strictly positive.",lastPeriod.toString()));assert(()=>firstPeriod<=lastPeriod,_t("The first_period (%s) must be smaller or equal to the last_period (%s).",firstPeriod.toString(),lastPeriod.toString()));assert(()=>lastPeriod<=numberOfPeriods,_t("The last_period (%s) must be smaller or equal to the number_of_periods (%s).",firstPeriod.toString(),numberOfPeriods.toString()));}
function assertStartAndEndPeriodAreValid(startPeriod,endPeriod,life){assertLifeStrictlyPositive(life);assert(()=>startPeriod>=0,_t("The start_period (%s) must be greater or equal than 0.",startPeriod.toString()));assert(()=>endPeriod>=0,_t("The end_period (%s) must be greater or equal than 0.",endPeriod.toString()));assert(()=>startPeriod<=endPeriod,_t("The start_period (%s) must be smaller or equal to the end_period (%s).",startPeriod.toString(),endPeriod.toString()));assert(()=>endPeriod<=life,_t("The end_period (%s) must be smaller or equal to the life (%s).",startPeriod.toString(),life.toString()));}
function assertRateGuessStrictlyGreaterThanMinusOne(guess){assert(()=>guess>-1,_t("The rate_guess (%s) must be strictly greater than -1.",guess.toString()));}
function assertCashFlowsAndDatesHaveSameDimension(cashFlows,dates){assert(()=>cashFlows.length===dates.length&&cashFlows[0].length===dates[0].length,_t("The cashflow_amounts and cashflow_dates ranges must have the same dimensions."));}
function assertCashFlowsHavePositiveAndNegativesValues(cashFlow){assert(()=>cashFlow.some((val)=>val>0)&&cashFlow.some((val)=>val<0),_t("There must be both positive and negative values in cashflow_amounts."));}
function assertEveryDateGreaterThanFirstDateOfCashFlowDates(dates){assert(()=>dates.every((date)=>date>=dates[0]),_t("All the dates should be greater or equal to the first date in cashflow_dates (%s).",dates[0].toString()));}
const DEFAULT_DAY_COUNT_CONVENTION=0;const DEFAULT_END_OR_BEGINNING=0;const DEFAULT_FUTURE_VALUE=0;const COUPON_FUNCTION_ARGS=[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),];function newtonMethod(func,derivFunc,startValue,maxIterations,epsMax=1e-10,nanFallback){let x=startValue;let newX;let xDelta;let y;let yEqual0=false;let count=0;let previousFallback=undefined;do{y=func(x);if(isNaN(y)){assert(()=>count<maxIterations&&nanFallback!==undefined,_t("Function [[FUNCTION_NAME]] didn't find any result."));count++;x=nanFallback(previousFallback);previousFallback=x;continue;}
newX=x-y/derivFunc(x);xDelta=Math.abs(newX-x);x=newX;yEqual0=xDelta<epsMax||Math.abs(y)<epsMax;assert(()=>count<maxIterations,_t("Function [[FUNCTION_NAME]] didn't find any result."));count++;}while(!yEqual0);return x;}
const ACCRINTM={description:_t("Accrued interest of security paying at maturity."),args:[arg("issue (date)",_t("The date the security was initially issued.")),arg("maturity (date)",_t("The maturity date of the security.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(issue,maturity,rate,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const start=Math.trunc(toNumber(issue,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _redemption=toNumber(redemption,this.locale);const _rate=toNumber(rate,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertIssuePositiveOrZero(start);assertSettlementAndIssueDatesAreValid(end,start);assertDayCountConventionIsValid(_dayCountConvention);assertRedemptionStrictlyPositive(_redemption);assertRateStrictlyPositive(_rate);const yearFrac=getYearFrac(start,end,_dayCountConvention);return _redemption*_rate*yearFrac;},isExported:true,};const AMORLINC={description:_t("Depreciation for an accounting period."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("purchase_date (date)",_t("The date the asset was purchased.")),arg("first_period_end (date)",_t("The date the first period ended.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),arg("rate (number)",_t("The deprecation rate.")),arg("day_count_convention (number, optional)",_t("An indicator of what day count method to use.")),],compute:function(cost,purchaseDate,firstPeriodEnd,salvage,period,rate,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _cost=toNumber(cost,this.locale);const _purchaseDate=Math.trunc(toNumber(purchaseDate,this.locale));const _firstPeriodEnd=Math.trunc(toNumber(firstPeriodEnd,this.locale));const _salvage=toNumber(salvage,this.locale);const _period=toNumber(period,this.locale);const _rate=toNumber(rate,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertCostStrictlyPositive(_cost);assertPurchaseDatePositiveOrZero(_purchaseDate);assertSalvagePositiveOrZero(_salvage);assertSalvageSmallerOrEqualThanCost(_salvage,_cost);assertPeriodPositiveOrZero(_period);assertRateStrictlyPositive(_rate);assertDayCountConventionIsValid(_dayCountConvention);assert(()=>_purchaseDate<=_firstPeriodEnd,_t("The purchase_date (%s) must be before the first_period_end (%s).",_purchaseDate.toString(),_firstPeriodEnd.toString()));const roundedPeriod=_period<1&&_period>0?1:Math.trunc(_period);const deprec=_cost*_rate;const yearFrac=getYearFrac(_purchaseDate,_firstPeriodEnd,_dayCountConvention);const firstDeprec=_purchaseDate===_firstPeriodEnd?deprec:deprec*yearFrac;const valueAtPeriod=_cost-firstDeprec-deprec*roundedPeriod;if(valueAtPeriod>=_salvage){return roundedPeriod===0?firstDeprec:deprec;}
return _salvage-valueAtPeriod<deprec?deprec-(_salvage-valueAtPeriod):0;},isExported:true,};const COUPDAYS={description:_t("Days in coupon period containing settlement date."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);if(_dayCountConvention===1){const before=COUPPCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;const after=COUPNCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;return after-before;}
const daysInYear=_dayCountConvention===3?365:360;return daysInYear/_frequency;},isExported:true,};const COUPDAYBS={description:_t("Days from settlement until next coupon."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);const couponBeforeStart=COUPPCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;if([1,2,3].includes(_dayCountConvention)){return start-couponBeforeStart;}
if(_dayCountConvention===4){const yearFrac=getYearFrac(couponBeforeStart,start,_dayCountConvention);return Math.round(yearFrac*360);}
const startDate=toJsDate(start,this.locale);const dateCouponBeforeStart=toJsDate(couponBeforeStart,this.locale);const y1=dateCouponBeforeStart.getFullYear();const y2=startDate.getFullYear();const m1=dateCouponBeforeStart.getMonth()+1;const m2=startDate.getMonth()+1;let d1=dateCouponBeforeStart.getDate();let d2=startDate.getDate();if(m1===2&&m2===2&&isLastDayOfMonth(dateCouponBeforeStart)&&isLastDayOfMonth(startDate)){d2=30;}
if(d2===31&&(d1===30||d1===31)){d2=30;}
if(m1===2&&isLastDayOfMonth(dateCouponBeforeStart)){d1=30;}
if(d1===31){d1=30;}
return(y2-y1)*360+(m2-m1)*30+(d2-d1);},isExported:true,};const COUPDAYSNC={description:_t("Days from settlement until next coupon."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);const couponAfterStart=COUPNCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;if([1,2,3].includes(_dayCountConvention)){return couponAfterStart-start;}
if(_dayCountConvention===4){const yearFrac=getYearFrac(start,couponAfterStart,_dayCountConvention);return Math.round(yearFrac*360);}
const coupDayBs=COUPDAYBS.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);const coupDays=COUPDAYS.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);return coupDays-coupDayBs;},isExported:true,};const COUPNCD={description:_t("Next coupon date after the settlement date."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);const monthsPerPeriod=12/_frequency;const coupNum=COUPNUM.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);const date=addMonthsToDate(toJsDate(end,this.locale),-(coupNum-1)*monthsPerPeriod,true);return{value:jsDateToRoundNumber(date),format:this.locale.dateFormat,};},isExported:true,};const COUPNUM={description:_t("Number of coupons between settlement and maturity."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);let num=1;let currentDate=end;const monthsPerPeriod=12/_frequency;while(currentDate>start){currentDate=jsDateToRoundNumber(addMonthsToDate(toJsDate(currentDate,this.locale),-monthsPerPeriod,false));num++;}
return num-1;},isExported:true,};const COUPPCD={description:_t("Last coupon date prior to or on the settlement date."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);const monthsPerPeriod=12/_frequency;const coupNum=COUPNUM.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);const date=addMonthsToDate(toJsDate(end,this.locale),-coupNum*monthsPerPeriod,true);return{value:jsDateToRoundNumber(date),format:this.locale.dateFormat,};},isExported:true,};const CUMIPMT={description:_t("Cumulative interest paid over a set of periods."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg("first_period (number)",_t("The number of the payment period to begin the cumulative calculation.")),arg("last_period (number)",_t("The number of the payment period to end the cumulative calculation.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,presentValue,firstPeriod,lastPeriod,endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const first=toNumber(firstPeriod,this.locale);const last=toNumber(lastPeriod,this.locale);const r=toNumber(rate,this.locale);const pv=toNumber(presentValue,this.locale);const n=toNumber(numberOfPeriods,this.locale);const type=toBoolean(endOrBeginning)?1:0;assertFirstAndLastPeriodsAreValid(first,last,n);assertRateStrictlyPositive(r);assertPresentValueStrictlyPositive(pv);let cumSum=0;for(let i=first;i<=last;i++){cumSum+=impt(r,i,n,pv,0,type);}
return cumSum;},isExported:true,};const CUMPRINC={description:_t("Cumulative principal paid over a set of periods."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg("first_period (number)",_t("The number of the payment period to begin the cumulative calculation.")),arg("last_period (number)",_t("The number of the payment period to end the cumulative calculation.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,presentValue,firstPeriod,lastPeriod,endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const first=toNumber(firstPeriod,this.locale);const last=toNumber(lastPeriod,this.locale);const r=toNumber(rate,this.locale);const pv=toNumber(presentValue,this.locale);const n=toNumber(numberOfPeriods,this.locale);const type=toBoolean(endOrBeginning)?1:0;assertFirstAndLastPeriodsAreValid(first,last,n);assertRateStrictlyPositive(r);assertPresentValueStrictlyPositive(pv);let cumSum=0;for(let i=first;i<=last;i++){cumSum+=ppmt(r,i,n,pv,0,type);}
return cumSum;},isExported:true,};const DB={description:_t("Depreciation via declining balance method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),arg("month (number, optional)",_t("The number of months in the first year of depreciation.")),],compute:function(cost,salvage,life,period,...args){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _period=Math.trunc(toNumber(period,this.locale));const _month=args.length?Math.trunc(toNumber(args[0],this.locale)):12;const lifeLimit=_life+(_month===12?0:1);assertCostPositiveOrZero(_cost);assertSalvagePositiveOrZero(_salvage);assertPeriodStrictlyPositive(_period);assertLifeStrictlyPositive(_life);assert(()=>1<=_month&&_month<=12,_t("The month (%s) must be between 1 and 12 inclusive.",_month.toString()));assert(()=>_period<=lifeLimit,_t("The period (%s) must be less than or equal to %s.",_period.toString(),lifeLimit.toString()));const monthPart=_month/12;let rate=1-Math.pow(_salvage/_cost,1/_life);rate=Math.round(rate*1000)/1000;let before=_cost;let after=_cost*(1-rate*monthPart);for(let i=1;i<_period;i++){before=after;after=before*(1-rate);if(i===_life){after=before*(1-rate*(1-monthPart));}}
return{value:before-after,format:"#,##0.00",};},isExported:true,};const DEFAULT_DDB_DEPRECIATION_FACTOR=2;function ddb(cost,salvage,life,period,factor){assertCostPositiveOrZero(cost);assertSalvagePositiveOrZero(salvage);assertPeriodStrictlyPositive(period);assertLifeStrictlyPositive(life);assertPeriodSmallerOrEqualToLife(period,life);assertDeprecationFactorStrictlyPositive(factor);if(cost===0||salvage>=cost)
return 0;const deprecFactor=factor/life;if(deprecFactor>1){return period===1?cost-salvage:0;}
if(period<=1){return cost*deprecFactor;}
const previousCost=cost*Math.pow(1-deprecFactor,period-1);const nextCost=cost*Math.pow(1-deprecFactor,period);const deprec=nextCost<salvage?previousCost-salvage:previousCost-nextCost;return Math.max(deprec,0);}
const DDB={description:_t("Depreciation via double-declining balance method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),arg(`factor (number, default=${DEFAULT_DDB_DEPRECIATION_FACTOR})`,_t("The factor by which depreciation decreases.")),],compute:function(cost,salvage,life,period,factor={value:DEFAULT_DDB_DEPRECIATION_FACTOR}){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _period=toNumber(period,this.locale);const _factor=toNumber(factor,this.locale);return{value:ddb(_cost,_salvage,_life,_period,_factor),format:"#,##0.00",};},isExported:true,};const DISC={description:_t("Discount rate of a security based on price."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,price,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _price=toNumber(price,this.locale);const _redemption=toNumber(redemption,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertDayCountConventionIsValid(_dayCountConvention);assertPriceStrictlyPositive(_price);assertRedemptionStrictlyPositive(_redemption);const yearsFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return(_redemption-_price)/_redemption/yearsFrac;},isExported:true,};const DOLLARDE={description:_t("Convert a decimal fraction to decimal value."),args:[arg("fractional_price (number)",_t("The price quotation given using fractional decimal conventions.")),arg("unit (number)",_t("The units of the fraction, e.g. 8 for 1/8ths or 32 for 1/32nds.")),],compute:function(fractionalPrice,unit){const price=toNumber(fractionalPrice,this.locale);const _unit=Math.trunc(toNumber(unit,this.locale));assert(()=>_unit>0,_t("The unit (%s) must be strictly positive.",_unit.toString()));const truncatedPrice=Math.trunc(price);const priceFractionalPart=price-truncatedPrice;const frac=10**Math.ceil(Math.log10(_unit))/_unit;return truncatedPrice+priceFractionalPart*frac;},isExported:true,};const DOLLARFR={description:_t("Convert a decimal value to decimal fraction."),args:[arg("decimal_price (number)",_t("The price quotation given as a decimal value.")),arg("unit (number)",_t("The units of the desired fraction, e.g. 8 for 1/8ths or 32 for 1/32nds.")),],compute:function(decimalPrice,unit){const price=toNumber(decimalPrice,this.locale);const _unit=Math.trunc(toNumber(unit,this.locale));assert(()=>_unit>0,_t("The unit (%s) must be strictly positive.",_unit.toString()));const truncatedPrice=Math.trunc(price);const priceFractionalPart=price-truncatedPrice;const frac=_unit/10**Math.ceil(Math.log10(_unit));return truncatedPrice+priceFractionalPart*frac;},isExported:true,};const DURATION={description:_t("Number of periods for an investment to reach a value."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,securityYield,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _rate=toNumber(rate,this.locale);const _yield=toNumber(securityYield,this.locale);const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(start,end);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);assert(()=>_rate>=0,_t("The rate (%s) must be positive or null.",_rate.toString()));assert(()=>_yield>=0,_t("The yield (%s) must be positive or null.",_yield.toString()));const years=getYearFrac(start,end,_dayCountConvention);const timeFirstYear=years-Math.trunc(years)||1/_frequency;const nbrCoupons=Math.ceil(years*_frequency);const cashFlowFromCoupon=_rate/_frequency;const yieldPerPeriod=_yield/_frequency;let count=0;let sum=0;for(let i=1;i<=nbrCoupons;i++){const cashFlowPerPeriod=cashFlowFromCoupon+(i===nbrCoupons?1:0);const presentValuePerPeriod=cashFlowPerPeriod/(1+yieldPerPeriod)**i;sum+=(timeFirstYear+(i-1)/_frequency)*presentValuePerPeriod;count+=presentValuePerPeriod;}
return count===0?0:sum/count;},isExported:true,};const EFFECT={description:_t("Annual effective interest rate."),args:[arg("nominal_rate (number)",_t("The nominal interest rate per year.")),arg("periods_per_year (number)",_t("The number of compounding periods per year.")),],compute:function(nominal_rate,periods_per_year){const nominal=toNumber(nominal_rate,this.locale);const periods=Math.trunc(toNumber(periods_per_year,this.locale));assert(()=>nominal>0,_t("The nominal rate (%s) must be strictly greater than 0.",nominal.toString()));assert(()=>periods>0,_t("The number of periods by year (%s) must strictly greater than 0.",periods.toString()));return Math.pow(1+nominal/periods,periods)-1;},isExported:true,};const DEFAULT_PRESENT_VALUE=0;function fv(r,n,p,pv,t){if(r===0){return-(pv+p*n);}
return-pv*(1+r)**n-(p*(1+r*t)*((1+r)**n-1))/r;}
const FV={description:_t("Future value of an annuity investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("payment_amount (number)",_t("The amount per period to be paid.")),arg(`present_value (number, default=${DEFAULT_PRESENT_VALUE})`,_t("The current value of the annuity.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,paymentAmount,presentValue={value:DEFAULT_PRESENT_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){presentValue=presentValue||0;endOrBeginning=endOrBeginning||0;const r=toNumber(rate,this.locale);const n=toNumber(numberOfPeriods,this.locale);const p=toNumber(paymentAmount,this.locale);const pv=toNumber(presentValue,this.locale);const type=toBoolean(endOrBeginning)?1:0;return{value:fv(r,n,p,pv,type),format:"#,##0.00",};},isExported:true,};const FVSCHEDULE={description:_t("Future value of principal from series of rates."),args:[arg("principal (number)",_t("The amount of initial capital or value to compound against.")),arg("rate_schedule (number, range<number>)",_t("A series of interest rates to compound against the principal.")),],compute:function(principalAmount,rateSchedule){const principal=toNumber(principalAmount,this.locale);return reduceAny([rateSchedule],(acc,rate)=>acc*(1+toNumber(rate,this.locale)),principal);},isExported:true,};const INTRATE={description:_t("Calculates effective interest rate."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("investment (number)",_t("The amount invested in the security.")),arg("redemption (number)",_t("The amount to be received at maturity.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,investment,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _redemption=toNumber(redemption,this.locale);const _investment=toNumber(investment,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertInvestmentStrictlyPositive(_investment);assertRedemptionStrictlyPositive(_redemption);assertDayCountConventionIsValid(_dayCountConvention);const yearFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return(_redemption-_investment)/_investment/yearFrac;},isExported:true,};function impt(r,per,n,pv,fv,type){return pmt(r,n,pv,fv,type)-ppmt(r,per,n,pv,fv,type);}
const IPMT={description:_t("Payment on the principal of an investment."),args:[arg("rate (number)",_t("The annualized rate of interest.")),arg("period (number)",_t("The amortization period, in terms of number of periods.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,currentPeriod,numberOfPeriods,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const r=toNumber(rate,this.locale);const period=toNumber(currentPeriod,this.locale);const n=toNumber(numberOfPeriods,this.locale);const pv=toNumber(presentValue,this.locale);const fv=toNumber(futureValue,this.locale);const type=toBoolean(endOrBeginning)?1:0;return{value:impt(r,period,n,pv,fv,type),format:"#,##0.00",};},isExported:true,};const DEFAULT_RATE_GUESS=0.1;const IRR={description:_t("Internal rate of return given periodic cashflows."),args:[arg("cashflow_amounts (number, range<number>)",_t("An array or range containing the income or payments associated with the investment.")),arg(`rate_guess (number, default=${DEFAULT_RATE_GUESS})`,_t("An estimate for what the internal rate of return will be.")),],compute:function(cashFlowAmounts,rateGuess={value:DEFAULT_RATE_GUESS}){const _rateGuess=toNumber(rateGuess,this.locale);assertRateGuessStrictlyGreaterThanMinusOne(_rateGuess);let positive=false;let negative=false;let amounts=[];visitNumbers([cashFlowAmounts],({value:amount})=>{if(amount>0)
positive=true;if(amount<0)
negative=true;amounts.push(amount);},this.locale);assert(()=>positive&&negative,_t("The cashflow_amounts must include negative and positive values."));const firstAmount=amounts.shift();function npvNumerator(rate,startValue,values){const nbrValue=values.length;let i=0;return values.reduce((acc,v)=>{i++;return acc+v*rate**(nbrValue-i);},startValue*rate**nbrValue);}
function npvNumeratorDeriv(rate,startValue,values){const nbrValue=values.length;let i=0;return values.reduce((acc,v)=>{i++;return acc+v*(nbrValue-i)*rate**(nbrValue-i-1);},startValue*nbrValue*rate**(nbrValue-1));}
function func(x){return npvNumerator(x,firstAmount,amounts);}
function derivFunc(x){return npvNumeratorDeriv(x,firstAmount,amounts);}
return{value:newtonMethod(func,derivFunc,_rateGuess+1,20,1e-5)-1,format:"0%",};},isExported:true,};const ISPMT={description:_t("Returns the interest paid at a particular period of an investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("period (number)",_t("The period for which you want to view the interest payment.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),],compute:function(rate,currentPeriod,numberOfPeriods,presentValue){const interestRate=toNumber(rate,this.locale);const period=toNumber(currentPeriod,this.locale);const nOfPeriods=toNumber(numberOfPeriods,this.locale);const investment=toNumber(presentValue,this.locale);assert(()=>nOfPeriods!==0,_t("The number of periods must be different than 0.",nOfPeriods.toString()));const currentInvestment=investment-investment*(period/nOfPeriods);return-1*currentInvestment*interestRate;},isExported:true,};const MDURATION={description:_t("Modified Macaulay duration."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,securityYield,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const duration=DURATION.compute.bind(this)(settlement,maturity,rate,securityYield,frequency,dayCountConvention);const y=toNumber(securityYield,this.locale);const k=Math.trunc(toNumber(frequency,this.locale));return duration/(1+y/k);},isExported:true,};const MIRR={description:_t("Modified internal rate of return."),args:[arg("cashflow_amounts (range<number>)",_t("A range containing the income or payments associated with the investment. The array should contain bot payments and incomes.")),arg("financing_rate (number)",_t("The interest rate paid on funds invested.")),arg("reinvestment_return_rate (number)",_t("The return (as a percentage) earned on reinvestment of income received from the investment.")),],compute:function(cashflowAmount,financingRate,reinvestmentRate){const fRate=toNumber(financingRate,this.locale);const rRate=toNumber(reinvestmentRate,this.locale);const cashFlow=transposeMatrix(cashflowAmount).flat().filter((t)=>t.value!==null).map((val)=>toNumber(val,this.locale));const n=cashFlow.length;let fv=0;let pv=0;for(const i of range(0,n)){const amount=cashFlow[i];if(amount>=0){fv+=amount*(rRate+1)**(n-i-1);}
else{pv+=amount/(fRate+1)**i;}}
assert(()=>pv!==0&&fv!==0,_t("There must be both positive and negative values in cashflow_amounts."));const exponent=1/(n-1);return(-fv/pv)**exponent-1;},isExported:true,};const NOMINAL={description:_t("Annual nominal interest rate."),args:[arg("effective_rate (number)",_t("The effective interest rate per year.")),arg("periods_per_year (number)",_t("The number of compounding periods per year.")),],compute:function(effective_rate,periods_per_year){const effective=toNumber(effective_rate,this.locale);const periods=Math.trunc(toNumber(periods_per_year,this.locale));assert(()=>effective>0,_t("The effective rate (%s) must must strictly greater than 0.",effective.toString()));assert(()=>periods>0,_t("The number of periods by year (%s) must strictly greater than 0.",periods.toString()));return(Math.pow(effective+1,1/periods)-1)*periods;},isExported:true,};const NPER={description:_t("Number of payment periods for an investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("payment_amount (number)",_t("The amount of each payment made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,paymentAmount,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){futureValue=futureValue||0;endOrBeginning=endOrBeginning||0;const r=toNumber(rate,this.locale);const p=toNumber(paymentAmount,this.locale);const pv=toNumber(presentValue,this.locale);const fv=toNumber(futureValue,this.locale);const t=toBoolean(endOrBeginning)?1:0;if(r===0){return-(fv+pv)/p;}
const c=(p*(1+r*t))/r;return Math.log((c-fv)/(pv+c))/Math.log(1+r);},isExported:true,};function npvResult(r,startValue,values,locale){let i=0;return reduceNumbers(values,(acc,v)=>{i++;return acc+v/(1+r)**i;},startValue,locale);}
const NPV={description:_t("The net present value of an investment based on a series of periodic cash flows and a discount rate."),args:[arg("discount (number)",_t("The discount rate of the investment over one period.")),arg("cashflow1 (number, range<number>)",_t("The first future cash flow.")),arg("cashflow2 (number, range<number>, repeating)",_t("Additional future cash flows.")),],compute:function(discount,...values){const _discount=toNumber(discount,this.locale);assert(()=>_discount!==-1,_t("The discount (%s) must be different from -1.",_discount.toString()));return{value:npvResult(_discount,0,values,this.locale),format:"#,##0.00",};},isExported:true,};const PDURATION={description:_t("Computes the number of periods needed for an investment to reach a value."),args:[arg("rate (number)",_t("The rate at which the investment grows each period.")),arg("present_value (number)",_t("The investment's current value.")),arg("future_value (number)",_t("The investment's desired future value.")),],compute:function(rate,presentValue,futureValue){const _rate=toNumber(rate,this.locale);const _presentValue=toNumber(presentValue,this.locale);const _futureValue=toNumber(futureValue,this.locale);assertRateStrictlyPositive(_rate);assert(()=>_presentValue>0,_t("The present_value (%s) must be strictly positive.",_presentValue.toString()));assert(()=>_futureValue>0,_t("The future_value (%s) must be strictly positive.",_futureValue.toString()));return(Math.log(_futureValue)-Math.log(_presentValue))/Math.log(1+_rate);},isExported:true,};function pmt(r,n,pv,fv,t){assertNumberOfPeriodsStrictlyPositive(n);if(r===0){return-(fv+pv)/n;}
let payment=-(pv*(1+r)**n+fv);payment=(payment*r)/((1+r*t)*((1+r)**n-1));return payment;}
const PMT={description:_t("Periodic payment for an annuity investment."),args:[arg("rate (number)",_t("The annualized rate of interest.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const n=toNumber(numberOfPeriods,this.locale);const r=toNumber(rate,this.locale);const t=toBoolean(endOrBeginning)?1:0;const fv=toNumber(futureValue,this.locale);const pv=toNumber(presentValue,this.locale);return{value:pmt(r,n,pv,fv,t),format:"#,##0.00"};},isExported:true,};function ppmt(r,per,n,pValue,fValue,t){assertNumberOfPeriodsStrictlyPositive(n);assert(()=>per>0&&per<=n,_t("The period must be between 1 and number_of_periods (%s)",n));const payment=pmt(r,n,pValue,fValue,t);if(t===1&&per===1)
return payment;const eqPeriod=t===0?per-1:per-2;const eqPv=pValue+payment*t;const capitalAtPeriod=-fv(r,eqPeriod,payment,eqPv,0);const currentInterest=capitalAtPeriod*r;return payment+currentInterest;}
const PPMT={description:_t("Payment on the principal of an investment."),args:[arg("rate (number)",_t("The annualized rate of interest.")),arg("period (number)",_t("The amortization period, in terms of number of periods.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,currentPeriod,numberOfPeriods,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const n=toNumber(numberOfPeriods,this.locale);const r=toNumber(rate,this.locale);const period=toNumber(currentPeriod,this.locale);const type=toBoolean(endOrBeginning)?1:0;const fv=toNumber(futureValue,this.locale);const pv=toNumber(presentValue,this.locale);return{value:ppmt(r,period,n,pv,fv,type),format:"#,##0.00",};},isExported:true,};const PV={description:_t("Present value of an annuity investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("payment_amount (number)",_t("The amount per period to be paid.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,paymentAmount,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){futureValue=futureValue||0;endOrBeginning=endOrBeginning||0;const r=toNumber(rate,this.locale);const n=toNumber(numberOfPeriods,this.locale);const p=toNumber(paymentAmount,this.locale);const fv=toNumber(futureValue,this.locale);const type=toBoolean(endOrBeginning)?1:0;return{value:r?-((p*(1+r*type)*((1+r)**n-1))/r+fv)/(1+r)**n:-(fv+p*n),format:"#,##0.00",};},isExported:true,};const PRICE={description:_t("Price of a security paying periodic interest."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,securityYield,redemption,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _rate=toNumber(rate,this.locale);const _yield=toNumber(securityYield,this.locale);const _redemption=toNumber(redemption,this.locale);const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);assert(()=>_rate>=0,_t("The rate (%s) must be positive or null.",_rate.toString()));assert(()=>_yield>=0,_t("The yield (%s) must be positive or null.",_yield.toString()));assertRedemptionStrictlyPositive(_redemption);const years=getYearFrac(_settlement,_maturity,_dayCountConvention);const nbrRealCoupons=years*_frequency;const nbrFullCoupons=Math.ceil(nbrRealCoupons);const timeFirstCoupon=nbrRealCoupons-Math.floor(nbrRealCoupons)||1;const yieldFactorPerPeriod=1+_yield/_frequency;const cashFlowFromCoupon=(100*_rate)/_frequency;if(nbrFullCoupons===1){return((cashFlowFromCoupon+_redemption)/((timeFirstCoupon*_yield)/_frequency+1)-
cashFlowFromCoupon*(1-timeFirstCoupon));}
let cashFlowsPresentValue=0;for(let i=1;i<=nbrFullCoupons;i++){cashFlowsPresentValue+=cashFlowFromCoupon/yieldFactorPerPeriod**(i-1+timeFirstCoupon);}
const redemptionPresentValue=_redemption/yieldFactorPerPeriod**(nbrFullCoupons-1+timeFirstCoupon);return(redemptionPresentValue+cashFlowsPresentValue-cashFlowFromCoupon*(1-timeFirstCoupon));},isExported:true,};const PRICEDISC={description:_t("Price of a discount security."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("discount (number)",_t("The discount rate of the security at time of purchase.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,discount,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _discount=toNumber(discount,this.locale);const _redemption=toNumber(redemption,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertDayCountConventionIsValid(_dayCountConvention);assertDiscountStrictlyPositive(_discount);assertRedemptionStrictlyPositive(_redemption);const yearsFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return _redemption-_discount*_redemption*yearsFrac;},isExported:true,};const PRICEMAT={description:_t("Calculates the price of a security paying interest at maturity, based on expected yield."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("issue (date)",_t("The date the security was initially issued.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,issue,rate,securityYield,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _issue=Math.trunc(toNumber(issue,this.locale));const _rate=toNumber(rate,this.locale);const _yield=toNumber(securityYield,this.locale);const _dayCount=Math.trunc(toNumber(dayCountConvention,this.locale));assertSettlementAndIssueDatesAreValid(_settlement,_issue);assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertDayCountConventionIsValid(_dayCount);assert(()=>_rate>=0,_t("The rate (%s) must be positive or null.",_rate.toString()));assert(()=>_yield>=0,_t("The yield (%s) must be positive or null.",_yield.toString()));const settlementToMaturity=getYearFrac(_settlement,_maturity,_dayCount);const issueToSettlement=getYearFrac(_settlement,_issue,_dayCount);const issueToMaturity=getYearFrac(_issue,_maturity,_dayCount);const numerator=100+issueToMaturity*_rate*100;const denominator=1+settlementToMaturity*_yield;const term2=issueToSettlement*_rate*100;return numerator/denominator-term2;},isExported:true,};const RATE_GUESS_DEFAULT=0.1;const RATE={description:_t("Interest rate of an annuity investment."),args:[arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("payment_per_period (number)",_t("The amount per period to be paid.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),arg(`rate_guess (number, default=${RATE_GUESS_DEFAULT})`,_t("An estimate for what the interest rate will be.")),],compute:function(numberOfPeriods,paymentPerPeriod,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING},rateGuess={value:RATE_GUESS_DEFAULT}){const n=toNumber(numberOfPeriods,this.locale);const payment=toNumber(paymentPerPeriod,this.locale);const type=toBoolean(endOrBeginning)?1:0;const guess=toNumber(rateGuess,this.locale)||RATE_GUESS_DEFAULT;let fv=toNumber(futureValue,this.locale);let pv=toNumber(presentValue,this.locale);assertNumberOfPeriodsStrictlyPositive(n);assert(()=>[payment,pv,fv].some((val)=>val>0)&&[payment,pv,fv].some((val)=>val<0),_t("There must be both positive and negative values in [payment_amount, present_value, future_value].",n.toString()));assertRateGuessStrictlyGreaterThanMinusOne(guess);fv-=payment*type;pv+=payment*type;const func=(rate)=>{const powN=Math.pow(1+rate,n);const intResult=(powN-1)/rate;return fv+pv*powN+payment*intResult;};const derivFunc=(rate)=>{const powNMinus1=Math.pow(1+rate,n-1);const powN=Math.pow(1+rate,n);const intResult=(powN-1)/rate;const intResultDeriv=(n*powNMinus1)/rate-intResult/rate;const fTermDerivation=pv*n*powNMinus1+payment*intResultDeriv;return fTermDerivation;};return{value:newtonMethod(func,derivFunc,guess,40,1e-5),format:"0%",};},isExported:true,};const RECEIVED={description:_t("Amount received at maturity for a security."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("investment (number)",_t("The amount invested (irrespective of face value of each security).")),arg("discount (number)",_t("The discount rate of the security invested in.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,investment,discount,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _investment=toNumber(investment,this.locale);const _discount=toNumber(discount,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertDayCountConventionIsValid(_dayCountConvention);assertInvestmentStrictlyPositive(_investment);assertDiscountStrictlyPositive(_discount);const yearsFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return _investment/(1-_discount*yearsFrac);},isExported:true,};const RRI={description:_t("Computes the rate needed for an investment to reach a specific value within a specific number of periods."),args:[arg("number_of_periods (number)",_t("The number of periods.")),arg("present_value (number)",_t("The present value of the investment.")),arg("future_value (number)",_t("The future value of the investment.")),],compute:function(numberOfPeriods,presentValue,futureValue){const n=toNumber(numberOfPeriods,this.locale);const pv=toNumber(presentValue,this.locale);const fv=toNumber(futureValue,this.locale);assertNumberOfPeriodsStrictlyPositive(n);return(fv/pv)**(1/n)-1;},isExported:true,};const SLN={description:_t("Depreciation of an asset using the straight-line method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),],compute:function(cost,salvage,life){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);return{value:(_cost-_salvage)/_life,format:"#,##0.00",};},isExported:true,};const SYD={description:_t("Depreciation via sum of years digit method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),],compute:function(cost,salvage,life,period){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _period=toNumber(period,this.locale);assertPeriodStrictlyPositive(_period);assertLifeStrictlyPositive(_life);assertPeriodSmallerOrEqualToLife(_period,_life);const deprecFactor=(_life*(_life+1))/2;const remainingPeriods=_life-_period+1;return{value:(_cost-_salvage)*(remainingPeriods/deprecFactor),format:"#,##0.00",};},isExported:true,};function tBillPrice(start,end,disc){const yearFrac=getYearFrac(start,end,2);return 100*(1-disc*yearFrac);}
const TBILLPRICE={description:_t("Price of a US Treasury bill."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("discount (number)",_t("The discount rate of the bill at time of purchase.")),],compute:function(settlement,maturity,discount){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const disc=toNumber(discount,this.locale);assertMaturityAndSettlementDatesAreValid(start,end);assertSettlementLessThanOneYearBeforeMaturity(start,end,this.locale);assertDiscountStrictlyPositive(disc);assertDiscountStrictlySmallerThanOne(disc);return tBillPrice(start,end,disc);},isExported:true,};const TBILLEQ={description:_t("Equivalent rate of return for a US Treasury bill."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("discount (number)",_t("The discount rate of the bill at time of purchase.")),],compute:function(settlement,maturity,discount){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const disc=toNumber(discount,this.locale);assertMaturityAndSettlementDatesAreValid(start,end);assertSettlementLessThanOneYearBeforeMaturity(start,end,this.locale);assertDiscountStrictlyPositive(disc);assertDiscountStrictlySmallerThanOne(disc);const nDays=DAYS.compute.bind(this)({value:end},{value:start});if(nDays<=182){return(365*disc)/(360-disc*nDays);}
const p=tBillPrice(start,end,disc)/100;const daysInYear=nDays===366?366:365;const x=nDays/daysInYear;const num=-2*x+2*Math.sqrt(x**2-(2*x-1)*(1-1/p));const denom=2*x-1;return num/denom;},isExported:true,};const TBILLYIELD={description:_t("The yield of a US Treasury bill based on price."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),],compute:function(settlement,maturity,price){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const p=toNumber(price,this.locale);assertMaturityAndSettlementDatesAreValid(start,end);assertSettlementLessThanOneYearBeforeMaturity(start,end,this.locale);assertPriceStrictlyPositive(p);const yearFrac=getYearFrac(start,end,2);return((100-p)/p)*(1/yearFrac);},isExported:true,};const DEFAULT_VDB_NO_SWITCH=false;const VDB={description:_t("Variable declining balance. WARNING : does not handle decimal periods."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("start (number)",_t("Starting period to calculate depreciation.")),arg("end (number)",_t("Ending period to calculate depreciation.")),arg(`factor (number, default=${DEFAULT_DDB_DEPRECIATION_FACTOR})`,_t("The number of months in the first year of depreciation.")),arg(`no_switch (number, default=${DEFAULT_VDB_NO_SWITCH})`,_t("Whether to switch to straight-line depreciation when the depreciation is greater than the declining balance calculation.")),],compute:function(cost,salvage,life,startPeriod,endPeriod,factor={value:DEFAULT_DDB_DEPRECIATION_FACTOR},noSwitch={value:DEFAULT_VDB_NO_SWITCH}){factor=factor||0;const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _startPeriod=Math.trunc(toNumber(startPeriod,this.locale));const _endPeriod=Math.trunc(toNumber(endPeriod,this.locale));const _factor=toNumber(factor,this.locale);const _noSwitch=toBoolean(noSwitch);assertCostPositiveOrZero(_cost);assertSalvagePositiveOrZero(_salvage);assertStartAndEndPeriodAreValid(_startPeriod,_endPeriod,_life);assertDeprecationFactorStrictlyPositive(_factor);if(_cost===0)
return 0;if(_salvage>=_cost){return _startPeriod<1?_cost-_salvage:0;}
const doubleDeprecFactor=_factor/_life;if(doubleDeprecFactor>=1){return _startPeriod<1?_cost-_salvage:0;}
let previousCost=_cost;let currentDeprec=0;let resultDeprec=0;let isLinearDeprec=false;for(let i=0;i<_endPeriod;i++){if(!isLinearDeprec||_noSwitch){const doubleDeprec=previousCost*doubleDeprecFactor;const remainingPeriods=_life-i;const linearDeprec=(previousCost-_salvage)/remainingPeriods;if(!_noSwitch&&linearDeprec>doubleDeprec){isLinearDeprec=true;currentDeprec=linearDeprec;}
else{currentDeprec=doubleDeprec;}}
const nextCost=Math.max(previousCost-currentDeprec,_salvage);if(i>=_startPeriod){resultDeprec+=previousCost-nextCost;}
previousCost=nextCost;}
return resultDeprec;},isExported:true,};const XIRR={description:_t("Internal rate of return given non-periodic cash flows."),args:[arg("cashflow_amounts (range<number>)",_t("An range containing the income or payments associated with the investment.")),arg("cashflow_dates (range<number>)",_t("An range with dates corresponding to the cash flows in cashflow_amounts.")),arg(`rate_guess (number, default=${RATE_GUESS_DEFAULT})`,_t("An estimate for what the internal rate of return will be.")),],compute:function(cashflowAmounts,cashflowDates,rateGuess={value:RATE_GUESS_DEFAULT}){const guess=toNumber(rateGuess,this.locale);const _cashFlows=cashflowAmounts.flat().map((val)=>toNumber(val,this.locale));const _dates=cashflowDates.flat().map((val)=>toNumber(val,this.locale));assertCashFlowsAndDatesHaveSameDimension(cashflowAmounts,cashflowDates);assertCashFlowsHavePositiveAndNegativesValues(_cashFlows);assertEveryDateGreaterThanFirstDateOfCashFlowDates(_dates);assertRateGuessStrictlyGreaterThanMinusOne(guess);const map=new Map();for(const i of range(0,_dates.length)){const date=_dates[i];if(map.has(date))
map.set(date,map.get(date)+_cashFlows[i]);else
map.set(date,_cashFlows[i]);}
const dates=Array.from(map.keys());const values=dates.map((date)=>map.get(date));const func=(rate)=>{let value=values[0];for(const i of range(1,values.length)){const dateDiff=(dates[0]-dates[i])/365;value+=values[i]*(1+rate)**dateDiff;}
return value;};const derivFunc=(rate)=>{let deriv=0;for(const i of range(1,values.length)){const dateDiff=(dates[0]-dates[i])/365;deriv+=dateDiff*values[i]*(1+rate)**(dateDiff-1);}
return deriv;};const nanFallback=(previousFallback)=>{if(!previousFallback)
return-0.9;return previousFallback/10-0.9;};return newtonMethod(func,derivFunc,guess,40,1e-5,nanFallback);},isExported:true,};const XNPV={description:_t("Net present value given to non-periodic cash flows.."),args:[arg("discount (number)",_t("The discount rate of the investment over one period.")),arg("cashflow_amounts (number, range<number>)",_t("An range containing the income or payments associated with the investment.")),arg("cashflow_dates (number, range<number>)",_t("An range with dates corresponding to the cash flows in cashflow_amounts.")),],compute:function(discount,cashflowAmounts,cashflowDates){const rate=toNumber(discount,this.locale);const _cashFlows=isMatrix(cashflowAmounts)?cashflowAmounts.flat().map((data)=>strictToNumber(data,this.locale)):[strictToNumber(cashflowAmounts,this.locale)];const _dates=isMatrix(cashflowDates)?cashflowDates.flat().map((data)=>strictToNumber(data,this.locale)):[strictToNumber(cashflowDates,this.locale)];if(isMatrix(cashflowDates)&&isMatrix(cashflowAmounts)){assertCashFlowsAndDatesHaveSameDimension(cashflowAmounts,cashflowDates);}
else{assert(()=>_cashFlows.length===_dates.length,_t("There must be the same number of values in cashflow_amounts and cashflow_dates."));}
assertEveryDateGreaterThanFirstDateOfCashFlowDates(_dates);assertRateStrictlyPositive(rate);if(_cashFlows.length===1)
return _cashFlows[0];const map=new Map();for(const i of range(0,_dates.length)){const date=_dates[i];if(map.has(date))
map.set(date,map.get(date)+_cashFlows[i]);else
map.set(date,_cashFlows[i]);}
const dates=Array.from(map.keys());const values=dates.map((date)=>map.get(date));let pv=values[0];for(const i of range(1,values.length)){const dateDiff=(dates[0]-dates[i])/365;pv+=values[i]*(1+rate)**dateDiff;}
return pv;},isExported:true,};const YIELD={description:_t("Annual yield of a security paying periodic interest."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,price,redemption,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _rate=toNumber(rate,this.locale);const _price=toNumber(price,this.locale);const _redemption=toNumber(redemption,this.locale);const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertCouponFrequencyIsValid(_frequency);assertDayCountConventionIsValid(_dayCountConvention);assert(()=>_rate>=0,_t("The rate (%s) must be positive or null.",_rate.toString()));assertPriceStrictlyPositive(_price);assertRedemptionStrictlyPositive(_redemption);const years=getYearFrac(_settlement,_maturity,_dayCountConvention);const nbrRealCoupons=years*_frequency;const nbrFullCoupons=Math.ceil(nbrRealCoupons);const timeFirstCoupon=nbrRealCoupons-Math.floor(nbrRealCoupons)||1;const cashFlowFromCoupon=(100*_rate)/_frequency;if(nbrFullCoupons===1){const subPart=_price+cashFlowFromCoupon*(1-timeFirstCoupon);return(((_redemption+cashFlowFromCoupon-subPart)*_frequency*(1/timeFirstCoupon))/subPart);}
function priceNumerator(price,timeFirstCoupon,nbrFullCoupons,yieldFactorPerPeriod,cashFlowFromCoupon,redemption){let result=redemption-
(price+cashFlowFromCoupon*(1-timeFirstCoupon))*yieldFactorPerPeriod**(nbrFullCoupons-1+timeFirstCoupon);for(let i=1;i<=nbrFullCoupons;i++){result+=cashFlowFromCoupon*yieldFactorPerPeriod**(i-1);}
return result;}
function priceNumeratorDeriv(price,timeFirstCoupon,nbrFullCoupons,yieldFactorPerPeriod,cashFlowFromCoupon){let result=-(price+cashFlowFromCoupon*(1-timeFirstCoupon))*(nbrFullCoupons-1+timeFirstCoupon)*yieldFactorPerPeriod**(nbrFullCoupons-2+timeFirstCoupon);for(let i=1;i<=nbrFullCoupons;i++){result+=cashFlowFromCoupon*(i-1)*yieldFactorPerPeriod**(i-2);}
return result;}
function func(x){return priceNumerator(_price,timeFirstCoupon,nbrFullCoupons,x,cashFlowFromCoupon,_redemption);}
function derivFunc(x){return priceNumeratorDeriv(_price,timeFirstCoupon,nbrFullCoupons,x,cashFlowFromCoupon);}
const initYield=_rate+1;const initYieldFactorPerPeriod=1+initYield/_frequency;const methodResult=newtonMethod(func,derivFunc,initYieldFactorPerPeriod,100,1e-5);return(methodResult-1)*_frequency;},isExported:true,};const YIELDDISC={description:_t("Annual yield of a discount security."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,price,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _price=toNumber(price,this.locale);const _redemption=toNumber(redemption,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertDayCountConventionIsValid(_dayCountConvention);assertPriceStrictlyPositive(_price);assertRedemptionStrictlyPositive(_redemption);const yearFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return(_redemption/_price-1)/yearFrac;},isExported:true,};const YIELDMAT={description:_t("Annual yield of a security paying interest at maturity."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("issue (date)",_t("The date the security was initially issued.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("price (number)",_t("The price at which the security is bought.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,issue,rate,price,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _issue=Math.trunc(toNumber(issue,this.locale));const _rate=toNumber(rate,this.locale);const _price=toNumber(price,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));assertMaturityAndSettlementDatesAreValid(_settlement,_maturity);assertDayCountConventionIsValid(_dayCountConvention);assert(()=>_settlement>=_issue,_t("The settlement (%s) must be greater than or equal to the issue (%s).",_settlement.toString(),_issue.toString()));assert(()=>_rate>=0,_t("The rate (%s) must be positive or null.",_rate.toString()));assertPriceStrictlyPositive(_price);const issueToMaturity=getYearFrac(_issue,_maturity,_dayCountConvention);const issueToSettlement=getYearFrac(_issue,_settlement,_dayCountConvention);const settlementToMaturity=getYearFrac(_settlement,_maturity,_dayCountConvention);const numerator=(100*(1+_rate*issueToMaturity))/(_price+100*_rate*issueToSettlement)-1;return numerator/settlementToMaturity;},isExported:true,};var financial=Object.freeze({__proto__:null,ACCRINTM:ACCRINTM,AMORLINC:AMORLINC,COUPDAYBS:COUPDAYBS,COUPDAYS:COUPDAYS,COUPDAYSNC:COUPDAYSNC,COUPNCD:COUPNCD,COUPNUM:COUPNUM,COUPPCD:COUPPCD,CUMIPMT:CUMIPMT,CUMPRINC:CUMPRINC,DB:DB,DDB:DDB,DISC:DISC,DOLLARDE:DOLLARDE,DOLLARFR:DOLLARFR,DURATION:DURATION,EFFECT:EFFECT,FV:FV,FVSCHEDULE:FVSCHEDULE,INTRATE:INTRATE,IPMT:IPMT,IRR:IRR,ISPMT:ISPMT,MDURATION:MDURATION,MIRR:MIRR,NOMINAL:NOMINAL,NPER:NPER,NPV:NPV,PDURATION:PDURATION,PMT:PMT,PPMT:PPMT,PRICE:PRICE,PRICEDISC:PRICEDISC,PRICEMAT:PRICEMAT,PV:PV,RATE:RATE,RECEIVED:RECEIVED,RRI:RRI,SLN:SLN,SYD:SYD,TBILLEQ:TBILLEQ,TBILLPRICE:TBILLPRICE,TBILLYIELD:TBILLYIELD,VDB:VDB,XIRR:XIRR,XNPV:XNPV,YIELD:YIELD,YIELDDISC:YIELDDISC,YIELDMAT:YIELDMAT});var State;(function(State){State[State["LeftRef"]=0]="LeftRef";State[State["RightRef"]=1]="RightRef";State[State["Separator"]=2]="Separator";State[State["FullColumnSeparator"]=3]="FullColumnSeparator";State[State["FullRowSeparator"]=4]="FullRowSeparator";State[State["RightColumnRef"]=5]="RightColumnRef";State[State["RightRowRef"]=6]="RightRowRef";State[State["Found"]=7]="Found";})(State||(State={}));const goTo=(state,guard=()=>true)=>[{goTo:state,guard,},];const goToMulti=(state,guard=()=>true)=>({goTo:state,guard,});const machine={[State.LeftRef]:{REFERENCE:goTo(State.Separator),NUMBER:goTo(State.FullRowSeparator),SYMBOL:[goToMulti(State.FullColumnSeparator,(token)=>isColReference(token.value)),goToMulti(State.FullRowSeparator,(token)=>isRowReference(token.value)),],},[State.FullColumnSeparator]:{SPACE:goTo(State.FullColumnSeparator),OPERATOR:goTo(State.RightColumnRef,(token)=>token.value===":"),},[State.FullRowSeparator]:{SPACE:goTo(State.FullRowSeparator),OPERATOR:goTo(State.RightRowRef,(token)=>token.value===":"),},[State.Separator]:{SPACE:goTo(State.Separator),OPERATOR:goTo(State.RightRef,(token)=>token.value===":"),},[State.RightRef]:{SPACE:goTo(State.RightRef),NUMBER:goTo(State.Found),REFERENCE:goTo(State.Found,(token)=>isSingleCellReference(token.value)),SYMBOL:goTo(State.Found,(token)=>isColHeader(token.value)||isRowHeader(token.value)),},[State.RightColumnRef]:{SPACE:goTo(State.RightColumnRef),SYMBOL:goTo(State.Found,(token)=>isColHeader(token.value)),REFERENCE:goTo(State.Found,(token)=>isSingleCellReference(token.value)),},[State.RightRowRef]:{SPACE:goTo(State.RightRowRef),NUMBER:goTo(State.Found),REFERENCE:goTo(State.Found,(token)=>isSingleCellReference(token.value)),SYMBOL:goTo(State.Found,(token)=>isRowHeader(token.value)),},[State.Found]:{},};function matchReference(tokens){let head=0;let transitions=machine[State.LeftRef];let matchedTokens="";while(transitions!==undefined){const token=tokens[head++];if(!token){return null;}
const transition=transitions[token.type]?.find((transition)=>transition.guard(token));const nextState=transition?transition.goTo:undefined;switch(nextState){case undefined:return null;case State.Found:matchedTokens+=token.value;tokens.splice(0,head);return{type:"REFERENCE",value:matchedTokens,};default:transitions=machine[nextState];matchedTokens+=token.value;break;}}
return null;}
function rangeTokenize(formula,locale=DEFAULT_LOCALE){const tokens=tokenize(formula,locale);const result=[];while(tokens.length){result.push(matchReference(tokens)||tokens.shift());}
return result;}
const functionRegex=/[a-zA-Z0-9\_]+(\.[a-zA-Z0-9\_]+)*/;const UNARY_OPERATORS_PREFIX=["-","+"];const UNARY_OPERATORS_POSTFIX=["%"];const ASSOCIATIVE_OPERATORS=["*","+","&"];const OP_PRIORITY={"^":30,"%":30,"*":20,"/":20,"+":15,"-":15,"&":13,">":10,"<>":10,">=":10,"<":10,"<=":10,"=":10,};function parseOperand(tokens){const current=tokens.shift();if(!current){throw new BadExpressionError();}
switch(current.type){case"DEBUGGER":const next=parseExpression(tokens,1000);next.debug=true;return next;case"NUMBER":return{type:"NUMBER",value:parseNumber(current.value,DEFAULT_LOCALE)};case"STRING":return{type:"STRING",value:removeStringQuotes(current.value)};case"INVALID_REFERENCE":throw new InvalidReferenceError();case"REFERENCE":if(tokens[0]?.value===":"&&tokens[1]?.type==="REFERENCE"){tokens.shift();const rightReference=tokens.shift();return{type:"REFERENCE",value:`${current.value}:${rightReference?.value}`,};}
return{type:"REFERENCE",value:current.value,};case"SYMBOL":const value=current.value;const nextToken=tokens[0];if(nextToken?.type==="LEFT_PAREN"&&functionRegex.test(current.value)&&value===unquote(value,"'")){const args=parseFunctionArgs(tokens);return{type:"FUNCALL",value:value,args};}
const upperCaseValue=value.toUpperCase();if(upperCaseValue==="TRUE"||upperCaseValue==="FALSE"){return{type:"BOOLEAN",value:upperCaseValue==="TRUE"};}
return{type:"SYMBOL",value:unquote(current.value,"'")};case"LEFT_PAREN":const result=parseExpression(tokens);consumeOrThrow(tokens,"RIGHT_PAREN",_t("Missing closing parenthesis"));return result;case"OPERATOR":const operator=current.value;if(UNARY_OPERATORS_PREFIX.includes(operator)){return{type:"UNARY_OPERATION",value:operator,operand:parseExpression(tokens,OP_PRIORITY[operator]),};}
throw new BadExpressionError(_t("Unexpected token: %s",current.value));default:throw new BadExpressionError(_t("Unexpected token: %s",current.value));}}
function parseFunctionArgs(tokens){consumeOrThrow(tokens,"LEFT_PAREN",_t("Missing opening parenthesis"));const nextToken=tokens[0];if(nextToken?.type==="RIGHT_PAREN"){consumeOrThrow(tokens,"RIGHT_PAREN");return[];}
const args=[];args.push(parseOneFunctionArg(tokens));while(tokens[0]?.type!=="RIGHT_PAREN"){consumeOrThrow(tokens,"ARG_SEPARATOR",_t("Wrong function call"));args.push(parseOneFunctionArg(tokens));}
consumeOrThrow(tokens,"RIGHT_PAREN");return args;}
function parseOneFunctionArg(tokens){const nextToken=tokens[0];if(nextToken?.type==="ARG_SEPARATOR"||nextToken?.type==="RIGHT_PAREN"){return{type:"EMPTY",value:""};}
return parseExpression(tokens);}
function consumeOrThrow(tokens,type,message){const token=tokens.shift();if(!token||token.type!==type){throw new BadExpressionError(message);}}
function parseExpression(tokens,parent_priority=0){if(tokens.length===0){throw new BadExpressionError();}
let left=parseOperand(tokens);while(tokens[0]?.type==="OPERATOR"&&OP_PRIORITY[tokens[0].value]>parent_priority){const operator=tokens.shift().value;if(UNARY_OPERATORS_POSTFIX.includes(operator)){left={type:"UNARY_OPERATION",value:operator,operand:left,postfix:true,};}
else{const right=parseExpression(tokens,OP_PRIORITY[operator]);left={type:"BIN_OPERATION",value:operator,left,right,};}}
return left;}
function parse(str){return parseTokens(rangeTokenize(str));}
function parseTokens(tokens){tokens=tokens.filter((x)=>x.type!=="SPACE");if(tokens[0]?.value==="="){tokens.splice(0,1);}
const result=parseExpression(tokens);if(tokens.length){throw new BadExpressionError();}
return result;}
function convertAstNodes(ast,type,fn){return mapAst(ast,(ast)=>{if(ast.type===type){return fn(ast);}
return ast;});}
function iterateAstNodes(ast){return Array.from(astIterator(ast));}
function*astIterator(ast){yield ast;switch(ast.type){case"FUNCALL":for(const arg of ast.args){yield*astIterator(arg);}
break;case"UNARY_OPERATION":yield*astIterator(ast.operand);break;case"BIN_OPERATION":yield*astIterator(ast.left);yield*astIterator(ast.right);break;}}
function mapAst(ast,fn){ast=fn(ast);switch(ast.type){case"FUNCALL":return{...ast,args:ast.args.map((child)=>mapAst(child,fn)),};case"UNARY_OPERATION":return{...ast,operand:mapAst(ast.operand,fn),};case"BIN_OPERATION":return{...ast,right:mapAst(ast.right,fn),left:mapAst(ast.left,fn),};default:return ast;}}
function astToFormula(ast){switch(ast.type){case"FUNCALL":const args=ast.args.map((arg)=>astToFormula(arg));return`${ast.value}(${args.join(",")})`;case"NUMBER":return ast.value.toString();case"REFERENCE":return ast.value;case"STRING":return`"${ast.value}"`;case"BOOLEAN":return ast.value?"TRUE":"FALSE";case"UNARY_OPERATION":return ast.postfix?leftOperandToFormula(ast)+ast.value:ast.value+rightOperandToFormula(ast);case"BIN_OPERATION":return leftOperandToFormula(ast)+ast.value+rightOperandToFormula(ast);default:return ast.value;}}
function leftOperandToFormula(operationAST){const mainOperator=operationAST.value;const leftOperation="left"in operationAST?operationAST.left:operationAST.operand;const leftOperator=leftOperation.value;const needParenthesis=leftOperation.type==="BIN_OPERATION"&&OP_PRIORITY[leftOperator]<OP_PRIORITY[mainOperator];return needParenthesis?`(${astToFormula(leftOperation)})`:astToFormula(leftOperation);}
function rightOperandToFormula(operationAST){const mainOperator=operationAST.value;const rightOperation="right"in operationAST?operationAST.right:operationAST.operand;const rightPriority=OP_PRIORITY[rightOperation.value];const mainPriority=OP_PRIORITY[mainOperator];let needParenthesis=false;if(rightOperation.type!=="BIN_OPERATION"){needParenthesis=false;}
else if(rightPriority<mainPriority){needParenthesis=true;}
else if(rightPriority===mainPriority&&!ASSOCIATIVE_OPERATORS.includes(mainOperator)){needParenthesis=true;}
return needParenthesis?`(${astToFormula(rightOperation)})`:astToFormula(rightOperation);}
function enrichTokens(tokens){let current=0;return tokens.map((x)=>{const len=x.value.toString().length;const token=Object.assign({},x,{start:current,end:current+len,length:len,});current=token.end;return token;});}
function mapParenthesis(tokens){let maxParen=1;const stack=[];return tokens.map((token)=>{if(token.type==="LEFT_PAREN"){stack.push(maxParen);token.parenIndex=maxParen;maxParen++;}
else if(token.type==="RIGHT_PAREN"){token.parenIndex=stack.pop();}
return token;});}
function mapParentFunction(tokens){let stack=[];let functionStarted="";function pushTokenToFunctionContext(token){if(stack.length===0){return;}
const functionContext=stack.at(-1);if(functionContext&&functionContext.argsTokens){const{argsTokens,argPosition}=functionContext;if(!argsTokens[argPosition]){argsTokens[argPosition]=[];}
argsTokens[argPosition].push({value:token.value,type:token.type});}}
const res=tokens.map((token,i)=>{if(!["SPACE","LEFT_PAREN"].includes(token.type)){functionStarted="";}
switch(token.type){case"SYMBOL":pushTokenToFunctionContext(token);functionStarted=token.value;break;case"LEFT_PAREN":stack.push({parent:functionStarted,argPosition:0,argsTokens:[],args:[]});pushTokenToFunctionContext(token);functionStarted="";break;case"RIGHT_PAREN":const child=stack.pop();child?.argsTokens?.flat().forEach(pushTokenToFunctionContext);pushTokenToFunctionContext(token);break;case"ARG_SEPARATOR":pushTokenToFunctionContext(token);if(stack.length){stack[stack.length-1].argPosition++;}
break;default:pushTokenToFunctionContext(token);break;}
if(stack.length){const functionContext=stack[stack.length-1];if(functionContext.parent){token.functionContext=Object.assign({},functionContext);}}
return token;});return res;}
function addArgsAST(tokens){for(const token of tokens){if(token.functionContext){const{argsTokens,args}=token.functionContext;delete token.functionContext.argsTokens;if(args.length||!argsTokens){continue;}
if(argsTokens[0]?.[0]?.type==="LEFT_PAREN"){argsTokens[0]=argsTokens[0].slice(1);}
for(const argTokens of argsTokens){let tokens=argTokens;if(tokens.at(-1)?.type==="ARG_SEPARATOR"){tokens=tokens.slice(0,-1);}
try{args.push(parseTokens(tokens));}
catch(error){args.push(undefined);}}}}
return tokens;}
function composerTokenize(formula,locale){const tokens=rangeTokenize(formula,locale);return addArgsAST(mapParentFunction(mapParenthesis(enrichTokens(tokens))));}
function loopThroughReferenceType(token){if(token.type!=="REFERENCE")
return token;const{xc,sheetName}=splitReference(token.value);const[left,right]=xc.split(":");const updatedLeft=getTokenNextReferenceType(left);const updatedRight=right?`:${getTokenNextReferenceType(right)}`:"";return{...token,value:getFullReference(sheetName,updatedLeft+updatedRight)};}
function getTokenNextReferenceType(xc){switch(getReferenceType(xc)){case"none":xc=setXcToFixedReferenceType(xc,"colrow");break;case"colrow":xc=setXcToFixedReferenceType(xc,"row");break;case"row":xc=setXcToFixedReferenceType(xc,"col");break;case"col":xc=setXcToFixedReferenceType(xc,"none");break;}
return xc;}
function setXcToFixedReferenceType(xc,referenceType){if(xc.includes("!")){throw new Error("The given XC should not contain a sheet name");}
xc=xc.replace(/\$/g,"");let indexOfNumber;switch(referenceType){case"col":return"$"+xc;case"row":indexOfNumber=xc.search(/[0-9]/);return xc.slice(0,indexOfNumber)+"$"+xc.slice(indexOfNumber);case"colrow":indexOfNumber=xc.search(/[0-9]/);if(indexOfNumber===-1||indexOfNumber===0){return"$"+xc;}
xc=xc.slice(0,indexOfNumber)+"$"+xc.slice(indexOfNumber);return"$"+xc;case"none":return xc;}}
function getReferenceType(xcCell){if(isColAndRowFixed(xcCell)){return"colrow";}
else if(isColFixed(xcCell)){return"col";}
else if(isRowFixed(xcCell)){return"row";}
return"none";}
function isColFixed(xc){return xc.startsWith("$");}
function isRowFixed(xc){return xc.includes("$",1);}
function isColAndRowFixed(xc){return xc.startsWith("$")&&xc.length>1&&xc.slice(1).includes("$");}
function cycleFixedReference(selection,content,locale){const currentTokens=content.startsWith("=")?composerTokenize(content,locale):[];const tokens=currentTokens.filter((t)=>(t.start<=selection.start&&t.end>=selection.start)||(t.start>=selection.start&&t.start<selection.end));const refTokens=tokens.filter((token)=>token.type==="REFERENCE");if(refTokens.length===0){return;}
const updatedReferences=tokens.map(loopThroughReferenceType).map((token)=>token.value).join("");const start=tokens[0].start;const end=tokens[tokens.length-1].end;const newContent=content.slice(0,start)+updatedReferences+content.slice(end);const lengthDiff=newContent.length-content.length;const startOfTokens=refTokens[0].start;const endOfTokens=refTokens[refTokens.length-1].end+lengthDiff;const newSelection={start:startOfTokens,end:endOfTokens};if(refTokens.length===1&&selection.start===selection.end){newSelection.start=newSelection.end;}
return{content:newContent,selection:newSelection};}
const CELL_INFO_TYPES=["address","col","contents","format","row","type"];const CELL={description:_t("Gets information about a cell."),args:[arg("info_type (string)",_t("The type of information requested. Can be one of %s",CELL_INFO_TYPES.join(", "))),arg("reference (meta)",_t("The reference to the cell.")),],compute:function(info,reference){const _info=toString(info).toLowerCase();assert(()=>CELL_INFO_TYPES.includes(_info),_t("The info_type should be one of %s.",CELL_INFO_TYPES.join(", ")));const sheetId=this.__originSheetId;const _reference=toString(reference);const topLeftReference=_reference.includes(":")?_reference.split(":")[0]:_reference;let{sheetName,xc}=splitReference(topLeftReference);sheetName=sheetName===this.getters.getSheetName(sheetId)?undefined:sheetName;const fixedRef=getFullReference(sheetName,setXcToFixedReferenceType(xc,"colrow"));const range=this.getters.getRangeFromSheetXC(sheetId,fixedRef);switch(_info){case"address":return this.getters.getRangeString(range,sheetId);case"col":return range.zone.left+1;case"contents":{const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};return this.getters.getEvaluatedCell(position).value;}
case"format":{const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};return this.getters.getEvaluatedCell(position).format||"";}
case"row":return range.zone.top+1;case"type":{const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};const type=this.getters.getEvaluatedCell(position).type;if(type===CellValueType.empty){return"b";}
else if(type===CellValueType.text){return"l";}
else{return"v";}}}
return"";},isExported:true,};const ISERR={description:_t("Whether a value is an error other than #N/A."),args:[arg("value (any)",_t("The value to be verified as an error type."))],compute:function(data){const value=data?.value;return isEvaluationError(value)&&value!==CellErrorType.NotAvailable;},isExported:true,};const ISERROR={description:_t("Whether a value is an error."),args:[arg("value (any)",_t("The value to be verified as an error type."))],compute:function(data){const value=data?.value;return isEvaluationError(value);},isExported:true,};const ISLOGICAL={description:_t("Whether a value is `true` or `false`."),args:[arg("value (any)",_t("The value to be verified as a logical TRUE or FALSE."))],compute:function(value){return typeof value?.value==="boolean";},isExported:true,};const ISNA={description:_t("Whether a value is the error #N/A."),args:[arg("value (any)",_t("The value to be verified as an error type."))],compute:function(data){return data?.value===CellErrorType.NotAvailable;},isExported:true,};const ISNONTEXT={description:_t("Whether a value is non-textual."),args:[arg("value (any)",_t("The value to be checked."))],compute:function(value){return!ISTEXT.compute.bind(this)(value);},isExported:true,};const ISNUMBER={description:_t("Whether a value is a number."),args:[arg("value (any)",_t("The value to be verified as a number."))],compute:function(value){return typeof value?.value==="number";},isExported:true,};const ISTEXT={description:_t("Whether a value is text."),args:[arg("value (any)",_t("The value to be verified as text."))],compute:function(value){return typeof value?.value==="string"&&isEvaluationError(value?.value)===false;},isExported:true,};const ISBLANK={description:_t("Whether the referenced cell is empty"),args:[arg("value (any)",_t("Reference to the cell that will be checked for emptiness."))],compute:function(value){return value?.value===null;},isExported:true,};const NA={description:_t("Returns the error value #N/A."),args:[],compute:function(){return{value:CellErrorType.NotAvailable};},isExported:true,};var info=Object.freeze({__proto__:null,CELL:CELL,ISBLANK:ISBLANK,ISERR:ISERR,ISERROR:ISERROR,ISLOGICAL:ISLOGICAL,ISNA:ISNA,ISNONTEXT:ISNONTEXT,ISNUMBER:ISNUMBER,ISTEXT:ISTEXT,NA:NA});const AND={description:_t("Logical `and` operator."),args:[arg("logical_expression1 (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE, or an expression that can be coerced to a logical value.")),arg("logical_expression2 (boolean, range<boolean>, repeating)",_t("More expressions that represent logical values.")),],compute:function(...logicalExpressions){const{result,foundBoolean}=boolAnd(logicalExpressions);assert(()=>foundBoolean,_t("[[FUNCTION_NAME]] has no valid input data."));return result;},isExported:true,};const FALSE={description:_t("Logical value `false`."),args:[],compute:function(){return false;},isExported:true,};const IF={description:_t("Returns value depending on logical expression."),args:[arg("logical_expression (boolean)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE.")),arg("value_if_true (any)",_t("The value the function returns if logical_expression is TRUE.")),arg("value_if_false (any, default=FALSE)",_t("The value the function returns if logical_expression is FALSE.")),],compute:function(logicalExpression,valueIfTrue,valueIfFalse){const result=toBoolean(logicalExpression?.value)?valueIfTrue:valueIfFalse;if(result===undefined){return{value:""};}
if(result.value===null){result.value="";}
return result;},isExported:true,};const IFERROR={description:_t("Value if it is not an error, otherwise 2nd argument."),args:[arg("value (any)",_t("The value to return if value itself is not an error.")),arg(`value_if_error (any, default="empty")`,_t("The value the function returns if value is an error.")),],compute:function(value,valueIfError={value:""}){const result=isEvaluationError(value?.value)?valueIfError:value;if(result===undefined){return{value:""};}
if(result.value===null){result.value="";}
return result;},isExported:true,};const IFNA={description:_t("Value if it is not an #N/A error, otherwise 2nd argument."),args:[arg("value (any)",_t("The value to return if value itself is not #N/A an error.")),arg(`value_if_error (any, default="empty")`,_t("The value the function returns if value is an #N/A error.")),],compute:function(value,valueIfError={value:""}){const result=value?.value===CellErrorType.NotAvailable?valueIfError:value;if(result===undefined){return{value:""};}
if(result.value===null){result.value="";}
return result;},isExported:true,};const IFS={description:_t("Returns a value depending on multiple logical expressions."),args:[arg("condition1 (boolean)",_t("The first condition to be evaluated. This can be a boolean, a number, an array, or a reference to any of those.")),arg("value1 (any)",_t("The returned value if condition1 is TRUE.")),arg("condition2 (boolean, repeating)",_t("Additional conditions to be evaluated if the previous ones are FALSE.")),arg("value2 (any, repeating)",_t("Additional values to be returned if their corresponding conditions are TRUE.")),],compute:function(...values){assert(()=>values.length%2===0,_t("Wrong number of arguments. Expected an even number of arguments."));for(let n=0;n<values.length-1;n+=2){if(toBoolean(values[n]?.value)){const result=values[n+1];if(result===undefined){return{value:""};}
if(result.value===null){result.value="";}
return result;}}
throw new EvaluationError(_t("No match."));},isExported:true,};const NOT={description:_t("Returns opposite of provided logical value."),args:[arg("logical_expression (boolean)",_t("An expression or reference to a cell holding an expression that represents some logical value.")),],compute:function(logicalExpression){return!toBoolean(logicalExpression);},isExported:true,};const OR={description:_t("Logical `or` operator."),args:[arg("logical_expression1 (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE, or an expression that can be coerced to a logical value.")),arg("logical_expression2 (boolean, range<boolean>, repeating)",_t("More expressions that evaluate to logical values.")),],compute:function(...logicalExpressions){const{result,foundBoolean}=boolOr(logicalExpressions);assert(()=>foundBoolean,_t("[[FUNCTION_NAME]] has no valid input data."));return result;},isExported:true,};const TRUE={description:_t("Logical value `true`."),args:[],compute:function(){return true;},isExported:true,};const XOR={description:_t("Logical `xor` operator."),args:[arg("logical_expression1 (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE, or an expression that can be coerced to a logical value.")),arg("logical_expression2 (boolean, range<boolean>, repeating)",_t("More expressions that evaluate to logical values.")),],compute:function(...logicalExpressions){let foundBoolean=false;let acc=false;conditionalVisitBoolean(logicalExpressions,(arg)=>{foundBoolean=true;acc=acc?!arg:arg;return true;});assert(()=>foundBoolean,_t("[[FUNCTION_NAME]] has no valid input data."));return acc;},isExported:true,};var logical=Object.freeze({__proto__:null,AND:AND,FALSE:FALSE,IF:IF,IFERROR:IFERROR,IFNA:IFNA,IFS:IFS,NOT:NOT,OR:OR,TRUE:TRUE,XOR:XOR});function getPivotId(pivotFormulaId,getters){const pivotId=getters.getPivotId(pivotFormulaId);if(!pivotId){throw new EvaluationError(_t('There is no pivot with id "%s"',pivotFormulaId));}
return pivotId;}
function assertMeasureExist(pivotId,measure,getters){const{measures}=getters.getPivotCoreDefinition(pivotId);if(!measures.find((m)=>m.id===measure)){const validMeasures=`(${measures.map((m) => m.id).join(", ")})`;throw new EvaluationError(_t("The argument %s is not a valid measure. Here are the measures: %s",measure,validMeasures));}}
function assertDomainLength(domain){if(domain.length%2!==0){throw new EvaluationError(_t("Function PIVOT takes an even number of arguments."));}}
function addPivotDependencies(evalContext,coreDefinition,forMeasures){const dependencies=[];if(coreDefinition.type==="SPREADSHEET"&&coreDefinition.dataSet){const{sheetId,zone}=coreDefinition.dataSet;const xc=zoneToXc(zone);const range=evalContext.getters.getRangeFromSheetXC(sheetId,xc);if(range===undefined||range.invalidXc||range.invalidSheetName){throw new InvalidReferenceError();}
dependencies.push(range);}
for(const measure of forMeasures){if(measure.computedBy){const formula=evalContext.getters.getMeasureCompiledFormula(measure);dependencies.push(...formula.dependencies.filter((range)=>!range.invalidXc));}}
const originPosition=evalContext.__originCellPosition;if(originPosition&&dependencies.length){evalContext.updateDependencies?.(originPosition);evalContext.addDependencies?.(originPosition,dependencies);}}
const DEFAULT_IS_SORTED=true;const DEFAULT_MATCH_MODE=0;const DEFAULT_SEARCH_MODE=1;const DEFAULT_ABSOLUTE_RELATIVE_MODE=1;function valueNotAvailable(searchKey){return{value:CellErrorType.NotAvailable,message:_t("Did not find value '%s' in [[FUNCTION_NAME]] evaluation.",toString(searchKey)),};}
const ADDRESS={description:_t("Returns a cell reference as a string. "),args:[arg("row (number)",_t("The row number of the cell reference. ")),arg("column (number)",_t("The column number (not name) of the cell reference. A is column number 1. ")),arg(`absolute_relative_mode (number, default=${DEFAULT_ABSOLUTE_RELATIVE_MODE})`,_t("An indicator of whether the reference is row/column absolute. 1 is row and column absolute (e.g. $A$1), 2 is row absolute and column relative (e.g. A$1), 3 is row relative and column absolute (e.g. $A1), and 4 is row and column relative (e.g. A1).")),arg("use_a1_notation (boolean, default=TRUE)",_t("A boolean indicating whether to use A1 style notation (TRUE) or R1C1 style notation (FALSE).")),arg("sheet (string, optional)",_t("A string indicating the name of the sheet into which the address points.")),],compute:function(row,column,absoluteRelativeMode={value:DEFAULT_ABSOLUTE_RELATIVE_MODE},useA1Notation={value:true},sheet){const rowNumber=strictToInteger(row,this.locale);const colNumber=strictToInteger(column,this.locale);assertNumberGreaterThanOrEqualToOne(rowNumber);assertNumberGreaterThanOrEqualToOne(colNumber);const _absoluteRelativeMode=strictToInteger(absoluteRelativeMode,this.locale);assert(()=>[1,2,3,4].includes(_absoluteRelativeMode),expectNumberRangeError(1,4,_absoluteRelativeMode));const _useA1Notation=toBoolean(useA1Notation);let cellReference;if(_useA1Notation){const rangePart={rowFixed:[1,2].includes(_absoluteRelativeMode)?true:false,colFixed:[1,3].includes(_absoluteRelativeMode)?true:false,};cellReference=toXC(colNumber-1,rowNumber-1,rangePart);}
else{const rowPart=[1,2].includes(_absoluteRelativeMode)?`R${rowNumber}`:`R[${rowNumber}]`;const colPart=[1,3].includes(_absoluteRelativeMode)?`C${colNumber}`:`C[${colNumber}]`;cellReference=rowPart+colPart;}
if(sheet!==undefined){return getFullReference(toString(sheet),cellReference);}
return cellReference;},isExported:true,};const COLUMN={description:_t("Column number of a specified cell."),args:[arg("cell_reference (meta, default='this cell')",_t("The cell whose column number will be returned. Column A corresponds to 1. By default, the function use the cell in which the formula is entered.")),],compute:function(cellReference){if(isEvaluationError(cellReference?.value)){throw cellReference;}
const column=cellReference===undefined?this.__originCellPosition?.col:toZone(cellReference.value).left;assert(()=>column!==undefined,"In this context, the function [[FUNCTION_NAME]] needs to have a cell or range in parameter.");return column+1;},isExported:true,};const COLUMNS={description:_t("Number of columns in a specified array or range."),args:[arg("range (meta)",_t("The range whose column count will be returned."))],compute:function(range){if(isEvaluationError(range?.value)){throw range;}
const zone=toZone(range.value);return zone.right-zone.left+1;},isExported:true,};const HLOOKUP={description:_t("Horizontal lookup"),args:[arg("search_key (any)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("range (range)",_t("The range to consider for the search. The first row in the range is searched for the key specified in search_key.")),arg("index (number)",_t("The row index of the value to be returned, where the first row in range is numbered 1.")),arg(`is_sorted (boolean, default=${DEFAULT_IS_SORTED})`,_t("Indicates whether the row to be searched (the first row of the specified range) is sorted, in which case the closest match for search_key will be returned.")),],compute:function(searchKey,range,index,isSorted={value:DEFAULT_IS_SORTED}){const _index=Math.trunc(toNumber(index?.value,this.locale));assert(()=>1<=_index&&_index<=range[0].length,_t("[[FUNCTION_NAME]] evaluates to an out of bounds range."));if(searchKey&&isEvaluationError(searchKey.value)){return searchKey;}
const getValueFromRange=(range,index)=>range[index][0].value;const _isSorted=toBoolean(isSorted.value);const colIndex=_isSorted?dichotomicSearch(range,searchKey,"nextSmaller","asc",range.length,getValueFromRange):linearSearch(range,searchKey,"wildcard",range.length,getValueFromRange);const col=range[colIndex];if(col===undefined){return valueNotAvailable(searchKey);}
return col[_index-1];},isExported:true,};const INDEX={description:_t("Returns the content of a cell, specified by row and column offset."),args:[arg("reference (any, range)",_t("The range of cells from which the values are returned.")),arg("row (number, default=0)",_t("The index of the row to be returned from within the reference range of cells.")),arg("column (number, default=0)",_t("The index of the column to be returned from within the reference range of cells.")),],compute:function(reference,row={value:0},column={value:0}){const _reference=toMatrix(reference);const _row=toNumber(row.value,this.locale);const _column=toNumber(column.value,this.locale);assert(()=>_column>=0&&_column-1<_reference.length&&_row>=0&&_row-1<_reference[0].length,_t("Index out of range."));if(_row===0&&_column===0){return _reference;}
if(_row===0){return[_reference[_column-1]];}
if(_column===0){return _reference.map((col)=>[col[_row-1]]);}
return _reference[_column-1][_row-1];},isExported:true,};const INDIRECT={description:_t("Returns the content of a cell, specified by a string."),args:[arg("reference (string)",_t("The range of cells from which the values are returned.")),arg("use_a1_notation (boolean, default=TRUE)",_t("A boolean indicating whether to use A1 style notation (TRUE) or R1C1 style notation (FALSE).")),],compute:function(reference,useA1Notation={value:true}){let _reference=reference?.value?.toString();if(!_reference){throw new InvalidReferenceError(_t("Reference should be defined."));}
const _useA1Notation=toBoolean(useA1Notation);if(!_useA1Notation){throw new EvaluationError(_t("R1C1 notation is not supported."));}
const sheetId=this.__originSheetId;const originPosition=this.__originCellPosition;if(originPosition){this.updateDependencies?.(originPosition);}
const range=this.getters.getRangeFromSheetXC(sheetId,_reference);if(range===undefined||range.invalidXc||range.invalidSheetName){throw new InvalidReferenceError();}
if(originPosition){this.addDependencies?.(originPosition,[range]);}
const values=[];for(let col=range.zone.left;col<=range.zone.right;col++){const colValues=[];for(let row=range.zone.top;row<=range.zone.bottom;row++){const position={sheetId:range.sheetId,col,row};colValues.push(this.getters.getEvaluatedCell(position));}
values.push(colValues);}
return values.length===1&&values[0].length===1?values[0][0]:values;},isExported:true,};const LOOKUP={description:_t("Look up a value."),args:[arg("search_key (any)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("search_array (range)",_t("One method of using this function is to provide a single sorted row or column search_array to look through for the search_key with a second argument result_range. The other way is to combine these two arguments into one search_array where the first row or column is searched and a value is returned from the last row or column in the array. If search_key is not found, a non-exact match may be returned.")),arg("result_range (range, optional)",_t("The range from which to return a result. The value returned corresponds to the location where search_key is found in search_range. This range must be only a single row or column and should not be used if using the search_result_array method.")),],compute:function(searchKey,searchArray,resultRange){let nbCol=searchArray.length;let nbRow=searchArray[0].length;const verticalSearch=nbRow>=nbCol;const getElement=verticalSearch?(range,index)=>range[0][index].value:(range,index)=>range[index][0].value;const rangeLength=verticalSearch?nbRow:nbCol;const index=dichotomicSearch(searchArray,searchKey,"nextSmaller","asc",rangeLength,getElement);if(index===-1||(verticalSearch&&searchArray[0][index]===undefined)||(!verticalSearch&&searchArray[index][nbRow-1]===undefined)){return valueNotAvailable(searchKey);}
if(resultRange===undefined){return verticalSearch?searchArray[nbCol-1][index]:searchArray[index][nbRow-1];}
nbCol=resultRange.length;nbRow=resultRange[0].length;assert(()=>nbCol===1||nbRow===1,_t("The result_range must be a single row or a single column."));if(nbCol>1){assert(()=>index<=nbCol-1,_t("[[FUNCTION_NAME]] evaluates to an out of range row value %s.",(index+1).toString()));return resultRange[index][0];}
assert(()=>index<=nbRow-1,_t("[[FUNCTION_NAME]] evaluates to an out of range column value %s.",(index+1).toString()));return resultRange[0][index];},isExported:true,};const DEFAULT_SEARCH_TYPE=1;const MATCH={description:_t("Position of item in range that matches value."),args:[arg("search_key (any)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("range (any, range)",_t("The one-dimensional array to be searched.")),arg(`search_type (number, default=${DEFAULT_SEARCH_TYPE})`,_t("The search method. 1 (default) finds the largest value less than or equal to search_key when range is sorted in ascending order. 0 finds the exact value when range is unsorted. -1 finds the smallest value greater than or equal to search_key when range is sorted in descending order.")),],compute:function(searchKey,range,searchType={value:DEFAULT_SEARCH_TYPE}){let _searchType=toNumber(searchType,this.locale);const nbCol=range.length;const nbRow=range[0].length;assert(()=>nbCol===1||nbRow===1,_t("The range must be a single row or a single column."));let index=-1;const getElement=nbCol===1?(range,index)=>range[0][index].value:(range,index)=>range[index][0].value;const rangeLen=nbCol===1?range[0].length:range.length;_searchType=Math.sign(_searchType);switch(_searchType){case 1:index=dichotomicSearch(range,searchKey,"nextSmaller","asc",rangeLen,getElement);break;case 0:index=linearSearch(range,searchKey,"wildcard",rangeLen,getElement);break;case-1:index=dichotomicSearch(range,searchKey,"nextGreater","desc",rangeLen,getElement);break;}
if((nbCol===1&&range[0][index]===undefined)||(nbCol!==1&&range[index]===undefined)){return valueNotAvailable(searchKey);}
return index+1;},isExported:true,};const ROW={description:_t("Row number of a specified cell."),args:[arg("cell_reference (meta, default='this cell')",_t("The cell whose row number will be returned. By default, this function uses the cell in which the formula is entered.")),],compute:function(cellReference){if(isEvaluationError(cellReference?.value)){throw cellReference;}
const row=cellReference===undefined?this.__originCellPosition?.row:toZone(cellReference.value).top;assert(()=>row!==undefined,"In this context, the function [[FUNCTION_NAME]] needs to have a cell or range in parameter.");return row+1;},isExported:true,};const ROWS={description:_t("Number of rows in a specified array or range."),args:[arg("range (meta)",_t("The range whose row count will be returned."))],compute:function(range){if(isEvaluationError(range?.value)){throw range;}
const zone=toZone(range.value);return zone.bottom-zone.top+1;},isExported:true,};const VLOOKUP={description:_t("Vertical lookup."),args:[arg("search_key (any)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("range (any, range)",_t("The range to consider for the search. The first column in the range is searched for the key specified in search_key.")),arg("index (number)",_t("The column index of the value to be returned, where the first column in range is numbered 1.")),arg(`is_sorted (boolean, default=${DEFAULT_IS_SORTED})`,_t("Indicates whether the column to be searched (the first column of the specified range) is sorted, in which case the closest match for search_key will be returned.")),],compute:function(searchKey,range,index,isSorted={value:DEFAULT_IS_SORTED}){const _index=Math.trunc(toNumber(index?.value,this.locale));assert(()=>1<=_index&&_index<=range.length,_t("[[FUNCTION_NAME]] evaluates to an out of bounds range."));if(searchKey&&isEvaluationError(searchKey.value)){return searchKey;}
const getValueFromRange=(range,index)=>range[0][index].value;const _isSorted=toBoolean(isSorted.value);const rowIndex=_isSorted?dichotomicSearch(range,searchKey,"nextSmaller","asc",range[0].length,getValueFromRange):linearSearch(range,searchKey,"wildcard",range[0].length,getValueFromRange);const value=range[_index-1][rowIndex];if(value===undefined){return valueNotAvailable(searchKey);}
return value;},isExported:true,};const MATCH_MODE={"0":"strict","1":"nextGreater","-1":"nextSmaller","2":"wildcard",};const XLOOKUP={description:_t("Search a range for a match and return the corresponding item from a second range."),args:[arg("search_key (any)",_t("The value to search for.")),arg("lookup_range (any, range)",_t("The range to consider for the search. Should be a single column or a single row.")),arg("return_range (any, range)",_t("The range containing the return value. Should have the same dimensions as lookup_range.")),arg("if_not_found (any, optional)",_t("If a valid match is not found, return this value.")),arg(`match_mode (any, default=${DEFAULT_MATCH_MODE})`,_t("(0) Exact match. \
        (-1) Return next smaller item if no match. \
        (1) Return next greater item if no match. \
        (2) Wildcard match.")),arg(`search_mode (any, default=${DEFAULT_SEARCH_MODE})`,_t("(1) Search starting at first item. \
      (-1) Search starting at last item. \
      (2) Perform a binary search that relies on lookup_array being sorted in ascending order. If not sorted, invalid results will be returned. \
      (-2) Perform a binary search that relies on lookup_array being sorted in descending order. If not sorted, invalid results will be returned.\
      ")),],compute:function(searchKey,lookupRange,returnRange,defaultValue,matchMode={value:DEFAULT_MATCH_MODE},searchMode={value:DEFAULT_SEARCH_MODE}){const _matchMode=Math.trunc(toNumber(matchMode.value,this.locale));const _searchMode=Math.trunc(toNumber(searchMode.value,this.locale));assert(()=>lookupRange.length===1||lookupRange[0].length===1,_t("lookup_range should be either a single row or single column."));assert(()=>[-1,1,-2,2].includes(_searchMode),_t("search_mode should be a value in [-1, 1, -2, 2]."));assert(()=>[-1,0,1,2].includes(_matchMode),_t("match_mode should be a value in [-1, 0, 1, 2]."));const lookupDirection=lookupRange.length===1?"col":"row";assert(()=>!(_matchMode===2&&[-2,2].includes(_searchMode)),_t("the search and match mode combination is not supported for XLOOKUP evaluation."));assert(()=>lookupDirection==="col"?returnRange[0].length===lookupRange[0].length:returnRange.length===lookupRange.length,_t("return_range should have the same dimensions as lookup_range."));if(searchKey&&isEvaluationError(searchKey.value)){return[[searchKey]];}
const getElement=lookupDirection==="col"?(range,index)=>range[0][index].value:(range,index)=>range[index][0].value;const rangeLen=lookupDirection==="col"?lookupRange[0].length:lookupRange.length;const mode=MATCH_MODE[_matchMode];const reverseSearch=_searchMode===-1;const index=_searchMode===2||_searchMode===-2?dichotomicSearch(lookupRange,searchKey,mode,_searchMode===2?"asc":"desc",rangeLen,getElement):linearSearch(lookupRange,searchKey,mode,rangeLen,getElement,reverseSearch);if(index!==-1){return lookupDirection==="col"?returnRange.map((col)=>[col[index]]):[returnRange[index]];}
if(defaultValue===undefined){return valueNotAvailable(searchKey);}
return[[defaultValue]];},isExported:true,};const PIVOT_VALUE={description:_t("Get the value from a pivot."),args:[arg("pivot_id (string)",_t("ID of the pivot.")),arg("measure_name (string)",_t("Name of the measure.")),arg("domain_field_name (string,optional,repeating)",_t("Field name.")),arg("domain_value (string,optional,repeating)",_t("Value.")),],compute:function(formulaId,measureName,...domainArgs){const _pivotFormulaId=toString(formulaId);const _measure=toString(measureName);const pivotId=getPivotId(_pivotFormulaId,this.getters);assertMeasureExist(pivotId,_measure,this.getters);assertDomainLength(domainArgs);const pivot=this.getters.getPivot(pivotId);const coreDefinition=this.getters.getPivotCoreDefinition(pivotId);addPivotDependencies(this,coreDefinition,coreDefinition.measures.filter((m)=>m.id===_measure));pivot.init({reload:pivot.needsReevaluation});const error=pivot.assertIsValid({throwOnError:false});if(error){return error;}
if(!pivot.areDomainArgsFieldsValid(domainArgs)){const suggestion=_t("Consider using a dynamic pivot formula: %s. Or re-insert the static pivot from the Data menu.",`=PIVOT(${_pivotFormulaId})`);return{value:CellErrorType.GenericError,message:_t("Dimensions don't match the pivot definition")+". "+suggestion,};}
const domain=pivot.parseArgsToPivotDomain(domainArgs);return pivot.getPivotCellValueAndFormat(_measure,domain);},};const PIVOT_HEADER={description:_t("Get the header of a pivot."),args:[arg("pivot_id (string)",_t("ID of the pivot.")),arg("domain_field_name (string,optional,repeating)",_t("Field name.")),arg("domain_value (string,optional,repeating)",_t("Value.")),],compute:function(pivotId,...domainArgs){const _pivotFormulaId=toString(pivotId);const _pivotId=getPivotId(_pivotFormulaId,this.getters);assertDomainLength(domainArgs);const pivot=this.getters.getPivot(_pivotId);const coreDefinition=this.getters.getPivotCoreDefinition(_pivotId);addPivotDependencies(this,coreDefinition,[]);pivot.init({reload:pivot.needsReevaluation});const error=pivot.assertIsValid({throwOnError:false});if(error){return error;}
if(!pivot.areDomainArgsFieldsValid(domainArgs)){const suggestion=_t("Consider using a dynamic pivot formula: %s. Or re-insert the static pivot from the Data menu.",`=PIVOT(${_pivotFormulaId})`);return{value:CellErrorType.GenericError,message:_t("Dimensions don't match the pivot definition")+". "+suggestion,};}
const domain=pivot.parseArgsToPivotDomain(domainArgs);const lastNode=domain.at(-1);if(lastNode?.field==="measure"){return pivot.getPivotMeasureValue(toString(lastNode.value),domain);}
const{value,format}=pivot.getPivotHeaderValueAndFormat(domain);return{value,format:!lastNode||lastNode.field==="measure"||lastNode.value==="false"?undefined:format,};},};const PIVOT={description:_t("Get a pivot table."),args:[arg("pivot_id (string)",_t("ID of the pivot.")),arg("row_count (number, optional)",_t("number of rows")),arg("include_total (boolean, default=TRUE)",_t("Whether to include total/sub-totals or not.")),arg("include_column_titles (boolean, default=TRUE)",_t("Whether to include the column titles or not.")),arg("column_count (number, optional)",_t("number of columns")),],compute:function(pivotFormulaId,rowCount={value:10000},includeTotal={value:true},includeColumnHeaders={value:true},columnCount={value:Number.MAX_VALUE}){const _pivotFormulaId=toString(pivotFormulaId);const _rowCount=toNumber(rowCount,this.locale);if(_rowCount<0){throw new EvaluationError(_t("The number of rows must be positive."));}
const _columnCount=toNumber(columnCount,this.locale);if(_columnCount<0){throw new EvaluationError(_t("The number of columns must be positive."));}
const _includeColumnHeaders=toBoolean(includeColumnHeaders);const _includedTotal=toBoolean(includeTotal);const pivotId=getPivotId(_pivotFormulaId,this.getters);const pivot=this.getters.getPivot(pivotId);const coreDefinition=this.getters.getPivotCoreDefinition(pivotId);addPivotDependencies(this,coreDefinition,coreDefinition.measures);pivot.init({reload:pivot.needsReevaluation});const error=pivot.assertIsValid({throwOnError:false});if(error){return error;}
const table=pivot.getTableStructure();const cells=table.getPivotCells(_includedTotal,_includeColumnHeaders);const headerRows=_includeColumnHeaders?table.columns.length:0;const pivotTitle=this.getters.getPivotDisplayName(pivotId);const tableHeight=Math.min(headerRows+_rowCount,cells[0].length);if(tableHeight===0){return[[{value:pivotTitle}]];}
const tableWidth=Math.min(1+_columnCount,cells.length);const result=[];for(const col of range(0,tableWidth)){result[col]=[];for(const row of range(0,tableHeight)){const pivotCell=cells[col][row];switch(pivotCell.type){case"EMPTY":result[col].push({value:""});break;case"HEADER":const valueAndFormat=pivot.getPivotHeaderValueAndFormat(pivotCell.domain);result[col].push(addIndentAndAlignToPivotHeader(pivot,pivotCell.domain,valueAndFormat));break;case"MEASURE_HEADER":result[col].push(pivot.getPivotMeasureValue(pivotCell.measure,pivotCell.domain));break;case"VALUE":result[col].push(pivot.getPivotCellValueAndFormat(pivotCell.measure,pivotCell.domain));break;}}}
if(_includeColumnHeaders){result[0][0]={value:pivotTitle};}
return result;},};const OFFSET={description:_t("Returns a range reference shifted by a specified number of rows and columns from a starting cell reference."),args:[arg("cell_reference (meta)",_t("The starting point from which to count the offset rows and columns.")),arg("offset_rows (number)",_t("The number of rows to offset by.")),arg("offset_columns (number)",_t("The number of columns to offset by.")),arg("height (number, default='height of cell_reference')",_t("The number of rows of the range to return starting at the offset target.")),arg("width (number, default='width of cell_reference')",_t("The number of columns of the range to return starting at the offset target.")),],compute:function(cellReference,offsetRows,offsetColumns,height,width){if(isEvaluationError(cellReference?.value)){return cellReference;}
const _cellReference=cellReference?.value;if(!_cellReference){throw new Error("In this context, the function OFFSET needs to have a cell or range in parameter.");}
const zone=toZone(_cellReference);let offsetHeight=zone.bottom-zone.top+1;let offsetWidth=zone.right-zone.left+1;if(height){const _height=toNumber(height,this.locale);assertPositive(_t("Height value is %(_height)s. It should be greater than or equal to 1.",{_height}),_height);offsetHeight=_height;}
if(width){const _width=toNumber(width,this.locale);assertPositive(_t("Width value is %(_width)s. It should be greater than or equal to 1.",{_width}),_width);offsetWidth=_width;}
const{sheetName}=splitReference(_cellReference);const sheetId=(sheetName&&this.getters.getSheetIdByName(sheetName))||this.getters.getActiveSheetId();const _offsetRows=toNumber(offsetRows,this.locale);const _offsetColumns=toNumber(offsetColumns,this.locale);const originPosition=this.__originCellPosition;if(originPosition){this.updateDependencies?.(originPosition);}
const startingCol=zone.left+_offsetColumns;const startingRow=zone.top+_offsetRows;if(startingCol<0||startingRow<0){return new InvalidReferenceError(_t("OFFSET evaluates to an out of bounds range."));}
const dependencyZone={left:startingCol,top:startingRow,right:startingCol+offsetWidth-1,bottom:startingRow+offsetHeight-1,};const range=this.getters.getRangeFromZone(this.__originSheetId,dependencyZone);if(range.invalidXc||range.invalidSheetName){return new InvalidReferenceError();}
if(originPosition){this.addDependencies?.(originPosition,[range]);}
return generateMatrix(offsetWidth,offsetHeight,(col,row)=>this.getters.getEvaluatedCell({sheetId,col:startingCol+col,row:startingRow+row,}));},};var lookup=Object.freeze({__proto__:null,ADDRESS:ADDRESS,COLUMN:COLUMN,COLUMNS:COLUMNS,HLOOKUP:HLOOKUP,INDEX:INDEX,INDIRECT:INDIRECT,LOOKUP:LOOKUP,MATCH:MATCH,OFFSET:OFFSET,PIVOT:PIVOT,PIVOT_HEADER:PIVOT_HEADER,PIVOT_VALUE:PIVOT_VALUE,ROW:ROW,ROWS:ROWS,VLOOKUP:VLOOKUP,XLOOKUP:XLOOKUP});const ADD={description:_t("Sum of two numbers."),args:[arg("value1 (number)",_t("The first addend.")),arg("value2 (number)",_t("The second addend.")),],compute:function(value1,value2){return{value:toNumber(value1,this.locale)+toNumber(value2,this.locale),format:value1?.format||value2?.format,};},};const CONCAT={description:_t("Concatenation of two values."),args:[arg("value1 (string)",_t("The value to which value2 will be appended.")),arg("value2 (string)",_t("The value to append to value1.")),],compute:function(value1,value2){return toString(value1)+toString(value2);},isExported:true,};const DIVIDE={description:_t("One number divided by another."),args:[arg("dividend (number)",_t("The number to be divided.")),arg("divisor (number)",_t("The number to divide by.")),],compute:function(dividend,divisor){const _divisor=toNumber(divisor,this.locale);assert(()=>_divisor!==0,_t("The divisor must be different from zero."),CellErrorType.DivisionByZero);return{value:toNumber(dividend,this.locale)/_divisor,format:dividend?.format||divisor?.format,};},};function isEmpty(data){return data===undefined||data.value===null;}
const getNeutral={number:0,string:"",boolean:false};const EQ={description:_t("Equal."),args:[arg("value1 (any)",_t("The first value.")),arg("value2 (any)",_t("The value to test against value1 for equality.")),],compute:function(value1,value2){let _value1=isEmpty(value1)?getNeutral[typeof value2?.value]:value1?.value;let _value2=isEmpty(value2)?getNeutral[typeof value1?.value]:value2?.value;if(typeof _value1==="string"){_value1=_value1.toUpperCase();}
if(typeof _value2==="string"){_value2=_value2.toUpperCase();}
if(isEvaluationError(_value1)){throw value1;}
if(isEvaluationError(_value2)){throw value2;}
return _value1===_value2;},};function applyRelationalOperator(value1,value2,cb){let _value1=isEmpty(value1)?getNeutral[typeof value2?.value]:value1?.value;let _value2=isEmpty(value2)?getNeutral[typeof value1?.value]:value2?.value;if(isEvaluationError(_value1)){throw value1;}
if(isEvaluationError(_value2)){throw value2;}
if(typeof _value1!=="number"){_value1=toString(_value1).toUpperCase();}
if(typeof _value2!=="number"){_value2=toString(_value2).toUpperCase();}
const tV1=typeof _value1;const tV2=typeof _value2;if(tV1==="string"&&tV2==="number"){return true;}
if(tV2==="string"&&tV1==="number"){return false;}
return cb(_value1,_value2);}
const GT={description:_t("Strictly greater than."),args:[arg("value1 (any)",_t("The value to test as being greater than value2.")),arg("value2 (any)",_t("The second value.")),],compute:function(value1,value2){return applyRelationalOperator(value1,value2,(v1,v2)=>{return v1>v2;});},};const GTE={description:_t("Greater than or equal to."),args:[arg("value1 (any)",_t("The value to test as being greater than or equal to value2.")),arg("value2 (any)",_t("The second value.")),],compute:function(value1,value2){return applyRelationalOperator(value1,value2,(v1,v2)=>{return v1>=v2;});},};const LT={description:_t("Less than."),args:[arg("value1 (any)",_t("The value to test as being less than value2.")),arg("value2 (any)",_t("The second value.")),],compute:function(value1,value2){return!GTE.compute.bind(this)(value1,value2);},};const LTE={description:_t("Less than or equal to."),args:[arg("value1 (any)",_t("The value to test as being less than or equal to value2.")),arg("value2 (any)",_t("The second value.")),],compute:function(value1,value2){return!GT.compute.bind(this)(value1,value2);},};const MINUS={description:_t("Difference of two numbers."),args:[arg("value1 (number)",_t("The minuend, or number to be subtracted from.")),arg("value2 (number)",_t("The subtrahend, or number to subtract from value1.")),],compute:function(value1,value2){return{value:toNumber(value1,this.locale)-toNumber(value2,this.locale),format:value1?.format||value2?.format,};},};const MULTIPLY={description:_t("Product of two numbers"),args:[arg("factor1 (number)",_t("The first multiplicand.")),arg("factor2 (number)",_t("The second multiplicand.")),],compute:function(factor1,factor2){return{value:toNumber(factor1,this.locale)*toNumber(factor2,this.locale),format:factor1?.format||factor2?.format,};},};const NE={description:_t("Not equal."),args:[arg("value1 (any)",_t("The first value.")),arg("value2 (any)",_t("The value to test against value1 for inequality.")),],compute:function(value1,value2){return!EQ.compute.bind(this)(value1,value2);},};const POW={description:_t("A number raised to a power."),args:[arg("base (number)",_t("The number to raise to the exponent power.")),arg("exponent (number)",_t("The exponent to raise base to.")),],compute:function(base,exponent){return POWER.compute.bind(this)(base,exponent);},};const UMINUS={description:_t("A number with the sign reversed."),args:[arg("value (number)",_t("The number to have its sign reversed. Equivalently, the number to multiply by -1.")),],compute:function(value){return{value:-toNumber(value,this.locale),format:value?.format,};},};const UNARY_PERCENT={description:_t("Value interpreted as a percentage."),args:[arg("percentage (number)",_t("The value to interpret as a percentage."))],compute:function(percentage){return toNumber(percentage,this.locale)/100;},};const UPLUS={description:_t("A specified number, unchanged."),args:[arg("value (any)",_t("The number to return."))],compute:function(value={value:null}){return value;},};var operators=Object.freeze({__proto__:null,ADD:ADD,CONCAT:CONCAT,DIVIDE:DIVIDE,EQ:EQ,GT:GT,GTE:GTE,LT:LT,LTE:LTE,MINUS:MINUS,MULTIPLY:MULTIPLY,NE:NE,POW:POW,UMINUS:UMINUS,UNARY_PERCENT:UNARY_PERCENT,UPLUS:UPLUS});const transformFromFactor=(factor)=>({transform:(x)=>x*factor,inverseTransform:(x)=>x/factor,});const standard={transform:(x)=>x,inverseTransform:(x)=>x};const ANG2M=1e-10;const IN2M=0.0254;const PICAPT2M=IN2M/72;const FT2M=0.3048;const YD2M=0.9144;const MI2M=1609.34;const NMI2M=1852;const LY2M=9.46073047258e15;const UNITS={g:{...standard,category:"weight"},u:{...transformFromFactor(1.66053e-24),category:"weight"},grain:{...transformFromFactor(0.0647989),category:"weight"},ozm:{...transformFromFactor(28.3495),category:"weight"},lbm:{...transformFromFactor(453.592),category:"weight"},stone:{...transformFromFactor(6350.29),category:"weight"},sg:{...transformFromFactor(14593.90294),category:"weight"},cwt:{...transformFromFactor(45359.237),category:"weight"},uk_cwt:{...transformFromFactor(50802.3),category:"weight"},ton:{...transformFromFactor(907184.74),category:"weight"},uk_ton:{...transformFromFactor(1016046.9),category:"weight"},m:{...standard,category:"distance"},km:{...transformFromFactor(1000),category:"distance"},ang:{...transformFromFactor(ANG2M),category:"distance"},Picapt:{...transformFromFactor(PICAPT2M),category:"distance"},pica:{...transformFromFactor(IN2M/6),category:"distance"},in:{...transformFromFactor(IN2M),category:"distance"},ft:{...transformFromFactor(FT2M),category:"distance"},yd:{...transformFromFactor(YD2M),category:"distance"},ell:{...transformFromFactor(1.143),category:"distance"},mi:{...transformFromFactor(MI2M),category:"distance"},survey_mi:{...transformFromFactor(1609.34),category:"distance"},Nmi:{...transformFromFactor(NMI2M),category:"distance"},ly:{...transformFromFactor(LY2M),category:"distance"},parsec:{...transformFromFactor(3.0856775814914e16),category:"distance"},sec:{...standard,category:"time"},min:{...transformFromFactor(60),category:"time"},hr:{...transformFromFactor(3600),category:"time"},day:{...transformFromFactor(86400),category:"time"},yr:{...transformFromFactor(31556952),category:"time"},Pa:{...standard,category:"pressure"},bar:{...transformFromFactor(100000),category:"pressure"},mmHg:{...transformFromFactor(133.322),category:"pressure"},Torr:{...transformFromFactor(133.322),category:"pressure"},psi:{...transformFromFactor(6894.76),category:"pressure"},atm:{...transformFromFactor(101325),category:"pressure"},N:{...standard,category:"force"},dyn:{...transformFromFactor(1e-5),category:"force"},pond:{...transformFromFactor(0.00980665),category:"force"},lbf:{...transformFromFactor(4.44822),category:"force"},J:{...standard,category:"energy"},eV:{...transformFromFactor(1.60218e-19),category:"energy"},e:{...transformFromFactor(1e-7),category:"energy"},flb:{...transformFromFactor(1.3558179483),category:"energy"},c:{...transformFromFactor(4.184),category:"energy"},cal:{...transformFromFactor(4.1868),category:"energy"},BTU:{...transformFromFactor(1055.06),category:"energy"},Wh:{...transformFromFactor(3600),category:"energy"},HPh:{...transformFromFactor(2684520),category:"energy"},W:{...standard,category:"power"},PS:{...transformFromFactor(735.499),category:"power"},HP:{...transformFromFactor(745.7),category:"power"},T:{...standard,category:"magnetism"},ga:{...transformFromFactor(1e-4),category:"magnetism"},K:{...standard,category:"temperature"},C:{transform:(T)=>T+273.15,inverseTransform:(T)=>T-273.15,category:"temperature",},F:{transform:(T)=>((T-32)*5)/9+273.15,inverseTransform:(T)=>((T-273.15)*9)/5+32,category:"temperature",},Rank:{...transformFromFactor(5/9),category:"temperature"},Reau:{transform:(T)=>T*1.25+273.15,inverseTransform:(T)=>(T-273.15)/1.25,category:"temperature",},"m^3":{...standard,category:"volume",order:3},"ang^3":{...transformFromFactor(Math.pow(ANG2M,3)),category:"volume",order:3},"Picapt^3":{...transformFromFactor(Math.pow(PICAPT2M,3)),category:"volume",order:3},tsp:{...transformFromFactor(4.92892e-6),category:"volume"},tspm:{...transformFromFactor(5e-6),category:"volume"},tbs:{...transformFromFactor(1.4786764825785619e-5),category:"volume"},"in^3":{...transformFromFactor(Math.pow(IN2M,3)),category:"volume",order:3},oz:{...transformFromFactor(2.95735295625e-5),category:"volume"},cup:{...transformFromFactor(0.000237),category:"volume"},pt:{...transformFromFactor(0.0004731765),category:"volume"},uk_pt:{...transformFromFactor(0.000568261),category:"volume"},qt:{...transformFromFactor(0.0009463529),category:"volume"},l:{...transformFromFactor(1e-3),category:"volume"},uk_qt:{...transformFromFactor(0.0011365225),category:"volume"},gal:{...transformFromFactor(0.0037854118),category:"volume"},uk_gal:{...transformFromFactor(0.00454609),category:"volume"},"ft^3":{...transformFromFactor(Math.pow(FT2M,3)),category:"volume",order:3},bushel:{...transformFromFactor(0.0352390704),category:"volume"},barrel:{...transformFromFactor(0.158987295),category:"volume"},"yd^3":{...transformFromFactor(Math.pow(YD2M,3)),category:"volume",order:3},MTON:{...transformFromFactor(1.13267386368),category:"volume"},GRT:{...transformFromFactor(2.83168),category:"volume"},"mi^3":{...transformFromFactor(Math.pow(MI2M,3)),category:"volume",order:3},"Nmi^3":{...transformFromFactor(Math.pow(NMI2M,3)),category:"volume",order:3},"ly^3":{...transformFromFactor(Math.pow(LY2M,3)),category:"volume",order:3},"m^2":{...standard,category:"area",order:2},"ang^2":{...transformFromFactor(Math.pow(ANG2M,2)),category:"area",order:2},"Picapt^2":{...transformFromFactor(Math.pow(PICAPT2M,2)),category:"area",order:2},"in^2":{...transformFromFactor(Math.pow(IN2M,2)),category:"area",order:2},"ft^2":{...transformFromFactor(Math.pow(FT2M,2)),category:"area",order:2},"yd^2":{...transformFromFactor(Math.pow(YD2M,2)),category:"area",order:2},ar:{...transformFromFactor(100),category:"area"},Morgen:{...transformFromFactor(2500),category:"area"},uk_acre:{...transformFromFactor(4046.8564224),category:"area"},us_acre:{...transformFromFactor(4046.8726098743),category:"area"},ha:{...transformFromFactor(1e4),category:"area"},"mi^2":{...transformFromFactor(Math.pow(MI2M,2)),category:"area",order:2},"Nmi^2":{...transformFromFactor(Math.pow(NMI2M,2)),category:"area",order:2},"ly^2":{...transformFromFactor(Math.pow(LY2M,2)),category:"area",order:2},bit:{...standard,category:"information"},byte:{...transformFromFactor(8),category:"information"},"m/s":{...standard,category:"speed"},"m/hr":{...transformFromFactor(1/3600),category:"speed"},"km/hr":{...transformFromFactor(1/3.6),category:"speed"},mph:{...transformFromFactor(0.44704),category:"speed"},kn:{...transformFromFactor(0.5144444444),category:"speed"},admkn:{...transformFromFactor(0.5147733333),category:"speed"},};const UNITS_ALIASES={shweight:"cwt",lcwt:"uk_cwt",hweight:"uk_cwt",LTON:"uk_ton",brton:"uk_ton",pc:"parsec",Pica:"Picapt",d:"day",mn:"min",s:"sec",p:"Pa",at:"atm",dy:"dyn",ev:"eV",hh:"HPh",wh:"Wh",btu:"BTU",h:"HP",cel:"C",fah:"F",kel:"K",us_pt:"pt",L:"l",lt:"l",ang3:"ang^3",ft3:"ft^3",in3:"in^3",ly3:"ly^3",m3:"m^3",mi3:"mi^3",yd3:"yd^3",Nmi3:"Nmi^3",Picapt3:"Picapt^3","Pica^3":"Picapt^3",Pica3:"Picapt^3",regton:"GRT",ang2:"ang^2",ft2:"ft^2",in2:"in^2",ly2:"ly^2",m2:"m^2",mi2:"mi^2",Nmi2:"Nmi^2",Picapt2:"Picapt^2","Pica^2":"Picapt^2",Pica2:"Picapt^2",yd2:"yd^2","m/h":"m/hr","m/sec":"m/s",};const UNIT_PREFIXES={"":1,Y:1e24,Z:1e21,E:1e18,P:1e15,T:1e12,G:1e9,M:1e6,k:1e3,h:1e2,da:1e1,e:1e1,d:1e-1,c:1e-2,m:1e-3,u:1e-6,n:1e-9,p:1e-12,f:1e-15,a:1e-18,z:1e-21,y:1e-21,Yi:Math.pow(2,80),Zi:Math.pow(2,70),Ei:Math.pow(2,60),Pi:Math.pow(2,50),Ti:Math.pow(2,40),Gi:Math.pow(2,30),Mi:Math.pow(2,20),ki:Math.pow(2,10),};const TRANSLATED_CATEGORIES={weight:_t("Weight"),distance:_t("Distance"),time:_t("Time"),pressure:_t("Pressure"),force:_t("Force"),energy:_t("Energy"),power:_t("Power"),magnetism:_t("Magnetism"),temperature:_t("Temperature"),volume:_t("Volume"),area:_t("Area"),information:_t("Information"),speed:_t("Speed"),};function getTranslatedCategory(key){return TRANSLATED_CATEGORIES[key]??"";}
function getTransformation(key){for(const[prefix,value]of Object.entries(UNIT_PREFIXES)){if(prefix&&!key.startsWith(prefix))
continue;const _key=key.slice(prefix.length);let conversion=UNITS[_key];if(!conversion&&UNITS_ALIASES[_key]){conversion=UNITS[UNITS_ALIASES[_key]];}
if(conversion){return{...conversion,factor:conversion.order?Math.pow(value,conversion.order):value,};}}
return;}
const CONVERT={description:_t("Converts a numeric value to a different unit of measure."),args:[arg("value (number)",_t("the numeric value in start_unit to convert to end_unit")),arg("start_unit (string)",_t("The starting unit, the unit currently assigned to value")),arg("end_unit (string)",_t("The unit of measure into which to convert value")),],compute:function(value,startUnit,endUnit){const _value=toNumber(value,this.locale);const _startUnit=toString(startUnit);const _endUnit=toString(endUnit);const startConversion=getTransformation(_startUnit);const endConversion=getTransformation(_endUnit);if(!startConversion){return{value:CellErrorType.GenericError,message:_t("Invalid units of measure ('%s')",_startUnit),};}
if(!endConversion){return{value:CellErrorType.GenericError,message:_t("Invalid units of measure ('%s')",_endUnit),};}
if(startConversion.category!==endConversion.category){return{value:CellErrorType.GenericError,message:_t("Incompatible units of measure ('%s' vs '%s')",getTranslatedCategory(startConversion.category),getTranslatedCategory(endConversion.category)),};}
return{value:endConversion.inverseTransform(startConversion.factor*startConversion.transform(_value))/endConversion.factor,format:value?.format,};},isExported:true,};var parser=Object.freeze({__proto__:null,CONVERT:CONVERT});const DEFAULT_STARTING_AT=1;const wordRegex=/[A-Za-zÀ-ÖØ-öø-ÿ]+/g;const CHAR={description:_t("Gets character associated with number."),args:[arg("table_number (number)",_t("The number of the character to look up from the current Unicode table in decimal format.")),],compute:function(tableNumber){const _tableNumber=Math.trunc(toNumber(tableNumber,this.locale));assert(()=>_tableNumber>=1,_t("The table_number (%s) is out of range.",_tableNumber.toString()));return String.fromCharCode(_tableNumber);},isExported:true,};const CLEAN={description:_t("Remove non-printable characters from a piece of text."),args:[arg("text (string)",_t("The text whose non-printable characters are to be removed."))],compute:function(text){const _text=toString(text);let cleanedStr="";for(const char of _text){if(char&&char.charCodeAt(0)>31){cleanedStr+=char;}}
return cleanedStr;},isExported:true,};const CONCATENATE={description:_t("Appends strings to one another."),args:[arg("string1 (string, range<string>)",_t("The initial string.")),arg("string2 (string, range<string>, repeating)",_t("More strings to append in sequence.")),],compute:function(...datas){return reduceAny(datas,(acc,a)=>acc+toString(a),"");},isExported:true,};const EXACT={description:_t("Tests whether two strings are identical."),args:[arg("string1 (string)",_t("The first string to compare.")),arg("string2 (string)",_t("The second string to compare.")),],compute:function(string1,string2){return toString(string1)===toString(string2);},isExported:true,};const FIND={description:_t("First position of string found in text, case-sensitive."),args:[arg("search_for (string)",_t("The string to look for within text_to_search.")),arg("text_to_search (string)",_t("The text to search for the first occurrence of search_for.")),arg(`starting_at (number, default=${DEFAULT_STARTING_AT})`,_t("The character within text_to_search at which to start the search.")),],compute:function(searchFor,textToSearch,startingAt={value:DEFAULT_STARTING_AT}){const _searchFor=toString(searchFor);const _textToSearch=toString(textToSearch);const _startingAt=toNumber(startingAt,this.locale);assert(()=>_textToSearch!=="",_t("The text_to_search must be non-empty."));assert(()=>_startingAt>=1,_t("The starting_at (%s) must be greater than or equal to 1.",_startingAt.toString()));const result=_textToSearch.indexOf(_searchFor,_startingAt-1);assert(()=>result>=0,_t("In [[FUNCTION_NAME]] evaluation, cannot find '%s' within '%s'.",_searchFor.toString(),_textToSearch));return result+1;},isExported:true,};const JOIN={description:_t("Concatenates elements of arrays with delimiter."),args:[arg("delimiter (string)",_t("The character or string to place between each concatenated value.")),arg("value_or_array1 (string, range<string>)",_t("The value or values to be appended using delimiter.")),arg("value_or_array2 (string, range<string>, repeating)",_t("More values to be appended using delimiter.")),],compute:function(delimiter,...valuesOrArrays){const _delimiter=toString(delimiter);return reduceAny(valuesOrArrays,(acc,a)=>(acc?acc+_delimiter:"")+toString(a),"");},};const LEFT={description:_t("Substring from beginning of specified string."),args:[arg("text (string)",_t("The string from which the left portion will be returned.")),arg("number_of_characters (number, optional)",_t("The number of characters to return from the left side of string.")),],compute:function(text,...args){const _numberOfCharacters=args.length?toNumber(args[0],this.locale):1;assert(()=>_numberOfCharacters>=0,_t("The number_of_characters (%s) must be positive or null.",_numberOfCharacters.toString()));return toString(text).substring(0,_numberOfCharacters);},isExported:true,};const LEN={description:_t("Length of a string."),args:[arg("text (string)",_t("The string whose length will be returned."))],compute:function(text){return toString(text).length;},isExported:true,};const LOWER={description:_t("Converts a specified string to lowercase."),args:[arg("text (string)",_t("The string to convert to lowercase."))],compute:function(text){return toString(text).toLowerCase();},isExported:true,};const MID={description:_t("A segment of a string."),args:[arg("text (string)",_t("The string to extract a segment from.")),arg("starting_at (number)",_t("The index from the left of string from which to begin extracting. The first character in string has the index 1.")),arg("extract_length (number)",_t("The length of the segment to extract.")),],compute:function(text,starting_at,extract_length){const _text=toString(text);const _starting_at=toNumber(starting_at,this.locale);const _extract_length=toNumber(extract_length,this.locale);assert(()=>_starting_at>=1,_t("The starting_at argument (%s) must be positive greater than one.",_starting_at.toString()));assert(()=>_extract_length>=0,_t("The extract_length argument (%s) must be positive or null.",_extract_length.toString()));return _text.slice(_starting_at-1,_starting_at+_extract_length-1);},isExported:true,};const PROPER={description:_t("Capitalizes each word in a specified string."),args:[arg("text_to_capitalize (string)",_t("The text which will be returned with the first letter of each word in uppercase and all other letters in lowercase.")),],compute:function(text){const _text=toString(text);return _text.replace(wordRegex,(word)=>{return word.charAt(0).toUpperCase()+word.slice(1).toLowerCase();});},isExported:true,};const REPLACE={description:_t("Replaces part of a text string with different text."),args:[arg("text (string)",_t("The text, a part of which will be replaced.")),arg("position (number)",_t("The position where the replacement will begin (starting from 1).")),arg("length (number)",_t("The number of characters in the text to be replaced.")),arg("new_text (string)",_t("The text which will be inserted into the original text.")),],compute:function(text,position,length,newText){const _position=toNumber(position,this.locale);assert(()=>_position>=1,_t("The position (%s) must be greater than or equal to 1.",_position.toString()));const _text=toString(text);const _length=toNumber(length,this.locale);const _newText=toString(newText);return _text.substring(0,_position-1)+_newText+_text.substring(_position-1+_length);},isExported:true,};const RIGHT={description:_t("A substring from the end of a specified string."),args:[arg("text (string)",_t("The string from which the right portion will be returned.")),arg("number_of_characters (number, optional)",_t("The number of characters to return from the right side of string.")),],compute:function(text,...args){const _numberOfCharacters=args.length?toNumber(args[0],this.locale):1;assert(()=>_numberOfCharacters>=0,_t("The number_of_characters (%s) must be positive or null.",_numberOfCharacters.toString()));const _text=toString(text);const stringLength=_text.length;return _text.substring(stringLength-_numberOfCharacters,stringLength);},isExported:true,};const SEARCH={description:_t("First position of string found in text, ignoring case."),args:[arg("search_for (string)",_t("The string to look for within text_to_search.")),arg("text_to_search (string)",_t("The text to search for the first occurrence of search_for.")),arg(`starting_at (number, default=${DEFAULT_STARTING_AT})`,_t("The character within text_to_search at which to start the search.")),],compute:function(searchFor,textToSearch,startingAt={value:DEFAULT_STARTING_AT}){const _searchFor=toString(searchFor).toLowerCase();const _textToSearch=toString(textToSearch).toLowerCase();const _startingAt=toNumber(startingAt,this.locale);assert(()=>_textToSearch!=="",_t("The text_to_search must be non-empty."));assert(()=>_startingAt>=1,_t("The starting_at (%s) must be greater than or equal to 1.",_startingAt.toString()));const result=_textToSearch.indexOf(_searchFor,_startingAt-1);assert(()=>result>=0,_t("In [[FUNCTION_NAME]] evaluation, cannot find '%s' within '%s'.",_searchFor,_textToSearch));return result+1;},isExported:true,};const SPLIT_DEFAULT_SPLIT_BY_EACH=true;const SPLIT_DEFAULT_REMOVE_EMPTY_TEXT=true;const SPLIT={description:_t("Split text by specific character delimiter(s)."),args:[arg("text (string)",_t("The text to divide.")),arg("delimiter (string)",_t("The character or characters to use to split text.")),arg(`split_by_each (boolean, default=${SPLIT_DEFAULT_SPLIT_BY_EACH}})`,_t("Whether or not to divide text around each character contained in delimiter.")),arg(`remove_empty_text (boolean, default=${SPLIT_DEFAULT_REMOVE_EMPTY_TEXT})`,_t("Whether or not to remove empty text messages from the split results. The default behavior is to treat \
        consecutive delimiters as one (if TRUE). If FALSE, empty cells values are added between consecutive delimiters.")),],compute:function(text,delimiter,splitByEach={value:SPLIT_DEFAULT_SPLIT_BY_EACH},removeEmptyText={value:SPLIT_DEFAULT_REMOVE_EMPTY_TEXT}){const _text=toString(text);const _delimiter=escapeRegExp(toString(delimiter));const _splitByEach=toBoolean(splitByEach);const _removeEmptyText=toBoolean(removeEmptyText);assert(()=>_delimiter.length>0,_t("The _delimiter (%s) must be not be empty.",_delimiter));const regex=_splitByEach?new RegExp(`[${_delimiter}]`,"g"):new RegExp(_delimiter,"g");let result=_text.split(regex);if(_removeEmptyText){result=result.filter((text)=>text!=="");}
return transposeMatrix([result]);},isExported:true,};const SUBSTITUTE={description:_t("Replaces existing text with new text in a string."),args:[arg("text_to_search (string)",_t("The text within which to search and replace.")),arg("search_for (string)",_t("The string to search for within text_to_search.")),arg("replace_with (string)",_t("The string that will replace search_for.")),arg("occurrence_number (number, optional)",_t("The instance of search_for within text_to_search to replace with replace_with. By default, all occurrences of search_for are replaced; however, if occurrence_number is specified, only the indicated instance of search_for is replaced.")),],compute:function(textToSearch,searchFor,replaceWith,occurrenceNumber){const _occurrenceNumber=toNumber(occurrenceNumber,this.locale);assert(()=>_occurrenceNumber>=0,_t("The occurrenceNumber (%s) must be positive or null.",_occurrenceNumber.toString()));const _textToSearch=toString(textToSearch);const _searchFor=toString(searchFor);if(_searchFor===""){return _textToSearch;}
const _replaceWith=toString(replaceWith);const reg=new RegExp(escapeRegExp(_searchFor),"g");if(_occurrenceNumber===0){return _textToSearch.replace(reg,_replaceWith);}
let n=0;return _textToSearch.replace(reg,(text)=>(++n===_occurrenceNumber?_replaceWith:text));},isExported:true,};const TEXTJOIN={description:_t("Combines text from multiple strings and/or arrays."),args:[arg("delimiter (string)",_t(" A string, possible empty, or a reference to a valid string. If empty, the text will be simply concatenated.")),arg("ignore_empty (boolean)",_t("A boolean; if TRUE, empty cells selected in the text arguments won't be included in the result.")),arg("text1 (string, range<string>)",_t("Any text item. This could be a string, or an array of strings in a range.")),arg("text2 (string, range<string>, repeating)",_t("Additional text item(s).")),],compute:function(delimiter,ignoreEmpty,...textsOrArrays){const _delimiter=toString(delimiter);const _ignoreEmpty=toBoolean(ignoreEmpty);let n=0;return reduceAny(textsOrArrays,(acc,a)=>!(_ignoreEmpty&&toString(a)==="")?(n++?acc+_delimiter:"")+toString(a):acc,"");},isExported:true,};const TRIM={description:_t("Removes space characters."),args:[arg("text (string)",_t("The text or reference to a cell containing text to be trimmed.")),],compute:function(text){return trimContent(toString(text));},isExported:true,};const UPPER={description:_t("Converts a specified string to uppercase."),args:[arg("text (string)",_t("The string to convert to uppercase."))],compute:function(text){return toString(text).toUpperCase();},isExported:true,};const TEXT={description:_t("Converts a number to text according to a specified format."),args:[arg("number (number)",_t("The number, date or time to format.")),arg("format (string)",_t("The pattern by which to format the number, enclosed in quotation marks.")),],compute:function(number,format){const _number=toNumber(number,this.locale);return formatValue(_number,{format:toString(format),locale:this.locale});},isExported:true,};var text=Object.freeze({__proto__:null,CHAR:CHAR,CLEAN:CLEAN,CONCATENATE:CONCATENATE,EXACT:EXACT,FIND:FIND,JOIN:JOIN,LEFT:LEFT,LEN:LEN,LOWER:LOWER,MID:MID,PROPER:PROPER,REPLACE:REPLACE,RIGHT:RIGHT,SEARCH:SEARCH,SPLIT:SPLIT,SUBSTITUTE:SUBSTITUTE,TEXT:TEXT,TEXTJOIN:TEXTJOIN,TRIM:TRIM,UPPER:UPPER});const HYPERLINK={description:_t("Creates a hyperlink in a cell."),args:[arg("url (string)",_t("The full URL of the link enclosed in quotation marks.")),arg("link_label (string, optional)",_t("The text to display in the cell, enclosed in quotation marks.")),],compute:function(url,linkLabel){const processedUrl=toString(url).trim();const processedLabel=toString(linkLabel)||processedUrl;if(processedUrl==="")
return processedLabel;return markdownLink(processedLabel,processedUrl);},isExported:true,};var web=Object.freeze({__proto__:null,HYPERLINK:HYPERLINK});const categories=[{name:_t("Array"),functions:array},{name:_t("Database"),functions:database},{name:_t("Date"),functions:date},{name:_t("Filter"),functions:filter},{name:_t("Financial"),functions:financial},{name:_t("Info"),functions:info},{name:_t("Lookup"),functions:lookup},{name:_t("Logical"),functions:logical},{name:_t("Math"),functions:math},{name:_t("Misc"),functions:misc},{name:_t("Operator"),functions:operators},{name:_t("Statistical"),functions:statistical},{name:_t("Text"),functions:text},{name:_t("Engineering"),functions:engineering},{name:_t("Web"),functions:web},{name:_t("Parser"),functions:parser},];const functionNameRegex=/^[A-Z0-9\_\.]+$/;class FunctionRegistry extends Registry{mapping={};add(name,addDescr){name=name.toUpperCase();if(!functionNameRegex.test(name)){throw new Error(_t("Invalid function name %s. Function names can exclusively contain alphanumerical values separated by dots (.) or underscore (_)",name));}
const descr=addMetaInfoFromArg(addDescr);validateArguments(descr.args);this.mapping[name]=createComputeFunction(descr,name);super.add(name,descr);return this;}}
const functionRegistry=new FunctionRegistry();for(let category of categories){const fns=category.functions;for(let name in fns){const addDescr=fns[name];addDescr.category=addDescr.category||category.name;name=name.replace(/_/g,".");functionRegistry.add(name,{isExported:false,...addDescr});}}
const notAvailableError=new NotAvailableError(_t("Array arguments to [[FUNCTION_NAME]] are of different size."));function createComputeFunction(descr,functionName){function vectorizedCompute(...args){let countVectorizableCol=1;let countVectorizableRow=1;let vectorizableColLimit=Infinity;let vectorizableRowLimit=Infinity;let vectorArgsType=undefined;for(let i=0;i<args.length;i++){const argDefinition=descr.args[descr.getArgToFocus(i+1)-1];const arg=args[i];if(isMatrix(arg)&&!argDefinition.acceptMatrix){const nColumns=arg.length;const nRows=arg[0].length;if(nColumns!==1||nRows!==1){vectorArgsType??=new Array(args.length);if(nColumns!==1&&nRows!==1){vectorArgsType[i]="matrix";countVectorizableCol=Math.max(countVectorizableCol,nColumns);countVectorizableRow=Math.max(countVectorizableRow,nRows);vectorizableColLimit=Math.min(vectorizableColLimit,nColumns);vectorizableRowLimit=Math.min(vectorizableRowLimit,nRows);}
else if(nColumns!==1){vectorArgsType[i]="horizontal";countVectorizableCol=Math.max(countVectorizableCol,nColumns);vectorizableColLimit=Math.min(vectorizableColLimit,nColumns);}
else if(nRows!==1){vectorArgsType[i]="vertical";countVectorizableRow=Math.max(countVectorizableRow,nRows);vectorizableRowLimit=Math.min(vectorizableRowLimit,nRows);}}
else{args[i]=arg[0][0];}}
if(!isMatrix(arg)&&argDefinition.acceptMatrixOnly){throw new BadExpressionError(_t("Function %s expects the parameter '%s' to be reference to a cell or range.",functionName,(i+1).toString()));}}
if(countVectorizableCol===1&&countVectorizableRow===1){return errorHandlingCompute.apply(this,args);}
const getArgOffset=(i,j)=>args.map((arg,index)=>{switch(vectorArgsType?.[index]){case"matrix":return arg[i][j];case"horizontal":return arg[i][0];case"vertical":return arg[0][j];case undefined:return arg;}});return generateMatrix(countVectorizableCol,countVectorizableRow,(col,row)=>{if(col>vectorizableColLimit-1||row>vectorizableRowLimit-1){return notAvailableError;}
const singleCellComputeResult=errorHandlingCompute.apply(this,getArgOffset(col,row));return isMatrix(singleCellComputeResult)?singleCellComputeResult[0][0]:singleCellComputeResult;});}
function errorHandlingCompute(...args){try{return computeFunctionToObject.apply(this,args);}
catch(e){return handleError(e,functionName);}}
function computeFunctionToObject(...args){const result=descr.compute.apply(this,args);if(!isMatrix(result)){if(typeof result==="object"&&result!==null&&"value"in result){replaceFunctionNamePlaceholder(result,functionName);return result;}
return{value:result};}
if(typeof result[0][0]==="object"&&result[0][0]!==null&&"value"in result[0][0]){matrixForEach(result,(result)=>replaceFunctionNamePlaceholder(result,functionName));return result;}
return matrixMap(result,(row)=>({value:row}));}
return vectorizedCompute;}
function handleError(e,functionName){if(hasStringValue(e)&&isEvaluationError(e.value)){if(hasStringMessage(e)){replaceFunctionNamePlaceholder(e,functionName);}
return e;}
console.error(e);return new EvaluationError(implementationErrorMessage+(hasStringMessage(e)?" "+e.message:""));}
function hasStringValue(obj){return(obj?.value!==undefined&&typeof obj.value==="string");}
function replaceFunctionNamePlaceholder(functionResult,functionName){if(functionResult.message?.includes("[[FUNCTION_NAME]]")){functionResult.message=functionResult.message.replace("[[FUNCTION_NAME]]",functionName);}}
const implementationErrorMessage=_t("An unexpected error occurred. Submit a support ticket at odoo.com/help.");function hasStringMessage(obj){return(obj?.message!==undefined&&typeof obj.message==="string");}
autoCompleteProviders.add("functions",{sequence:100,autoSelectFirstProposal:true,maxDisplayedProposals:10,getProposals(tokenAtCursor){if(tokenAtCursor.type!=="SYMBOL"){return[];}
const searchTerm=tokenAtCursor.value;if(!this.composer.currentContent.startsWith("=")){return[];}
const values=Object.entries(functionRegistry.content).filter(([_,{hidden}])=>!hidden).map(([text,{description}])=>{return{text,description,htmlContent:getHtmlContentFromPattern(searchTerm,text,COMPOSER_ASSISTANT_COLOR,"o-semi-bold"),};}).sort((a,b)=>{return a.text.length-b.text.length||a.text.localeCompare(b.text);});return values;},selectProposal(tokenAtCursor,value){let start=tokenAtCursor.end;let end=tokenAtCursor.end;if(["SYMBOL","FUNCTION"].includes(tokenAtCursor.type)){start=tokenAtCursor.start;}
const tokens=this.composer.currentTokens;value+="(";const currentTokenIndex=tokens.map((token)=>token.start).indexOf(tokenAtCursor.start);if(currentTokenIndex+1<tokens.length){const nextToken=tokens[currentTokenIndex+1];if(nextToken?.type==="LEFT_PAREN"){end++;}}
this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);},});class DOMFocusableElementStore{mutators=["setFocusableElement","focus"];focusableElement=undefined;setFocusableElement(element){this.focusableElement=element;}
focus(){this.focusableElement?.focus();}}
const STYLESHEETS={};let nextId=0;function css(strings,...args){const name=`__sheet__${nextId++}`;const value=String.raw(strings,...args);registerSheet(name,value);activateSheet(name);return name;}
function processSheet(str){const tokens=str.split(/(\{|\}|;)/).map((s)=>s.trim());const selectorStack=[];const parts=[];let rules=[];function generateSelector(stackIndex,parentSelector){const parts=[];for(const selector of selectorStack[stackIndex]){let part=(parentSelector&&parentSelector+" "+selector)||selector;if(part.includes("&")){part=selector.replace(/&/g,parentSelector||"");}
if(stackIndex<selectorStack.length-1){part=generateSelector(stackIndex+1,part);}
parts.push(part);}
return parts.join(", ");}
function generateRules(){if(rules.length){parts.push(generateSelector(0)+" {");parts.push(...rules);parts.push("}");rules=[];}}
while(tokens.length){let token=tokens.shift();if(token==="}"){generateRules();selectorStack.pop();}
else{if(tokens[0]==="{"){generateRules();selectorStack.push(token.split(/\s*,\s*/));tokens.shift();}
if(tokens[0]===";"){rules.push("  "+token+";");}}}
return parts.join("\n");}
function registerSheet(id,css){const sheet=document.createElement("style");sheet.textContent=processSheet(css);STYLESHEETS[id]=sheet;}
function activateSheet(id){const sheet=STYLESHEETS[id];sheet.setAttribute("component",id);document.head.appendChild(sheet);}
function getTextDecoration({strikethrough,underline,}){if(!strikethrough&&!underline){return"none";}
return`${strikethrough ? "line-through" : ""} ${underline ? "underline" : ""}`;}
function cellStyleToCss(style){const attributes=cellTextStyleToCss(style);if(!style)
return attributes;if(style.fillColor){attributes["background"]=style.fillColor;}
return attributes;}
function cellTextStyleToCss(style){const attributes={};if(!style)
return attributes;if(style.bold){attributes["font-weight"]="bold";}
if(style.italic){attributes["font-style"]="italic";}
if(style.strikethrough||style.underline){let decoration=style.strikethrough?"line-through":"";decoration=style.underline?decoration+" underline":decoration;attributes["text-decoration"]=decoration;}
if(style.textColor){attributes["color"]=style.textColor;}
return attributes;}
function cssPropertiesToCss(attributes){let styleStr="";for(const attName in attributes){if(!attributes[attName]){continue;}
styleStr+=`${attName}:${attributes[attName]}; `;}
return styleStr;}
function getElementMargins(el){const style=window.getComputedStyle(el);const margins={top:parseInt(style.marginTop,10)||0,bottom:parseInt(style.marginBottom,10)||0,left:parseInt(style.marginLeft,10)||0,right:parseInt(style.marginRight,10)||0,};return margins;}
const macRegex=/Mac/i;const MODIFIER_KEYS=["Shift","Control","Alt","Meta"];function isChildEvent(parent,ev){if(!parent)
return false;return!!ev.target&&parent.contains(ev.target);}
function gridOverlayPosition(){const spreadsheetElement=document.querySelector(".o-grid-overlay");if(spreadsheetElement){const{top,left}=spreadsheetElement?.getBoundingClientRect();return{top,left};}
throw new Error("Can't find spreadsheet position");}
function getBoundingRectAsPOJO(el){const rect=el.getBoundingClientRect();return{x:rect.x,y:rect.y,width:rect.width,height:rect.height,};}
function*iterateChildren(el){yield el;if(el.hasChildNodes()){for(let child of el.childNodes){yield*iterateChildren(child);}}}
function getOpenedMenus(){return Array.from(document.querySelectorAll(".o-spreadsheet .o-menu"));}
const letterRegex=/^[a-zA-Z]$/;function keyboardEventToShortcutString(ev,mode="key"){let keyDownString="";if(!MODIFIER_KEYS.includes(ev.key)){if(isCtrlKey(ev))
keyDownString+="Ctrl+";if(ev.altKey)
keyDownString+="Alt+";if(ev.shiftKey)
keyDownString+="Shift+";}
const key=mode==="key"?ev.key:ev.code;keyDownString+=letterRegex.test(key)?key.toUpperCase():key;return keyDownString;}
function isMacOS(){return Boolean(macRegex.test(navigator.userAgent));}
function isCtrlKey(ev){return isMacOS()?ev.metaKey:ev.ctrlKey;}
function useSpreadsheetRect(){const position=useState({x:0,y:0,width:0,height:0});let spreadsheetElement=null;function updatePosition(){if(!spreadsheetElement){spreadsheetElement=document.querySelector(".o-spreadsheet");}
if(spreadsheetElement){const{top,left,width,height}=spreadsheetElement.getBoundingClientRect();position.x=left;position.y=top;position.width=width;position.height=height;}}
onMounted(updatePosition);onPatched(updatePosition);return position;}
function useAbsoluteBoundingRect(ref){const rect=useState({x:0,y:0,width:0,height:0});function updateElRect(){const el=ref.el;if(el===null){return;}
const{top,left,width,height}=el.getBoundingClientRect();rect.x=left;rect.y=top;rect.width=width;rect.height=height;}
onMounted(updateElRect);onPatched(updateElRect);return rect;}
function usePopoverContainer(){const container=useState({x:0,y:0,width:0,height:0});const component=useComponent();const spreadsheetRect=useSpreadsheetRect();function updateRect(){const env=component.env;const newRect="getPopoverContainerRect"in env?env.getPopoverContainerRect():spreadsheetRect;container.x=newRect.x;container.y=newRect.y;container.width=newRect.width;container.height=newRect.height;}
updateRect();onMounted(updateRect);onPatched(updateRect);return container;}
const arrowMap={ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right",ArrowUp:"up",};function updateSelectionWithArrowKeys(ev,selection){const direction=arrowMap[ev.key];if(ev.shiftKey){selection.resizeAnchorZone(direction,isCtrlKey(ev)?"end":1);}
else{selection.moveAnchorCell(direction,isCtrlKey(ev)?"end":1);}}
css`
  .o-autocomplete-dropdown {
    pointer-events: auto;
    cursor: pointer;
    background-color: #fff;
    max-width: 400px;
    z-index: 1;

    .o-autocomplete-value-focus {
      background-color: #f2f2f2;
    }

    & > div {
      padding: 1px 5px 5px 5px;
      .o-autocomplete-description {
        padding-left: 5px;
        font-size: 11px;
      }
    }
  }
`;class TextValueProvider extends Component{static template="o-spreadsheet-TextValueProvider";static props={proposals:Array,selectedIndex:{type:Number,optional:true},onValueSelected:Function,onValueHovered:Function,};autoCompleteListRef=useRef("autoCompleteList");setup(){useEffect(()=>{const selectedIndex=this.props.selectedIndex;if(selectedIndex===undefined){return;}
const selectedElement=this.autoCompleteListRef.el?.children[selectedIndex];selectedElement?.scrollIntoView?.({block:"nearest"});},()=>[this.props.selectedIndex,this.autoCompleteListRef.el]);}}
class AutoCompleteStore extends SpreadsheetStore{mutators=["useProvider","moveSelection","hide","selectIndex"];selectedIndex=undefined;provider;get selectedProposal(){if(this.selectedIndex===undefined||this.provider===undefined){return undefined;}
return this.provider.proposals[this.selectedIndex];}
useProvider(provider){this.provider=provider;this.selectedIndex=provider.autoSelectFirstProposal?0:undefined;}
hide(){this.provider=undefined;this.selectedIndex=undefined;}
selectIndex(index){this.selectedIndex=index;}
moveSelection(direction){if(!this.provider){return;}
if(this.selectedIndex===undefined){this.selectedIndex=0;return;}
if(direction==="previous"){this.selectedIndex--;if(this.selectedIndex<0){this.selectedIndex=this.provider.proposals.length-1;}}
else{this.selectedIndex=(this.selectedIndex+1)%this.provider.proposals.length;}}}
class ContentEditableHelper{el;constructor(el){this.el=el;}
updateEl(el){this.el=el;}
selectRange(start,end){let selection=window.getSelection();const{start:currentStart,end:currentEnd}=this.getCurrentSelection();if(currentStart===start&&currentEnd===end){return;}
const currentRange=selection.getRangeAt(0);let range;if(this.el.contains(currentRange.startContainer)){range=currentRange;}
else{range=document.createRange();selection.removeAllRanges();selection.addRange(range);}
if(start===end&&start===0){range.setStart(this.el,0);range.setEnd(this.el,0);}
else{const textLength=this.getText().length;if(start<0||end>textLength){console.warn(`wrong selection asked start ${start}, end ${end}, text content length ${textLength}`);if(start<0)
start=0;if(end>textLength)
end=textLength;if(start>textLength)
start=textLength;}
let startNode=this.findChildAtCharacterIndex(start);let endNode=this.findChildAtCharacterIndex(end);range.setStart(startNode.node,startNode.offset);selection.extend(endNode.node,endNode.offset);}}
findChildAtCharacterIndex(offset){let it=iterateChildren(this.el);let current,previous;let usedCharacters=offset;let isFirstParagraph=true;do{current=it.next();if(!current.done&&!current.value.hasChildNodes()){if(current.value.textContent&&current.value.textContent.length<usedCharacters){usedCharacters-=current.value.textContent.length;}
else if(current.value.textContent&&current.value.textContent.length>=usedCharacters){it.return(current.value);}
previous=current.value;}
if(!current.done&&current.value.nodeName==="P"){if(isFirstParagraph){isFirstParagraph=false;}
else{usedCharacters--;}}}while(!current.done&&usedCharacters);if(current.value){return{node:current.value,offset:usedCharacters};}
return{node:previous,offset:usedCharacters};}
setText(contents){if(contents.length===0){this.removeAll();return;}
const childElements=Array.from(this.el.childNodes);const contentLength=contents.length;for(let i=0;i<contentLength;i++){const line=contents[i];const childElement=childElements[i];let newChild=false;let p;if(childElement&&childElement.nodeName==="P"){p=childElement;}
else{newChild=true;p=document.createElement("p");}
const lineLength=line.length;const existingChildren=Array.from(p.childNodes);for(let j=0;j<lineLength;j++){const content=line[j];const child=existingChildren[j];const childIsSpan=child&&"tagName"in child&&child.tagName==="SPAN";if(childIsSpan&&compareContentToSpanElement(content,child)){continue;}
if(!content.value&&!content.class){if(child)
p.removeChild(child);continue;}
const span=document.createElement("span");span.innerText=content.value;span.style.color=content.color||"";if(content.class){span.classList.add(content.class);}
if(child){p.replaceChild(span,child);}
else{p.appendChild(span);}}
if(existingChildren.length>lineLength){for(let i=lineLength;i<existingChildren.length;i++){p.removeChild(existingChildren[i]);}}
if(!p.hasChildNodes()){const span=document.createElement("span");span.appendChild(document.createElement("br"));p.appendChild(span);}
if(newChild){if(childElement){this.el.replaceChild(p,childElement);}
else{this.el.appendChild(p);}}}
if(childElements.length>contentLength){for(let i=contentLength;i<childElements.length;i++){this.el.removeChild(childElements[i]);}}}
scrollSelectionIntoView(){const focusedNode=document.getSelection()?.focusNode;if(!focusedNode||!this.el.contains(focusedNode))
return;const element=focusedNode instanceof HTMLElement?focusedNode:focusedNode.parentElement;element?.scrollIntoView({block:"nearest"});}
removeSelection(){let selection=window.getSelection();selection.removeAllRanges();}
removeAll(){if(this.el){while(this.el.firstChild){this.el.removeChild(this.el.firstChild);}}}
getCurrentSelection(){let{startElement,endElement,startSelectionOffset,endSelectionOffset}=this.getStartAndEndSelection();let startSizeBefore=this.findSelectionIndex(startElement,startSelectionOffset);let endSizeBefore=this.findSelectionIndex(endElement,endSelectionOffset);return{start:startSizeBefore,end:endSizeBefore,};}
findSelectionIndex(nodeToFind,nodeOffset){let usedCharacters=0;let it=iterateChildren(this.el);let current=it.next();let isFirstParagraph=true;while(!current.done&&current.value!==nodeToFind){if(!current.value.hasChildNodes()){if(current.value.textContent){usedCharacters+=current.value.textContent.length;}}
if(current.value.nodeName==="P"||(current.value.nodeName==="DIV"&&current.value!==this.el)){if(isFirstParagraph){isFirstParagraph=false;}
else{usedCharacters++;}}
current=it.next();}
if(current.value!==nodeToFind){return 0;}
else{if(!current.value.hasChildNodes()){usedCharacters+=nodeOffset;}
else{const children=[...current.value.childNodes].slice(0,nodeOffset);usedCharacters+=children.reduce((acc,child,index)=>{if(child.textContent!==null){let chars=child.textContent.length;if(child.nodeName==="P"&&index!==children.length-1){chars++;}
return acc+chars;}
else{return acc;}},0);}}
if(nodeToFind.nodeName==="P"&&!isFirstParagraph&&nodeToFind.textContent===""){usedCharacters++;}
return usedCharacters;}
getStartAndEndSelection(){const selection=document.getSelection();return{startElement:selection.anchorNode||this.el,startSelectionOffset:selection.anchorOffset,endElement:selection.focusNode||this.el,endSelectionOffset:selection.focusOffset,};}
getText(){let text="";let it=iterateChildren(this.el);let current=it.next();let isFirstParagraph=true;while(!current.done){if(!current.value.hasChildNodes()){text+=current.value.textContent;}
if(current.value.nodeName==="P"||(current.value.nodeName==="DIV"&&current.value!==this.el)){if(isFirstParagraph){isFirstParagraph=false;}
else{text+=NEWLINE;}}
current=it.next();}
return text;}}
function compareContentToSpanElement(content,node){const contentColor=content.color?toHex(content.color):"";const nodeColor=node.style?.color?toHex(node.style.color):"";const sameColor=contentColor===nodeColor;const sameClass=deepEquals([content.class],[...node.classList]);const sameContent=node.innerText===content.value;return sameColor&&sameClass&&sameContent;}
css`
  .o-formula-assistant {
    background: #ffffff;
    .o-formula-assistant-head {
      background-color: #f2f2f2;
      padding: 10px;
    }
    .collapsed {
      transform: rotate(180deg);
    }
    .o-formula-assistant-core {
      border-bottom: 1px solid gray;
    }
    .o-formula-assistant-arg-description {
      font-size: 85%;
    }
    .o-formula-assistant-focus {
      div:first-child,
      span {
        color: ${COMPOSER_ASSISTANT_COLOR};
        text-shadow: 0px 0px 1px ${COMPOSER_ASSISTANT_COLOR};
      }
      div:last-child {
        color: black;
      }
    }
    .o-formula-assistant-gray {
      color: gray;
    }
  }
`;class FunctionDescriptionProvider extends Component{static template="o-spreadsheet-FunctionDescriptionProvider";static props={functionName:String,functionDescription:Object,argToFocus:Number,};getContext(){return this.props;}
get formulaArgSeparator(){return this.env.model.getters.getLocale().formulaArgSeparator+" ";}}
const functions$2=functionRegistry.content;const ASSISTANT_WIDTH=300;const CLOSE_ICON_RADIUS=9;const selectionIndicatorClass="selector-flag";const selectionIndicatorColor="#a9a9a9";const selectionIndicator="␣";const functionColor="#4a4e4d";const operatorColor="#3da4ab";const tokenColors={OPERATOR:operatorColor,NUMBER:"#02c39a",STRING:"#00a82d",FUNCTION:functionColor,DEBUGGER:operatorColor,LEFT_PAREN:functionColor,RIGHT_PAREN:functionColor,ARG_SEPARATOR:functionColor,MATCHING_PAREN:"#000000",};css`
  .o-composer-container {
    .o-composer {
      overflow-y: auto;
      overflow-x: hidden;
      word-break: break-all;
      padding-right: 2px;

      box-sizing: border-box;

      caret-color: black;
      padding-left: 3px;
      padding-right: 3px;
      outline: none;

      p {
        margin-bottom: 0px;

        span {
          white-space: pre-wrap;
          &.${selectionIndicatorClass}:after {
            content: "${selectionIndicator}";
            color: ${selectionIndicatorColor};
          }
        }
      }
    }
    .o-composer[placeholder]:empty:not(:focus):not(.active)::before {
      content: attr(placeholder);
      color: #bdbdbd;
      position: relative;
      top: 0%;
      pointer-events: none;
    }

    .fa-stack {
      // reset stack size which is doubled by default
      width: 1em;
      height: 1em;
      line-height: 1em;
    }

    .force-open-assistant {
      left: -1px;
      top: -1px;

      .fa-question-circle {
        color: ${PRIMARY_BUTTON_BG};
      }
    }

    .o-composer-assistant {
      position: absolute;
      margin: 1px 4px;

      .o-semi-bold {
        /** FIXME: to remove in favor of Bootstrap
        * 'fw-semibold' when we upgrade to Bootstrap 5.2
        */
        font-weight: 600 !important;
      }
    }
  }
`;class Composer extends Component{static template="o-spreadsheet-Composer";static props={focus:{validate:(value)=>["inactive","cellFocus","contentFocus"].includes(value),},inputStyle:{type:String,optional:true},rect:{type:Object,optional:true},delimitation:{type:Object,optional:true},onComposerCellFocused:{type:Function,optional:true},onComposerContentFocused:Function,isDefaultFocus:{type:Boolean,optional:true},onInputContextMenu:{type:Function,optional:true},composerStore:Object,placeholder:{type:String,optional:true},};static components={TextValueProvider,FunctionDescriptionProvider};static defaultProps={inputStyle:"",isDefaultFocus:false,};DOMFocusableElementStore;composerRef=useRef("o_composer");contentHelper=new ContentEditableHelper(this.composerRef.el);composerState=useState({positionStart:0,positionEnd:0,});autoCompleteState;functionDescriptionState=useState({showDescription:false,functionName:"",functionDescription:{},argToFocus:0,});assistant=useState({forcedClosed:false,});compositionActive=false;spreadsheetRect=useSpreadsheetRect();get assistantStyle(){const composerRect=this.composerRef.el.getBoundingClientRect();const assistantStyle={};assistantStyle["min-width"]=`${this.props.rect?.width || ASSISTANT_WIDTH}px`;const proposals=this.autoCompleteState.provider?.proposals;const proposalsHaveDescription=proposals?.some((proposal)=>proposal.description);if(this.functionDescriptionState.showDescription||proposalsHaveDescription){assistantStyle.width=`${ASSISTANT_WIDTH}px`;}
if(this.props.delimitation&&this.props.rect){const{x:cellX,y:cellY,height:cellHeight}=this.props.rect;const remainingHeight=this.props.delimitation.height-(cellY+cellHeight);assistantStyle["max-height"]=`${remainingHeight}px`;if(cellY>remainingHeight){const availableSpaceAbove=cellY;assistantStyle["max-height"]=`${availableSpaceAbove - CLOSE_ICON_RADIUS}px`;assistantStyle.top=`-3px`;assistantStyle.transform=`translate(0, -100%)`;}
if(cellX+ASSISTANT_WIDTH>this.props.delimitation.width){assistantStyle.right=`0px`;}}
else{assistantStyle["max-height"]=`${this.spreadsheetRect.height - composerRect.bottom}px`;if(composerRect.left+ASSISTANT_WIDTH+SCROLLBAR_WIDTH+CLOSE_ICON_RADIUS>this.spreadsheetRect.width){assistantStyle.right=`${CLOSE_ICON_RADIUS}px`;}}
return cssPropertiesToCss(assistantStyle);}
shouldProcessInputEvents=false;tokens=[];keyMapping={Enter:(ev)=>this.processEnterKey(ev,"down"),"Shift+Enter":(ev)=>this.processEnterKey(ev,"up"),"Alt+Enter":this.processNewLineEvent,"Ctrl+Enter":this.processNewLineEvent,Escape:this.processEscapeKey,F2:()=>console.warn("Not implemented"),F4:(ev)=>this.processF4Key(ev),Tab:(ev)=>this.processTabKey(ev,"right"),"Shift+Tab":(ev)=>this.processTabKey(ev,"left"),};keyCodeMapping={NumpadDecimal:this.processNumpadDecimal,};setup(){this.DOMFocusableElementStore=useStore(DOMFocusableElementStore);this.autoCompleteState=useLocalStore(AutoCompleteStore);onMounted(()=>{const el=this.composerRef.el;if(this.props.isDefaultFocus){this.DOMFocusableElementStore.setFocusableElement(el);}
this.contentHelper.updateEl(el);});useEffect(()=>{this.processContent();if(document.activeElement===this.contentHelper.el&&this.props.composerStore.editionMode==="inactive"&&!this.props.isDefaultFocus){this.DOMFocusableElementStore.focus();}});useEffect(()=>{this.processTokenAtCursor();},()=>[this.props.composerStore.editionMode!=="inactive"]);}
processArrowKeys(ev){const tokenAtCursor=this.props.composerStore.tokenAtCursor;if((this.props.composerStore.isSelectingRange||this.props.composerStore.editionMode==="inactive")&&!(["ArrowUp","ArrowDown"].includes(ev.key)&&this.autoCompleteState.provider&&tokenAtCursor?.type!=="REFERENCE")){this.functionDescriptionState.showDescription=false;this.autoCompleteState.hide();ev.preventDefault();ev.stopPropagation();updateSelectionWithArrowKeys(ev,this.env.model.selection);return;}
const content=this.props.composerStore.currentContent;if(this.props.focus==="cellFocus"&&!this.autoCompleteState.provider&&!content.startsWith("=")){this.props.composerStore.stopEdition();return;}
ev.stopPropagation();this.handleArrowKeysForAutocomplete(ev);}
handleArrowKeysForAutocomplete(ev){if(["ArrowUp","ArrowDown"].includes(ev.key)&&this.autoCompleteState.provider){ev.preventDefault();this.autoCompleteState.moveSelection(ev.key==="ArrowDown"?"next":"previous");}}
processTabKey(ev,direction){ev.preventDefault();ev.stopPropagation();if(this.props.composerStore.editionMode!=="inactive"){const state=this.autoCompleteState;if(state.provider&&state.selectedIndex!==undefined){const autoCompleteValue=state.provider.proposals[state.selectedIndex]?.text;if(autoCompleteValue){this.autoComplete(autoCompleteValue);return;}}
this.props.composerStore.stopEdition(direction);}}
processEnterKey(ev,direction){ev.preventDefault();ev.stopPropagation();const state=this.autoCompleteState;if(state.provider&&state.selectedIndex!==undefined){const autoCompleteValue=state.provider.proposals[state.selectedIndex]?.text;if(autoCompleteValue){this.autoComplete(autoCompleteValue);return;}}
this.props.composerStore.stopEdition(direction);}
processNewLineEvent(ev){ev.preventDefault();ev.stopPropagation();const content=this.contentHelper.getText();const selection=this.contentHelper.getCurrentSelection();const start=Math.min(selection.start,selection.end);const end=Math.max(selection.start,selection.end);this.props.composerStore.stopComposerRangeSelection();this.props.composerStore.setCurrentContent(content.slice(0,start)+NEWLINE+content.slice(end),{start:start+1,end:start+1,});this.processContent();}
processEscapeKey(ev){this.props.composerStore.cancelEdition();ev.stopPropagation();ev.preventDefault();}
processF4Key(ev){ev.stopPropagation();this.props.composerStore.cycleReferences();this.processContent();}
processNumpadDecimal(ev){ev.stopPropagation();ev.preventDefault();const locale=this.env.model.getters.getLocale();const selection=this.contentHelper.getCurrentSelection();const currentContent=this.props.composerStore.currentContent;const content=currentContent.slice(0,selection.start)+
locale.decimalSeparator+
currentContent.slice(selection.end);this.props.composerStore.setCurrentContent(content,{start:selection.start+1,end:selection.start+1,});this.processContent();}
onCompositionStart(){this.compositionActive=true;}
onCompositionEnd(){this.compositionActive=false;}
onKeydown(ev){if(this.props.composerStore.editionMode==="inactive"){return;}
if(ev.key.startsWith("Arrow")){this.processArrowKeys(ev);return;}
let handler=this.keyMapping[keyboardEventToShortcutString(ev)]||this.keyCodeMapping[keyboardEventToShortcutString(ev,"code")];if(handler){handler.call(this,ev);}
else{ev.stopPropagation();}}
onPaste(ev){if(this.props.composerStore.editionMode!=="inactive"){ev.stopPropagation();}
else{ev.preventDefault();}}
onInput(ev){if(!this.shouldProcessInputEvents){return;}
ev.stopPropagation();let content;if(this.props.composerStore.editionMode==="inactive"){content=ev.data||"";}
else{content=this.contentHelper.getText();}
if(this.props.focus==="inactive"){return this.props.onComposerCellFocused?.(content);}
let selection=this.contentHelper.getCurrentSelection();this.props.composerStore.stopComposerRangeSelection();this.props.composerStore.setCurrentContent(content,selection);this.processTokenAtCursor();}
onKeyup(ev){if(this.contentHelper.el===document.activeElement){if(this.autoCompleteState.provider&&["ArrowUp","ArrowDown"].includes(ev.key)){return;}
if(this.props.composerStore.isSelectingRange&&ev.key?.startsWith("Arrow")){return;}
const{start:oldStart,end:oldEnd}=this.props.composerStore.composerSelection;const{start,end}=this.contentHelper.getCurrentSelection();if(start!==oldStart||end!==oldEnd){this.props.composerStore.changeComposerCursorSelection(start,end);}
this.processTokenAtCursor();}}
onBlur(ev){if(this.props.composerStore.editionMode==="inactive"){return;}
const target=ev.relatedTarget;if(!target||!(target instanceof HTMLElement)){this.props.composerStore.stopEdition();return;}
if(target.attributes.getNamedItem("composerFocusableElement")){this.contentHelper.el.focus();return;}
if(target.classList.contains("o-composer")){return;}
this.props.composerStore.stopEdition();}
updateAutoCompleteIndex(index){this.autoCompleteState.selectIndex(clip(0,index,10));}
onMousedown(ev){if(ev.button>0){return;}
this.contentHelper.removeSelection();}
onClick(){if(this.env.model.getters.isReadonly()){return;}
const newSelection=this.contentHelper.getCurrentSelection();this.props.composerStore.stopComposerRangeSelection();this.props.onComposerContentFocused();this.props.composerStore.changeComposerCursorSelection(newSelection.start,newSelection.end);this.processTokenAtCursor();}
onDblClick(){if(this.env.model.getters.isReadonly()){return;}
const composerContent=this.props.composerStore.currentContent;const isValidFormula=composerContent.startsWith("=");if(isValidFormula){const tokens=this.props.composerStore.currentTokens;const currentSelection=this.contentHelper.getCurrentSelection();if(currentSelection.start===currentSelection.end)
return;const currentSelectedText=composerContent.substring(currentSelection.start,currentSelection.end);const token=tokens.filter((token)=>token.value.includes(currentSelectedText)&&token.start<=currentSelection.start&&token.end>=currentSelection.end)[0];if(!token){return;}
if(token.type==="REFERENCE"){this.props.composerStore.changeComposerCursorSelection(token.start,token.end);}}}
onContextMenu(ev){if(this.props.composerStore.editionMode==="inactive"){this.props.onInputContextMenu?.(ev);}}
closeAssistant(){this.assistant.forcedClosed=true;}
openAssistant(){this.assistant.forcedClosed=false;}
processContent(){if(this.compositionActive){return;}
this.shouldProcessInputEvents=false;if(this.props.focus!=="inactive"&&document.activeElement!==this.contentHelper.el){this.contentHelper.el.focus();}
const content=this.getContentLines();this.contentHelper.setText(content);if(content.length!==0&&content.length[0]!==0){if(this.props.focus!=="inactive"){const{start,end}=this.props.composerStore.composerSelection;this.contentHelper.selectRange(start,end);}
this.contentHelper.scrollSelectionIntoView();}
this.shouldProcessInputEvents=true;}
getContentLines(){let value=this.props.composerStore.currentContent;const isValidFormula=value.startsWith("=");if(value===""){return[];}
else if(isValidFormula&&this.props.focus!=="inactive"){return this.splitHtmlContentIntoLines(this.getColoredTokens());}
return this.splitHtmlContentIntoLines([{value}]);}
getColoredTokens(){const tokens=this.props.composerStore.currentTokens;const tokenAtCursor=this.props.composerStore.tokenAtCursor;const result=[];const{end,start}=this.props.composerStore.composerSelection;for(const token of tokens){switch(token.type){case"OPERATOR":case"NUMBER":case"ARG_SEPARATOR":case"STRING":result.push({value:token.value,color:tokenColors[token.type]||"#000"});break;case"REFERENCE":const{xc,sheetName}=splitReference(token.value);result.push({value:token.value,color:this.rangeColor(xc,sheetName)||"#000"});break;case"SYMBOL":const value=token.value;const upperCaseValue=value.toUpperCase();if(upperCaseValue==="TRUE"||upperCaseValue==="FALSE"){result.push({value:token.value,color:tokenColors.NUMBER});}
else if(upperCaseValue in functionRegistry.content){result.push({value:token.value,color:tokenColors.FUNCTION});}
else{result.push({value:token.value,color:"#000"});}
break;case"LEFT_PAREN":case"RIGHT_PAREN":if(tokenAtCursor&&["LEFT_PAREN","RIGHT_PAREN"].includes(tokenAtCursor.type)&&tokenAtCursor.parenIndex&&tokenAtCursor.parenIndex===token.parenIndex){result.push({value:token.value,color:tokenColors.MATCHING_PAREN||"#000"});}
else{result.push({value:token.value,color:tokenColors[token.type]||"#000"});}
break;default:result.push({value:token.value,color:"#000"});break;}
if(this.props.composerStore.showSelectionIndicator&&end===start&&end===token.end){result[result.length-1].class=selectionIndicatorClass;}}
return result;}
splitHtmlContentIntoLines(contents){const contentSplitInLines=[];let currentLine=[];for(const content of contents){if(content.value.includes(NEWLINE)){const lines=content.value.split(NEWLINE);const lastLine=lines.pop();for(const line of lines){currentLine.push({color:content.color,value:line});contentSplitInLines.push(currentLine);currentLine=[];}
currentLine.push({...content,value:lastLine});}
else{currentLine.push(content);}}
if(currentLine.length){contentSplitInLines.push(currentLine);}
const filteredLines=[];for(const line of contentSplitInLines){if(line.every(this.isContentEmpty)){filteredLines.push([line[0]]);}
else{filteredLines.push(line.filter((content)=>!this.isContentEmpty(content)));}}
return filteredLines;}
isContentEmpty(content){return!(content.value||content.class);}
rangeColor(xc,sheetName){if(this.props.focus==="inactive"){return undefined;}
const highlights=this.props.composerStore.highlights;const refSheet=sheetName?this.env.model.getters.getSheetIdByName(sheetName):this.props.composerStore.sheetId;const highlight=highlights.find((highlight)=>{if(highlight.sheetId!==refSheet)
return false;const range=this.env.model.getters.getRangeFromSheetXC(refSheet,xc);let zone=range.zone;zone=getZoneArea(zone)===1?this.env.model.getters.expandZone(refSheet,zone):zone;return isEqual(zone,highlight.zone);});return highlight&&highlight.color?highlight.color:undefined;}
processTokenAtCursor(){let content=this.props.composerStore.currentContent;if(this.autoCompleteState.provider){this.autoCompleteState.hide();}
this.functionDescriptionState.showDescription=false;const autoCompleteProvider=this.props.composerStore.autocompleteProvider;if(autoCompleteProvider){this.autoCompleteState.useProvider(autoCompleteProvider);}
const token=this.props.composerStore.tokenAtCursor;if(content.startsWith("=")&&token&&token.type!=="SYMBOL"){const tokenContext=token.functionContext;const parentFunction=tokenContext?.parent.toUpperCase();if(tokenContext&&parentFunction&&parentFunction in functions$2&&token.type!=="UNKNOWN"){const description=functions$2[parentFunction];const argPosition=tokenContext.argPosition;this.functionDescriptionState.functionName=parentFunction;this.functionDescriptionState.functionDescription=description;this.functionDescriptionState.argToFocus=description.getArgToFocus(argPosition+1)-1;this.functionDescriptionState.showDescription=true;}}}
autoComplete(value){if(!value||this.assistant.forcedClosed){return;}
this.autoCompleteState.provider?.selectProposal(value);this.processTokenAtCursor();}}
class FunctionCodeBuilder{scope;code="";constructor(scope=new Scope()){this.scope=scope;}
append(...lines){this.code+=lines.map((line)=>line.toString()).join("\n")+"\n";}
return(expression){return new FunctionCodeImpl(this.scope,this.code,expression);}
toString(){return indentCode(this.code);}}
class FunctionCodeImpl{scope;returnExpression;code;constructor(scope,code,returnExpression){this.scope=scope;this.returnExpression=returnExpression;this.code=indentCode(code);}
toString(){return this.code;}
assignResultToVariable(){if(this.scope.isAlreadyDeclared(this.returnExpression)){return this;}
const variableName=this.scope.nextVariableName();const code=new FunctionCodeBuilder(this.scope);code.append(this.code);code.append(`const ${variableName} = ${this.returnExpression};`);return code.return(variableName);}}
class Scope{nextId=1;declaredVariables=new Set();nextVariableName(){const name=`_${this.nextId++}`;this.declaredVariables.add(name);return name;}
isAlreadyDeclared(name){return this.declaredVariables.has(name);}}
function splitLines(str){return str.split("\n").map((line)=>line.trim()).filter((line)=>line!=="");}
function indentCode(code){let result="";let indentLevel=0;const lines=splitLines(code);for(const line of lines){if(line.startsWith("}")){indentLevel--;}
result+="\t".repeat(indentLevel)+line+"\n";if(line.endsWith("{")){indentLevel++;}}
return result.trim();}
const functions$1=functionRegistry.content;const OPERATOR_MAP={"=":"EQ","+":"ADD","-":"MINUS","*":"MULTIPLY","/":"DIVIDE",">=":"GTE","<>":"NE",">":"GT","<=":"LTE","<":"LT","^":"POWER","&":"CONCATENATE",};const UNARY_OPERATOR_MAP={"-":"UMINUS","+":"UPLUS","%":"UNARY.PERCENT",};const functionCache={};function compile(formula){const tokens=rangeTokenize(formula);return compileTokens(tokens);}
function compileTokens(tokens){try{return compileTokensOrThrow(tokens);}
catch(error){return{tokens,dependencies:[],execute:function(){return error;},isBadExpression:true,};}}
function compileTokensOrThrow(tokens){const{dependencies,constantValues,symbols}=formulaArguments(tokens);const cacheKey=compilationCacheKey(tokens,dependencies,constantValues);if(!functionCache[cacheKey]){const ast=parseTokens([...tokens]);const scope=new Scope();if(ast.type==="BIN_OPERATION"&&ast.value===":"){throw new BadExpressionError(_t("Invalid formula"));}
if(ast.type==="EMPTY"){throw new BadExpressionError(_t("Invalid formula"));}
const compiledAST=compileAST(ast);const code=new FunctionCodeBuilder();code.append(`// ${cacheKey}`);code.append(compiledAST);code.append(`return ${compiledAST.returnExpression};`);let baseFunction=new Function("deps","ref","range","getSymbolValue","ctx",code.toString());functionCache[cacheKey]=baseFunction;function compileFunctionArgs(ast){const{args}=ast;const functionName=ast.value.toUpperCase();const functionDefinition=functions$1[functionName];if(!functionDefinition){throw new UnknownFunctionError(_t('Unknown function: "%s"',ast.value));}
assertEnoughArgs(ast);const compiledArgs=[];for(let i=0;i<args.length;i++){const argToFocus=functionDefinition.getArgToFocus(i+1)-1;const argDefinition=functionDefinition.args[argToFocus];const currentArg=args[i];const argTypes=argDefinition.type||[];const isMeta=argTypes.includes("META");const hasRange=argTypes.some((t)=>isRangeType(t));compiledArgs.push(compileAST(currentArg,isMeta,hasRange));}
return compiledArgs;}
function compileAST(ast,isMeta=false,hasRange=false){const code=new FunctionCodeBuilder(scope);if(ast.type!=="REFERENCE"&&!(ast.type==="BIN_OPERATION"&&ast.value===":")){if(isMeta){throw new BadExpressionError(_t("Argument must be a reference to a cell or range."));}}
if(ast.debug){code.append("debugger;");}
switch(ast.type){case"BOOLEAN":return code.return(`{ value: ${ast.value} }`);case"NUMBER":return code.return(`{ value: this.constantValues.numbers[${constantValues.numbers.indexOf(ast.value)}] }`);case"STRING":return code.return(`{ value: this.constantValues.strings[${constantValues.strings.indexOf(ast.value)}] }`);case"REFERENCE":const referenceIndex=dependencies.indexOf(ast.value);if((!isMeta&&ast.value.includes(":"))||hasRange){return code.return(`range(deps[${referenceIndex}])`);}
else{return code.return(`ref(deps[${referenceIndex}], ${isMeta ? "true" : "false"})`);}
case"FUNCALL":const args=compileFunctionArgs(ast).map((arg)=>arg.assignResultToVariable());code.append(...args);const fnName=ast.value.toUpperCase();return code.return(`ctx['${fnName}'](${args.map((arg) => arg.returnExpression)})`);case"UNARY_OPERATION":{const fnName=UNARY_OPERATOR_MAP[ast.value];const operand=compileAST(ast.operand,false,false).assignResultToVariable();code.append(operand);return code.return(`ctx['${fnName}'](${operand.returnExpression})`);}
case"BIN_OPERATION":{const fnName=OPERATOR_MAP[ast.value];const left=compileAST(ast.left,false,false).assignResultToVariable();const right=compileAST(ast.right,false,false).assignResultToVariable();code.append(left);code.append(right);return code.return(`ctx['${fnName}'](${left.returnExpression}, ${right.returnExpression})`);}
case"SYMBOL":const symbolIndex=symbols.indexOf(ast.value);return code.return(`getSymbolValue(this.symbols[${symbolIndex}])`);case"EMPTY":return code.return("undefined");}}}
const compiledFormula={execute:functionCache[cacheKey],dependencies,constantValues,symbols,tokens,isBadExpression:false,};return compiledFormula;}
function compilationCacheKey(tokens,dependencies,constantValues,symbols){let cacheKey="";for(const token of tokens){switch(token.type){case"STRING":const value=removeStringQuotes(token.value);cacheKey+=`|S${constantValues.strings.indexOf(value)}|`;break;case"NUMBER":cacheKey+=`|N${constantValues.numbers.indexOf(parseNumber(token.value, DEFAULT_LOCALE))}|`;break;case"REFERENCE":case"INVALID_REFERENCE":if(token.value.includes(":")){cacheKey+=`R|${dependencies.indexOf(token.value)}|`;}
else{cacheKey+=`C|${dependencies.indexOf(token.value)}|`;}
break;case"SPACE":cacheKey+="";break;default:cacheKey+=token.value;break;}}
return cacheKey;}
function formulaArguments(tokens){const constantValues={numbers:[],strings:[],};const dependencies=[];const symbols=[];for(const token of tokens){switch(token.type){case"INVALID_REFERENCE":case"REFERENCE":dependencies.push(token.value);break;case"STRING":const value=removeStringQuotes(token.value);if(!constantValues.strings.includes(value)){constantValues.strings.push(value);}
break;case"NUMBER":{const value=parseNumber(token.value,DEFAULT_LOCALE);if(!constantValues.numbers.includes(value)){constantValues.numbers.push(value);}
break;}
case"SYMBOL":{symbols.push(unquote(token.value,"'"));}}}
return{dependencies,constantValues,symbols,};}
function assertEnoughArgs(ast){const nbrArg=ast.args.length;const functionName=ast.value.toUpperCase();const functionDefinition=functions$1[functionName];if(nbrArg<functionDefinition.minArgRequired){throw new BadExpressionError(_t("Invalid number of arguments for the %s function. Expected %s minimum, but got %s instead.",functionName,functionDefinition.minArgRequired.toString(),nbrArg.toString()));}
if(nbrArg>functionDefinition.maxArgPossible){throw new BadExpressionError(_t("Invalid number of arguments for the %s function. Expected %s maximum, but got %s instead.",functionName,functionDefinition.maxArgPossible.toString(),nbrArg.toString()));}
const repeatableArgs=functionDefinition.nbrArgRepeating;if(repeatableArgs>1){const unrepeatableArgs=functionDefinition.args.length-repeatableArgs;const repeatingArgs=nbrArg-unrepeatableArgs;if(repeatingArgs%repeatableArgs!==0){throw new BadExpressionError(_t("Invalid number of arguments for the %s function. Expected all arguments after position %s to be supplied by groups of %s arguments",functionName,unrepeatableArgs.toString(),repeatableArgs.toString()));}}}
function isRangeType(type){return type.startsWith("RANGE");}
const functions=functionRegistry.content;function isExportableToExcel(tokens){try{const nonExportableFunctions=iterateAstNodes(parseTokens(tokens)).filter((ast)=>ast.type==="FUNCALL"&&!functions[ast.value.toUpperCase()]?.isExported);return nonExportableFunctions.length===0;}
catch(error){return false;}}
function getFunctionsFromTokens(tokens,functionNames){if(!tokens.some((t)=>t.type==="SYMBOL"&&functionNames.includes(t.value.toUpperCase()))){return[];}
let ast;try{ast=parseTokens(tokens);}
catch{return[];}
return getFunctionsFromAST(ast,functionNames);}
function getFunctionsFromAST(ast,functionNames){return iterateAstNodes(ast).filter((node)=>node.type==="FUNCALL"&&functionNames.includes(node.value.toUpperCase())).map((node)=>({functionName:node.value.toUpperCase(),args:node.args,}));}
const PIVOT_FUNCTIONS=["PIVOT.VALUE","PIVOT.HEADER","PIVOT"];function makeFieldProposal(field,granularity){const groupBy=granularity?`${field.name}:${granularity}`:field.name;const quotedGroupBy=`"${groupBy}"`;const fuzzySearchKey=field.string!==field.name?field.string+quotedGroupBy:quotedGroupBy;return{text:quotedGroupBy,description:field.string+(field.help?` (${field.help})`:""),htmlContent:[{value:quotedGroupBy,color:tokenColors.STRING}],fuzzySearchKey,};}
function makeMeasureProposal(measure){const quotedMeasure=`"${measure.id}"`;const fuzzySearchKey=measure.displayName+measure.fieldName+quotedMeasure;return{text:quotedMeasure,description:measure.displayName,htmlContent:[{value:quotedMeasure,color:tokenColors.STRING}],fuzzySearchKey,};}
function insertTokenAfterArgSeparator(tokenAtCursor,value){let start=tokenAtCursor.end;const end=tokenAtCursor.end;if(tokenAtCursor.type!=="ARG_SEPARATOR"){start=tokenAtCursor.start;}
this.composer.stopComposerRangeSelection();this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);}
function insertTokenAfterLeftParenthesis(tokenAtCursor,value){let start=tokenAtCursor.end;const end=tokenAtCursor.end;if(tokenAtCursor.type!=="LEFT_PAREN"){start=tokenAtCursor.start;}
this.composer.stopComposerRangeSelection();this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);}
function extractFormulaIdFromToken(tokenAtCursor){const idAst=tokenAtCursor.functionContext?.args[0];if(!idAst||!["STRING","NUMBER"].includes(idAst.type)){return;}
return idAst.value;}
function getFirstPivotFunction(tokens){return getFunctionsFromTokens(tokens,PIVOT_FUNCTIONS)[0];}
function getNumberOfPivotFunctions(tokens){return getFunctionsFromTokens(tokens,PIVOT_FUNCTIONS).length;}
const supportedPivotPositionalFormulaRegistry=new Registry();supportedPivotPositionalFormulaRegistry.add("SPREADSHEET",false);autoCompleteProviders.add("pivot_ids",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;const pivotFunction=["PIVOT.VALUE","PIVOT.HEADER","PIVOT"];if(!functionContext||!pivotFunction.includes(functionContext.parent.toUpperCase())||functionContext.argPosition!==0){return;}
const pivotIds=this.getters.getPivotIds();if(pivotIds.includes(tokenAtCursor.value)){return;}
return pivotIds.map((pivotId)=>{const definition=this.getters.getPivotCoreDefinition(pivotId);const formulaId=this.getters.getPivotFormulaId(pivotId);const str=`${formulaId}`;return{text:str,description:definition.name,htmlContent:[{value:str,color:tokenColors.NUMBER}],fuzzySearchKey:str+definition.name,};}).filter(isDefined);},selectProposal:insertTokenAfterLeftParenthesis,});autoCompleteProviders.add("pivot_measures",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(functionContext?.parent.toUpperCase()!=="PIVOT.VALUE"||functionContext.argPosition!==1){return[];}
const pivotFormulaId=extractFormulaIdFromToken(tokenAtCursor);const pivotId=this.getters.getPivotId(pivotFormulaId);if(!pivotId||!this.getters.isExistingPivot(pivotId)){return[];}
const pivot=this.getters.getPivot(pivotId);pivot.init();if(!pivot.isValid()){return[];}
return pivot.definition.measures.map((measure)=>{if(measure.fieldName==="__count"){const text='"__count"';return{text,description:_t("Count"),htmlContent:[{value:text,color:tokenColors.STRING}],fuzzySearchKey:_t("Count")+text,};}
return makeMeasureProposal(measure);}).filter(isDefined);},selectProposal:insertTokenAfterArgSeparator,});autoCompleteProviders.add("pivot_group_fields",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(!functionContext||(!canAutoCompletePivotField(tokenAtCursor)&&!canAutoCompletePivotHeaderField(tokenAtCursor))){return;}
const pivotFormulaId=extractFormulaIdFromToken(tokenAtCursor);const pivotId=this.getters.getPivotId(pivotFormulaId);if(!pivotId||!this.getters.isExistingPivot(pivotId)){return;}
const pivot=this.getters.getPivot(pivotId);pivot.init();const fields=pivot.getFields();const{columns,rows}=pivot.definition;let args=functionContext.args;if(functionContext?.parent.toUpperCase()==="PIVOT.VALUE"){args=args.filter((ast,index)=>index%2===0);args=args.slice(1,functionContext.argPosition);}
else{args=args.filter((ast,index)=>index%2===1);}
const argGroupBys=args.map((ast)=>ast?.value).filter(isDefined);const colFields=columns.map((groupBy)=>groupBy.nameWithGranularity);const rowFields=rows.map((groupBy)=>groupBy.nameWithGranularity);const proposals=[];const previousGroupBy=["ARG_SEPARATOR","SPACE"].includes(tokenAtCursor.type)?argGroupBys.at(-1):argGroupBys.at(-2);if(previousGroupBy===undefined){proposals.push(colFields[0]);proposals.push(rowFields[0]);}
if(rowFields.includes(previousGroupBy)){const nextRowGroupBy=rowFields[rowFields.indexOf(previousGroupBy)+1];proposals.push(nextRowGroupBy);proposals.push(colFields[0]);}
if(colFields.includes(previousGroupBy)){const nextGroupBy=colFields[colFields.indexOf(previousGroupBy)+1];proposals.push(nextGroupBy);}
const groupBys=proposals.filter(isDefined);return groupBys.map((groupBy)=>{const[fieldName,granularity]=groupBy.split(":");const field=fields[fieldName];return field?makeFieldProposal(field,granularity):undefined;}).concat(groupBys.map((groupBy)=>{if(!supportedPivotPositionalFormulaRegistry.get(pivot.type)){return undefined;}
const fieldName=groupBy.split(":")[0];const field=fields[fieldName];if(!field){return undefined;}
const positionalFieldArg=`"#${groupBy}"`;const positionalProposal={text:positionalFieldArg,description:_t("%s (positional)",field.string)+(field.help?` (${field.help})`:""),htmlContent:[{value:positionalFieldArg,color:tokenColors.STRING}],fuzzySearchKey:field.string+positionalFieldArg,};return positionalProposal;})).filter(isDefined);},selectProposal:insertTokenAfterArgSeparator,});function canAutoCompletePivotField(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.VALUE"&&functionContext.argPosition>=2&&functionContext.argPosition%2===0);}
function canAutoCompletePivotHeaderField(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.HEADER"&&functionContext.argPosition>=1&&functionContext.argPosition%2===1);}
autoCompleteProviders.add("pivot_group_values",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(!functionContext||!tokenAtCursor||(!canAutoCompletePivotGroupValue(tokenAtCursor)&&!canAutoCompletePivotHeaderGroupValue(tokenAtCursor))){return;}
const pivotFormulaId=extractFormulaIdFromToken(tokenAtCursor);const pivotId=this.getters.getPivotId(pivotFormulaId);if(!pivotId||!this.getters.isExistingPivot(pivotId)){return;}
const pivot=this.getters.getPivot(pivotId);if(!pivot.isValid()){return;}
const argPosition=functionContext.argPosition;const groupByField=tokenAtCursor.functionContext?.args[argPosition-1]?.value;if(!groupByField){return;}
let dimension;try{dimension=pivot.definition.getDimension(groupByField);}
catch(error){return undefined;}
if(dimension.granularity==="month_number"){return Object.values(MONTHS).map((monthDisplayName,index)=>({text:`${index + 1}`,fuzzySearchKey:monthDisplayName.toString(),description:monthDisplayName.toString(),htmlContent:[{value:`${index + 1}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="quarter_number"){return[1,2,3,4].map((quarter)=>({text:`${quarter}`,fuzzySearchKey:`${quarter}`,description:_t("Quarter %s",quarter),htmlContent:[{value:`${quarter}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="day_of_month"){return range(1,32).map((dayOfMonth)=>({text:`${dayOfMonth}`,fuzzySearchKey:`${dayOfMonth}`,description:"",htmlContent:[{value:`${dayOfMonth}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="iso_week_number"){return range(0,54).map((isoWeekNumber)=>({text:`${isoWeekNumber}`,fuzzySearchKey:`${isoWeekNumber}`,description:"",htmlContent:[{value:`${isoWeekNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="day_of_week"){return range(1,8).map((dayOfWeekNumber)=>({text:`${dayOfWeekNumber}`,fuzzySearchKey:`${dayOfWeekNumber}`,description:"",htmlContent:[{value:`${dayOfWeekNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="hour_number"){return range(0,24).map((hourNumber)=>({text:`${hourNumber}`,fuzzySearchKey:`${hourNumber}`,description:"",htmlContent:[{value:`${hourNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="minute_number"){return range(0,60).map((minuteNumber)=>({text:`${minuteNumber}`,fuzzySearchKey:`${minuteNumber}`,description:"",htmlContent:[{value:`${minuteNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="second_number"){return range(0,60).map((secondNumber)=>({text:`${secondNumber}`,fuzzySearchKey:`${secondNumber}`,description:"",htmlContent:[{value:`${secondNumber}`,color:tokenColors.NUMBER}],}));}
return pivot.getPossibleFieldValues(dimension).map(({value,label})=>{const isString=typeof value==="string";const text=isString?`"${value}"`:value.toString();const color=isString?tokenColors.STRING:tokenColors.NUMBER;const usedLabel=label===value?"":label;return{text,description:usedLabel,htmlContent:[{value:text,color}],fuzzySearchKey:value+usedLabel,};});},selectProposal:insertTokenAfterArgSeparator,});function canAutoCompletePivotGroupValue(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.VALUE"&&functionContext.argPosition>=2&&functionContext.argPosition%2===1);}
function canAutoCompletePivotHeaderGroupValue(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.HEADER"&&functionContext.argPosition>=1&&functionContext.argPosition%2===0);}
autoCompleteProviders.add("sheet_names",{sequence:150,autoSelectFirstProposal:true,getProposals(tokenAtCursor){if(tokenAtCursor.type==="SYMBOL"||(tokenAtCursor.type==="UNKNOWN"&&tokenAtCursor.value.startsWith("'"))){return this.getters.getSheetIds().map((sheetId)=>{const sheetName=getCanonicalSymbolName(this.getters.getSheetName(sheetId));return{text:sheetName,fuzzySearchKey:sheetName.startsWith("'")?sheetName:"'"+sheetName,};});}
return[];},selectProposal(tokenAtCursor,value){const start=tokenAtCursor.start;const end=tokenAtCursor.end;this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value+"!");},});function withHttps(url){return!/^https?:\/\//i.test(url)?`https://${url}`:url;}
const urlRegistry=new Registry();function createWebLink(url,label){url=withHttps(url);return{url,label:label||url,isExternal:true,isUrlEditable:true,};}
urlRegistry.add("sheet_URL",{match:(url)=>isSheetUrl(url),createLink:(url,label)=>{return{label,url,isExternal:false,isUrlEditable:false,};},urlRepresentation(url,getters){const sheetId=parseSheetUrl(url);return getters.tryGetSheetName(sheetId)||_t("Invalid sheet");},open(url,env){const sheetId=parseSheetUrl(url);const result=env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:env.model.getters.getActiveSheetId(),sheetIdTo:sheetId,});if(result.isCancelledBecause("SheetIsHidden")){env.notifyUser({type:"warning",sticky:false,text:_t("Cannot open the link because the linked sheet is hidden."),});}},sequence:0,});const WebUrlSpec={createLink:createWebLink,match:(url)=>isWebLink(url),open:(url)=>window.open(url,"_blank"),urlRepresentation:(url)=>url,sequence:0,};function findMatchingSpec(url){return(urlRegistry.getAll().sort((a,b)=>a.sequence-b.sequence).find((urlType)=>urlType.match(url))||WebUrlSpec);}
function urlRepresentation(link,getters){return findMatchingSpec(link.url).urlRepresentation(link.url,getters);}
function openLink(link,env){findMatchingSpec(link.url).open(link.url,env);}
function detectLink(value){if(typeof value!=="string"){return undefined;}
if(isMarkdownLink(value)){const{label,url}=parseMarkdownLink(value);return findMatchingSpec(url).createLink(url,label);}
else if(isWebLink(value)){return createWebLink(value);}
return undefined;}
function evaluateLiteral(literalCell,localeFormat){const value=isTextFormat(localeFormat.format)?literalCell.content:literalCell.parsedValue;const functionResult={value,format:localeFormat.format};return createEvaluatedCell(functionResult,localeFormat.locale);}
function parseLiteral(content,locale){if(content.startsWith("=")){throw new Error(`Cannot parse "${content}" because it's not a literal value. It's a formula`);}
if(content===""){return null;}
if(isNumber(content,DEFAULT_LOCALE)){return parseNumber(content,DEFAULT_LOCALE);}
const internalDate=parseDateTime(content,locale);if(internalDate){return internalDate.value;}
if(isBoolean(content)){return content.toUpperCase()==="TRUE"?true:false;}
return content;}
function createEvaluatedCell(functionResult,locale=DEFAULT_LOCALE,cell){const link=detectLink(functionResult.value);if(!link){return _createEvaluatedCell(functionResult,locale,cell);}
const value=parseLiteral(link.label,locale);const format=functionResult.format||(typeof value==="number"?detectDateFormat(link.label,locale)||detectNumberFormat(link.label):undefined);const linkPayload={value,format,};return{..._createEvaluatedCell(linkPayload,locale,cell),link,};}
function _createEvaluatedCell(functionResult,locale,cell){let{value,format,message}=functionResult;format=cell?.format||format;const formattedValue=formatValue(value,{format,locale});if(isEvaluationError(value)){return errorCell(value,message);}
if(isTextFormat(format)){return textCell(toString(value),format,formattedValue);}
if(value===null){return emptyCell(format);}
if(typeof value==="number"){if(isDateTimeFormat(format||"")){return dateTimeCell(value,format,formattedValue);}
return numberCell(value,format,formattedValue);}
if(typeof value==="boolean"){return booleanCell(value,format,formattedValue);}
return textCell(value,format,formattedValue);}
function textCell(value,format,formattedValue){return{value,format,formattedValue,type:CellValueType.text,isAutoSummable:true,defaultAlign:"left",};}
function numberCell(value,format,formattedValue){return{value:value||0,format,formattedValue,type:CellValueType.number,isAutoSummable:true,defaultAlign:"right",};}
const emptyCell=memoize(function emptyCell(format){return{value:null,format,formattedValue:"",type:CellValueType.empty,isAutoSummable:true,defaultAlign:"left",};});function dateTimeCell(value,format,formattedValue){return{value,format,formattedValue,type:CellValueType.number,isAutoSummable:false,defaultAlign:"right",};}
function booleanCell(value,format,formattedValue){return{value,format,formattedValue,type:CellValueType.boolean,isAutoSummable:false,defaultAlign:"center",};}
function errorCell(value,message){return{value,formattedValue:value,message,type:CellValueType.error,isAutoSummable:false,defaultAlign:"center",};}
const autofillModifiersRegistry=new Registry();autofillModifiersRegistry.add("ALPHANUMERIC_INCREMENT_MODIFIER",{apply:(rule,data)=>{rule.current+=rule.increment;const content=`${rule.prefix}${rule.current
            .toString()
            .padStart(rule.numberPostfixLength || 0, "0")}`;return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content,},tooltip:{props:{content}},};},}).add("INCREMENT_MODIFIER",{apply:(rule,data,getters)=>{rule.current+=rule.increment;const content=rule.current.toString();const locale=getters.getLocale();const tooltipValue=formatValue(rule.current,{format:data.cell?.format,locale});return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content,},tooltip:content?{props:{content:tooltipValue}}:undefined,};},}).add("DATE_INCREMENT_MODIFIER",{apply:(rule,data,getters)=>{const date=toJsDate(rule.current,getters.getLocale());date.setFullYear(date.getFullYear()+rule.increment.years||0);date.setMonth(date.getMonth()+rule.increment.months||0);date.setDate(date.getDate()+rule.increment.days||0);const value=jsDateToNumber(date);rule.current=value;const locale=getters.getLocale();const tooltipValue=formatValue(value,{format:data.cell?.format,locale});return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content:value.toString(),},tooltip:value?{props:{content:tooltipValue}}:undefined,};},}).add("COPY_MODIFIER",{apply:(rule,data,getters)=>{const content=data.cell?.content||"";const localeFormat={locale:getters.getLocale(),format:data.cell?.format};return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content,},tooltip:content?{props:{content:data.cell?evaluateLiteral(data.cell,localeFormat).formattedValue:"",},}:undefined,};},}).add("FORMULA_MODIFIER",{apply:(rule,data,getters,direction)=>{rule.current+=rule.increment;let x=0;let y=0;switch(direction){case"up":x=0;y=-rule.current;break;case"down":x=0;y=rule.current;break;case"left":x=-rule.current;y=0;break;case"right":x=rule.current;y=0;break;}
const cell=data.cell;if(!cell||!cell.isFormula){return{cellData:{}};}
const sheetId=data.sheetId;const content=getters.getTranslatedCellFormula(sheetId,x,y,cell.compiledFormula.tokens);return{cellData:{border:data.border,style:cell.style,format:cell.format,content,},tooltip:content?{props:{content}}:undefined,};},});const autofillRulesRegistry=new Registry();const numberPostfixRegExp=/(\d+)$/;const stringPrefixRegExp=/^(.*\D+)/;const alphaNumericValueRegExp=/^(.*\D+)(\d+)$/;function getGroup(cell,cells,filter){let group=[];let found=false;for(let x of cells){if(x===cell){found=true;}
const cellValue=x===undefined||x.isFormula?undefined:evaluateLiteral(x,{locale:DEFAULT_LOCALE,format:x.format});if(cellValue&&filter(cellValue)){group.push(cellValue);}
else{if(found){return group;}
group=[];}}
return group;}
function getAverageIncrement(group){const averages=[];let last=group[0];for(let i=1;i<group.length;i++){const current=group[i];averages.push(current-last);last=current;}
return averages.reduce((a,b)=>a+b,0)/averages.length;}
function calculateIncrementBasedOnGroup(group){let increment=1;if(group.length>=2){increment=getAverageIncrement(group)*group.length;}
return increment;}
function getEqualInterval(intervals){if(intervals.length<2){return intervals[0]||{years:0,months:0,days:0};}
const equal=intervals.every((interval)=>interval.years===intervals[0].years&&interval.months===intervals[0].months&&interval.days===intervals[0].days);return equal?intervals[0]:undefined;}
function calculateDateIncrementBasedOnGroup(group){if(group.length<2){return 1;}
const jsDates=group.map((date)=>toJsDate(date,DEFAULT_LOCALE));const datesIntervals=getDateIntervals(jsDates);const datesEquidistantInterval=getEqualInterval(datesIntervals);if(datesEquidistantInterval===undefined){return undefined;}
const exactDateInterval=Object.values(datesEquidistantInterval).filter((value)=>value!==0).length===1;const isSameDay=Object.values(datesEquidistantInterval).every((el)=>el===0);if(!exactDateInterval||isSameDay){const timeIntervals=jsDates.map((date,index)=>{if(index===0){return 0;}
const previous=jsDates[index-1];const days=Math.floor(date.getTime())-Math.floor(previous.getTime());return days;}).slice(1);const equidistantDates=timeIntervals.every((interval)=>interval===timeIntervals[0]);if(equidistantDates){return group.length*(group[1]-group[0]);}}
return{years:datesEquidistantInterval.years*group.length,months:datesEquidistantInterval.months*group.length,days:datesEquidistantInterval.days*group.length,};}
autofillRulesRegistry.add("simple_value_copy",{condition:(cell,cells)=>{return(cells.length===1&&!cell.isFormula&&!(cell.format&&isDateTimeFormat(cell.format)));},generateRule:()=>{return{type:"COPY_MODIFIER"};},sequence:10,}).add("increment_alphanumeric_value",{condition:(cell)=>!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.text&&alphaNumericValueRegExp.test(cell.content),generateRule:(cell,cells)=>{const numberPostfix=parseInt(cell.content.match(numberPostfixRegExp)[0]);const prefix=cell.content.match(stringPrefixRegExp)[0];const numberPostfixLength=cell.content.length-prefix.length;const group=getGroup(cell,cells,(evaluatedCell)=>evaluatedCell.type===CellValueType.text&&alphaNumericValueRegExp.test(evaluatedCell.value)).filter((cell)=>prefix===(cell.value??"").toString().match(stringPrefixRegExp)[0]).map((cell)=>parseInt((cell.value??"").toString().match(numberPostfixRegExp)[0]));const increment=calculateIncrementBasedOnGroup(group);return{type:"ALPHANUMERIC_INCREMENT_MODIFIER",prefix,current:numberPostfix,increment,numberPostfixLength,};},sequence:15,}).add("copy_text",{condition:(cell)=>!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.text,generateRule:()=>{return{type:"COPY_MODIFIER"};},sequence:20,}).add("update_formula",{condition:(cell)=>cell.isFormula,generateRule:(_,cells)=>{return{type:"FORMULA_MODIFIER",increment:cells.length,current:0};},sequence:30,}).add("increment_dates",{condition:(cell,cells)=>{return(!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.number&&!!cell.format&&isDateTimeFormat(cell.format));},generateRule:(cell,cells)=>{const group=getGroup(cell,cells,(evaluatedCell)=>evaluatedCell.type===CellValueType.number&&!!evaluatedCell.format&&isDateTimeFormat(evaluatedCell.format)).map((cell)=>Number(cell.value));const increment=calculateDateIncrementBasedOnGroup(group);if(increment===undefined){return{type:"COPY_MODIFIER"};}
const evaluation=evaluateLiteral(cell,{locale:DEFAULT_LOCALE});if(typeof increment==="object"){return{type:"DATE_INCREMENT_MODIFIER",increment,current:evaluation.type===CellValueType.number?evaluation.value:0,};}
return{type:"INCREMENT_MODIFIER",increment,current:evaluation.type===CellValueType.number?evaluation.value:0,};},sequence:25,}).add("increment_number",{condition:(cell)=>!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.number,generateRule:(cell,cells)=>{const group=getGroup(cell,cells,(evaluatedCell)=>evaluatedCell.type===CellValueType.number&&!isDateTimeFormat(evaluatedCell.format||"")).map((cell)=>Number(cell.value));const increment=calculateIncrementBasedOnGroup(group);const evaluation=evaluateLiteral(cell,{locale:DEFAULT_LOCALE});return{type:"INCREMENT_MODIFIER",increment,current:evaluation.type===CellValueType.number?evaluation.value:0,};},sequence:40,});function getDateIntervals(dates){if(dates.length<2){return[{years:0,months:0,days:0}];}
const res=dates.map((date,index)=>{if(index===0){return{years:0,months:0,days:0};}
const previous=DateTime.fromTimestamp(dates[index-1].getTime());const years=getTimeDifferenceInWholeYears(previous,date);const months=getTimeDifferenceInWholeMonths(previous,date)%12;previous.setFullYear(previous.getFullYear()+years);previous.setMonth(previous.getMonth()+months);const days=getTimeDifferenceInWholeDays(previous,date);return{years,months,days,};});return res.slice(1);}
const cellPopoverRegistry=new Registry();const GAUGE_PADDING_SIDE=30;const GAUGE_PADDING_TOP=10;const GAUGE_PADDING_BOTTOM=20;const GAUGE_LABELS_FONT_SIZE=12;const GAUGE_DEFAULT_VALUE_FONT_SIZE=80;const GAUGE_BACKGROUND_COLOR="#F3F2F1";const GAUGE_TEXT_COLOR="#666666";const GAUGE_TEXT_COLOR_HIGH_CONTRAST="#C8C8C8";const GAUGE_INFLECTION_MARKER_COLOR="#666666aa";const GAUGE_INFLECTION_LABEL_BOTTOM_MARGIN=6;const GAUGE_TITLE_SECTION_HEIGHT=25;const GAUGE_TITLE_FONT_SIZE=SCORECARD_GAUGE_CHART_FONT_SIZE;const GAUGE_TITLE_PADDING_LEFT=SCORECARD_GAUGE_CHART_PADDING;const GAUGE_TITLE_PADDING_TOP=SCORECARD_GAUGE_CHART_PADDING;function drawGaugeChart(canvas,runtime){const canvasBoundingRect=canvas.getBoundingClientRect();canvas.width=canvasBoundingRect.width;canvas.height=canvasBoundingRect.height;const ctx=canvas.getContext("2d");const config=getGaugeRenderingConfig(canvasBoundingRect,runtime,ctx);drawBackground(ctx,config);drawGauge(ctx,config);drawInflectionValues(ctx,config);drawLabels(ctx,config);drawTitle(ctx,config);}
function drawGauge(ctx,config){ctx.save();const gauge=config.gauge;const arcCenterX=gauge.rect.x+gauge.rect.width/2;const arcCenterY=gauge.rect.y+gauge.rect.height;const arcRadius=gauge.rect.height-gauge.arcWidth/2;if(arcRadius<0){return;}
const gaugeAngle=gauge.percentage===1?0:Math.PI*(1+gauge.percentage);ctx.strokeStyle=GAUGE_BACKGROUND_COLOR;ctx.beginPath();ctx.lineWidth=gauge.arcWidth;ctx.arc(arcCenterX,arcCenterY,arcRadius,gaugeAngle,0);ctx.stroke();ctx.strokeStyle=gauge.color;ctx.beginPath();ctx.arc(arcCenterX,arcCenterY,arcRadius,Math.PI,gaugeAngle);ctx.stroke();ctx.restore();}
function drawBackground(ctx,config){ctx.save();ctx.fillStyle=config.backgroundColor;ctx.fillRect(0,0,config.width,config.height);ctx.restore();}
function drawLabels(ctx,config){for(const label of[config.minLabel,config.maxLabel,config.gaugeValue]){ctx.save();ctx.textAlign="center";ctx.fillStyle=label.color;ctx.font=`${label.fontSize}px ${DEFAULT_FONT}`;ctx.fillText(label.label,label.textPosition.x,label.textPosition.y);ctx.restore();}}
function drawInflectionValues(ctx,config){const{x:rectX,y:rectY,width,height}=config.gauge.rect;for(const inflectionValue of config.inflectionValues){ctx.save();ctx.translate(rectX+width/2-0.5,rectY+height-0.5);ctx.rotate(Math.PI/2-inflectionValue.rotation);ctx.lineWidth=2;ctx.strokeStyle=GAUGE_INFLECTION_MARKER_COLOR;ctx.beginPath();ctx.moveTo(0,-(height-config.gauge.arcWidth));ctx.lineTo(0,-height-3);ctx.stroke();ctx.textAlign="center";ctx.font=`${inflectionValue.fontSize}px ${DEFAULT_FONT}`;ctx.fillStyle=inflectionValue.color;const textY=-height-GAUGE_INFLECTION_LABEL_BOTTOM_MARGIN-inflectionValue.offset;ctx.fillText(inflectionValue.label,0,textY);ctx.restore();}}
function drawTitle(ctx,config){ctx.save();const title=config.title;ctx.font=getDefaultContextFont(title.fontSize,title.bold,title.italic);ctx.textBaseline="middle";ctx.fillStyle=title.color;ctx.fillText(title.label,title.textPosition.x,title.textPosition.y);ctx.restore();}
function getGaugeRenderingConfig(boundingRect,runtime,ctx){const maxValue=runtime.maxValue;const minValue=runtime.minValue;const gaugeValue=runtime.gaugeValue;const gaugeRect=getGaugeRect(boundingRect,runtime.title.text);const gaugeArcWidth=gaugeRect.width/6;const gaugePercentage=gaugeValue?(gaugeValue.value-minValue.value)/(maxValue.value-minValue.value):0;const gaugeValuePosition={x:boundingRect.width/2,y:gaugeRect.y+gaugeRect.height-gaugeRect.height/12,};let gaugeValueFontSize=GAUGE_DEFAULT_VALUE_FONT_SIZE;if(gaugeRect.height<300){gaugeValueFontSize=gaugeValueFontSize*(gaugeRect.height/300);}
const maxTextWidth=gaugeRect.width/2;const gaugeLabel=gaugeValue?.label||"-";if(computeTextWidth(ctx,gaugeLabel,{fontSize:gaugeValueFontSize},"px")>maxTextWidth){gaugeValueFontSize=getFontSizeMatchingWidth(maxTextWidth,gaugeValueFontSize,(fontSize)=>computeTextWidth(ctx,gaugeLabel,{fontSize},"px"));}
const minLabelPosition={x:gaugeRect.x+gaugeArcWidth/2,y:gaugeRect.y+gaugeRect.height+GAUGE_LABELS_FONT_SIZE,};const maxLabelPosition={x:gaugeRect.x+gaugeRect.width-gaugeArcWidth/2,y:gaugeRect.y+gaugeRect.height+GAUGE_LABELS_FONT_SIZE,};const textColor=getContrastedTextColor(runtime.background);const inflectionValues=getInflectionValues(runtime,gaugeRect,textColor,ctx);let x=0,titleWidth=0,titleHeight=0;if(runtime.title.text){({width:titleWidth,height:titleHeight}=computeTextDimension(ctx,runtime.title.text,{...runtime.title,fontSize:GAUGE_TITLE_FONT_SIZE},"px"));}
switch(runtime.title.align){case"right":x=boundingRect.width-titleWidth-GAUGE_TITLE_PADDING_LEFT;break;case"center":x=(boundingRect.width-titleWidth)/2;break;case"left":default:x=GAUGE_TITLE_PADDING_LEFT;break;}
return{width:boundingRect.width,height:boundingRect.height,title:{label:runtime.title.text??"",fontSize:GAUGE_TITLE_FONT_SIZE,textPosition:{x,y:GAUGE_TITLE_PADDING_TOP+titleHeight/2,},color:runtime.title.color??textColor,bold:runtime.title.bold,italic:runtime.title.italic,},backgroundColor:runtime.background,gauge:{rect:gaugeRect,arcWidth:gaugeArcWidth,percentage:clip(gaugePercentage,0,1),color:getGaugeColor(runtime),},inflectionValues,gaugeValue:{label:gaugeLabel,textPosition:gaugeValuePosition,fontSize:gaugeValueFontSize,color:textColor,},minLabel:{label:runtime.minValue.label,textPosition:minLabelPosition,fontSize:GAUGE_LABELS_FONT_SIZE,color:textColor,},maxLabel:{label:runtime.maxValue.label,textPosition:maxLabelPosition,fontSize:GAUGE_LABELS_FONT_SIZE,color:textColor,},};}
function getGaugeRect(boundingRect,title){const titleHeight=title?GAUGE_TITLE_SECTION_HEIGHT:0;const drawHeight=boundingRect.height-GAUGE_PADDING_BOTTOM-titleHeight-GAUGE_PADDING_TOP;const drawWidth=boundingRect.width-GAUGE_PADDING_SIDE*2;let gaugeWidth;let gaugeHeight;if(drawWidth>2*drawHeight){gaugeWidth=2*drawHeight;gaugeHeight=drawHeight;}
else{gaugeWidth=drawWidth;gaugeHeight=drawWidth/2;}
const gaugeX=GAUGE_PADDING_SIDE+(drawWidth-gaugeWidth)/2;const gaugeY=titleHeight+GAUGE_PADDING_TOP+(drawHeight-gaugeHeight)/2;return{x:gaugeX,y:gaugeY,width:gaugeWidth,height:gaugeHeight,};}
function getInflectionValues(runtime,gaugeRect,textColor,ctx){const maxValue=runtime.maxValue;const minValue=runtime.minValue;const gaugeCircleCenter={x:gaugeRect.x+gaugeRect.width/2,y:gaugeRect.y+gaugeRect.height,};const textStyle={fontSize:GAUGE_LABELS_FONT_SIZE};const inflectionValues=[];const inflectionValuesTextRects=[];for(const inflectionValue of runtime.inflectionValues){const percentage=(inflectionValue.value-minValue.value)/(maxValue.value-minValue.value);const labelWidth=computeTextWidth(ctx,inflectionValue.label,textStyle,"px");const angle=Math.PI-Math.PI*percentage;const textRect=getRectangleTangentToCircle(angle,gaugeRect.height+GAUGE_INFLECTION_LABEL_BOTTOM_MARGIN,gaugeCircleCenter.x,gaugeCircleCenter.y,labelWidth+2,GAUGE_LABELS_FONT_SIZE);let offset=inflectionValuesTextRects.some((rect)=>doRectanglesIntersect(rect,textRect))?GAUGE_LABELS_FONT_SIZE:0;inflectionValuesTextRects.push(textRect);inflectionValues.push({rotation:angle,label:inflectionValue.label,fontSize:GAUGE_LABELS_FONT_SIZE,color:textColor,offset,});}
return inflectionValues;}
function getGaugeColor(runtime){const gaugeValue=runtime.gaugeValue?.value;if(gaugeValue===undefined){return GAUGE_BACKGROUND_COLOR;}
for(let i=0;i<runtime.inflectionValues.length;i++){const inflectionValue=runtime.inflectionValues[i];if(inflectionValue.operator==="<"&&gaugeValue<inflectionValue.value){return runtime.colors[i];}
else if(inflectionValue.operator==="<="&&gaugeValue<=inflectionValue.value){return runtime.colors[i];}}
return runtime.colors.at(-1);}
function getContrastedTextColor(backgroundColor){return relativeLuminance(backgroundColor)>0.3?GAUGE_TEXT_COLOR:GAUGE_TEXT_COLOR_HIGH_CONTRAST;}
function getSegmentsOfRectangle(rectangle){return[{start:rectangle.topLeft,end:rectangle.topRight},{start:rectangle.topRight,end:rectangle.bottomRight},{start:rectangle.bottomRight,end:rectangle.bottomLeft},{start:rectangle.bottomLeft,end:rectangle.topLeft},];}
function doSegmentIntersect(segment1,segment2){const A=segment1.start;const B=segment1.end;const C=segment2.start;const D=segment2.end;function ccw(a,b,c){return(c.y-a.y)*(b.x-a.x)>(b.y-a.y)*(c.x-a.x);}
return ccw(A,C,D)!==ccw(B,C,D)&&ccw(A,B,C)!==ccw(A,B,D);}
function doRectanglesIntersect(rect1,rect2){const segments1=getSegmentsOfRectangle(rect1);const segments2=getSegmentsOfRectangle(rect2);for(const segment1 of segments1){for(const segment2 of segments2){if(doSegmentIntersect(segment1,segment2)){return true;}}}
return false;}
function getRectangleTangentToCircle(angle,radius,circleCenterX,circleCenterY,rectWidth,rectHeight){const cos=Math.cos(angle);const sin=Math.sin(angle);const x=cos*radius;const y=sin*radius;const x2=sin*(rectWidth/2);const y2=cos*(rectWidth/2);const bottomRight={x:x+x2+circleCenterX,y:circleCenterY-(y-y2),};const bottomLeft={x:x-x2+circleCenterX,y:circleCenterY-(y+y2),};const xp=cos*(radius+rectHeight);const yp=sin*(radius+rectHeight);const topLeft={x:xp-x2+circleCenterX,y:circleCenterY-(yp+y2),};const topRight={x:xp+x2+circleCenterX,y:circleCenterY-(yp-y2),};return{bottomLeft,bottomRight,topRight,topLeft};}
class GaugeChartComponent extends Component{static template="o-spreadsheet-GaugeChartComponent";canvas=useRef("chartContainer");get runtime(){return this.env.model.getters.getChartRuntime(this.props.figure.id);}
setup(){useEffect(()=>drawGaugeChart(this.canvas.el,this.runtime),()=>{const canvas=this.canvas.el;const rect=canvas.getBoundingClientRect();return[rect.width,rect.height,this.runtime,this.canvas.el];});}}
GaugeChartComponent.props={figure:Object,};function toXlsxHexColor(color){color=toHex(color).replace("#","");if(color.length===8){return color.slice(6)+color.slice(0,6);}
return color;}
class XMLString{xmlString;constructor(xmlString){this.xmlString=xmlString;}
toString(){return this.xmlString;}}
const XLSX_CHART_TYPES=["areaChart","area3DChart","lineChart","line3DChart","stockChart","radarChart","scatterChart","pieChart","pie3DChart","doughnutChart","barChart","bar3DChart","ofPieChart","surfaceChart","surface3DChart","bubbleChart","comboChart",];const AUTO_COLOR="000000";const XLSX_ICONSET_MAP={arrow:"3Arrows",smiley:"3Symbols",dot:"3TrafficLights1",};const NAMESPACE={styleSheet:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",sst:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",Relationships:"http://schemas.openxmlformats.org/package/2006/relationships",Types:"http://schemas.openxmlformats.org/package/2006/content-types",worksheet:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",workbook:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",drawing:"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing",table:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",revision:"http://schemas.microsoft.com/office/spreadsheetml/2014/revision",revision3:"http://schemas.microsoft.com/office/spreadsheetml/2016/revision3",markupCompatibility:"http://schemas.openxmlformats.org/markup-compatibility/2006",};const DRAWING_NS_A="http://schemas.openxmlformats.org/drawingml/2006/main";const DRAWING_NS_C="http://schemas.openxmlformats.org/drawingml/2006/chart";const CONTENT_TYPES={workbook:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",sheet:"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",sharedStrings:"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml",styles:"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",drawing:"application/vnd.openxmlformats-officedocument.drawing+xml",chart:"application/vnd.openxmlformats-officedocument.drawingml.chart+xml",themes:"application/vnd.openxmlformats-officedocument.theme+xml",table:"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml",pivot:"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml",externalLink:"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml",};const XLSX_RELATION_TYPE={document:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",sheet:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet",sharedStrings:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",styles:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",drawing:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing",chart:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart",theme:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",table:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/table",hyperlink:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",image:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",};const RELATIONSHIP_NSR="http://schemas.openxmlformats.org/officeDocument/2006/relationships";const HEIGHT_FACTOR=0.75;const WIDTH_FACTOR=0.143;const EXCEL_DEFAULT_COL_WIDTH=8.43;const EXCEL_DEFAULT_ROW_HEIGHT=12.75;const EXCEL_IMPORT_DEFAULT_NUMBER_OF_COLS=30;const EXCEL_IMPORT_DEFAULT_NUMBER_OF_ROWS=100;const FIRST_NUMFMT_ID=164;const FORCE_DEFAULT_ARGS_FUNCTIONS={FLOOR:[{type:"NUMBER",value:1}],CEILING:[{type:"NUMBER",value:1}],ROUND:[{type:"NUMBER",value:0}],ROUNDUP:[{type:"NUMBER",value:0}],ROUNDDOWN:[{type:"NUMBER",value:0}],};const NON_RETROCOMPATIBLE_FUNCTIONS=["ACOT","ACOTH","AGGREGATE","ARABIC","BASE","BETA.DIST","BETA.INV","BINOM.DIST","BINOM.DIST.RANGE","BINOM.INV","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","BYCOL","BYROW","CEILING.MATH","CEILING.PRECISE","CHISQ.DIST","CHISQ.DIST.RT","CHISQ.INV","CHISQ.INV.RT","CHISQ.TEST","CHOOSECOLS","CHOOSEROWS","COMBINA","CONCAT","CONFIDENCE.NORM","CONFIDENCE.T","COT","COTH","COVARIANCE.P","COVARIANCE.S","CSC","CSCH","DAYS","DECIMAL","DROP","ERF.PRECISE","ERFC.PRECISE","EXPAND","EXPON.DIST","F.DIST","F.DIST.RT","F.INV","F.INV.RT","F.TEST","FIELDVALUE","FILTERXML","FLOOR.MATH","FLOOR.PRECISE","FORECAST.ETS","FORECAST.ETS.CONFINT","FORECAST.ETS.SEASONALITY","FORECAST.ETS.STAT","FORECAST.LINEAR","FORMULATEXT","GAMMA","GAMMA.DIST","GAMMA.INV","GAMMALN.PRECISE","GAUSS","HSTACK","HYPGEOM.DIST","IFNA","IFS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMSEC","IMSECH","IMSINH","IMTAN","ISFORMULA","ISOMITTED","ISOWEEKNUM","LAMBDA","LET","LOGNORM.DIST","LOGNORM.INV","MAKEARRAY","MAP","MAXIFS","MINIFS","MODE.MULT","MODE.SNGL","MUNIT","NEGBINOM.DIST","NORM.DIST","NORM.INV","NORM.S.DIST","NORM.S.INV","NUMBERVALUE","PDURATION","PERCENTILE.EXC","PERCENTILE.INC","PERCENTRANK.EXC","PERCENTRANK.INC","PERMUTATIONA","PHI","POISSON.DIST","PQSOURCE","PYTHON_STR","PYTHON_TYPE","PYTHON_TYPENAME","QUARTILE.EXC","QUARTILE.INC","QUERYSTRING","RANDARRAY","RANK.AVG","RANK.EQ","REDUCE","RRI","SCAN","SEC","SECH","SEQUENCE","SHEET","SHEETS","SKEW.P","SORTBY","STDEV.P","STDEV.S","SWITCH","T.DIST","T.DIST.2T","T.DIST.RT","T.INV","T.INV.2T","T.TEST","TAKE","TEXTAFTER","TEXTBEFORE","TEXTJOIN","TEXTSPLIT","TOCOL","TOROW","UNICHAR","UNICODE","UNIQUE","VAR.P","VAR.S","VSTACK","WEBSERVICE","WEIBULL.DIST","WRAPCOLS","WRAPROWS","XLOOKUP","XOR","Z.TEST",];const CONTENT_TYPES_FILE="[Content_Types].xml";const iconsOnCellRegistry=new Registry();css`
  .o-spreadsheet {
    .o-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: ${ICON_EDGE_LENGTH}px;
      height: ${ICON_EDGE_LENGTH}px;
      font-size: ${ICON_EDGE_LENGTH}px;
      vertical-align: middle;

      .small-text {
        font: bold 9px sans-serif;
      }
      .heavy-text {
        font: bold 16px sans-serif;
      }
    }
    .fa-small {
      font-size: 14px;
    }
  }
`;const ARROW_DOWN='<svg class="o-icon arrow-down" width="10" height="10" focusable="false" viewBox="0 0 448 512"><path fill="#E06666" d="M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z"></path></svg>';const ARROW_UP='<svg class="o-icon arrow-up" width="10" height="10" focusable="false" viewBox="0 0 448 512"><path fill="#6AA84F" d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z"></path></svg>';const ARROW_RIGHT='<svg class="o-icon arrow-right" width="10" height="10" focusable="false" viewBox="0 0 448 512"><path fill="#F0AD4E" d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"></path></svg>';const SMILE='<svg class="o-icon smile" width="10" height="10" focusable="false" viewBox="0 0 496 512"><path fill="#6AA84F" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z"></path></svg>';const MEH='<svg class="o-icon meh" width="10" height="10" focusable="false" viewBox="0 0 496 512"><path fill="#F0AD4E" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z"></path></svg>';const FROWN='<svg class="o-icon frown" width="10" height="10" focusable="false" viewBox="0 0 496 512"><path fill="#E06666" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 128c-40.2 0-78 17.7-103.8 48.6-8.5 10.2-7.1 25.3 3.1 33.8 10.2 8.4 25.3 7.1 33.8-3.1 16.6-19.9 41-31.4 66.9-31.4s50.3 11.4 66.9 31.4c8.1 9.7 23.1 11.9 33.8 3.1 10.2-8.5 11.5-23.6 3.1-33.8C326 321.7 288.2 304 248 304z"></path></svg>';const GREEN_DOT='<svg class="o-icon green-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512"><path fill="#6AA84F" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"></path></svg>';const YELLOW_DOT='<svg class="o-icon yellow-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512"><path fill="#F0AD4E" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"></path></svg>';const RED_DOT='<svg class="o-icon red-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512"><path fill="#E06666" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"></path></svg>';function getIconSrc(svg){svg=`<svg xmlns="http://www.w3.org/2000/svg" ${svg.slice(4)}`;return"data:image/svg+xml; charset=utf8, "+encodeURIComponent(svg);}
const ICONS={arrowGood:{template:"ARROW_UP",img:getIconSrc(ARROW_UP),},arrowNeutral:{template:"ARROW_RIGHT",img:getIconSrc(ARROW_RIGHT),},arrowBad:{template:"ARROW_DOWN",img:getIconSrc(ARROW_DOWN),},smileyGood:{template:"SMILE",img:getIconSrc(SMILE),},smileyNeutral:{template:"MEH",img:getIconSrc(MEH),},smileyBad:{template:"FROWN",img:getIconSrc(FROWN),},dotGood:{template:"GREEN_DOT",img:getIconSrc(GREEN_DOT),},dotNeutral:{template:"YELLOW_DOT",img:getIconSrc(YELLOW_DOT),},dotBad:{template:"RED_DOT",img:getIconSrc(RED_DOT),},};const ICON_SETS={arrows:{good:"arrowGood",neutral:"arrowNeutral",bad:"arrowBad",},smiley:{good:"smileyGood",neutral:"smileyNeutral",bad:"smileyBad",},dots:{good:"dotGood",neutral:"dotNeutral",bad:"dotBad",},};iconsOnCellRegistry.add("conditional_formatting",(getters,position)=>{const icon=getters.getConditionalIcon(position);if(icon){return ICONS[icon].img;}});var WarningTypes;(function(WarningTypes){WarningTypes["DiagonalBorderNotSupported"]="Diagonal Borders";WarningTypes["BorderStyleNotSupported"]="Border style";WarningTypes["FillStyleNotSupported"]="Fill Style";WarningTypes["FontNotSupported"]="Font";WarningTypes["HorizontalAlignmentNotSupported"]="Horizontal Alignment";WarningTypes["VerticalAlignmentNotSupported"]="Vertical Alignments";WarningTypes["MultipleRulesCfNotSupported"]="Multiple rules conditional formats";WarningTypes["CfTypeNotSupported"]="Conditional format type";WarningTypes["CfFormatBorderNotSupported"]="Borders in conditional formats";WarningTypes["CfFormatAlignmentNotSupported"]="Alignment in conditional formats";WarningTypes["CfFormatNumFmtNotSupported"]="Num formats in conditional formats";WarningTypes["CfIconSetEmptyIconNotSupported"]="IconSets with empty icons";WarningTypes["BadlyFormattedHyperlink"]="Badly formatted hyperlink";WarningTypes["NumFmtIdNotSupported"]="Number format";})(WarningTypes||(WarningTypes={}));class XLSXImportWarningManager{_parsingWarnings=new Set();_conversionWarnings=new Set();addParsingWarning(warning){this._parsingWarnings.add(warning);}
addConversionWarning(warning){this._conversionWarnings.add(warning);}
get warnings(){return[...this._parsingWarnings,...this._conversionWarnings];}
generateNotSupportedWarning(type,name,supported){let warning=`${type} ${name ? '"' + name + '" is' : "are"} not yet supported. `;if(supported){warning+=`Only ${supported.join(", ")} are currently supported.`;}
if(!this._conversionWarnings.has(warning)){this._conversionWarnings.add(warning);}}}
const SUPPORTED_BORDER_STYLES=["thin","medium","thick","dashed","dotted"];const SUPPORTED_HORIZONTAL_ALIGNMENTS=["general","left","center","right",];const SUPPORTED_VERTICAL_ALIGNMENTS=["top","center","bottom"];const SUPPORTED_FONTS=["Arial"];const SUPPORTED_FILL_PATTERNS=["solid"];const SUPPORTED_CF_TYPES=["expression","cellIs","colorScale","iconSet","containsText","notContainsText","beginsWith","endsWith","containsBlanks","notContainsBlanks",];const CELL_TYPE_CONVERSION_MAP={b:"boolean",d:"date",e:"error",inlineStr:"inlineStr",n:"number",s:"sharedString",str:"str",};const BORDER_STYLE_CONVERSION_MAP={dashDot:"thin",dashDotDot:"thin",dashed:"dashed",dotted:"dotted",double:"thin",hair:"thin",medium:"medium",mediumDashDot:"thin",mediumDashDotDot:"thin",mediumDashed:"thin",none:undefined,slantDashDot:"thin",thick:"thick",thin:"thin",};const H_ALIGNMENT_CONVERSION_MAP={general:undefined,left:"left",center:"center",right:"right",fill:"left",justify:"left",centerContinuous:"center",distributed:"center",};const V_ALIGNMENT_CONVERSION_MAP={top:"top",center:"middle",bottom:"bottom",justify:"middle",distributed:"middle",};const V_ALIGNMENT_EXPORT_CONVERSION_MAP={top:"top",middle:"center",bottom:"bottom",};function convertCFCellIsOperator(xlsxCfOperator){return(xlsxCfOperator.slice(0,1).toUpperCase()+
xlsxCfOperator.slice(1));}
const CF_TYPE_CONVERSION_MAP={aboveAverage:undefined,expression:undefined,cellIs:undefined,colorScale:undefined,dataBar:undefined,iconSet:undefined,top10:undefined,uniqueValues:undefined,duplicateValues:undefined,containsText:"ContainsText",notContainsText:"NotContains",beginsWith:"BeginsWith",endsWith:"EndsWith",containsBlanks:"IsEmpty",notContainsBlanks:"IsNotEmpty",containsErrors:undefined,notContainsErrors:undefined,timePeriod:undefined,};const CF_THRESHOLD_CONVERSION_MAP={num:"number",percent:"percentage",max:"value",min:"value",percentile:"percentile",formula:"formula",};const ICON_SET_CONVERSION_MAP={NoIcons:undefined,"3Arrows":"arrows","3ArrowsGray":"arrows","3Symbols":"smiley","3Symbols2":"smiley","3Signs":"dots","3Flags":"dots","3TrafficLights1":"dots","3TrafficLights2":"dots","4Arrows":"arrows","4ArrowsGray":"arrows","4RedToBlack":"dots","4Rating":"smiley","4TrafficLights":"dots","5Arrows":"arrows","5ArrowsGray":"arrows","5Rating":"smiley","5Quarters":"dots","3Stars":"smiley","3Triangles":"arrows","5Boxes":"dots",};const DRAWING_LEGEND_POSITION_CONVERSION_MAP={b:"bottom",t:"top",l:"left",r:"right",tr:"right",};const CHART_TYPE_CONVERSION_MAP={areaChart:undefined,area3DChart:undefined,lineChart:"line",line3DChart:undefined,stockChart:undefined,radarChart:undefined,scatterChart:"scatter",pieChart:"pie",pie3DChart:undefined,doughnutChart:"pie",barChart:"bar",bar3DChart:undefined,ofPieChart:undefined,surfaceChart:undefined,surface3DChart:undefined,bubbleChart:undefined,comboChart:"combo",};const SUBTOTAL_FUNCTION_CONVERSION_MAP={"1":"AVERAGE","2":"COUNT","3":"COUNTA","4":"MAX","5":"MIN","6":"PRODUCT","7":"STDEV","8":"STDEVP","9":"SUM","10":"VAR","11":"VARP","101":"AVERAGE","102":"COUNT","103":"COUNTA","104":"MAX","105":"MIN","106":"PRODUCT","107":"STDEV","108":"STDEVP","109":"SUM","110":"VAR","111":"VARP",};const XLSX_FORMATS_CONVERSION_MAP={0:"",1:"0",2:"0.00",3:"#,#00",4:"#,##0.00",9:"0%",10:"0.00%",11:undefined,12:undefined,13:undefined,14:"m/d/yyyy",15:"m/d/yyyy",16:"m/d/yyyy",17:"m/d/yyyy",18:"hh:mm:ss a",19:"hh:mm:ss a",20:"hhhh:mm:ss",21:"hhhh:mm:ss",22:"m/d/yy h:mm",37:undefined,38:undefined,39:undefined,40:undefined,45:"hhhh:mm:ss",46:"hhhh:mm:ss",47:"hhhh:mm:ss",48:undefined,49:"@",};const XLSX_FORMAT_MAP={"0":1,"0.00":2,"#,#00":3,"#,##0.00":4,"0%":9,"0.00%":10,"0.00E+00":11,"# ?/?":12,"# ??/??":13,"mm-dd-yy":14,"d-mm-yy":15,"mm-yy":16,"mmm-yy":17,"h:mm AM/PM":18,"h:mm:ss AM/PM":19,"h:mm":20,"h:mm:ss":21,"m/d/yy h:mm":22,"#,##0 ;(#,##0)":37,"#,##0 ;[Red](#,##0)":38,"#,##0.00;(#,##0.00)":39,"#,##0.00;[Red](#,##0.00)":40,"mm:ss":45,"[h]:mm:ss":46,"mmss.0":47,"##0.0E+0":48,"@":49,"hh:mm:ss a":19,};const XLSX_INDEXED_COLORS={0:"000000",1:"FFFFFF",2:"FF0000",3:"00FF00",4:"0000FF",5:"FFFF00",6:"FF00FF",7:"00FFFF",8:"000000",9:"FFFFFF",10:"FF0000",11:"00FF00",12:"0000FF",13:"FFFF00",14:"FF00FF",15:"00FFFF",16:"800000",17:"008000",18:"000080",19:"808000",20:"800080",21:"008080",22:"C0C0C0",23:"808080",24:"9999FF",25:"993366",26:"FFFFCC",27:"CCFFFF",28:"660066",29:"FF8080",30:"0066CC",31:"CCCCFF",32:"000080",33:"FF00FF",34:"FFFF00",35:"00FFFF",36:"800080",37:"800000",38:"008080",39:"0000FF",40:"00CCFF",41:"CCFFFF",42:"CCFFCC",43:"FFFF99",44:"99CCFF",45:"FF99CC",46:"CC99FF",47:"FFCC99",48:"3366FF",49:"33CCCC",50:"99CC00",51:"FFCC00",52:"FF9900",53:"FF6600",54:"666699",55:"969696",56:"003366",57:"339966",58:"003300",59:"333300",60:"993300",61:"993366",62:"333399",63:"333333",64:"000000",65:"FFFFFF",};const IMAGE_MIMETYPE_TO_EXTENSION_MAPPING={"image/avif":"avif","image/bmp":"bmp","image/gif":"gif","image/vnd.microsoft.icon":"ico","image/jpeg":"jpeg","image/png":"png","image/tiff":"tiff","image/webp":"webp",};const IMAGE_EXTENSION_TO_MIMETYPE_MAPPING={avif:"image/avif",bmp:"image/bmp",gif:"image/gif",ico:"image/vnd.microsoft.icon",jpeg:"image/jpeg",png:"image/png",tiff:"image/tiff",webp:"image/webp",jpg:"image/jpeg",};function convertColor(xlsxColor){if(!xlsxColor){return undefined;}
let rgb;if(xlsxColor.rgb){rgb=xlsxColor.rgb;}
else if(xlsxColor.auto){rgb=AUTO_COLOR;}
else if(xlsxColor.indexed){rgb=XLSX_INDEXED_COLORS[xlsxColor.indexed];}
else{return undefined;}
rgb=xlsxColorToHEXA(rgb);if(xlsxColor.tint){rgb=applyTint(rgb,xlsxColor.tint);}
rgb=rgb.toUpperCase();if(rgb.length===9&&rgb.endsWith("FF")){rgb=rgb.slice(0,7);}
return rgb;}
function xlsxColorToHEXA(color){if(color.length===6)
return"#"+color+"FF";return"#"+color.slice(2)+color.slice(0,2);}
function applyTint(color,tint){const rgba=colorToRGBA(color);const hsla=rgbaToHSLA(rgba);if(tint<0){hsla.l=hsla.l*(1+tint);}
if(tint>0){hsla.l=hsla.l*(1-tint)+(100-100*(1-tint));}
return rgbaToHex(hslaToRGBA(hsla));}
function hexaToInt(hex){if(hex.length===9){hex=hex.slice(0,7);}
return parseInt(hex.replace("#",""),16);}
const DEFAULT_SYSTEM_COLOR="FF000000";function getRelativePath(from,to){const fromPathParts=from.split("/");const toPathParts=to.split("/");let relPath="";let startIndex=0;for(let i=0;i<fromPathParts.length-1;i++){if(fromPathParts[i]===toPathParts[i]){startIndex++;}
else{relPath+="../";}}
relPath+=toPathParts.slice(startIndex).join("/");return relPath;}
function arrayToObject(array,indexOffset=0){const obj={};for(let i=0;i<array.length;i++){if(array[i]){obj[i+indexOffset]=array[i];}}
return obj;}
function fixXlsxUnicode(str){return str.replace(/_x([0-9a-zA-Z]{4})_/g,(match,code)=>{return String.fromCharCode(parseInt(code,16));});}
function getSheetDataHeader(sheetData,dimension,index){if(dimension==="COL"){if(!sheetData.cols[index]){sheetData.cols[index]={};}
return sheetData.cols[index];}
if(!sheetData.rows[index]){sheetData.rows[index]={};}
return sheetData.rows[index];}
const XLSX_DATE_FORMAT_REGEX=/^(yy|yyyy|m{1,5}|d{1,4}|h{1,2}|s{1,2}|am\/pm|a\/m|\s|-|\/|\.|:)+$/i;function convertXlsxFormat(numFmtId,formats,warningManager){if(numFmtId===0){return undefined;}
let format=XLSX_FORMATS_CONVERSION_MAP[numFmtId]||formats.find((f)=>f.id===numFmtId)?.format;if(format){try{let convertedFormat=format.replace(/\[(.*)-[A-Z0-9]{3}\]/g,"[$1]");convertedFormat=convertedFormat.replace(/\[\$\]/g,"");convertedFormat=convertedFormat.replace(/_.{1}/g,"");convertedFormat=convertedFormat.replace(/\*.{1}/g,"");if(isXlsxDateFormat(convertedFormat)){convertedFormat=convertDateFormat$1(convertedFormat);}
if(isFormatSupported(convertedFormat)){return convertedFormat;}}
catch(e){}}
warningManager.generateNotSupportedWarning(WarningTypes.NumFmtIdNotSupported,format||`nmFmtId ${numFmtId}`);return undefined;}
function isFormatSupported(format){try{formatValue(0,{format,locale:DEFAULT_LOCALE});return true;}
catch(e){return false;}}
function isXlsxDateFormat(format){return XLSX_DATE_FORMAT_REGEX.test(format);}
function convertDateFormat$1(format){format=format.toLowerCase();format=format.replace(/mmmmm/g,"mmm");format=format.replace(/am\/pm|a\/m/g,"a");format=format.replace(/hhhh/g,"hh");format=format.replace(/\bh\b/g,"hh");return format;}
function convertBorders(data,warningManager){const borderArray=data.borders.map((border)=>{addBorderWarnings(border,warningManager);const b={top:convertBorderDescr$1(border.top,warningManager),bottom:convertBorderDescr$1(border.bottom,warningManager),left:convertBorderDescr$1(border.left,warningManager),right:convertBorderDescr$1(border.right,warningManager),};Object.keys(b).forEach((key)=>b[key]===undefined&&delete b[key]);return b;});return arrayToObject(borderArray,1);}
function convertBorderDescr$1(borderDescr,warningManager){if(!borderDescr)
return undefined;addBorderDescrWarnings(borderDescr,warningManager);const style=BORDER_STYLE_CONVERSION_MAP[borderDescr.style];return style?{style,color:convertColor(borderDescr.color)}:undefined;}
function convertStyles(data,warningManager){const stylesArray=data.styles.map((style)=>{return convertStyle({fontStyle:data.fonts[style.fontId],fillStyle:data.fills[style.fillId],alignment:style.alignment,},warningManager);});return arrayToObject(stylesArray,1);}
function convertStyle(styleStruct,warningManager){addStyleWarnings(styleStruct?.fontStyle,styleStruct?.fillStyle,warningManager);addHorizontalAlignmentWarnings(styleStruct?.alignment?.horizontal,warningManager);addVerticalAlignmentWarnings(styleStruct?.alignment?.vertical,warningManager);return{bold:styleStruct.fontStyle?.bold,italic:styleStruct.fontStyle?.italic,strikethrough:styleStruct.fontStyle?.strike,underline:styleStruct.fontStyle?.underline,verticalAlign:styleStruct.alignment?.vertical?V_ALIGNMENT_CONVERSION_MAP[styleStruct.alignment.vertical]:undefined,align:styleStruct.alignment?.horizontal?H_ALIGNMENT_CONVERSION_MAP[styleStruct.alignment.horizontal]:undefined,fillColor:styleStruct.fillStyle?.patternType==="solid"?convertColor(styleStruct.fillStyle?.fgColor):convertColor(styleStruct.fillStyle?.bgColor),textColor:convertColor(styleStruct.fontStyle?.color),fontSize:styleStruct.fontStyle?.size,wrapping:styleStruct.alignment?.wrapText?"wrap":"overflow",};}
function convertFormats(data,warningManager){const formats=[];for(let style of data.styles){const format=convertXlsxFormat(style.numFmtId,data.numFmts,warningManager);if(format){formats[style.numFmtId]=format;}}
return arrayToObject(formats,1);}
function addStyleWarnings(font,fill,warningManager){if(font&&font.name&&!SUPPORTED_FONTS.includes(font.name)){warningManager.generateNotSupportedWarning(WarningTypes.FontNotSupported,font.name,SUPPORTED_FONTS);}
if(fill&&fill.patternType&&!SUPPORTED_FILL_PATTERNS.includes(fill.patternType)){warningManager.generateNotSupportedWarning(WarningTypes.FillStyleNotSupported,fill.patternType,SUPPORTED_FILL_PATTERNS);}}
function addBorderDescrWarnings(borderDescr,warningManager){if(!SUPPORTED_BORDER_STYLES.includes(borderDescr.style)){warningManager.generateNotSupportedWarning(WarningTypes.BorderStyleNotSupported,borderDescr.style,SUPPORTED_BORDER_STYLES);}}
function addBorderWarnings(border,warningManager){if(border.diagonal){warningManager.generateNotSupportedWarning(WarningTypes.DiagonalBorderNotSupported);}}
function addHorizontalAlignmentWarnings(alignment,warningManager){if(alignment&&!SUPPORTED_HORIZONTAL_ALIGNMENTS.includes(alignment)){warningManager.generateNotSupportedWarning(WarningTypes.HorizontalAlignmentNotSupported,alignment,SUPPORTED_HORIZONTAL_ALIGNMENTS);}}
function addVerticalAlignmentWarnings(alignment,warningManager){if(alignment&&!SUPPORTED_VERTICAL_ALIGNMENTS.includes(alignment)){warningManager.generateNotSupportedWarning(WarningTypes.VerticalAlignmentNotSupported,alignment,SUPPORTED_VERTICAL_ALIGNMENTS);}}
function convertConditionalFormats(xlsxCfs,dxfs,warningManager){const cfs=[];let cfId=1;for(let cf of xlsxCfs){if(cf.cfRules.length===0)
continue;addCfConversionWarnings(cf,dxfs,warningManager);const rule=cf.cfRules[0];let operator;const values=[];if(rule.dxfId===undefined&&!(rule.type==="colorScale"||rule.type==="iconSet"))
continue;switch(rule.type){case"aboveAverage":case"containsErrors":case"notContainsErrors":case"dataBar":case"duplicateValues":case"expression":case"top10":case"uniqueValues":case"timePeriod":continue;case"colorScale":const colorScale=convertColorScale(cfId++,cf);if(colorScale){cfs.push(colorScale);}
continue;case"iconSet":const iconSet=convertIconSet(cfId++,cf,warningManager);if(iconSet){cfs.push(iconSet);}
continue;case"containsText":case"notContainsText":case"beginsWith":case"endsWith":if(!rule.text)
continue;operator=CF_TYPE_CONVERSION_MAP[rule.type];values.push(rule.text);break;case"containsBlanks":case"notContainsBlanks":operator=CF_TYPE_CONVERSION_MAP[rule.type];break;case"cellIs":if(!rule.operator||!rule.formula||rule.formula.length===0)
continue;operator=convertCFCellIsOperator(rule.operator);values.push(rule.formula[0]);if(rule.formula.length===2){values.push(rule.formula[1]);}
break;}
if(operator&&rule.dxfId!==undefined){cfs.push({id:(cfId++).toString(),ranges:cf.sqref,stopIfTrue:rule.stopIfTrue,rule:{type:"CellIsRule",operator:operator,values:values,style:convertStyle({fontStyle:dxfs[rule.dxfId].font,fillStyle:dxfs[rule.dxfId].fill},warningManager),},});}}
return cfs;}
function convertColorScale(id,xlsxCf){const scale=xlsxCf.cfRules[0].colorScale;if(!scale||scale.cfvos.length!==scale.colors.length||scale.cfvos.length<2||scale.cfvos.length>3){return undefined;}
const thresholds=[];for(let i=0;i<scale.cfvos.length;i++){thresholds.push({color:hexaToInt(convertColor(scale.colors[i])||"#FFFFFF"),type:CF_THRESHOLD_CONVERSION_MAP[scale.cfvos[i].type],value:scale.cfvos[i].value,});}
const minimum=thresholds[0];const maximum=thresholds.length===2?thresholds[1]:thresholds[2];const midpoint=thresholds.length===3?thresholds[1]:undefined;return{id:id.toString(),stopIfTrue:xlsxCf.cfRules[0].stopIfTrue,ranges:xlsxCf.sqref,rule:{type:"ColorScaleRule",minimum,midpoint,maximum},};}
function convertIconSet(id,xlsxCf,warningManager){const xlsxIconSet=xlsxCf.cfRules[0].iconSet;if(!xlsxIconSet)
return undefined;let cfVos=xlsxIconSet.cfvos;let cfIcons=xlsxIconSet.cfIcons;if(cfVos.length<3||(cfIcons&&cfIcons.length<3)){return undefined;}
if(cfVos.length>3){cfVos=[cfVos[0],cfVos[Math.floor(cfVos.length/2)],cfVos[cfVos.length-1]];}
if(cfIcons&&cfIcons.length>3){cfIcons=[cfIcons[0],cfIcons[Math.floor(cfIcons.length/2)],cfIcons[cfIcons.length-1]];}
const thresholds=[];for(let i=1;i<=2;i++){const type=CF_THRESHOLD_CONVERSION_MAP[cfVos[i].type];if(type==="value"){return undefined;}
thresholds.push({value:cfVos[i].value||"",operator:cfVos[i].gte?"ge":"gt",type:type,});}
let icons={lower:cfIcons?convertIcons(cfIcons[0].iconSet,cfIcons[0].iconId):convertIcons(xlsxIconSet.iconSet,0),middle:cfIcons?convertIcons(cfIcons[1].iconSet,cfIcons[1].iconId):convertIcons(xlsxIconSet.iconSet,1),upper:cfIcons?convertIcons(cfIcons[2].iconSet,cfIcons[2].iconId):convertIcons(xlsxIconSet.iconSet,2),};if(xlsxIconSet.reverse){icons={upper:icons.lower,middle:icons.middle,lower:icons.upper};}
for(let key of Object.keys(icons)){if(!icons[key]){warningManager.generateNotSupportedWarning(WarningTypes.CfIconSetEmptyIconNotSupported);switch(key){case"upper":icons[key]=ICON_SETS.dots.good;break;case"middle":icons[key]=ICON_SETS.dots.neutral;break;case"lower":icons[key]=ICON_SETS.dots.bad;break;}}}
return{id:id.toString(),stopIfTrue:xlsxCf.cfRules[0].stopIfTrue,ranges:xlsxCf.sqref,rule:{type:"IconSetRule",icons:icons,upperInflectionPoint:thresholds[1],lowerInflectionPoint:thresholds[0],},};}
function convertIcons(xlsxIconSet,index){const iconSet=ICON_SET_CONVERSION_MAP[xlsxIconSet];if(!iconSet)
return"";return index===0?ICON_SETS[iconSet].bad:index===1?ICON_SETS[iconSet].neutral:ICON_SETS[iconSet].good;}
function addCfConversionWarnings(cf,dxfs,warningManager){if(cf.cfRules.length>1){warningManager.generateNotSupportedWarning(WarningTypes.MultipleRulesCfNotSupported);}
if(!SUPPORTED_CF_TYPES.includes(cf.cfRules[0].type)){warningManager.generateNotSupportedWarning(WarningTypes.CfTypeNotSupported,cf.cfRules[0].type);}
if(cf.cfRules[0].dxfId){const dxf=dxfs[cf.cfRules[0].dxfId];if(dxf.border){warningManager.generateNotSupportedWarning(WarningTypes.CfFormatBorderNotSupported);}
if(dxf.alignment){warningManager.generateNotSupportedWarning(WarningTypes.CfFormatAlignmentNotSupported);}
if(dxf.numFmt){warningManager.generateNotSupportedWarning(WarningTypes.CfFormatNumFmtNotSupported);}}}
function convertOperator(operator){switch(operator){case"IsNotEmpty":return"notContainsBlanks";case"IsEmpty":return"containsBlanks";case"NotContains":return"notContainsBlanks";default:return operator.charAt(0).toLowerCase()+operator.slice(1);}}
function getCellType(value){switch(typeof value){case"boolean":return"b";case"string":return"str";case"number":return"n";default:return undefined;}}
function convertHeightToExcel(height){return Math.round(HEIGHT_FACTOR*height*100)/100;}
function convertWidthToExcel(width){return Math.round(WIDTH_FACTOR*width*100)/100;}
function convertHeightFromExcel(height){if(!height)
return height;return Math.round((height/HEIGHT_FACTOR)*100)/100;}
function convertWidthFromExcel(width){if(!width)
return width;return Math.round((width/WIDTH_FACTOR)*100)/100;}
function extractStyle(cell,data){let style={};if(cell.style){style=data.styles[cell.style];}
const format=extractFormat(cell,data);const styles={font:{size:style?.fontSize||DEFAULT_FONT_SIZE,color:{rgb:style?.textColor?style.textColor:"000000"},family:2,name:"Arial",},fill:style?.fillColor?{fgColor:{rgb:style.fillColor},}:{reservedAttribute:"none"},numFmt:format?{format:format,id:0}:undefined,border:cell.border||0,alignment:{horizontal:style.align,vertical:style.verticalAlign?V_ALIGNMENT_EXPORT_CONVERSION_MAP[style.verticalAlign]:undefined,wrapText:style.wrapping==="wrap"||undefined,},};styles.font["strike"]=!!style?.strikethrough||undefined;styles.font["underline"]=!!style?.underline||undefined;styles.font["bold"]=!!style?.bold||undefined;styles.font["italic"]=!!style?.italic||undefined;return styles;}
function extractFormat(cell,data){if(cell.format){return data.formats[cell.format];}
return undefined;}
function normalizeStyle(construct,styles){const numFmtId=convertFormat(styles["numFmt"],construct.numFmts);const style={fontId:pushElement(styles.font,construct.fonts),fillId:pushElement(styles.fill,construct.fills),borderId:styles.border,numFmtId,alignment:{vertical:styles.alignment.vertical,horizontal:styles.alignment.horizontal,wrapText:styles.alignment.wrapText,},};return pushElement(style,construct.styles);}
function convertFormat(format,numFmtStructure){if(!format){return 0;}
let formatId=XLSX_FORMAT_MAP[format.format];if(!formatId){formatId=pushElement(format,numFmtStructure)+FIRST_NUMFMT_ID;}
return formatId;}
function addRelsToFile(relsFiles,path,rel){let relsFile=relsFiles.find((file)=>file.path===path);let id;if(!relsFile){id="rId1";relsFiles.push({path,rels:[{...rel,id}]});}
else{id=`rId${(relsFile.rels.length + 1).toString()}`;relsFile.rels.push({...rel,id,});}
return id;}
function pushElement(property,propertyList){let len=propertyList.length;const operator=typeof property==="object"?deepEquals:(a,b)=>a===b;for(let i=0;i<len;i++){if(operator(property,propertyList[i])){return i;}}
propertyList[propertyList.length]=property;return propertyList.length-1;}
const chartIds=[];function convertChartId(chartId){const xlsxId=chartIds.findIndex((id)=>id===chartId);if(xlsxId===-1){chartIds.push(chartId);return chartIds.length;}
return xlsxId+1;}
const imageIds=[];function convertImageId(imageId){const xlsxId=imageIds.findIndex((id)=>id===imageId);if(xlsxId===-1){imageIds.push(imageId);return imageIds.length;}
return xlsxId+1;}
function convertDotValueToEMU(value){const DPI=96;return Math.round((value*914400)/DPI);}
function getRangeSize(reference,defaultSheetIndex,data){let xc=reference;let sheetName=undefined;({xc,sheetName}=splitReference(reference));let rangeSheetIndex;if(sheetName){const index=data.sheets.findIndex((sheet)=>sheet.name===sheetName);if(index<0){throw new Error("Unable to find a sheet with the name "+sheetName);}
rangeSheetIndex=index;}
else{rangeSheetIndex=Number(defaultSheetIndex);}
const zone=toUnboundedZone(xc);if(zone.right===undefined){zone.right=data.sheets[rangeSheetIndex].colNumber;}
if(zone.bottom===undefined){zone.bottom=data.sheets[rangeSheetIndex].rowNumber;}
return(zone.right-zone.left+1)*(zone.bottom-zone.top+1);}
function convertEMUToDotValue(value){const DPI=96;return Math.round((value*DPI)/914400);}
function getColPosition(colIndex,sheetData){let position=0;for(let i=0;i<colIndex;i++){const colAtIndex=sheetData.cols.find((col)=>i>=col.min&&i<=col.max);if(colAtIndex?.width){position+=colAtIndex.width;}
else if(sheetData.sheetFormat?.defaultColWidth){position+=sheetData.sheetFormat.defaultColWidth;}
else{position+=EXCEL_DEFAULT_COL_WIDTH;}}
return position/WIDTH_FACTOR;}
function getRowPosition(rowIndex,sheetData){let position=0;for(let i=0;i<rowIndex;i++){const rowAtIndex=sheetData.rows[i];if(rowAtIndex?.height){position+=rowAtIndex.height;}
else if(sheetData.sheetFormat?.defaultRowHeight){position+=sheetData.sheetFormat.defaultRowHeight;}
else{position+=EXCEL_DEFAULT_ROW_HEIGHT;}}
return position/HEIGHT_FACTOR;}
function convertFigures(sheetData){let id=1;return sheetData.figures.map((figure)=>convertFigure(figure,(id++).toString(),sheetData)).filter(isDefined);}
function convertFigure(figure,id,sheetData){let x1,y1;let height,width;if(figure.anchors.length===1){({x:x1,y:y1}=getPositionFromAnchor(figure.anchors[0],sheetData));width=convertEMUToDotValue(figure.figureSize.cx);height=convertEMUToDotValue(figure.figureSize.cy);}
else{({x:x1,y:y1}=getPositionFromAnchor(figure.anchors[0],sheetData));const{x:x2,y:y2}=getPositionFromAnchor(figure.anchors[1],sheetData);width=x2-x1;height=y2-y1;}
const figureData={id,x:x1,y:y1};if(isChartData(figure.data)){return{...figureData,width,height,tag:"chart",data:convertChartData(figure.data),};}
else if(isImageData(figure.data)){return{...figureData,width:convertEMUToDotValue(figure.data.size.cx),height:convertEMUToDotValue(figure.data.size.cy),tag:"image",data:{path:figure.data.imageSrc,mimetype:figure.data.mimetype,},};}
return undefined;}
function isChartData(data){return"dataSets"in data;}
function isImageData(data){return"imageSrc"in data;}
function convertChartData(chartData){const dataSetsHaveTitle=chartData.dataSets.some((ds)=>"reference"in(ds.label??{}));const labelRange=chartData.labelRange?convertExcelRangeToSheetXC(chartData.labelRange,dataSetsHaveTitle):undefined;const dataSets=chartData.dataSets.map((data)=>{let label=undefined;if(data.label&&"text"in data.label){label=data.label.text;}
return{dataRange:convertExcelRangeToSheetXC(data.range,dataSetsHaveTitle),label,backgroundColor:data.backgroundColor,};});if(chartData.type==="pie"){dataSets.reverse();}
return{dataSets,dataSetsHaveTitle,labelRange,title:chartData.title??{text:""},type:chartData.type,background:convertColor({rgb:chartData.backgroundColor})||"#FFFFFF",legendPosition:chartData.legendPosition,stacked:chartData.stacked||false,aggregated:false,cumulative:chartData.cumulative||false,labelsAsText:false,};}
function convertExcelRangeToSheetXC(range,dataSetsHaveTitle){let{sheetName,xc}=splitReference(range);let zone=toUnboundedZone(xc);if(dataSetsHaveTitle&&zone.bottom!==undefined&&zone.right!==undefined){const height=zone.bottom-zone.top+1;const width=zone.right-zone.left+1;if(height===1){zone={...zone,left:zone.left-1};}
else if(width===1){zone={...zone,top:zone.top-1};}}
const dataXC=zoneToXc(zone);return getFullReference(sheetName,dataXC);}
function getPositionFromAnchor(anchor,sheetData){return{x:getColPosition(anchor.col,sheetData)+convertEMUToDotValue(anchor.colOffset),y:getRowPosition(anchor.row,sheetData)+convertEMUToDotValue(anchor.rowOffset),};}
const externalReferenceRegex=new RegExp(/'?\[([0-9]*)\](.*)'?!(\$?[a-zA-Z]*\$?[0-9]*)/g);const subtotalRegex=new RegExp(/SUBTOTAL\(([0-9]*),/g);const cellRegex=new RegExp(cellReference.source,"ig");function convertFormulasContent(sheet,data){const sfMap=getSharedFormulasMap(sheet);for(let cell of sheet.rows.map((row)=>row.cells).flat()){if(cell?.formula){cell.formula.content=cell.formula.sharedIndex!==undefined&&!cell.formula.content?"="+adaptFormula(cell.xc,sfMap[cell.formula.sharedIndex]):"="+cell.formula.content;cell.formula.content=convertFormula(cell.formula.content,data);}}}
function getSharedFormulasMap(sheet){const formulas={};for(let row of sheet.rows){for(let cell of row.cells){if(cell.formula&&cell.formula.sharedIndex!==undefined&&cell.formula.content){formulas[cell.formula.sharedIndex]={refCellXc:cell.xc,formula:cell.formula.content};}}}
return formulas;}
function convertFormula(formula,data){formula=formula.replace("_xlfn.","");formula=formula.replace(/#REF!/g,"#REF");formula=formula.replace(subtotalRegex,(match,functionId)=>{const convertedFunction=SUBTOTAL_FUNCTION_CONVERSION_MAP[functionId];return convertedFunction?convertedFunction+"(":match;});formula=formula.replace(externalReferenceRegex,(match,externalRefId,sheetName,cellRef)=>{externalRefId=Number(externalRefId)-1;cellRef=cellRef.replace(/\$/g,"");const sheetIndex=data.externalBooks[externalRefId].sheetNames.findIndex((name)=>name===sheetName);if(sheetIndex===-1){return match;}
const externalDataset=data.externalBooks[externalRefId].datasets.find((dataset)=>dataset.sheetId===sheetIndex)?.data;if(!externalDataset){return match;}
const datasetValue=externalDataset&&externalDataset[cellRef];const convertedValue=Number(datasetValue)?datasetValue:`"${datasetValue}"`;return convertedValue||match;});return formula;}
function adaptFormula(targetCell,sf){const refPosition=toCartesian(sf.refCellXc);let newFormula=sf.formula.slice();let match;do{match=cellRegex.exec(newFormula);if(match){const formulaPosition=toCartesian(match[0].replace("$",""));const targetPosition=toCartesian(targetCell);const rangePart={colFixed:match[0].startsWith("$"),rowFixed:match[0].includes("$",1),};const offset={col:targetPosition.col-refPosition.col,row:targetPosition.row-refPosition.row,};const offsettedPosition={col:rangePart.colFixed?formulaPosition.col:formulaPosition.col+offset.col,row:rangePart.rowFixed?formulaPosition.row:formulaPosition.row+offset.row,};newFormula=newFormula.slice(0,match.index)+
toXC(offsettedPosition.col,offsettedPosition.row,rangePart)+
newFormula.slice(match.index+match[0].length);}}while(match);return newFormula;}
function convertSheets(data,warningManager){return data.sheets.map((sheet)=>{convertFormulasContent(sheet,data);const sheetDims=getSheetDims(sheet);const sheetOptions=sheet.sheetViews[0];const rowHeaderGroups=convertHeaderGroup(sheet,"ROW",sheetDims[1]);const colHeaderGroups=convertHeaderGroup(sheet,"COL",sheetDims[0]);return{id:sheet.sheetName,areGridLinesVisible:sheetOptions?sheetOptions.showGridLines:true,name:sheet.sheetName,colNumber:sheetDims[0],rowNumber:sheetDims[1],...convertCells(sheet,data,sheetDims,warningManager),merges:sheet.merges,cols:convertCols(sheet,sheetDims[0],colHeaderGroups),rows:convertRows(sheet,sheetDims[1],rowHeaderGroups),conditionalFormats:convertConditionalFormats(sheet.cfs,data.dxfs,warningManager),figures:convertFigures(sheet),isVisible:sheet.isVisible,panes:sheetOptions?{xSplit:sheetOptions.pane.xSplit,ySplit:sheetOptions.pane.ySplit}:{xSplit:0,ySplit:0},tables:[],headerGroups:{COL:colHeaderGroups,ROW:rowHeaderGroups},color:convertColor(sheet.sheetProperties?.tabColor),};});}
function convertCols(sheet,numberOfCols,headerGroups){const cols={};for(let i=1;i<numberOfCols+1;i++){const col=sheet.cols.find((col)=>col.min<=i&&i<=col.max);let colSize;if(col&&col.width)
colSize=col.width;else if(sheet.sheetFormat?.defaultColWidth)
colSize=sheet.sheetFormat.defaultColWidth;else
colSize=EXCEL_DEFAULT_COL_WIDTH;const colIndex=i-1;const isColFolded=headerGroups.some((group)=>group.isFolded&&group.start<=colIndex&&colIndex<=group.end);cols[colIndex]={size:convertWidthFromExcel(colSize),isHidden:!isColFolded&&col?.hidden,};}
return cols;}
function convertRows(sheet,numberOfRows,headerGroups){const rows={};for(let i=1;i<numberOfRows+1;i++){const row=sheet.rows.find((row)=>row.index===i);let rowSize;if(row&&row.height)
rowSize=row.height;else if(sheet.sheetFormat?.defaultRowHeight)
rowSize=sheet.sheetFormat.defaultRowHeight;else
rowSize=EXCEL_DEFAULT_ROW_HEIGHT;const rowIndex=i-1;const isRowFolded=headerGroups.some((group)=>group.isFolded&&group.start<=rowIndex&&rowIndex<=group.end);rows[rowIndex]={size:convertHeightFromExcel(rowSize),isHidden:!isRowFolded&&row?.hidden,};}
return rows;}
function convertSharedStrings(xlsxSharedStrings){return xlsxSharedStrings.map((str)=>str.replace(/\n/g,""));}
function convertCells(sheet,data,sheetDims,warningManager){const cells={};const styles={};const formats={};const borders={};const sharedStrings=convertSharedStrings(data.sharedStrings);const hyperlinkMap=sheet.hyperlinks.reduce((map,link)=>{map[link.xc]=link;return map;},{});for(let row of sheet.rows){for(let cell of row.cells){cells[cell.xc]={content:getCellValue(cell,hyperlinkMap,sharedStrings,warningManager),};if(cell.styleIndex){styles[cell.xc]=cell.styleIndex+1;formats[cell.xc]=data.styles[cell.styleIndex].numFmtId+1;borders[cell.xc]=data.styles[cell.styleIndex].borderId+1;}}}
for(let row of sheet.rows.filter((row)=>row.styleIndex)){for(let colIndex=1;colIndex<=sheetDims[0];colIndex++){const xc=toXC(colIndex-1,row.index-1);let cell=cells[xc];if(!cell){cell={};cells[xc]=cell;}
styles[xc]??=row.styleIndex+1;borders[xc]??=data.styles[row.styleIndex].borderId+1;formats[xc]??=data.styles[row.styleIndex].numFmtId+1;}}
for(let col of sheet.cols.filter((col)=>col.styleIndex)){for(let colIndex=col.min;colIndex<=Math.min(col.max,sheetDims[0]);colIndex++){for(let rowIndex=1;rowIndex<=sheetDims[1];rowIndex++){const xc=toXC(colIndex-1,rowIndex-1);let cell=cells[xc];if(!cell){cell={};cells[xc]=cell;}
styles[xc]??=col.styleIndex+1;borders[xc]??=data.styles[col.styleIndex].borderId+1;formats[xc]??=data.styles[col.styleIndex].numFmtId+1;}}}
return{cells,styles,formats,borders};}
function getCellValue(cell,hyperLinksMap,sharedStrings,warningManager){let cellValue;switch(cell.type){case"sharedString":const ssIndex=parseInt(cell.value,10);cellValue=sharedStrings[ssIndex];break;case"boolean":cellValue=Number(cell.value)?"TRUE":"FALSE";break;case"date":case"error":case"inlineStr":case"number":case"str":cellValue=cell.value;break;}
if(cellValue&&hyperLinksMap[cell.xc]){cellValue=convertHyperlink(hyperLinksMap[cell.xc],cellValue,warningManager);}
if(cell.formula){cellValue=cell.formula.content;}
return cellValue;}
function convertHyperlink(link,cellValue,warningManager){const label=link.display||cellValue;if(!link.relTarget&&!link.location){warningManager.generateNotSupportedWarning(WarningTypes.BadlyFormattedHyperlink);}
const url=link.relTarget?link.relTarget:buildSheetLink(splitReference(link.location).sheetName);return markdownLink(label,url);}
function getSheetDims(sheet){const dims=[0,0];for(let row of sheet.rows){dims[0]=Math.max(dims[0],largeMax(row.cells.map((cell)=>toCartesian(cell.xc).col)));dims[1]=Math.max(dims[1],row.index);}
dims[0]=Math.max(dims[0],EXCEL_IMPORT_DEFAULT_NUMBER_OF_COLS);dims[1]=Math.max(dims[1],EXCEL_IMPORT_DEFAULT_NUMBER_OF_ROWS);return dims;}
function convertHeaderGroup(sheet,dim,numberOfHeaders){const outlineProperties=sheet?.sheetProperties?.outlinePr;const headerGroups=[];let currentLayer=0;for(let i=0;i<numberOfHeaders;i++){const header=getHeader(sheet,dim,i);const headerLayer=header?.outlineLevel||0;if(headerLayer>currentLayer){const collapseFlagAfter=(dim==="ROW"?outlineProperties?.summaryBelow:outlineProperties?.summaryRight)??true;const group=computeHeaderGroup(sheet,dim,i,collapseFlagAfter);if(group){headerGroups.push(group);}}
currentLayer=headerLayer;}
return headerGroups;}
function computeHeaderGroup(sheet,dim,startIndex,collapseFlagAfter){const startHeader=getHeader(sheet,dim,startIndex);const startLayer=startHeader?.outlineLevel;if(!startLayer||!startLayer){return undefined;}
let currentLayer=startLayer;let currentIndex=startIndex;let currentHeader=startHeader;while(currentHeader&&currentLayer>=startLayer){currentIndex++;currentHeader=getHeader(sheet,dim,currentIndex);currentLayer=currentHeader?.outlineLevel||0;}
const start=startIndex;const end=currentIndex-1;const collapseFlagHeader=collapseFlagAfter?getHeader(sheet,dim,end+1):getHeader(sheet,dim,start-1);const isFolded=collapseFlagHeader?.collapsed||false;return{start:start-1,end:end-1,isFolded};}
function getHeader(sheet,dim,index){return"COL"===dim?sheet.cols.find((col)=>col.min<=index&&index<=col.max):sheet.rows.find((row)=>row.index===index);}
const TABLE_STYLE_CATEGORIES={light:_t("Light"),medium:_t("Medium"),dark:_t("Dark"),custom:_t("Custom"),};const DEFAULT_TABLE_CONFIG={hasFilters:true,totalRow:false,firstColumn:false,lastColumn:false,numberOfHeaders:1,bandedRows:true,bandedColumns:false,automaticAutofill:true,styleId:"TableStyleMedium2",};function generateTableColorSet(name,highlightColor){return{coloredText:darkenColor(highlightColor,0.3),light:lightenColor(highlightColor,0.8),medium:lightenColor(highlightColor,0.6),dark:darkenColor(highlightColor,0.3),mediumBorder:lightenColor(highlightColor,0.45),highlight:highlightColor,name,};}
const COLOR_SETS={black:{name:_t("Black"),coloredText:"#000000",light:"#D9D9D9",medium:"#A6A6A6",dark:"#404040",mediumBorder:"#000000",highlight:"#000000",},lightBlue:generateTableColorSet(_t("Light blue"),"#346B90"),red:generateTableColorSet(_t("Red"),"#C53628"),lightGreen:generateTableColorSet(_t("Light green"),"#748747"),purple:generateTableColorSet(_t("Purple"),"#6C4E65"),gray:{name:_t("Gray"),coloredText:"#666666",light:"#EEEEEE",medium:"#DDDDDD",dark:"#767676",mediumBorder:"#D0D0D0",highlight:"#A9A9A9",},orange:generateTableColorSet(_t("Orange"),"#C37034"),};const DARK_COLOR_SETS={black:COLOR_SETS.black,orangeBlue:{...COLOR_SETS.lightBlue,highlight:COLOR_SETS.orange.highlight},purpleGreen:{...COLOR_SETS.lightGreen,highlight:COLOR_SETS.purple.highlight},redBlue:{...COLOR_SETS.lightBlue,highlight:COLOR_SETS.red.highlight},};const lightColoredText=(colorSet)=>({category:"light",templateName:"lightColoredText",primaryColor:colorSet.highlight,wholeTable:{style:{textColor:colorSet.coloredText},border:{top:{color:colorSet.highlight,style:"thin"},bottom:{color:colorSet.highlight,style:"thin"},},},headerRow:{border:{bottom:{color:colorSet.highlight,style:"thin"}}},totalRow:{border:{top:{color:colorSet.highlight,style:"thin"}}},firstRowStripe:{style:{fillColor:colorSet.light}},});const lightWithHeader=(colorSet)=>({category:"light",templateName:"lightWithHeader",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.highlight,style:"thin"},bottom:{color:colorSet.highlight,style:"thin"},left:{color:colorSet.highlight,style:"thin"},right:{color:colorSet.highlight,style:"thin"},},},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},border:{bottom:{color:colorSet.highlight,style:"thin"}},},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{border:{bottom:{color:colorSet.highlight,style:"thin"}}},secondRowStripe:{border:{bottom:{color:colorSet.highlight,style:"thin"}}},});const lightAllBorders=(colorSet)=>({category:"light",templateName:"lightAllBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.highlight,style:"thin"},bottom:{color:colorSet.highlight,style:"thin"},left:{color:colorSet.highlight,style:"thin"},right:{color:colorSet.highlight,style:"thin"},horizontal:{color:colorSet.highlight,style:"thin"},vertical:{color:colorSet.highlight,style:"thin"},},},headerRow:{border:{bottom:{color:colorSet.highlight,style:"medium"}}},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{style:{fillColor:colorSet.light}},firstColumnStripe:{style:{fillColor:colorSet.light}},});const mediumBandedBorders=(colorSet)=>({category:"medium",templateName:"mediumBandedBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.mediumBorder,style:"thin"},bottom:{color:colorSet.mediumBorder,style:"thin"},left:{color:colorSet.mediumBorder,style:"thin"},right:{color:colorSet.mediumBorder,style:"thin"},horizontal:{color:colorSet.mediumBorder,style:"thin"},},},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{style:{fillColor:colorSet.light}},firstColumnStripe:{style:{fillColor:colorSet.light}},});const mediumWhiteBorders=(colorSet)=>({category:"medium",templateName:"mediumWhiteBorders",primaryColor:colorSet.highlight,wholeTable:{border:{horizontal:{color:"#FFFFFF",style:"thin"},vertical:{color:"#FFFFFF",style:"thin"},},style:{fillColor:colorSet.light},},headerRow:{border:{bottom:{color:"#FFFFFF",style:"thick"}},style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},},totalRow:{border:{top:{color:"#FFFFFF",style:"thick"}},style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},},firstColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},lastColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},firstRowStripe:{style:{fillColor:colorSet.medium}},firstColumnStripe:{style:{fillColor:colorSet.medium}},});const mediumMinimalBorders=(colorSet)=>({category:"medium",templateName:"mediumMinimalBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:"#000000",style:"medium"},bottom:{color:"#000000",style:"medium"},},},totalRow:{border:{top:{color:"#000000",style:"medium"}}},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},border:{bottom:{color:"#000000",style:"medium"}},},firstColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},lastColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},firstRowStripe:{style:{fillColor:COLOR_SETS.black.light}},firstColumnStripe:{style:{fillColor:COLOR_SETS.black.light}},});const mediumAllBorders=(colorSet)=>({category:"medium",templateName:"mediumAllBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.mediumBorder,style:"thin"},bottom:{color:colorSet.mediumBorder,style:"thin"},left:{color:colorSet.mediumBorder,style:"thin"},right:{color:colorSet.mediumBorder,style:"thin"},horizontal:{color:colorSet.mediumBorder,style:"thin"},vertical:{color:colorSet.mediumBorder,style:"thin"},},style:{fillColor:colorSet.light},},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{style:{fillColor:colorSet.medium}},firstColumnStripe:{style:{fillColor:colorSet.medium}},});const dark=(colorSet)=>({category:"dark",templateName:"dark",primaryColor:colorSet.highlight,wholeTable:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},totalRow:{style:{fillColor:colorSet.dark,textColor:"#FFFFFF"},border:{top:{color:"#FFFFFF",style:"thick"}},},headerRow:{style:{fillColor:"#000000"},border:{bottom:{color:"#FFFFFF",style:"thick"}},},firstColumn:{style:{fillColor:colorSet.dark},border:{right:{color:"#FFFFFF",style:"thick"}},},lastColumn:{style:{fillColor:colorSet.dark},border:{left:{color:"#FFFFFF",style:"thick"}},},firstRowStripe:{style:{fillColor:colorSet.dark}},firstColumnStripe:{style:{fillColor:colorSet.dark}},});const darkNoBorders=(colorSet)=>({category:"dark",templateName:"darkNoBorders",primaryColor:colorSet.highlight,wholeTable:{style:{fillColor:colorSet.light}},totalRow:{border:{top:{color:"#000000",style:"medium"}}},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},firstRowStripe:{style:{fillColor:colorSet.medium}},firstColumnStripe:{style:{fillColor:colorSet.medium}},});const darkTemplateInBlack=dark(COLOR_SETS.black);darkTemplateInBlack.wholeTable.style.fillColor="#737373";const mediumMinimalBordersInBlack=mediumMinimalBorders(COLOR_SETS.black);mediumMinimalBordersInBlack.wholeTable.border={...mediumMinimalBordersInBlack.wholeTable.border,left:{color:"#000000",style:"thin"},right:{color:"#000000",style:"thin"},horizontal:{color:"#000000",style:"thin"},vertical:{color:"#000000",style:"thin"},};function buildPreset(name,template,colorSet){return{...template(colorSet),displayName:`${colorSet.name}, ${name}`};}
const TABLE_PRESETS={None:{category:"light",templateName:"none",primaryColor:"",displayName:"none"},TableStyleLight1:buildPreset("TableStyleLight1",lightColoredText,COLOR_SETS.black),TableStyleLight2:buildPreset("TableStyleLight2",lightColoredText,COLOR_SETS.lightBlue),TableStyleLight3:buildPreset("TableStyleLight3",lightColoredText,COLOR_SETS.red),TableStyleLight4:buildPreset("TableStyleLight4",lightColoredText,COLOR_SETS.lightGreen),TableStyleLight5:buildPreset("TableStyleLight5",lightColoredText,COLOR_SETS.purple),TableStyleLight6:buildPreset("TableStyleLight6",lightColoredText,COLOR_SETS.gray),TableStyleLight7:buildPreset("TableStyleLight7",lightColoredText,COLOR_SETS.orange),TableStyleLight8:buildPreset("TableStyleLight8",lightWithHeader,COLOR_SETS.black),TableStyleLight9:buildPreset("TableStyleLight9",lightWithHeader,COLOR_SETS.lightBlue),TableStyleLight10:buildPreset("TableStyleLight10",lightWithHeader,COLOR_SETS.red),TableStyleLight11:buildPreset("TableStyleLight11",lightWithHeader,COLOR_SETS.lightGreen),TableStyleLight12:buildPreset("TableStyleLight12",lightWithHeader,COLOR_SETS.purple),TableStyleLight13:buildPreset("TableStyleLight13",lightWithHeader,COLOR_SETS.gray),TableStyleLight14:buildPreset("TableStyleLight14",lightWithHeader,COLOR_SETS.orange),TableStyleLight15:buildPreset("TableStyleLight15",lightAllBorders,COLOR_SETS.black),TableStyleLight16:buildPreset("TableStyleLight16",lightAllBorders,COLOR_SETS.lightBlue),TableStyleLight17:buildPreset("TableStyleLight17",lightAllBorders,COLOR_SETS.red),TableStyleLight18:buildPreset("TableStyleLight18",lightAllBorders,COLOR_SETS.lightGreen),TableStyleLight19:buildPreset("TableStyleLight19",lightAllBorders,COLOR_SETS.purple),TableStyleLight20:buildPreset("TableStyleLight20",lightAllBorders,COLOR_SETS.gray),TableStyleLight21:buildPreset("TableStyleLight21",lightAllBorders,COLOR_SETS.orange),TableStyleMedium1:buildPreset("TableStyleMedium1",mediumBandedBorders,COLOR_SETS.black),TableStyleMedium2:buildPreset("TableStyleMedium2",mediumBandedBorders,COLOR_SETS.lightBlue),TableStyleMedium3:buildPreset("TableStyleMedium3",mediumBandedBorders,COLOR_SETS.red),TableStyleMedium4:buildPreset("TableStyleMedium4",mediumBandedBorders,COLOR_SETS.lightGreen),TableStyleMedium5:buildPreset("TableStyleMedium5",mediumBandedBorders,COLOR_SETS.purple),TableStyleMedium6:buildPreset("TableStyleMedium6",mediumBandedBorders,COLOR_SETS.gray),TableStyleMedium7:buildPreset("TableStyleMedium7",mediumBandedBorders,COLOR_SETS.orange),TableStyleMedium8:buildPreset("TableStyleMedium8",mediumWhiteBorders,COLOR_SETS.black),TableStyleMedium9:buildPreset("TableStyleMedium9",mediumWhiteBorders,COLOR_SETS.lightBlue),TableStyleMedium10:buildPreset("TableStyleMedium10",mediumWhiteBorders,COLOR_SETS.red),TableStyleMedium11:buildPreset("TableStyleMedium11",mediumWhiteBorders,COLOR_SETS.lightGreen),TableStyleMedium12:buildPreset("TableStyleMedium12",mediumWhiteBorders,COLOR_SETS.purple),TableStyleMedium13:buildPreset("TableStyleMedium13",mediumWhiteBorders,COLOR_SETS.gray),TableStyleMedium14:buildPreset("TableStyleMedium14",mediumWhiteBorders,COLOR_SETS.orange),TableStyleMedium15:{...mediumMinimalBordersInBlack,displayName:"Black, TableStyleMedium15"},TableStyleMedium16:buildPreset("TableStyleMedium16",mediumMinimalBorders,COLOR_SETS.lightBlue),TableStyleMedium17:buildPreset("TableStyleMedium17",mediumMinimalBorders,COLOR_SETS.red),TableStyleMedium18:buildPreset("TableStyleMedium18",mediumMinimalBorders,COLOR_SETS.lightGreen),TableStyleMedium19:buildPreset("TableStyleMedium19",mediumMinimalBorders,COLOR_SETS.purple),TableStyleMedium20:buildPreset("TableStyleMedium20",mediumMinimalBorders,COLOR_SETS.gray),TableStyleMedium21:buildPreset("TableStyleMedium21",mediumMinimalBorders,COLOR_SETS.orange),TableStyleMedium22:buildPreset("TableStyleMedium22",mediumAllBorders,COLOR_SETS.black),TableStyleMedium23:buildPreset("TableStyleMedium23",mediumAllBorders,COLOR_SETS.lightBlue),TableStyleMedium24:buildPreset("TableStyleMedium24",mediumAllBorders,COLOR_SETS.red),TableStyleMedium25:buildPreset("TableStyleMedium25",mediumAllBorders,COLOR_SETS.lightGreen),TableStyleMedium26:buildPreset("TableStyleMedium26",mediumAllBorders,COLOR_SETS.purple),TableStyleMedium27:buildPreset("TableStyleMedium27",mediumAllBorders,COLOR_SETS.gray),TableStyleMedium28:buildPreset("TableStyleMedium28",mediumAllBorders,COLOR_SETS.orange),TableStyleDark1:{...darkTemplateInBlack,displayName:"Black, TableStyleDark1"},TableStyleDark2:buildPreset("TableStyleDark2",dark,COLOR_SETS.lightBlue),TableStyleDark3:buildPreset("TableStyleDark3",dark,COLOR_SETS.red),TableStyleDark4:buildPreset("TableStyleDark4",dark,COLOR_SETS.lightGreen),TableStyleDark5:buildPreset("TableStyleDark5",dark,COLOR_SETS.purple),TableStyleDark6:buildPreset("TableStyleDark6",dark,COLOR_SETS.gray),TableStyleDark7:buildPreset("TableStyleDark7",dark,COLOR_SETS.orange),TableStyleDark8:buildPreset("TableStyleDark8",darkNoBorders,DARK_COLOR_SETS.black),TableStyleDark9:buildPreset("TableStyleDark9",darkNoBorders,DARK_COLOR_SETS.redBlue),TableStyleDark10:buildPreset("TableStyleDark10",darkNoBorders,DARK_COLOR_SETS.purpleGreen),TableStyleDark11:buildPreset("TableStyleDark11",darkNoBorders,DARK_COLOR_SETS.orangeBlue),};const TABLE_STYLES_TEMPLATES={none:()=>({category:"none",templateName:"none",primaryColor:"",name:"none"}),lightColoredText:lightColoredText,lightAllBorders:lightAllBorders,mediumAllBorders:mediumAllBorders,lightWithHeader:lightWithHeader,mediumBandedBorders:mediumBandedBorders,mediumMinimalBorders:mediumMinimalBorders,darkNoBorders:darkNoBorders,mediumWhiteBorders:mediumWhiteBorders,dark:dark,};function buildTableStyle(name,templateName,primaryColor){const colorSet=generateTableColorSet("",primaryColor);return{...TABLE_STYLES_TEMPLATES[templateName](colorSet),category:"custom",displayName:name,};}
function convertTables(convertedData,xlsxData){for(const xlsxSheet of xlsxData.sheets){const sheet=convertedData.sheets.find((sheet)=>sheet.name===xlsxSheet.sheetName);if(!sheet)
continue;if(!sheet.tables)
sheet.tables=[];for(const table of xlsxSheet.tables){sheet.tables.push({range:table.ref,config:convertTableConfig(table)});}
for(const pivotTable of xlsxSheet.pivotTables){sheet.tables.push({range:pivotTable.location.ref,config:convertPivotTableConfig(pivotTable),});}}
convertTableFormulaReferences(convertedData.sheets,xlsxData.sheets);}
function convertTableConfig(table){const styleId=table.style?.name||"";return{hasFilters:table.autoFilter!==undefined,numberOfHeaders:table.headerRowCount,totalRow:table.totalsRowCount>0,firstColumn:table.style?.showFirstColumn||false,lastColumn:table.style?.showLastColumn||false,bandedRows:table.style?.showRowStripes||false,bandedColumns:table.style?.showColumnStripes||false,styleId:TABLE_PRESETS[styleId]?styleId:DEFAULT_TABLE_CONFIG.styleId,};}
function convertPivotTableConfig(pivotTable){return{hasFilters:false,numberOfHeaders:pivotTable.location.firstDataRow,totalRow:pivotTable.rowGrandTotals,firstColumn:true,lastColumn:pivotTable.style?.showLastColumn||false,bandedRows:pivotTable.style?.showRowStripes||false,bandedColumns:pivotTable.style?.showColStripes||false,styleId:DEFAULT_TABLE_CONFIG.styleId,};}
function convertTableFormulaReferences(convertedSheets,xlsxSheets){for(let sheet of convertedSheets){const tables=xlsxSheets.find((s)=>s.sheetName===sheet.name).tables;for(let table of tables){const tabRef=table.name+"[";for(let position of positions(toZone(table.ref))){const xc=toXC(position.col,position.row);const cell=sheet.cells[xc];if(cell&&cell.content&&cell.content.startsWith("=")){let refIndex;while((refIndex=cell.content.indexOf(tabRef))!==-1){let reference=cell.content.slice(refIndex+tabRef.length);let endIndex=reference.indexOf("]");if(reference.startsWith(`[`)){endIndex=reference.indexOf("]",endIndex+1);endIndex=reference.indexOf("]",endIndex+1);}
reference=reference.slice(0,endIndex);const convertedRef=convertTableReference(reference,table,xc);cell.content=cell.content.slice(0,refIndex)+
convertedRef+
cell.content.slice(tabRef.length+refIndex+endIndex+1);}}}}}}
function convertTableReference(expr,table,cellXc){const refElements=expr.split(",");const tableZone=toZone(table.ref);const refZone={...tableZone};let isReferencedZoneValid=true;if(refElements.length===1){const colRelativeIndex=table.cols.findIndex((col)=>col.name===refElements[0]);refZone.left=refZone.right=colRelativeIndex+tableZone.left;if(table.headerRowCount){refZone.top+=table.headerRowCount;}
if(table.totalsRowCount){refZone.bottom-=1;}}
else{switch(refElements[0].slice(1,refElements[0].length-1)){case"#All":refZone.top=table.headerRowCount?tableZone.top+table.headerRowCount:tableZone.top;refZone.bottom=tableZone.bottom;break;case"#Data":refZone.top=table.headerRowCount?tableZone.top+table.headerRowCount:tableZone.top;refZone.bottom=table.totalsRowCount?tableZone.bottom+1:tableZone.bottom;break;case"#This Row":refZone.top=refZone.bottom=toCartesian(cellXc).row;break;case"#Headers":refZone.top=refZone.bottom=tableZone.top;if(!table.headerRowCount){isReferencedZoneValid=false;}
break;case"#Totals":refZone.top=refZone.bottom=tableZone.bottom;if(!table.totalsRowCount){isReferencedZoneValid=false;}
break;}
const colRef=refElements[1].slice(1,refElements[1].length-1);const colRelativeIndex=table.cols.findIndex((col)=>col.name===colRef);refZone.left=refZone.right=colRelativeIndex+tableZone.left;}
if(!isReferencedZoneValid){return CellErrorType.InvalidReference;}
return refZone.top!==refZone.bottom?zoneToXc(refZone):toXC(refZone.left,refZone.top);}
function createXMLFile(doc,path,contentType){return{content:new XMLSerializer().serializeToString(doc),path,contentType,};}
function xmlEscape(str){return(String(str).replace(/\&/g,"&amp;").replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/\"/g,"&quot;").replace(/\'/g,"&apos;").replace(/[\x00-\x08\x0B\x0C\x0E-\x1F]/g,""));}
function formatAttributes(attrs){return new XMLString(attrs.map(([key,val])=>`${key}="${xmlEscape(val)}"`).join(" "));}
function parseXML(xmlString,mimeType="text/xml"){const document=new DOMParser().parseFromString(xmlString.toString(),mimeType);const parserError=document.querySelector("parsererror");if(parserError){const errorString=parserError.innerHTML;const lineNumber=parseInt(errorString.split(":")[0],10);const xmlStringArray=xmlString.toString().trim().split("\n");const xmlPreview=xmlStringArray.slice(Math.max(lineNumber-3,0),Math.min(lineNumber+2,xmlStringArray.length)).join("\n");throw new Error(`XML string could not be parsed: ${errorString}\n${xmlPreview}`);}
return document;}
function convertBorderDescr(descr){if(!descr){return undefined;}
return{style:descr.style,color:{rgb:descr.color},};}
function getDefaultXLSXStructure(data){const xlsxBorders=Object.values(data.borders).map((border)=>{return{left:convertBorderDescr(border.left),right:convertBorderDescr(border.right),bottom:convertBorderDescr(border.bottom),top:convertBorderDescr(border.top),};});const borders=[{},...xlsxBorders];return{relsFiles:[],sharedStrings:[],styles:[{fontId:0,fillId:0,numFmtId:0,borderId:0,alignment:{},},],fonts:[{size:DEFAULT_FONT_SIZE,family:2,color:{rgb:"000000"},name:"Arial",},],fills:[{reservedAttribute:"none"},{reservedAttribute:"gray125"}],borders,numFmts:[],dxfs:[],};}
function createOverride(partName,contentType){return escapeXml`
    <Override ContentType="${contentType}" PartName="${partName}" />
  `;}
function createDefaultXMLElement(extension,contentType){return escapeXml`
    <Default Extension="${extension}" ContentType="${contentType}" />
  `;}
function joinXmlNodes(xmlNodes){return new XMLString(xmlNodes.join("\n"));}
function escapeXml(strings,...expressions){let str=[strings[0]];for(let i=0;i<expressions.length;i++){const value=expressions[i]instanceof XMLString?expressions[i]:xmlEscape(expressions[i]);str.push(value+strings[i+1]);}
return new XMLString(concat(str));}
function removeTagEscapedNamespaces(tag){return tag.replace(/NAMESPACE.*NAMESPACE(.*)/,"$1");}
function escapeTagNamespaces(str){return str.replaceAll(/(<\/?)([a-zA-Z0-9]+):([a-zA-Z0-9]+)/g,"$1"+"NAMESPACE"+"$2"+"NAMESPACE"+"$3");}
function escapeQueryNameSpaces(query){return query.replaceAll(/([a-zA-Z0-9]+):([a-zA-Z0-9]+)/g,"NAMESPACE"+"$1"+"NAMESPACE"+"$2");}
class AttributeValue{value;constructor(value){this.value=value;}
asString(){return fixXlsxUnicode(String(this.value));}
asBool(){if(this.value==="true")
return true;if(this.value==="false")
return false;return Boolean(Number(this.value));}
asNum(){return Number(this.value);}}
class XlsxBaseExtractor{rootFile;xlsxFileStructure;warningManager;relationships;currentFile=undefined;constructor(rootFile,xlsxStructure,warningManager){this.rootFile=rootFile;this.currentFile=rootFile.file.fileName;this.xlsxFileStructure=xlsxStructure;this.warningManager=warningManager;this.relationships={};if(rootFile.rels){this.extractRelationships(rootFile.rels).map((rel)=>{this.relationships[rel.id]=rel;});}}
extractRelationships(relFile){return this.mapOnElements({parent:relFile.xml,query:"Relationship"},(relationshipElement)=>{return{id:this.extractAttr(relationshipElement,"Id",{required:true}).asString(),target:this.extractAttr(relationshipElement,"Target",{required:true}).asString(),type:this.extractAttr(relationshipElement,"Type",{required:true}).asString(),};});}
getListOfXMLFiles(){const XMLFiles=Object.entries(this.xlsxFileStructure).filter(([key])=>key!=="images").map(([_,value])=>value).flat().filter(isDefined);return XMLFiles;}
mapOnElements(args,fct){const ret=[];const oldWorkingDocument=this.currentFile;let elements;if(args.children){const children=this.querySelector(args.parent,args.query)?.children;elements=children?children:[];}
else{elements=this.querySelectorAll(args.parent,args.query);}
if(elements){for(let element of elements){try{ret.push(fct(element));}
catch(e){this.catchErrorOnElement(e,element);}}}
this.currentFile=oldWorkingDocument;return ret;}
catchErrorOnElement(error,onElement){const errorMsg=onElement?`Error when parsing an element <${onElement.tagName}> of file ${this.currentFile}, skip this element. \n${error.stack}`:`Error when parsing file ${this.currentFile}.`;this.warningManager.addParsingWarning([errorMsg,error.message].join("\n"));}
extractAttr(e,attName,optionalArgs){const attribute=e.attributes[attName];if(!attribute)
this.handleMissingValue(e,`attribute "${attName}"`,optionalArgs);const value=attribute?.value?attribute.value:optionalArgs?.default;return(value===undefined?undefined:new AttributeValue(value));}
extractTextContent(element,optionalArgs){if(optionalArgs?.default!==undefined&&typeof optionalArgs.default!=="string"){throw new Error("extractTextContent default value should be a string");}
const shouldPreserveSpaces=element?.attributes["xml:space"]?.value==="preserve";let textContent=element?.textContent;if(!element||textContent===null){this.handleMissingValue(element,`text content`,optionalArgs);}
if(textContent){textContent=shouldPreserveSpaces?textContent:textContent.trim();}
return(textContent?fixXlsxUnicode(textContent):optionalArgs?.default);}
extractChildAttr(e,childRef,attName,optionalArgs){let child;if(typeof childRef==="number"){child=e.children[childRef];}
else{child=this.querySelector(e,childRef);}
if(!child){this.handleMissingValue(e,typeof childRef==="number"?`child at index ${childRef}`:`child <${childRef}>`,optionalArgs);}
const value=child?this.extractAttr(child,attName,optionalArgs)?.asString():optionalArgs?.default;return(value!==undefined?new AttributeValue(value):undefined);}
extractChildTextContent(e,childRef,optionalArgs){if(optionalArgs?.default!==undefined&&typeof optionalArgs.default!=="string"){throw new Error("extractTextContent default value should be a string");}
let child=this.querySelector(e,childRef);if(!child){this.handleMissingValue(e,`child <${childRef}>`,optionalArgs);}
return(child?this.extractTextContent(child,optionalArgs):optionalArgs?.default);}
handleMissingValue(parentElement,missingElementName,optionalArgs){if(optionalArgs?.required){if(optionalArgs?.default){this.warningManager.addParsingWarning(`Missing required ${missingElementName} in element <${parentElement.tagName}> of ${this.currentFile}, replacing it by the default value ${optionalArgs.default}`);}
else{throw new Error(`Missing required ${missingElementName} in element <${parentElement.tagName}> of ${this.currentFile}, and no default value was set`);}}}
extractColor(colorElement,theme,defaultColor){if(!colorElement){return defaultColor?{rgb:defaultColor}:undefined;}
const themeIndex=this.extractAttr(colorElement,"theme")?.asString();let rgb;if(themeIndex!==undefined){if(!theme||!theme.clrScheme){throw new Error("Color referencing a theme but no theme was provided");}
rgb=this.getThemeColor(themeIndex,theme.clrScheme);}
else{rgb=this.extractAttr(colorElement,"rgb")?.asString();rgb=rgb===DEFAULT_SYSTEM_COLOR?undefined:rgb;}
const color={rgb:rgb||defaultColor,auto:this.extractAttr(colorElement,"auto")?.asBool(),indexed:this.extractAttr(colorElement,"indexed")?.asNum(),tint:this.extractAttr(colorElement,"tint")?.asNum(),};return color;}
getTargetXmlFile(relationship){if(!relationship)
throw new Error("Undefined target file");const target=this.processRelationshipTargetName(relationship.target);const f=this.getListOfXMLFiles().find((f)=>f.file.fileName.endsWith(target));if(!f||!f.file)
throw new Error("Cannot find target file");return f;}
getTargetImageFile(relationship){if(!relationship)
throw new Error("Undefined target file");const target=this.processRelationshipTargetName(relationship.target);const f=this.xlsxFileStructure.images.find((f)=>f.fileName.endsWith(target));if(!f)
throw new Error("Cannot find target file");return f;}
querySelector(element,query){const escapedQuery=escapeQueryNameSpaces(query);return element.querySelector(escapedQuery);}
querySelectorAll(element,query){const escapedQuery=escapeQueryNameSpaces(query);return element.querySelectorAll(escapedQuery);}
getThemeColor(colorId,clrScheme){switch(colorId){case"0":return"FFFFFF";case"1":return"000000";case"2":return clrScheme["3"].value;case"3":return clrScheme["2"].value;default:return clrScheme[colorId].value;}}
processRelationshipTargetName(targetName){return targetName.replace(/\.+\//,"");}}
class XlsxMiscExtractor extends XlsxBaseExtractor{getTheme(){const clrScheme=this.mapOnElements({query:"a:clrScheme",parent:this.rootFile.file.xml,children:true},(element)=>{return{name:element.tagName,value:this.extractChildAttr(element,0,"val",{required:true,default:AUTO_COLOR,}).asString(),lastClr:this.extractChildAttr(element,0,"lastClr",{default:AUTO_COLOR,}).asString(),};});return{clrScheme};}
getSharedStrings(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"si"},(ssElement)=>{if(ssElement.children[0].tagName==="t"){return this.extractTextContent(ssElement)||"";}
else{return this.mapOnElements({parent:ssElement,query:"t"},(textElement)=>{return this.extractTextContent(textElement)||"";}).join("");}});}}
class XlsxCfExtractor extends XlsxBaseExtractor{theme;constructor(sheetFile,xlsxStructure,warningManager,theme){super(sheetFile,xlsxStructure,warningManager);this.theme=theme;}
extractConditionalFormattings(){const cfs=this.mapOnElements({parent:this.rootFile.file.xml,query:"worksheet > conditionalFormatting"},(cfElement)=>{return{sqref:this.extractAttr(cfElement,"sqref",{required:true}).asString().split(" "),pivot:this.extractAttr(cfElement,"pivot")?.asBool(),cfRules:this.extractCFRules(cfElement,this.theme),};});cfs.push(...this.mapOnElements({parent:this.rootFile.file.xml,query:"extLst x14:conditionalFormatting"},(cfElement)=>{return{sqref:this.extractChildTextContent(cfElement,"xm:sqref",{required:true}).split(" "),pivot:this.extractAttr(cfElement,"xm:pivot")?.asBool(),cfRules:this.extractCFRules(cfElement,this.theme),};}));return cfs;}
extractCFRules(cfElement,theme){return this.mapOnElements({parent:cfElement,query:"cfRule, x14:cfRule"},(cfRuleElement)=>{const cfType=this.extractAttr(cfRuleElement,"type",{required:true,}).asString();if(cfType==="dataBar"){throw new Error("Databars conditional formats are not supported.");}
return{type:cfType,priority:this.extractAttr(cfRuleElement,"priority",{required:true}).asNum(),colorScale:this.extractCfColorScale(cfRuleElement,theme),formula:this.extractCfFormula(cfRuleElement),iconSet:this.extractCfIconSet(cfRuleElement),dxfId:this.extractAttr(cfRuleElement,"dxfId")?.asNum(),stopIfTrue:this.extractAttr(cfRuleElement,"stopIfTrue")?.asBool(),aboveAverage:this.extractAttr(cfRuleElement,"aboveAverage")?.asBool(),percent:this.extractAttr(cfRuleElement,"percent")?.asBool(),bottom:this.extractAttr(cfRuleElement,"bottom")?.asBool(),operator:this.extractAttr(cfRuleElement,"operator")?.asString(),text:this.extractAttr(cfRuleElement,"text")?.asString(),timePeriod:this.extractAttr(cfRuleElement,"timePeriod")?.asString(),rank:this.extractAttr(cfRuleElement,"rank")?.asNum(),stdDev:this.extractAttr(cfRuleElement,"stdDev")?.asNum(),equalAverage:this.extractAttr(cfRuleElement,"equalAverage")?.asBool(),};});}
extractCfFormula(cfRulesElement){return this.mapOnElements({parent:cfRulesElement,query:"formula"},(cfFormulaElements)=>{return this.extractTextContent(cfFormulaElements,{required:true});});}
extractCfColorScale(cfRulesElement,theme){const colorScaleElement=this.querySelector(cfRulesElement,"colorScale");if(!colorScaleElement)
return undefined;return{colors:this.mapOnElements({parent:colorScaleElement,query:"color"},(colorElement)=>{return this.extractColor(colorElement,theme,"ffffff");}),cfvos:this.extractCFVos(colorScaleElement),};}
extractCfIconSet(cfRulesElement){const iconSetElement=this.querySelector(cfRulesElement,"iconSet, x14:iconSet");if(!iconSetElement)
return undefined;return{iconSet:this.extractAttr(iconSetElement,"iconSet",{default:"3TrafficLights1",}).asString(),showValue:this.extractAttr(iconSetElement,"showValue",{default:true}).asBool(),percent:this.extractAttr(iconSetElement,"percent",{default:true}).asBool(),reverse:this.extractAttr(iconSetElement,"reverse")?.asBool(),custom:this.extractAttr(iconSetElement,"custom")?.asBool(),cfvos:this.extractCFVos(iconSetElement),cfIcons:this.extractCfIcons(iconSetElement),};}
extractCfIcons(iconSetElement){const icons=this.mapOnElements({parent:iconSetElement,query:"cfIcon, x14:cfIcon"},(cfIconElement)=>{return{iconSet:this.extractAttr(cfIconElement,"iconSet",{required:true,}).asString(),iconId:this.extractAttr(cfIconElement,"iconId",{required:true}).asNum(),};});return icons.length===0?undefined:icons;}
extractCFVos(parent){return this.mapOnElements({parent,query:"cfvo, x14:cfvo"},(cfVoElement)=>{return{type:this.extractAttr(cfVoElement,"type",{required:true,}).asString(),gte:this.extractAttr(cfVoElement,"gte",{default:true})?.asBool(),value:cfVoElement.attributes["val"]?this.extractAttr(cfVoElement,"val")?.asString():this.extractChildTextContent(cfVoElement,"f, xm:f"),};});}}
class XlsxChartExtractor extends XlsxBaseExtractor{extractChart(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"c:chartSpace"},(rootChartElement)=>{const chartType=this.getChartType(rootChartElement);if(!CHART_TYPE_CONVERSION_MAP[chartType]){throw new Error(`Unsupported chart type ${chartType}`);}
if(CHART_TYPE_CONVERSION_MAP[chartType]==="combo"){return this.extractComboChart(rootChartElement);}
const chartTitle=this.mapOnElements({parent:rootChartElement,query:"c:chart > c:title a:t"},(textElement)=>{return textElement.textContent||"";}).join("");const barChartGrouping=this.extractChildAttr(rootChartElement,"c:grouping","val",{default:"clustered",}).asString();return{title:{text:chartTitle},type:CHART_TYPE_CONVERSION_MAP[chartType],dataSets:this.extractChartDatasets(this.querySelectorAll(rootChartElement,`c:${chartType}`),chartType),labelRange:this.extractChildTextContent(rootChartElement,`c:ser ${chartType === "scatterChart" ? "c:numRef" : "c:cat"} c:f`),backgroundColor:this.extractChildAttr(rootChartElement,"c:chartSpace > c:spPr a:srgbClr","val",{default:"ffffff",}).asString(),legendPosition:DRAWING_LEGEND_POSITION_CONVERSION_MAP[this.extractChildAttr(rootChartElement,"c:legendPos","val",{default:"b",}).asString()],stacked:barChartGrouping==="stacked",fontColor:"000000",};})[0];}
extractComboChart(chartElement){const chartTitle=this.mapOnElements({parent:chartElement,query:"c:title a:t"},(textElement)=>{return textElement.textContent||"";}).join("");const barChartGrouping=this.extractChildAttr(chartElement,"c:grouping","val",{default:"clustered",}).asString();return{title:{text:chartTitle},type:"combo",dataSets:[...this.extractChartDatasets(this.querySelectorAll(chartElement,`c:barChart`),"comboChart"),...this.extractChartDatasets(this.querySelectorAll(chartElement,`c:lineChart`),"comboChart"),],labelRange:this.extractChildTextContent(chartElement,"c:ser c:cat c:f"),backgroundColor:this.extractChildAttr(chartElement,"c:chartSpace > c:spPr a:srgbClr","val",{default:"ffffff",}).asString(),legendPosition:DRAWING_LEGEND_POSITION_CONVERSION_MAP[this.extractChildAttr(chartElement,"c:legendPos","val",{default:"b",}).asString()],stacked:barChartGrouping==="stacked",fontColor:"000000",};}
extractChartDatasets(chartElements,chartType){return Array.from(chartElements).map((element)=>{if(chartType==="scatterChart"){return this.extractScatterChartDatasets(element);}
return this.mapOnElements({parent:element,query:"c:ser"},(chartDataElement)=>{let label={};const reference=this.extractChildTextContent(chartDataElement,"c:tx c:f");if(reference){label={reference};}
else{const text=this.extractChildTextContent(chartDataElement,"c:tx c:v");if(text){label={text};}}
const color=this.extractChildAttr(chartDataElement,"c:spPr a:solidFill a:srgbClr","val");return{label,range:this.extractChildTextContent(chartDataElement,"c:val c:f",{required:true,}),backgroundColor:color?`${toHex(color.asString())}`:undefined,};});}).flat();}
extractScatterChartDatasets(chartElement){return this.mapOnElements({parent:chartElement,query:"c:ser"},(chartDataElement)=>{let label={};const reference=this.extractChildTextContent(chartDataElement,"c:tx c:f");if(reference){label={reference};}
else{const text=this.extractChildTextContent(chartDataElement,"c:tx c:v");if(text){label={text};}}
return{label,range:this.extractChildTextContent(chartDataElement,"c:yVal c:f",{required:true}),};});}
getChartType(chartElement){const plotAreaElement=this.querySelector(chartElement,"c:plotArea");if(!plotAreaElement){throw new Error("Missing plot area in the chart definition.");}
let globalTag=undefined;for(let child of plotAreaElement.children){const tag=removeTagEscapedNamespaces(child.tagName);if(XLSX_CHART_TYPES.some((chartType)=>chartType===tag)){if(!globalTag){globalTag=tag;}
else if(globalTag!==tag){globalTag="comboChart";}}}
if(globalTag){return globalTag;}
throw new Error("Unknown chart type");}}
const ONE_CELL_ANCHOR="oneCellAnchor";const TWO_CELL_ANCHOR="twoCellAnchor";class XlsxFigureExtractor extends XlsxBaseExtractor{extractFigures(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"xdr:wsDr",children:true},(figureElement)=>{const anchorType=removeTagEscapedNamespaces(figureElement.tagName);const anchors=this.extractFigureAnchorsByType(figureElement,anchorType);const chartElement=this.querySelector(figureElement,"c:chart");const imageElement=this.querySelector(figureElement,"a:blip");if(!chartElement&&!imageElement){throw new Error("Only chart and image figures are currently supported.");}
return{anchors,data:chartElement?this.extractChart(chartElement):this.extractImage(figureElement),figureSize:anchorType===ONE_CELL_ANCHOR?this.extractFigureSizeFromSizeTag(figureElement,"xdr:ext"):undefined,};});}
extractFigureAnchorsByType(figureElement,anchorType){switch(anchorType){case ONE_CELL_ANCHOR:return[this.extractFigureAnchor("xdr:from",figureElement)];case TWO_CELL_ANCHOR:return[this.extractFigureAnchor("xdr:from",figureElement),this.extractFigureAnchor("xdr:to",figureElement),];default:throw new Error(`${anchorType} is not supported for xlsx drawings. `);}}
extractFigureSizeFromSizeTag(figureElement,sizeTag){const sizeElement=this.querySelector(figureElement,sizeTag);if(!sizeElement){throw new Error(`Missing size element '${sizeTag}'`);}
return{cx:this.extractAttr(sizeElement,"cx",{required:true}).asNum(),cy:this.extractAttr(sizeElement,"cy",{required:true}).asNum(),};}
extractFigureAnchor(anchorTag,figureElement){const anchor=this.querySelector(figureElement,anchorTag);if(!anchor){throw new Error(`Missing anchor element ${anchorTag}`);}
return{col:Number(this.extractChildTextContent(anchor,"xdr:col",{required:true})),colOffset:Number(this.extractChildTextContent(anchor,"xdr:colOff",{required:true})),row:Number(this.extractChildTextContent(anchor,"xdr:row",{required:true})),rowOffset:Number(this.extractChildTextContent(anchor,"xdr:rowOff",{required:true})),};}
extractChart(chartElement){const chartId=this.extractAttr(chartElement,"r:id",{required:true}).asString();const chartFile=this.getTargetXmlFile(this.relationships[chartId]);const chartDefinition=new XlsxChartExtractor(chartFile,this.xlsxFileStructure,this.warningManager).extractChart();if(!chartDefinition){throw new Error("Unable to extract chart definition");}
return chartDefinition;}
extractImage(figureElement){const imageElement=this.querySelector(figureElement,"a:blip");const imageId=this.extractAttr(imageElement,"r:embed",{required:true}).asString();const image=this.getTargetImageFile(this.relationships[imageId]);if(!image){throw new Error("Unable to extract image");}
const extension=image.fileName.split(".").at(-1);const anchorType=removeTagEscapedNamespaces(figureElement.tagName);const sizeElement=anchorType===TWO_CELL_ANCHOR?this.querySelector(figureElement,"a:xfrm"):figureElement;const sizeTag=anchorType===TWO_CELL_ANCHOR?"a:ext":"xdr:ext";const size=this.extractFigureSizeFromSizeTag(sizeElement,sizeTag);return{imageSrc:image.imageSrc,mimetype:extension?IMAGE_EXTENSION_TO_MIMETYPE_MAPPING[extension]:undefined,size,};}}
class XlsxPivotExtractor extends XlsxBaseExtractor{getPivotTable(){return this.mapOnElements({query:":root",parent:this.rootFile.file.xml},(pivotElement)=>{return{name:this.extractAttr(pivotElement,"name",{required:true}).asString(),rowGrandTotals:this.extractAttr(pivotElement,"rowGrandTotals",{default:true,}).asBool(),location:this.extractPivotLocation(pivotElement),style:this.extractPivotStyleInfo(pivotElement),};})[0];}
extractPivotLocation(pivotElement){return this.mapOnElements({query:"location",parent:pivotElement},(pivotStyleElement)=>{return{ref:this.extractAttr(pivotStyleElement,"ref",{required:true}).asString(),firstHeaderRow:this.extractAttr(pivotStyleElement,"firstHeaderRow",{required:true,}).asNum(),firstDataRow:this.extractAttr(pivotStyleElement,"firstDataRow",{required:true,}).asNum(),firstDataCol:this.extractAttr(pivotStyleElement,"firstDataCol",{required:true,}).asNum(),};})[0];}
extractPivotStyleInfo(pivotElement){return this.mapOnElements({query:"pivotTableStyleInfo",parent:pivotElement},(pivotStyleElement)=>{return{name:this.extractAttr(pivotStyleElement,"name",{required:true}).asString(),showRowHeaders:this.extractAttr(pivotStyleElement,"showRowHeaders",{required:true,}).asBool(),showColHeaders:this.extractAttr(pivotStyleElement,"showColHeaders",{required:true,}).asBool(),showRowStripes:this.extractAttr(pivotStyleElement,"showRowStripes",{required:true,}).asBool(),showColStripes:this.extractAttr(pivotStyleElement,"showColStripes",{required:true,}).asBool(),showLastColumn:this.extractAttr(pivotStyleElement,"showLastColumn")?.asBool(),};})[0];}}
class XlsxTableExtractor extends XlsxBaseExtractor{getTable(){return this.mapOnElements({query:"table",parent:this.rootFile.file.xml},(tableElement)=>{return{displayName:this.extractAttr(tableElement,"displayName",{required:true,}).asString(),name:this.extractAttr(tableElement,"name")?.asString(),id:this.extractAttr(tableElement,"id",{required:true}).asString(),ref:this.extractAttr(tableElement,"ref",{required:true}).asString(),headerRowCount:this.extractAttr(tableElement,"headerRowCount",{default:1,}).asNum(),totalsRowCount:this.extractAttr(tableElement,"totalsRowCount",{default:0,}).asNum(),cols:this.extractTableCols(tableElement),style:this.extractTableStyleInfo(tableElement),autoFilter:this.extractTableAutoFilter(tableElement),};})[0];}
extractTableCols(tableElement){return this.mapOnElements({query:"tableColumn",parent:tableElement},(tableColElement)=>{return{id:this.extractAttr(tableColElement,"id",{required:true}).asString(),name:this.extractAttr(tableColElement,"name",{required:true}).asString(),colFormula:this.extractChildTextContent(tableColElement,"calculatedColumnFormula"),};});}
extractTableStyleInfo(tableElement){return this.mapOnElements({query:"tableStyleInfo",parent:tableElement},(tableStyleElement)=>{return{name:this.extractAttr(tableStyleElement,"name")?.asString(),showFirstColumn:this.extractAttr(tableStyleElement,"showFirstColumn")?.asBool(),showLastColumn:this.extractAttr(tableStyleElement,"showLastColumn")?.asBool(),showRowStripes:this.extractAttr(tableStyleElement,"showRowStripes")?.asBool(),showColumnStripes:this.extractAttr(tableStyleElement,"showColumnStripes")?.asBool(),};})[0];}
extractTableAutoFilter(tableElement){return this.mapOnElements({query:"autoFilter",parent:tableElement},(autoFilterElement)=>{return{columns:this.extractFilterColumns(autoFilterElement),zone:this.extractAttr(autoFilterElement,"ref",{required:true}).asString(),};})[0];}
extractFilterColumns(autoFilterElement){return this.mapOnElements({query:"tableColumn",parent:autoFilterElement},(filterColumnElement)=>{return{colId:this.extractAttr(autoFilterElement,"colId",{required:true}).asNum(),hiddenButton:this.extractAttr(autoFilterElement,"hiddenButton",{default:false,}).asBool(),filters:this.extractSimpleFilter(filterColumnElement),};});}
extractSimpleFilter(filterColumnElement){return this.mapOnElements({query:"filter",parent:filterColumnElement},(filterColumnElement)=>{return{val:this.extractAttr(filterColumnElement,"val",{required:true}).asString(),};});}}
class XlsxSheetExtractor extends XlsxBaseExtractor{theme;constructor(sheetFile,xlsxStructure,warningManager,theme){super(sheetFile,xlsxStructure,warningManager);this.theme=theme;}
getSheet(){return this.mapOnElements({query:"worksheet",parent:this.rootFile.file.xml},(sheetElement)=>{const sheetWorkbookInfo=this.getSheetWorkbookInfo();return{sheetName:this.extractSheetName(),sheetViews:this.extractSheetViews(sheetElement),sheetFormat:this.extractSheetFormat(sheetElement),sheetProperties:this.extractSheetProperties(sheetElement),cols:this.extractCols(sheetElement),rows:this.extractRows(sheetElement),sharedFormulas:this.extractSharedFormulas(sheetElement),merges:this.extractMerges(sheetElement),cfs:this.extractConditionalFormats(),figures:this.extractFigures(sheetElement),hyperlinks:this.extractHyperLinks(sheetElement),tables:this.extractTables(sheetElement),pivotTables:this.extractPivotTables(),isVisible:sheetWorkbookInfo.state==="visible"?true:false,};})[0];}
extractSheetViews(worksheet){return this.mapOnElements({parent:worksheet,query:"sheetView"},(sheetViewElement)=>{const paneElement=this.querySelector(sheetViewElement,"pane");return{tabSelected:this.extractAttr(sheetViewElement,"tabSelected",{default:false,}).asBool(),showFormulas:this.extractAttr(sheetViewElement,"showFormulas",{default:false,}).asBool(),showGridLines:this.extractAttr(sheetViewElement,"showGridLines",{default:true,}).asBool(),showRowColHeaders:this.extractAttr(sheetViewElement,"showRowColHeaders",{default:true,}).asBool(),pane:{xSplit:paneElement?this.extractAttr(paneElement,"xSplit",{default:0}).asNum():0,ySplit:paneElement?this.extractAttr(paneElement,"ySplit",{default:0}).asNum():0,},};});}
extractSheetName(){const relativePath=getRelativePath(this.xlsxFileStructure.workbook.file.fileName,this.rootFile.file.fileName);const workbookRels=this.extractRelationships(this.xlsxFileStructure.workbook.rels);const relId=workbookRels.find((rel)=>rel.target===relativePath).id;for(let sheetElement of this.querySelectorAll(this.xlsxFileStructure.workbook.file.xml,"sheet")){if(sheetElement.attributes["r:id"].value===relId){return sheetElement.attributes["name"].value;}}
throw new Error("Missing sheet name");}
getSheetWorkbookInfo(){const relativePath=getRelativePath(this.xlsxFileStructure.workbook.file.fileName,this.rootFile.file.fileName);const workbookRels=this.extractRelationships(this.xlsxFileStructure.workbook.rels);const relId=workbookRels.find((rel)=>rel.target===relativePath).id;const workbookSheets=this.mapOnElements({parent:this.xlsxFileStructure.workbook.file.xml,query:"sheet"},(sheetElement)=>{return{relationshipId:this.extractAttr(sheetElement,"r:id",{required:true}).asString(),sheetId:this.extractAttr(sheetElement,"sheetId",{required:true}).asString(),sheetName:this.extractAttr(sheetElement,"name",{required:true}).asString(),state:this.extractAttr(sheetElement,"state",{default:"visible",}).asString(),};});const info=workbookSheets.find((info)=>info.relationshipId===relId);if(!info){throw new Error("Cannot find corresponding workbook sheet");}
return info;}
extractConditionalFormats(){return new XlsxCfExtractor(this.rootFile,this.xlsxFileStructure,this.warningManager,this.theme).extractConditionalFormattings();}
extractFigures(worksheet){const figures=this.mapOnElements({parent:worksheet,query:"drawing"},(drawingElement)=>{const drawingId=this.extractAttr(drawingElement,"r:id",{required:true})?.asString();const drawingFile=this.getTargetXmlFile(this.relationships[drawingId]);const figures=new XlsxFigureExtractor(drawingFile,this.xlsxFileStructure,this.warningManager).extractFigures();return figures;})[0];return figures||[];}
extractTables(worksheet){return this.mapOnElements({query:"tablePart",parent:worksheet},(tablePartElement)=>{const tableId=this.extractAttr(tablePartElement,"r:id",{required:true})?.asString();const tableFile=this.getTargetXmlFile(this.relationships[tableId]);const tableExtractor=new XlsxTableExtractor(tableFile,this.xlsxFileStructure,this.warningManager);return tableExtractor.getTable();});}
extractPivotTables(){try{return Object.values(this.relationships).filter((relationship)=>relationship.type.endsWith("pivotTable")).map((pivotRelationship)=>{const pivotFile=this.getTargetXmlFile(pivotRelationship);const pivot=new XlsxPivotExtractor(pivotFile,this.xlsxFileStructure,this.warningManager).getPivotTable();return pivot;});}
catch(e){this.catchErrorOnElement(e);return[];}}
extractMerges(worksheet){return this.mapOnElements({parent:worksheet,query:"mergeCell"},(mergeElement)=>{return this.extractAttr(mergeElement,"ref",{required:true}).asString();});}
extractSheetFormat(worksheet){const formatElement=this.querySelector(worksheet,"sheetFormatPr");if(!formatElement)
return undefined;return{defaultColWidth:this.extractAttr(formatElement,"defaultColWidth",{default:EXCEL_DEFAULT_COL_WIDTH.toString(),}).asNum(),defaultRowHeight:this.extractAttr(formatElement,"defaultRowHeight",{default:EXCEL_DEFAULT_ROW_HEIGHT.toString(),}).asNum(),};}
extractSheetProperties(worksheet){const propertiesElement=this.querySelector(worksheet,"sheetPr");if(!propertiesElement)
return undefined;return{outlinePr:this.extractSheetOutlineProperties(propertiesElement),tabColor:this.extractColor(this.querySelector(propertiesElement,"tabColor"),this.theme),};}
extractSheetOutlineProperties(sheetProperties){const properties=this.querySelector(sheetProperties,"outlinePr");if(!properties)
return undefined;return{summaryBelow:this.extractAttr(properties,"summaryBelow",{default:true}).asBool(),summaryRight:this.extractAttr(properties,"summaryRight",{default:true}).asBool(),};}
extractCols(worksheet){return this.mapOnElements({parent:worksheet,query:"cols col"},(colElement)=>{return{width:this.extractAttr(colElement,"width")?.asNum(),customWidth:this.extractAttr(colElement,"customWidth")?.asBool(),bestFit:this.extractAttr(colElement,"bestFit")?.asBool(),hidden:this.extractAttr(colElement,"hidden")?.asBool(),min:this.extractAttr(colElement,"min",{required:true})?.asNum(),max:this.extractAttr(colElement,"max",{required:true})?.asNum(),styleIndex:this.extractAttr(colElement,"style")?.asNum(),outlineLevel:this.extractAttr(colElement,"outlineLevel")?.asNum(),collapsed:this.extractAttr(colElement,"collapsed")?.asBool(),};});}
extractRows(worksheet){return this.mapOnElements({parent:worksheet,query:"sheetData row"},(rowElement)=>{return{index:this.extractAttr(rowElement,"r",{required:true})?.asNum(),cells:this.extractCells(rowElement),height:this.extractAttr(rowElement,"ht")?.asNum(),customHeight:this.extractAttr(rowElement,"customHeight")?.asBool(),hidden:this.extractAttr(rowElement,"hidden")?.asBool(),styleIndex:this.extractAttr(rowElement,"s")?.asNum(),outlineLevel:this.extractAttr(rowElement,"outlineLevel")?.asNum(),collapsed:this.extractAttr(rowElement,"collapsed")?.asBool(),};});}
extractCells(row){return this.mapOnElements({parent:row,query:"c"},(cellElement)=>{return{xc:this.extractAttr(cellElement,"r",{required:true})?.asString(),styleIndex:this.extractAttr(cellElement,"s")?.asNum(),type:CELL_TYPE_CONVERSION_MAP[this.extractAttr(cellElement,"t",{default:"n"})?.asString()],value:this.extractChildTextContent(cellElement,"v"),formula:this.extractCellFormula(cellElement),};});}
extractCellFormula(cellElement){const formulaElement=this.querySelector(cellElement,"f");if(!formulaElement)
return undefined;return{content:this.extractTextContent(formulaElement),sharedIndex:this.extractAttr(formulaElement,"si")?.asNum(),ref:this.extractAttr(formulaElement,"ref")?.asString(),};}
extractHyperLinks(worksheet){return this.mapOnElements({parent:worksheet,query:"hyperlink"},(linkElement)=>{const relId=this.extractAttr(linkElement,"r:id")?.asString();return{xc:this.extractAttr(linkElement,"ref",{required:true})?.asString(),location:this.extractAttr(linkElement,"location")?.asString(),display:this.extractAttr(linkElement,"display")?.asString(),relTarget:relId?this.relationships[relId].target:undefined,};});}
extractSharedFormulas(worksheet){const sfElements=this.querySelectorAll(worksheet,`f[si][ref]`);const sfMap={};for(let sfElement of sfElements){const index=this.extractAttr(sfElement,"si",{required:true}).asNum();const formula=this.extractTextContent(sfElement,{required:true});sfMap[index]=formula;}
const sfs=[];for(let i=0;i<Object.keys(sfMap).length;i++){if(!sfMap[i]){this.warningManager.addParsingWarning(`Missing shared formula ${i}, replacing it by empty formula`);sfs.push("");}
else{sfs.push(sfMap[i]);}}
return sfs;}}
class XlsxStyleExtractor extends XlsxBaseExtractor{theme;constructor(xlsxStructure,warningManager,theme){super(xlsxStructure.styles,xlsxStructure,warningManager);this.theme=theme;}
getNumFormats(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"numFmt"},(numFmtElement)=>{return this.extractNumFormats(numFmtElement);});}
extractNumFormats(numFmtElement){return{id:this.extractAttr(numFmtElement,"numFmtId",{required:true,}).asNum(),format:this.extractAttr(numFmtElement,"formatCode",{required:true,default:"",}).asString(),};}
getFonts(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"font"},(font)=>{return this.extractFont(font);});}
extractFont(fontElement){const name=this.extractChildAttr(fontElement,"name","val",{default:"Arial",}).asString();const size=this.extractChildAttr(fontElement,"sz","val",{default:DEFAULT_FONT_SIZE.toString(),}).asNum();const color=this.extractColor(this.querySelector(fontElement,`color`),this.theme);const italicElement=this.querySelector(fontElement,`i`)||undefined;const italic=italicElement&&italicElement.attributes["val"]?.value!=="0";const boldElement=this.querySelector(fontElement,`b`)||undefined;const bold=boldElement&&boldElement.attributes["val"]?.value!=="0";const strikeElement=this.querySelector(fontElement,`strike`)||undefined;const strike=strikeElement&&strikeElement.attributes["val"]?.value!=="0";const underlineElement=this.querySelector(fontElement,`u`)||undefined;const underline=underlineElement&&underlineElement.attributes["val"]?.value!=="none";return{name,size,color,italic,bold,underline,strike};}
getFills(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"fill"},(fillElement)=>{return this.extractFill(fillElement);});}
extractFill(fillElement){const fillChild=fillElement.children[0];if(fillChild.tagName==="patternFill"){return{patternType:fillChild.attributes["patternType"]?.value,bgColor:this.extractColor(this.querySelector(fillChild,"bgColor"),this.theme),fgColor:this.extractColor(this.querySelector(fillChild,"fgColor"),this.theme),};}
else{return{patternType:"solid",fgColor:this.extractColor(this.querySelectorAll(fillChild,"color")[1],this.theme),};}}
getBorders(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"border"},(borderElement)=>{return this.extractBorder(borderElement);});}
extractBorder(borderElement){const border={left:this.extractSingleBorder(borderElement,"left",this.theme),right:this.extractSingleBorder(borderElement,"right",this.theme),top:this.extractSingleBorder(borderElement,"top",this.theme),bottom:this.extractSingleBorder(borderElement,"bottom",this.theme),diagonal:this.extractSingleBorder(borderElement,"diagonal",this.theme),};if(border.diagonal){border.diagonalUp=this.extractAttr(borderElement,"diagonalUp")?.asBool();border.diagonalDown=this.extractAttr(borderElement,"diagonalDown")?.asBool();}
return border;}
extractSingleBorder(borderElement,direction,theme){const directionElement=this.querySelector(borderElement,direction);if(!directionElement||!directionElement.attributes["style"])
return undefined;return{style:this.extractAttr(directionElement,"style",{required:true,default:"thin",}).asString(),color:this.extractColor(directionElement.children[0],theme,"000000"),};}
extractAlignment(alignmentElement){return{horizontal:this.extractAttr(alignmentElement,"horizontal",{default:"general",}).asString(),vertical:this.extractAttr(alignmentElement,"vertical",{default:"bottom",}).asString(),textRotation:this.extractAttr(alignmentElement,"textRotation")?.asNum(),wrapText:this.extractAttr(alignmentElement,"wrapText")?.asBool(),indent:this.extractAttr(alignmentElement,"indent")?.asNum(),relativeIndent:this.extractAttr(alignmentElement,"relativeIndent")?.asNum(),justifyLastLine:this.extractAttr(alignmentElement,"justifyLastLine")?.asBool(),shrinkToFit:this.extractAttr(alignmentElement,"shrinkToFit")?.asBool(),readingOrder:this.extractAttr(alignmentElement,"readingOrder")?.asNum(),};}
getDxfs(){return this.mapOnElements({query:"dxf",parent:this.rootFile.file.xml},(dxfElement)=>{const fontElement=this.querySelector(dxfElement,"font");const fillElement=this.querySelector(dxfElement,"fill");const borderElement=this.querySelector(dxfElement,"border");const numFmtElement=this.querySelector(dxfElement,"numFmt");const alignmentElement=this.querySelector(dxfElement,"alignment");return{font:fontElement?this.extractFont(fontElement):undefined,fill:fillElement?this.extractFill(fillElement):undefined,numFmt:numFmtElement?this.extractNumFormats(numFmtElement):undefined,alignment:alignmentElement?this.extractAlignment(alignmentElement):undefined,border:borderElement?this.extractBorder(borderElement):undefined,};});}
getStyles(){return this.mapOnElements({query:"cellXfs xf",parent:this.rootFile.file.xml},(styleElement)=>{const alignmentElement=this.querySelector(styleElement,"alignment");return{fontId:this.extractAttr(styleElement,"fontId",{required:true,default:0,}).asNum(),fillId:this.extractAttr(styleElement,"fillId",{required:true,default:0,}).asNum(),borderId:this.extractAttr(styleElement,"borderId",{required:true,default:0,}).asNum(),numFmtId:this.extractAttr(styleElement,"numFmtId",{required:true,default:0,}).asNum(),alignment:alignmentElement?this.extractAlignment(alignmentElement):undefined,};});}}
class XlsxExternalBookExtractor extends XlsxBaseExtractor{getExternalBook(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"externalBook"},(bookElement)=>{return{rId:this.extractAttr(bookElement,"r:id",{required:true}).asString(),sheetNames:this.mapOnElements({parent:bookElement,query:"sheetName"},(sheetNameElement)=>{return this.extractAttr(sheetNameElement,"val",{required:true}).asString();}),datasets:this.extractExternalSheetData(bookElement),};})[0];}
extractExternalSheetData(externalBookElement){return this.mapOnElements({parent:externalBookElement,query:"sheetData"},(sheetDataElement)=>{const cellsData=this.mapOnElements({parent:sheetDataElement,query:"cell"},(cellElement)=>{return{xc:this.extractAttr(cellElement,"r",{required:true}).asString(),value:this.extractChildTextContent(cellElement,"v",{required:true}),};});const dataMap={};for(let cell of cellsData){dataMap[cell.xc]=cell.value;}
return{sheetId:this.extractAttr(sheetDataElement,"sheetId",{required:true}).asNum(),data:dataMap,};});}}
function getXLSXFilesOfType(contentType,xmls){const paths=getPathsOfContent(contentType,xmls);return getXlsxFile(paths,xmls);}
function getXlsxFile(files,xmls){const ret=[];for(let file of files){const rels=getRelationFile(file,xmls);ret.push({file:{fileName:file,xml:xmls[file]},rels:rels?{fileName:rels,xml:xmls[rels]}:undefined,});}
return ret;}
function getPathsOfContent(contentType,xmls){const xml=xmls[CONTENT_TYPES_FILE];const sheetItems=xml.querySelectorAll(`Override[ContentType="${contentType}"]`);const paths=[];for(let item of sheetItems){const file=item?.attributes["PartName"].value;paths.push(file.substring(1));}
return paths;}
function getRelationFile(file,xmls){if(file===CONTENT_TYPES_FILE){return"_rels/.rels";}
let relsFile="";const pathParts=file.split("/");for(let i=0;i<pathParts.length-1;i++){relsFile+=pathParts[i]+"/";}
relsFile+="_rels/";relsFile+=pathParts[pathParts.length-1]+".rels";if(!xmls[relsFile]){relsFile=undefined;}
return relsFile;}
const EXCEL_IMPORT_VERSION=21;class XlsxReader{warningManager;xmls;images;constructor(files){this.warningManager=new XLSXImportWarningManager();this.xmls={};this.images=[];for(let key of Object.keys(files)){if(key.endsWith(".xml")||key.endsWith(".rels")){const contentString=escapeTagNamespaces(files[key]);this.xmls[key]=parseXML(new XMLString(contentString));}
else if(key.includes("media/image")){this.images.push({fileName:key,imageSrc:files[key]["imageSrc"],});}}}
convertXlsx(){const xlsxData=this.getXlsxData();const convertedData=this.convertImportedData(xlsxData);return convertedData;}
getXlsxData(){const xlsxFileStructure=this.buildXlsxFileStructure();const theme=xlsxFileStructure.theme?new XlsxMiscExtractor(xlsxFileStructure.theme,xlsxFileStructure,this.warningManager).getTheme():undefined;const sharedStrings=xlsxFileStructure.sharedStrings?new XlsxMiscExtractor(xlsxFileStructure.sharedStrings,xlsxFileStructure,this.warningManager).getSharedStrings():[];const sheets=xlsxFileStructure.sheets.sort((a,b)=>a.file.fileName.localeCompare(b.file.fileName,undefined,{numeric:true})).map((sheetFile)=>{return new XlsxSheetExtractor(sheetFile,xlsxFileStructure,this.warningManager,theme).getSheet();});const externalBooks=xlsxFileStructure.externalLinks.map((externalLinkFile)=>{return new XlsxExternalBookExtractor(externalLinkFile,xlsxFileStructure,this.warningManager).getExternalBook();});const styleExtractor=new XlsxStyleExtractor(xlsxFileStructure,this.warningManager,theme);return{fonts:styleExtractor.getFonts(),fills:styleExtractor.getFills(),borders:styleExtractor.getBorders(),dxfs:styleExtractor.getDxfs(),numFmts:styleExtractor.getNumFormats(),styles:styleExtractor.getStyles(),sheets:sheets,sharedStrings,externalBooks,};}
buildXlsxFileStructure(){const xlsxFileStructure={sheets:getXLSXFilesOfType(CONTENT_TYPES.sheet,this.xmls),workbook:getXLSXFilesOfType(CONTENT_TYPES.workbook,this.xmls)[0],styles:getXLSXFilesOfType(CONTENT_TYPES.styles,this.xmls)[0],sharedStrings:getXLSXFilesOfType(CONTENT_TYPES.sharedStrings,this.xmls)[0],theme:getXLSXFilesOfType(CONTENT_TYPES.themes,this.xmls)[0],charts:getXLSXFilesOfType(CONTENT_TYPES.chart,this.xmls),figures:getXLSXFilesOfType(CONTENT_TYPES.drawing,this.xmls),tables:getXLSXFilesOfType(CONTENT_TYPES.table,this.xmls),pivots:getXLSXFilesOfType(CONTENT_TYPES.pivot,this.xmls),externalLinks:getXLSXFilesOfType(CONTENT_TYPES.externalLink,this.xmls),images:this.images,};if(!xlsxFileStructure.workbook.rels){throw Error(_t("Cannot find workbook relations file"));}
return xlsxFileStructure;}
convertImportedData(data){const convertedData={version:EXCEL_IMPORT_VERSION,sheets:convertSheets(data,this.warningManager),styles:convertStyles(data,this.warningManager),formats:convertFormats(data,this.warningManager),borders:convertBorders(data,this.warningManager),revisionId:DEFAULT_REVISION_ID,};convertTables(convertedData,data);Object.keys(data.styles).map((key)=>{data.styles[key]=removeFalsyAttributes(data.styles[key]);});return convertedData;}}
function normalizeV9(formula){const tokens=rangeTokenize(formula);let dependencies=[];let noRefFormula="".concat(...tokens.map((token)=>{if(token.type==="REFERENCE"&&cellReference.test(token.value)){const value=token.value.trim();if(!dependencies.includes(value)){dependencies.push(value);}
return`${FORMULA_REF_IDENTIFIER}${dependencies.indexOf(value)}${FORMULA_REF_IDENTIFIER}`;}
else{return token.value;}}));return{text:noRefFormula,dependencies};}
const WEEK_START={am_ET:7,ar_001:6,ar_SY:6,az_AZ:1,eu_ES:1,be_BY:1,bn_IN:1,bs_BA:1,bg_BG:1,ca_ES:1,zh_CN:7,zh_HK:7,zh_TW:7,hr_HR:1,cs_CZ:1,da_DK:1,nl_BE:1,nl_NL:1,en_AU:7,en_CA:7,en_GB:1,en_IN:7,en_NZ:7,et_EE:1,fi_FI:1,fr_BE:1,fr_CA:7,fr_CH:1,fr_FR:1,gl_ES:1,ka_GE:1,de_DE:1,de_CH:1,el_GR:1,gu_IN:7,he_IL:7,hi_IN:7,hu_HU:1,id_ID:7,it_IT:1,ja_JP:7,kab_DZ:6,km_KH:7,ko_KP:1,ko_KR:7,lo_LA:7,lv_LV:1,lt_LT:1,lb_LU:1,mk_MK:1,ml_IN:1,mn_MN:7,ms_MY:1,nb_NO:1,fa_IR:6,pl_PL:1,pt_AO:1,pt_BR:7,pt_PT:1,ro_RO:1,ru_RU:1,sr_RS:7,"sr@latin":7,sk_SK:1,sl_SI:1,es_AR:7,es_BO:1,es_CL:1,es_CO:7,es_CR:1,es_DO:1,es_EC:1,es_GT:7,es_MX:7,es_PA:7,es_PE:7,es_PY:7,es_UY:1,es_VE:7,sw:1,sv_SE:1,th_TH:7,tl_PH:1,tr_TR:1,uk_UA:1,vi_VN:1,sq_AL:1,te_IN:7,en_US:7,my_MM:7,es_ES:1,es_419:1,};const migrationStepRegistry=new Registry();migrationStepRegistry.add("migration_1",{versionFrom:"1",migrate(data){if(data.sheets&&data.sheets[0]){data.activeSheet=data.sheets[0].name;}
return data;},}).add("migration_2",{versionFrom:"2",migrate(data){if(data.sheets&&data.sheets.length){for(let sheet of data.sheets){sheet.id=sheet.id||sheet.name;}}
return data;},}).add("migration_3",{versionFrom:"3",migrate(data){if(data.sheets&&data.activeSheet){const activeSheet=data.sheets.find((s)=>s.name===data.activeSheet);data.activeSheet=activeSheet.id;}
return data;},}).add("migration_4",{versionFrom:"4",migrate(data){for(let sheet of data.sheets||[]){sheet.figures=sheet.figures||[];}
return data;},}).add("migration_5",{versionFrom:"5",migrate(data){for(let sheet of data.sheets||[]){for(let xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")){cell.formula=normalizeV9(cell.content);}}}
return data;},}).add("migration_6",{versionFrom:"6",migrate(data){for(let sheet of data.sheets||[]){for(let f in sheet.figures||[]){const{dataSets,...newData}=sheet.figures[f].data;const newDataSets=[];for(let ds of dataSets){if(ds.labelCell){const dataRange=toZone(ds.dataRange);const newRange=ds.labelCell+":"+toXC(dataRange.right,dataRange.bottom);newDataSets.push(newRange);}
else{newDataSets.push(ds.dataRange);}}
newData.dataSetsHaveTitle=Boolean(dataSets[0].labelCell);newData.dataSets=newDataSets;sheet.figures[f].data=newData;}}
return data;},}).add("migration_7",{versionFrom:"7",migrate(data){const namesTaken=[];const globalForbiddenInExcel=new RegExp(FORBIDDEN_IN_EXCEL_REGEX,"g");for(let sheet of data.sheets||[]){if(!sheet.name){continue;}
const oldName=sheet.name;const escapedName=oldName.replace(globalForbiddenInExcel,"_");let i=1;let newName=escapedName;while(namesTaken.includes(newName)){newName=`${escapedName}${i}`;i++;}
sheet.name=newName;namesTaken.push(newName);const replaceName=(str)=>{if(str===undefined){return str;}
let newString=str.replace(oldName,newName);let currentString=str;while(currentString!==newString){currentString=newString;newString=currentString.replace(oldName,newName);}
return currentString;};for(let xc in sheet.cells){const cell=sheet.cells[xc];if(cell.formula){cell.formula.dependencies=cell.formula.dependencies.map(replaceName);}}
for(let figure of sheet.figures||[]){if(figure.type==="chart"){const dataSets=figure.data.dataSets.map(replaceName);const labelRange=replaceName(figure.data.labelRange);figure.data={...figure.data,dataSets,labelRange};}}
for(let cf of sheet.conditionalFormats||[]){cf.ranges=cf.ranges.map(replaceName);for(const thresholdName of["minimum","maximum","midpoint","upperInflectionPoint","lowerInflectionPoint",]){if(cf.rule[thresholdName]?.type==="formula"){cf.rule[thresholdName].value=replaceName(cf.rule[thresholdName].value);}}}}
return data;},}).add("migration_8",{versionFrom:"8",migrate(data){for(const sheet of data.sheets||[]){for(const chart of sheet.figures||[]){chart.data.background=BACKGROUND_CHART_COLOR;chart.data.verticalAxisPosition="left";chart.data.legendPosition="top";chart.data.stacked=false;}}
return data;},}).add("migration_9",{versionFrom:"9",migrate(data){for(let sheet of data.sheets||[]){for(let xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.formula){let{text,dependencies}=cell.formula;for(let[index,d]of Object.entries(dependencies)){const stringPosition=`\\${FORMULA_REF_IDENTIFIER}${index}\\${FORMULA_REF_IDENTIFIER}`;text=text.replace(new RegExp(stringPosition,"g"),d);}
cell.content=text;delete cell.formula;}}}
return data;},}).add("migration_10",{versionFrom:"10",migrate(data){const formats={};for(let sheet of data.sheets||[]){for(let xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.format){cell.format=getItemId(cell.format,formats);}}}
data.formats=formats;return data;},}).add("migration_11",{versionFrom:"11",migrate(data){for(let sheet of data.sheets||[]){sheet.isVisible=true;}
return data;},}).add("migration_12",{versionFrom:"12",migrate(data){return fixOverlappingFilters(data);},}).add("migration_12_5",{versionFrom:"12.5",migrate(data){for(const borderId in data.borders){const border=data.borders[borderId];for(const position in border){if(Array.isArray(border[position])){border[position]={style:border[position][0],color:border[position][1],};}}}
return data;},}).add("migration_13",{versionFrom:"13",migrate(data){if(!data.settings){data.settings={};}
if(!data.settings.locale){data.settings.locale=DEFAULT_LOCALE;}
return data;},}).add("migration_14",{versionFrom:"14",migrate(data){return fixOverlappingFilters(data);},}).add("migration_14_5",{versionFrom:"14.5",migrate(data){for(const sheetData of data.sheets||[]){sheetData.tables=sheetData.tables||sheetData.filterTables||[];delete sheetData.filterTables;}
return data;},}).add("migration_15",{versionFrom:"15",migrate(data){if(!data.pivots){data.pivots={};}
if(!data.pivotNextId){data.pivotNextId=getMaxObjectId(data.pivots)+1;}
return data;},}).add("migration_16",{versionFrom:"16",migrate(data){for(const sheet of data.sheets||[]){for(const f in sheet.figures||[]){const figure=sheet.figures[f];if("title"in figure.data&&typeof figure.data.title==="string"){figure.data.title={text:figure.data.title};}
const figureType=figure.data.type;if(!["line","bar","pie","scatter","waterfall","combo"].includes(figureType)){continue;}
const{dataSets,...newData}=sheet.figures[f].data;const newDataSets=dataSets.map((dataRange)=>({dataRange}));newData.dataSets=newDataSets;sheet.figures[f].data=newData;}}
return data;},}).add("migration_17",{versionFrom:"17",migrate(data){return data;},}).add("migration_18",{versionFrom:"18",migrate(data){for(const pivot of Object.values(data.pivots||{})){pivot.measures=pivot.measures.map((measure)=>({id:measure.name,fieldName:measure.name,aggregator:measure.aggregator,}));pivot.columns=pivot.columns.map((column)=>({fieldName:column.name,order:column.order,granularity:column.granularity,}));pivot.rows=pivot.rows.map((row)=>({fieldName:row.name,order:row.order,granularity:row.granularity,}));}
return data;},}).add("migration_19",{versionFrom:"19",migrate(data){const locale=data.settings?.locale;if(locale){const code=locale.code;locale.weekStart=WEEK_START[code]||1;}
return data;},}).add("migration_20",{versionFrom:"20",migrate(data){for(const sheet of data.sheets||[]){sheet.styles={};sheet.formats={};sheet.borders={};for(const xc in sheet.cells){sheet.styles[xc]=sheet.cells[xc].style;sheet.formats[xc]=sheet.cells[xc].format;sheet.borders[xc]=sheet.cells[xc].border;delete sheet.cells[xc].style;delete sheet.cells[xc].format;delete sheet.cells[xc].border;}}
return data;},}).add("migration_21",{versionFrom:"21",migrate(data){for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){if(figure.tag!=="chart"||figure.data.type!=="gauge"){continue;}
const gaugeData=figure.data;if(gaugeData?.sectionRule?.lowerInflectionPoint){gaugeData.sectionRule.lowerInflectionPoint.operator="<=";}
if(gaugeData?.sectionRule?.upperInflectionPoint){gaugeData.sectionRule.upperInflectionPoint.operator="<=";}}}
return data;},});function fixOverlappingFilters(data){for(let sheet of data.sheets||[]){let knownDataFilterZones=[];for(let filterTable of sheet.filterTables||[]){const zone=toZone(filterTable.range);const intersectZoneIndex=knownDataFilterZones.findIndex((knownZone)=>overlap(knownZone,zone));if(intersectZoneIndex!==-1){knownDataFilterZones[intersectZoneIndex]=zone;}
else{knownDataFilterZones.push(zone);}}
sheet.filterTables=knownDataFilterZones.map((zone)=>({range:zoneToXc(zone),}));}
return data;}
const CURRENT_VERSION=22;const INITIAL_SHEET_ID="Sheet1";function load(data,verboseImport){if(!data){return createEmptyWorkbookData();}
console.group("Loading data");const start=performance.now();if(data["[Content_Types].xml"]){const reader=new XlsxReader(data);data=reader.convertXlsx();if(verboseImport){for(let parsingError of reader.warningManager.warnings.sort()){console.warn(parsingError);}}}
if("version"in data){if(data.version<CURRENT_VERSION){console.info("Migrating data from version",data.version);data=migrate(data);}}
data=repairData(data);console.info("Data loaded in",performance.now()-start,"ms");console.groupEnd();return data;}
function compareVersions(v1,v2){const version1=v1.split(".").map(Number);const version2=v2.split(".").map(Number);for(let i=0;i<Math.max(version1.length,version2.length);i++){const part1=version1[i]||0;const part2=version2[i]||0;if(part1>part2){return 1;}
if(part1<part2){return-1;}}
return 0;}
function migrate(data){const start=performance.now();const steps=migrationStepRegistry.getAll().sort((a,b)=>compareVersions(a.versionFrom,b.versionFrom));const index=steps.findIndex((step)=>step.versionFrom===data.version.toString());for(let i=index;i<steps.length;i++){data=steps[i].migrate(data);}
console.info("Data migrated in",performance.now()-start,"ms");return data;}
function repairData(data){data=forceUnicityOfFigure(data);data=setDefaults(data);return data;}
function forceUnicityOfFigure(data){if(data.uniqueFigureIds){return data;}
const figureIds=new Set();const uuidGenerator=new UuidGenerator();for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){if(figureIds.has(figure.id)){figure.id+=uuidGenerator.uuidv4();}
figureIds.add(figure.id);}}
data.uniqueFigureIds=true;return data;}
function setDefaults(partialData){const data=Object.assign(createEmptyWorkbookData(),partialData,{version:CURRENT_VERSION,});data.sheets=data.sheets?data.sheets.map((s,i)=>Object.assign(createEmptySheet(`Sheet${i + 1}`,`Sheet${i + 1}`),s)):[];if(data.sheets.length===0){data.sheets.push(createEmptySheet(INITIAL_SHEET_ID,"Sheet1"));}
if(!isValidLocale(data.settings.locale)){data.settings.locale=DEFAULT_LOCALE;}
return data;}
function repairInitialMessages(data,initialMessages){initialMessages=fixTranslatedSheetIds(data,initialMessages);initialMessages=dropCommands(initialMessages,"SORT_CELLS");initialMessages=dropCommands(initialMessages,"SET_DECIMAL");initialMessages=fixChartDefinitions(data,initialMessages);return initialMessages;}
function fixTranslatedSheetIds(data,initialMessages){if(Object.keys(data).length!==0){return initialMessages;}
const sheetIds=[];const messages=[];const fixSheetId=(cmd)=>{if(cmd.type==="CREATE_SHEET"){sheetIds.push(cmd.sheetId);}
else if("sheetId"in cmd&&!sheetIds.includes(cmd.sheetId)){return{...cmd,sheetId:INITIAL_SHEET_ID};}
return cmd;};for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){messages.push({...message,commands:message.commands.map(fixSheetId),});}
else{messages.push(message);}}
return messages;}
function dropCommands(initialMessages,commandType){const messages=[];for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){messages.push({...message,commands:message.commands.filter((command)=>command.type!==commandType),});}
else{messages.push(message);}}
return messages;}
function fixChartDefinitions(data,initialMessages){const messages=[];const map={};for(const sheet of data.sheets||[]){sheet.figures?.forEach((figure)=>{if(figure.tag==="chart"){map[figure.id]=figure.data;}});}
for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){const commands=[];for(const cmd of message.commands){let command=cmd;switch(cmd.type){case"CREATE_CHART":map[cmd.id]=cmd.definition;break;case"UPDATE_CHART":if(!map[cmd.id]){console.log(`Fix chart definition: chart with id ${cmd.id} not found.`);continue;}
const definition=map[cmd.id];const newDefinition={...definition,...cmd.definition};command={...cmd,definition:newDefinition};map[cmd.id]=newDefinition;break;}
commands.push(command);}
messages.push({...message,commands,});}
else{messages.push(message);}}
return messages;}
function createEmptySheet(sheetId,name){return{id:sheetId,name,colNumber:26,rowNumber:100,cells:{},styles:{},formats:{},borders:{},cols:{},rows:{},merges:[],conditionalFormats:[],figures:[],tables:[],isVisible:true,};}
function createEmptyWorkbookData(sheetName="Sheet1"){const data={version:CURRENT_VERSION,sheets:[createEmptySheet(INITIAL_SHEET_ID,sheetName)],styles:{},formats:{},borders:{},revisionId:DEFAULT_REVISION_ID,uniqueFigureIds:true,settings:{locale:DEFAULT_LOCALE},pivots:{},pivotNextId:1,customTableStyles:{},};return data;}
function createEmptyExcelSheet(sheetId,name){return{...createEmptySheet(sheetId,name),charts:[],images:[],};}
function createEmptyExcelWorkbookData(){return{...createEmptyWorkbookData(),sheets:[createEmptyExcelSheet(INITIAL_SHEET_ID,"Sheet1")],};}
const PasteInteractiveContent={wrongPasteSelection:_t("This operation is not allowed with multiple selections."),willRemoveExistingMerge:_t("This operation is not possible due to a merge. Please remove the merges first than try again."),wrongFigurePasteOption:_t("Cannot do a special paste of a figure."),frozenPaneOverlap:_t("This operation is not allowed due to an overlapping frozen pane."),};function handlePasteResult(env,result){if(!result.isSuccessful){if(result.reasons.includes("WrongPasteSelection")){env.raiseError(PasteInteractiveContent.wrongPasteSelection);}
else if(result.reasons.includes("WillRemoveExistingMerge")){env.raiseError(PasteInteractiveContent.willRemoveExistingMerge);}
else if(result.reasons.includes("WrongFigurePasteOption")){env.raiseError(PasteInteractiveContent.wrongFigurePasteOption);}
else if(result.reasons.includes("FrozenPaneOverlap")){env.raiseError(PasteInteractiveContent.frozenPaneOverlap);}}}
function interactivePaste(env,target,pasteOption){const result=env.model.dispatch("PASTE",{target,pasteOption});handlePasteResult(env,result);}
function interactivePasteFromOS(env,target,clipboardContent,pasteOption){let result;try{result=env.model.dispatch("PASTE_FROM_OS_CLIPBOARD",{target,clipboardContent,pasteOption,});}
catch(error){const parsedSpreadsheetContent=clipboardContent[ClipboardMIMEType.OSpreadsheet]?JSON.parse(clipboardContent[ClipboardMIMEType.OSpreadsheet]):{};if(parsedSpreadsheetContent.version&&parsedSpreadsheetContent.version!==CURRENT_VERSION){env.raiseError(_t("An unexpected error occurred while pasting content.\
          This is probably due to a spreadsheet version mismatch."));}
result=env.model.dispatch("PASTE_FROM_OS_CLIPBOARD",{target,clipboardContent:{[ClipboardMIMEType.PlainText]:clipboardContent[ClipboardMIMEType.PlainText],},pasteOption,});}
handlePasteResult(env,result);}
const CfTerms={Errors:{["InvalidRange"]:_t("The range is invalid"),["FirstArgMissing"]:_t("The argument is missing. Please provide a value"),["SecondArgMissing"]:_t("The second argument is missing. Please provide a value"),["MinNaN"]:_t("The minpoint must be a number"),["MidNaN"]:_t("The midpoint must be a number"),["MaxNaN"]:_t("The maxpoint must be a number"),["ValueUpperInflectionNaN"]:_t("The first value must be a number"),["ValueLowerInflectionNaN"]:_t("The second value must be a number"),["MinBiggerThanMax"]:_t("Minimum must be smaller then Maximum"),["MinBiggerThanMid"]:_t("Minimum must be smaller then Midpoint"),["MidBiggerThanMax"]:_t("Midpoint must be smaller then Maximum"),["LowerBiggerThanUpper"]:_t("Lower inflection point must be smaller than upper inflection point"),["MinInvalidFormula"]:_t("Invalid Minpoint formula"),["MaxInvalidFormula"]:_t("Invalid Maxpoint formula"),["MidInvalidFormula"]:_t("Invalid Midpoint formula"),["ValueUpperInvalidFormula"]:_t("Invalid upper inflection point formula"),["ValueLowerInvalidFormula"]:_t("Invalid lower inflection point formula"),["EmptyRange"]:_t("A range needs to be defined"),["ValueCellIsInvalidFormula"]:_t("At least one of the provided values is an invalid formula"),["DataBarRangeValuesMismatch"]:_t("All the ranges and the range values must have the same size"),Unexpected:_t("The rule is invalid for an unknown reason"),},ColorScale:_t("Color scale"),IconSet:_t("Icon set"),DataBar:_t("Data bar"),};const CellIsOperators={IsEmpty:_t("Is empty"),IsNotEmpty:_t("Is not empty"),ContainsText:_t("Contains"),NotContains:_t("Does not contain"),BeginsWith:_t("Starts with"),EndsWith:_t("Ends with"),Equal:_t("Is equal to"),NotEqual:_t("Is not equal to"),GreaterThan:_t("Is greater than"),GreaterThanOrEqual:_t("Is greater than or equal to"),LessThan:_t("Is less than"),LessThanOrEqual:_t("Is less than or equal to"),Between:_t("Is between"),NotBetween:_t("Is not between"),};const ChartTerms={Series:_t("Series"),BackgroundColor:_t("Background color"),StackedBarChart:_t("Stacked bar chart"),StackedLineChart:_t("Stacked line chart"),StackedAreaChart:_t("Stacked area chart"),CumulativeData:_t("Cumulative data"),TreatLabelsAsText:_t("Treat labels as text"),AggregatedChart:_t("Aggregate"),Errors:{Unexpected:_t("The chart definition is invalid for an unknown reason"),["InvalidDataSet"]:_t("The dataset is invalid"),["InvalidLabelRange"]:_t("Labels are invalid"),["InvalidScorecardKeyValue"]:_t("The key value is invalid"),["InvalidScorecardBaseline"]:_t("The baseline value is invalid"),["InvalidGaugeDataRange"]:_t("The data range is invalid"),["EmptyGaugeRangeMin"]:_t("A minimum range limit value is needed"),["GaugeRangeMinNaN"]:_t("The minimum range limit value must be a number"),["EmptyGaugeRangeMax"]:_t("A maximum range limit value is needed"),["GaugeRangeMaxNaN"]:_t("The maximum range limit value must be a number"),["GaugeRangeMinBiggerThanRangeMax"]:_t("Minimum range limit must be smaller than maximum range limit"),["GaugeLowerInflectionPointNaN"]:_t("The lower inflection point value must be a number"),["GaugeUpperInflectionPointNaN"]:_t("The upper inflection point value must be a number"),},};const CustomCurrencyTerms={Custom:_t("Custom"),};const MergeErrorMessage=_t("Merged cells are preventing this operation. Unmerge those cells and try again.");const SplitToColumnsTerms={Errors:{Unexpected:_t("Cannot split the selection for an unknown reason"),["NoSplitSeparatorInSelection"]:_t("There is no match for the selected separator in the selection"),["MoreThanOneColumnSelected"]:_t("Only a selection from a single column can be split"),["SplitWillOverwriteContent"]:_t("Splitting will overwrite existing content"),},};const RemoveDuplicateTerms={Errors:{Unexpected:_t("Cannot remove duplicates for an unknown reason"),["MoreThanOneRangeSelected"]:_t("Please select only one range of cells"),["EmptyTarget"]:_t("Please select a range of cells containing values."),["NoColumnsProvided"]:_t("Please select at latest one column to analyze."),["WillRemoveExistingMerge"]:PasteInteractiveContent.willRemoveExistingMerge,},};const DVTerms={DateIs:{today:_t("today"),yesterday:_t("yesterday"),tomorrow:_t("tomorrow"),lastWeek:_t("in the past week"),lastMonth:_t("in the past month"),lastYear:_t("in the past year"),},DateIsBefore:{today:_t("today"),yesterday:_t("yesterday"),tomorrow:_t("tomorrow"),lastWeek:_t("one week ago"),lastMonth:_t("one month ago"),lastYear:_t("one year ago"),},CriterionError:{notEmptyValue:_t("The value must not be empty"),numberValue:_t("The value must be a number"),dateValue:_t("The value must be a date"),validRange:_t("The value must be a valid range"),},};const TableTerms={Errors:{Unexpected:_t("The table zone is invalid for an unknown reason"),["TableOverlap"]:_t("You cannot create overlapping tables."),["NonContinuousTargets"]:_t("A table can only be created on a continuous selection."),["InvalidRange"]:_t("The range is invalid"),["TargetOutOfSheet"]:_t("The range is out of the sheet"),},Checkboxes:{hasFilters:_t("Filter button"),headerRow:_t("Header row(s)"),bandedRows:_t("Banded rows"),firstColumn:_t("First column"),lastColumn:_t("Last column"),bandedColumns:_t("Banded columns"),automaticAutofill:_t("Automatically autofill formulas"),totalRow:_t("Total row"),isDynamic:_t("Auto-adjust to formula result"),},Tooltips:{filterWithoutHeader:_t("Cannot have filters without a header row"),isDynamic:_t("For tables based on array formulas only"),},};const measureDisplayTerms={labels:{no_calculations:_t("No calculations"),"%_of_grand_total":_t("% of grand total"),"%_of_col_total":_t("% of column total"),"%_of_row_total":_t("% of row total"),"%_of":_t("% of"),"%_of_parent_row_total":_t("% of parent row total"),"%_of_parent_col_total":_t("% of parent column total"),"%_of_parent_total":_t("% of parent total"),difference_from:_t("Difference from"),"%_difference_from":_t("% difference from"),running_total:_t("Running total"),"%_running_total":_t("% Running total"),rank_asc:_t("Rank smallest to largest"),rank_desc:_t("Rank largest to smallest"),index:_t("Index"),},descriptions:{"%_of_grand_total":()=>_t("Displayed as % of grand total"),"%_of_col_total":()=>_t("Displayed as % of column total"),"%_of_row_total":()=>_t("Displayed as % of row total"),"%_of":(field)=>_t('Displayed as % of "%s"',field),"%_of_parent_row_total":(field)=>_t('Displayed as % of parent row total of "%s"',field),"%_of_parent_col_total":()=>_t("Displayed as % of parent column total"),"%_of_parent_total":(field)=>_t('Displayed as % of parent "%s" total',field),difference_from:(field)=>_t('Displayed as difference from "%s"',field),"%_difference_from":(field)=>_t('Displayed as % difference from "%s"',field),running_total:(field)=>_t('Displayed as running total based on "%s"',field),"%_running_total":(field)=>_t('Displayed as % running total based on "%s"',field),rank_asc:(field)=>_t('Displayed as rank from smallest to largest based on "%s"',field),rank_desc:(field)=>_t('Displayed as rank largest to smallest based on "%s"',field),index:()=>_t("Displayed as index"),},documentation:{no_calculations:_t("Displays the value that is entered in the field."),"%_of_grand_total":_t("Displays values as a percentage of the grand total of all the values or data points in the report."),"%_of_col_total":_t("Displays all the values in each column or series as a percentage of the total for the column or series."),"%_of_row_total":_t("Displays the value in each row or category as a percentage of the total for the row or category."),"%_of":_t("Displays values as a percentage of the value of the Base item in the Base field."),"%_of_parent_row_total":_t("Calculates values as follows:\n(value for the item) / (value for the parent item on rows)"),"%_of_parent_col_total":_t("Calculates values as follows:\n(value for the item) / (value for the parent item on columns)"),"%_of_parent_total":_t("Calculates values as follows:\n(value for the item) / (value for the parent item of the selected Base field)"),difference_from:_t("Displays values as the difference from the value of the Base item in the Base field."),"%_difference_from":_t("Displays values as the percentage difference from the value of the Base item in the Base field."),running_total:_t("Displays the value for successive items in the Base field as a running total."),"%_running_total":_t("Calculates the value as a percentage for successive items in the Base field that are displayed as a running total."),rank_asc:_t("Displays the rank of selected values in a specific field, listing the smallest item in the field as 1, and each larger value with a higher rank value."),rank_desc:_t("Displays the rank of selected values in a specific field, listing the largest item in the field as 1, and each smaller value with a higher rank value."),index:_t("Calculates values as follows:\n((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))"),},};function getData(getters,ds){if(ds.dataRange){const labelCellZone=ds.labelCell?[ds.labelCell.zone]:[];const dataZone=recomputeZones([ds.dataRange.zone],labelCellZone)[0];if(dataZone===undefined){return[];}
const dataRange=getters.getRangeFromZone(ds.dataRange.sheetId,dataZone);return getters.getRangeValues(dataRange).map((value)=>(value===""?undefined:value));}
return[];}
function filterEmptyDataPoints(labels,datasets){const numberOfDataPoints=Math.max(labels.length,...datasets.map((dataset)=>dataset.data?.length||0));const dataPointsIndexes=range(0,numberOfDataPoints).filter((dataPointIndex)=>{const label=labels[dataPointIndex];const values=datasets.map((dataset)=>dataset.data?.[dataPointIndex]);return label||values.some((value)=>value===0||Boolean(value));});return{labels:dataPointsIndexes.map((i)=>labels[i]||""),dataSetsValues:datasets.map((dataset)=>({...dataset,data:dataPointsIndexes.map((i)=>dataset.data[i]),})),};}
function aggregateDataForLabels(labels,datasets){const parseNumber=(value)=>(typeof value==="number"?value:0);const labelSet=new Set(labels);const labelMap={};labelSet.forEach((label)=>{labelMap[label]=new Array(datasets.length).fill(0);});for(const indexOfLabel of range(0,labels.length)){const label=labels[indexOfLabel];for(const indexOfDataset of range(0,datasets.length)){labelMap[label][indexOfDataset]+=parseNumber(datasets[indexOfDataset].data[indexOfLabel]);}}
return{labels:Array.from(labelSet),dataSetsValues:datasets.map((dataset,indexOfDataset)=>({...dataset,data:Array.from(labelSet).map((label)=>labelMap[label][indexOfDataset]),})),};}
function truncateLabel(label){if(!label){return"";}
if(label.length>MAX_CHAR_LABEL){return label.substring(0,MAX_CHAR_LABEL)+"…";}
return label;}
function getDefaultChartJsRuntime(chart,labels,fontColor,{format,locale,truncateLabels=true,horizontalChart,}){const chartTitle=chart.title.text?chart.title:{...chart.title,content:""};const options={responsive:true,maintainAspectRatio:false,layout:{padding:{left:DEFAULT_CHART_PADDING,right:DEFAULT_CHART_PADDING,top:chartTitle.text?DEFAULT_CHART_PADDING/2:DEFAULT_CHART_PADDING+5,bottom:DEFAULT_CHART_PADDING,},},elements:{line:{fill:false,},point:{hitRadius:15,},},animation:false,plugins:{title:{display:!!chartTitle.text,text:_t(chartTitle.text),color:chartTitle?.color??fontColor,align:chartTitle.align==="center"?"center":chartTitle.align==="right"?"end":"start",font:{size:DEFAULT_CHART_FONT_SIZE,weight:chartTitle.bold?"bold":"normal",style:chartTitle.italic?"italic":"normal",},},legend:{onClick:()=>{},},tooltip:{callbacks:{label:function(tooltipItem){const xLabel=tooltipItem.dataset?.label||tooltipItem.label;let yLabel=horizontalChart?tooltipItem.parsed.x:tooltipItem.parsed.y;if(!yLabel){yLabel=tooltipItem.parsed;}
const toolTipFormat=!format&&Math.abs(yLabel)>=1000?"#,##":format;const yLabelStr=formatValue(yLabel,{format:toolTipFormat,locale});return xLabel?`${xLabel}: ${yLabelStr}`:yLabelStr;},},},},};return{type:chart.type,options,data:{labels:truncateLabels?labels.map(truncateLabel):labels,datasets:[],},platform:undefined,plugins:[],};}
function getChartLabelFormat(getters,range){if(!range)
return undefined;return getters.getEvaluatedCell({sheetId:range.sheetId,col:range.zone.left,row:range.zone.top,}).format;}
function getChartLabelValues(getters,dataSets,labelRange){let labels={values:[],formattedValues:[]};if(labelRange){const{left}=labelRange.zone;if(!labelRange.invalidXc&&!labelRange.invalidSheetName&&!getters.isColHidden(labelRange.sheetId,left)){labels={formattedValues:getters.getRangeFormattedValues(labelRange),values:getters.getRangeValues(labelRange).map((val)=>String(val??"")),};}
else if(dataSets[0]){const ranges=getData(getters,dataSets[0]);labels={formattedValues:range(0,ranges.length).map((r)=>r.toString()),values:labels.formattedValues,};}}
else if(dataSets.length===1){for(let i=0;i<getData(getters,dataSets[0]).length;i++){labels.formattedValues.push("");labels.values.push("");}}
else{if(dataSets[0]){const ranges=getData(getters,dataSets[0]);labels={formattedValues:range(0,ranges.length).map((r)=>r.toString()),values:labels.formattedValues,};}}
return labels;}
function getChartDatasetFormat(getters,dataSets){for(const ds of dataSets){const formatsInDataset=getters.getRangeFormats(ds.dataRange);const format=formatsInDataset.find((f)=>f!==undefined&&!isDateTimeFormat(f));if(format)
return format;}
return undefined;}
function getChartDatasetValues(getters,dataSets){const datasetValues=[];for(const[dsIndex,ds]of Object.entries(dataSets)){if(getters.isColHidden(ds.dataRange.sheetId,ds.dataRange.zone.left)){continue;}
let label;if(ds.labelCell){const labelRange=ds.labelCell;const cell=labelRange?getters.getEvaluatedCell({sheetId:labelRange.sheetId,col:labelRange.zone.left,row:labelRange.zone.top,}):undefined;label=cell&&labelRange?truncateLabel(cell.formattedValue):(label=`${ChartTerms.Series} ${parseInt(dsIndex) + 1}`);}
else{label=`${ChartTerms.Series} ${parseInt(dsIndex) + 1}`;}
let data=ds.dataRange?getData(getters,ds):[];if(data.every((e)=>typeof e==="string"&&!isEvaluationError(e))&&data.some((e)=>e!=="")){data.fill(1);}
else if(data.every((cell)=>cell===undefined||cell===null||!isNumber(cell.toString(),getters.getLocale()))){continue;}
datasetValues.push({data,label});}
return datasetValues;}
function getFillingMode(index,stackedChart){if(!stackedChart){return"origin";}
return index===0?"origin":"-1";}
function chartToImage(runtime,figure,type){const div=document.createElement("div");div.style.width=`${figure.width}px`;div.style.height=`${figure.height}px`;const canvas=document.createElement("canvas");div.append(canvas);canvas.setAttribute("width",figure.width.toString());canvas.setAttribute("height",figure.height.toString());document.body.append(div);if("chartJsConfig"in runtime){const config=deepCopy(runtime.chartJsConfig);config.plugins=[backgroundColorChartJSPlugin];const chart=new window.Chart(canvas,config);const imgContent=chart.toBase64Image();chart.destroy();div.remove();return imgContent;}
else if(type==="scorecard"){const design=getScorecardConfiguration(figure,runtime);drawScoreChart(design,canvas);const imgContent=canvas.toDataURL();div.remove();return imgContent;}
else if(type==="gauge"){drawGaugeChart(canvas,runtime);const imgContent=canvas.toDataURL();div.remove();return imgContent;}
return undefined;}
const backgroundColorChartJSPlugin={id:"customCanvasBackgroundColor",beforeDraw:(chart)=>{const{ctx}=chart;ctx.save();ctx.globalCompositeOperation="destination-over";ctx.fillStyle="#ffffff";ctx.fillRect(0,0,chart.width,chart.height);ctx.restore();},};class BarChart extends AbstractChart{dataSets;labelRange;background;legendPosition;stacked;aggregated;type="bar";dataSetsHaveTitle;dataSetDesign;axesDesign;horizontal;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.stacked=definition.stacked;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.horizontal=definition.horizontal;this.showValues=definition.showValues;}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,stacked:context.stacked??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"bar",labelRange:context.auxiliaryRange||undefined,axesDesign:context.axesDesign,showValues:context.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new BarChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new BarChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"bar",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,stacked:this.stacked,aggregated:this.aggregated,axesDesign:this.axesDesign,horizontal:this.horizontal,showValues:this.showValues,};}
getDefinitionForExcel(){if(this.aggregated)
return undefined;const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new BarChart(definition,this.sheetId,this.getters);}}
function createBarChartRuntime(chart,getters){const labelValues=getChartLabelValues(getters,chart.dataSets,chart.labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,chart.dataSets);if(chart.dataSetsHaveTitle&&dataSetsValues[0]&&labels.length>dataSetsValues[0].data.length){labels.shift();}
({labels,dataSetsValues}=filterEmptyDataPoints(labels,dataSetsValues));if(chart.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
const dataSetFormat=getChartDatasetFormat(getters,chart.dataSets);const locale=getters.getLocale();const localeFormat={format:dataSetFormat,locale};const fontColor=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,fontColor,{...localeFormat,horizontalChart:chart.horizontal,});const legend={labels:{color:fontColor},};if(chart.legendPosition==="none"){legend.display=false;}
else{legend.position=chart.legendPosition;}
config.options.plugins.legend={...config.options.plugins?.legend,...legend};config.options.layout={padding:computeChartPadding({displayTitle:!!chart.title.text,displayLegend:chart.legendPosition==="top",}),};config.options.indexAxis=chart.horizontal?"y":"x";config.options.scales={};const labelsAxis={ticks:{padding:5,color:fontColor}};const valuesAxis={beginAtZero:true,ticks:{color:fontColor,callback:formatTickValue(localeFormat),},};const xAxis=chart.horizontal?valuesAxis:labelsAxis;const yAxis=chart.horizontal?labelsAxis:valuesAxis;const{useLeftAxis,useRightAxis}=getDefinedAxis(chart.getDefinition());config.options.scales.x={...xAxis,title:getChartAxisTitleRuntime(chart.axesDesign?.x)};if(useLeftAxis){config.options.scales.y={...yAxis,position:"left",title:getChartAxisTitleRuntime(chart.axesDesign?.y),};}
if(useRightAxis){config.options.scales.y1={...yAxis,position:"right",title:getChartAxisTitleRuntime(chart.axesDesign?.y1),};}
if(chart.stacked){config.options.scales.x.stacked=true;if(useLeftAxis){config.options.scales.y.stacked=true;}
if(useRightAxis){config.options.scales.y1.stacked=true;}}
config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,background:chart.background,horizontal:chart.horizontal,callback:formatTickValue(localeFormat),};const definition=chart.getDefinition();const colors=getChartColorsGenerator(definition,dataSetsValues.length);const trendDatasets=[];for(const index in dataSetsValues){const{label,data}=dataSetsValues[index];const color=colors.next();const dataset={label,data,borderColor:BORDER_CHART_COLOR,borderWidth:1,backgroundColor:color,};config.data.datasets.push(dataset);if(definition.dataSets?.[index]?.label){const label=definition.dataSets[index].label;dataset.label=label;}
if(definition.dataSets?.[index]?.yAxisId&&!chart.horizontal){dataset["yAxisID"]=definition.dataSets[index].yAxisId;}
const trend=definition.dataSets?.[index].trend;if(!trend?.display||chart.horizontal){continue;}
const trendDataset=getTrendDatasetForBarChart(trend,dataset);if(trendDataset){trendDatasets.push(trendDataset);}}
if(trendDatasets.length){const maxLength=Math.max(...trendDatasets.map((trendDataset)=>trendDataset.data.length));config.options.scales[TREND_LINE_XAXIS_ID]={...xAxis,labels:Array(maxLength).fill(""),offset:false,display:false,};trendDatasets.forEach((x)=>config.data.datasets.push(x));const originalTooltipTitle=config.options.plugins.tooltip.callbacks.title;config.options.plugins.tooltip.callbacks.title=function(tooltipItems){if(tooltipItems.some((item)=>item.dataset.xAxisID!==TREND_LINE_XAXIS_ID)){return originalTooltipTitle?.(tooltipItems);}
return"";};}
return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
const UNIT_LENGTH={second:1000,minute:1000*60,hour:1000*3600,day:1000*3600*24,month:1000*3600*24*30,year:1000*3600*24*365,};const Milliseconds={inSeconds:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.second);},inMinutes:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.minute);},inHours:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.hour);},inDays:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.day);},inMonths:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.month);},inYears:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.year);},};const timeFormatLuxonCompatible=/^((d|dd|m|mm|yyyy|yy|hh|h|ss|a)(-|:|\s|\/))*(d|dd|m|mm|yyyy|yy|hh|h|ss|a)$/i;function getChartTimeOptions(labels,labelFormat,locale){const luxonFormat=convertDateFormatForLuxon(labelFormat);const timeUnit=getBestTimeUnitForScale(labels,luxonFormat,locale);const displayFormats={};if(timeUnit){displayFormats[timeUnit]=luxonFormat;}
return{parser:luxonFormat,displayFormats,unit:timeUnit??false,};}
function convertDateFormatForLuxon(format){const indexH=format.indexOf("h");if(indexH>=0){format=format.slice(0,indexH).replace(/m/g,"M")+format.slice(indexH);}
else{format=format.replace(/m/g,"M");}
if(!format.includes("a")){format=format.replace(/h/g,"H");}
return format;}
function getFormatMinDisplayUnit(format){if(format.includes("s")){return"second";}
else if(format.includes("m")){return"minute";}
else if(format.includes("h")||format.includes("H")){return"hour";}
else if(format.includes("d")){return"day";}
else if(format.includes("M")){return"month";}
return"year";}
function getBestTimeUnitForScale(labels,format,locale){const labelDates=labels.map((label)=>parseDateTime(label,locale)?.jsDate);if(labelDates.some((date)=>date===undefined)||labels.length<2){return undefined;}
const labelsTimestamps=labelDates.map((date)=>date.getTime());const period=largeMax(labelsTimestamps)-largeMin(labelsTimestamps);const minUnit=getFormatMinDisplayUnit(format);if(UNIT_LENGTH.second>=UNIT_LENGTH[minUnit]&&Milliseconds.inSeconds(period)<180){return"second";}
else if(UNIT_LENGTH.minute>=UNIT_LENGTH[minUnit]&&Milliseconds.inMinutes(period)<180){return"minute";}
else if(UNIT_LENGTH.hour>=UNIT_LENGTH[minUnit]&&Milliseconds.inHours(period)<96){return"hour";}
else if(UNIT_LENGTH.day>=UNIT_LENGTH[minUnit]&&Milliseconds.inDays(period)<90){return"day";}
else if(UNIT_LENGTH.month>=UNIT_LENGTH[minUnit]&&Milliseconds.inMonths(period)<36){return"month";}
return"year";}
function fixEmptyLabelsForDateCharts(labels,dataSetsValues){if(labels.length===0||labels.every((label)=>!label)){return{labels,dataSetsValues};}
const newLabels=[...labels];const newDatasets=deepCopy(dataSetsValues);for(let i=0;i<newLabels.length;i++){if(!newLabels[i]){newLabels[i]=findNextDefinedValue(newLabels,i);for(let ds of newDatasets){ds.data[i]=undefined;}}}
return{labels:newLabels,dataSetsValues:newDatasets};}
function canChartParseLabels(labelRange,getters){return canBeDateChart(labelRange,getters)||canBeLinearChart(labelRange,getters);}
function getChartAxisType(chart,getters){if(isDateChart(chart,getters)&&isLuxonTimeAdapterInstalled()){return"time";}
if(isLinearChart(chart,getters)){return"linear";}
return"category";}
function isDateChart(chart,getters){return!chart.labelsAsText&&canBeDateChart(chart.labelRange,getters);}
function isLinearChart(chart,getters){return!chart.labelsAsText&&canBeLinearChart(chart.labelRange,getters);}
function canBeDateChart(labelRange,getters){if(!labelRange||!canBeLinearChart(labelRange,getters)){return false;}
const labelFormat=getters.getEvaluatedCell({sheetId:labelRange.sheetId,col:labelRange.zone.left,row:labelRange.zone.top,}).format;return Boolean(labelFormat&&timeFormatLuxonCompatible.test(labelFormat));}
function canBeLinearChart(labelRange,getters){if(!labelRange){return false;}
const labels=getters.getRangeValues(labelRange);if(labels.some((label)=>isNaN(Number(label))&&label)){return false;}
if(labels.every((label)=>!label)){return false;}
return true;}
let missingTimeAdapterAlreadyWarned=false;function isLuxonTimeAdapterInstalled(){if(!window.Chart){return false;}
const adapter=new window.Chart._adapters._date({});const isInstalled=adapter._id==="luxon";if(!isInstalled&&!missingTimeAdapterAlreadyWarned){missingTimeAdapterAlreadyWarned=true;console.warn("'chartjs-adapter-luxon' time adapter is not installed. Time scale axes are disabled.");}
return isInstalled;}
function getTrendDatasetForLineChart(config,dataset,axisType,locale){const filteredValues=[];const filteredLabels=[];const labels=[];const datasetLength=dataset.data.length;if(datasetLength<2){return;}
switch(axisType){case"category":for(let i=0;i<datasetLength;i++){if(typeof dataset.data[i]==="number"){filteredValues.push(dataset.data[i]);filteredLabels.push(i+1);}
labels.push(i+1);}
break;case"linear":for(const point of dataset.data){const label=Number(point.x);if(isNaN(label)){continue;}
if(typeof point.y==="number"){filteredValues.push(point.y);filteredLabels.push(label);}
labels.push(label);}
break;case"time":for(const point of dataset.data){const date=toJsDate({value:point.x},locale).getTime();if(typeof point.y==="number"){filteredValues.push(point.y);filteredLabels.push(date);}
labels.push(date);}
break;}
const xmin=Math.min(...labels);const xmax=Math.max(...labels);if(xmax===xmin){return;}
const numberOfStep=5*labels.length;const step=(xmax-xmin)/numberOfStep;const newLabels=range(xmin,xmax+step/2,step);const newValues=interpolateData(config,filteredValues,filteredLabels,newLabels);if(!newValues.length){return;}
return getFullTrendingLineDataSet(dataset,config,newValues);}
function createLineOrScatterChartRuntime(chart,getters){const axisType=getChartAxisType(chart,getters);const labelValues=getChartLabelValues(getters,chart.dataSets,chart.labelRange);let labels=axisType==="linear"?labelValues.values:labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,chart.dataSets);if(chart.dataSetsHaveTitle&&dataSetsValues[0]&&labels.length>dataSetsValues[0].data.length){labels.shift();}
({labels,dataSetsValues}=filterEmptyDataPoints(labels,dataSetsValues));if(axisType==="time"){({labels,dataSetsValues}=fixEmptyLabelsForDateCharts(labels,dataSetsValues));}
if(chart.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
const locale=getters.getLocale();const truncateLabels=axisType==="category";const dataSetFormat=getChartDatasetFormat(getters,chart.dataSets);const options={format:dataSetFormat,locale,truncateLabels};const fontColor=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,fontColor,options);const legend={labels:{color:fontColor,generateLabels(chart){const{data}=chart;const labels=window.Chart.defaults.plugins.legend.labels.generateLabels(chart);for(const[index,label]of labels.entries()){label.fillStyle=data.datasets[index].borderColor;}
return labels;},},};if(chart.legendPosition==="none"){legend.display=false;}
else{legend.position=chart.legendPosition;}
Object.assign(config.options.plugins.legend||{},legend);config.options.layout={padding:computeChartPadding({displayTitle:!!chart.title.text,displayLegend:chart.legendPosition==="top",}),};const xAxis={ticks:{padding:5,color:fontColor,},title:getChartAxisTitleRuntime(chart.axesDesign?.x),};config.options.scales={x:xAxis,};const yAxis={beginAtZero:true,ticks:{color:fontColor,callback:formatTickValue(options),},};const{useLeftAxis,useRightAxis}=getDefinedAxis(chart.getDefinition());if(useLeftAxis){config.options.scales.y={...yAxis,position:"left",title:getChartAxisTitleRuntime(chart.axesDesign?.y),};}
if(useRightAxis){config.options.scales.y1={...yAxis,position:"right",title:getChartAxisTitleRuntime(chart.axesDesign?.y1),};}
if("stacked"in chart&&chart.stacked){if(useLeftAxis){config.options.scales.y.stacked=true;}
if(useRightAxis){config.options.scales.y1.stacked=true;}}
config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,background:chart.background,callback:formatTickValue(options),};if(chart.dataSetsHaveTitle&&dataSetsValues[0]&&labels.length>dataSetsValues[0].data.length){labels.shift();}
const labelFormat=getChartLabelFormat(getters,chart.labelRange);if(axisType==="time"){const axis={type:"time",time:getChartTimeOptions(labels,labelFormat,locale),};Object.assign(config.options.scales.x,axis);config.options.scales.x.ticks.maxTicksLimit=15;}
else if(axisType==="linear"){config.options.scales.x.type="linear";config.options.scales.x.ticks.callback=(value)=>formatValue(value,{format:labelFormat,locale});config.options.plugins.tooltip.callbacks.title=()=>"";config.options.plugins.tooltip.callbacks.label=(tooltipItem)=>{const dataSetPoint=dataSetsValues[tooltipItem.datasetIndex].data[tooltipItem.dataIndex];let label=tooltipItem.label||labelValues.values[tooltipItem.dataIndex];if(isNumber(label,locale)){label=toNumber(label,locale);}
const formattedX=formatValue(label,{locale,format:labelFormat});const formattedY=formatValue(dataSetPoint,{locale,format:dataSetFormat});const dataSetTitle=tooltipItem.dataset.label;return formattedX?`${dataSetTitle}: (${formattedX}, ${formattedY})`:`${dataSetTitle}: ${formattedY}`;};}
const areaChart="fillArea"in chart?chart.fillArea:false;const stackedChart="stacked"in chart?chart.stacked:false;const cumulative="cumulative"in chart?chart.cumulative:false;const definition=chart.getDefinition();const colors=getChartColorsGenerator(definition,dataSetsValues.length);for(let[index,{label,data}]of dataSetsValues.entries()){const color=colors.next();let backgroundRGBA=colorToRGBA(color);if(areaChart){backgroundRGBA.a=LINE_FILL_TRANSPARENCY;}
if(cumulative){let accumulator=0;data=data.map((value)=>{if(!isNaN(value)){accumulator+=parseFloat(value);return accumulator;}
return value;});}
if(["linear","time"].includes(axisType)){data=data.map((y,index)=>({x:labels[index]||undefined,y}));}
const backgroundColor=rgbaToHex(backgroundRGBA);const dataset={label,data,tension:0,borderColor:color,backgroundColor,pointBackgroundColor:color,fill:areaChart?getFillingMode(index,stackedChart):false,};config.data.datasets.push(dataset);}
let maxLength=0;const trendDatasets=[];for(const[index,dataset]of config.data.datasets.entries()){if(definition.dataSets?.[index]?.label){const label=definition.dataSets[index].label;dataset.label=label;}
if(definition.dataSets?.[index]?.yAxisId){dataset["yAxisID"]=definition.dataSets[index].yAxisId;}
const trend=definition.dataSets?.[index].trend;if(!trend?.display){continue;}
const trendDataset=getTrendDatasetForLineChart(trend,dataset,axisType,locale);if(trendDataset){maxLength=Math.max(maxLength,trendDataset.data.length);trendDatasets.push(trendDataset);dataSetsValues.push(trendDataset);}}
if(trendDatasets.length){config.options.scales[TREND_LINE_XAXIS_ID]={...xAxis,type:"category",labels:range(0,maxLength).map((x)=>x.toString()),offset:false,display:false,};trendDatasets.forEach((x)=>config.data.datasets.push(x));const originalTooltipTitle=config.options.plugins.tooltip.callbacks.title;config.options.plugins.tooltip.callbacks.title=function(tooltipItems){if(tooltipItems.some((item)=>item.dataset.xAxisID!==TREND_LINE_XAXIS_ID)){return originalTooltipTitle?.(tooltipItems);}
return"";};}
return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR,dataSetsValues,labelValues,dataSetFormat,labelFormat,};}
class ComboChart extends AbstractChart{dataSets;labelRange;background;legendPosition;aggregated;dataSetsHaveTitle;dataSetDesign;axesDesign;type="combo";showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),type:this.dataSetDesign?.[i]?.type??(i?"line":"bar"),});}
return{type:"combo",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,axesDesign:this.axesDesign,showValues:this.showValues,};}
getDefinitionForExcel(){if(this.aggregated){return undefined;}
const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new ComboChart(definition,this.sheetId,this.getters);}
static getDefinitionFromContextCreation(context){const dataSets=(context.range??[]).map((ds,index)=>({...ds,type:index?"line":"bar",}));return{background:context.background,dataSets,dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated,legendPosition:context.legendPosition??"top",title:context.title||{text:""},labelRange:context.auxiliaryRange||undefined,type:"combo",axesDesign:context.axesDesign,showValues:context.showValues,};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new ComboChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new ComboChart(definition,sheetId,this.getters);}}
function createComboChartRuntime(chart,getters){const mainDataSetFormat=chart.dataSets.length?getChartDatasetFormat(getters,[chart.dataSets[0]]):undefined;const lineDataSetsFormat=getChartDatasetFormat(getters,chart.dataSets.slice(1));const locale=getters.getLocale();const labelValues=getChartLabelValues(getters,chart.dataSets,chart.labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,chart.dataSets);if(chart.dataSetsHaveTitle&&dataSetsValues[0]&&labels.length>dataSetsValues[0].data.length){labels.shift();}
({labels,dataSetsValues}=filterEmptyDataPoints(labels,dataSetsValues));if(chart.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
const localeFormat={format:mainDataSetFormat,locale};const fontColor=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,fontColor,localeFormat);const legend={labels:{color:fontColor},};if(chart.legendPosition==="none"){legend.display=false;}
else{legend.position=chart.legendPosition;}
config.options.plugins.legend={...config.options.plugins?.legend,...legend};config.options.layout={padding:computeChartPadding({displayTitle:!!chart.title.text,displayLegend:chart.legendPosition==="top",}),};config.options.scales={x:{ticks:{padding:5,color:fontColor,},title:getChartAxisTitleRuntime(chart.axesDesign?.x),},};const leftVerticalAxis={beginAtZero:true,ticks:{color:fontColor,callback:formatTickValue({format:mainDataSetFormat,locale}),},};const rightVerticalAxis={beginAtZero:true,ticks:{color:fontColor,callback:formatTickValue({format:lineDataSetsFormat,locale}),},};const definition=chart.getDefinition();const{useLeftAxis,useRightAxis}=getDefinedAxis(definition);if(useLeftAxis){config.options.scales.y={...leftVerticalAxis,position:"left",title:getChartAxisTitleRuntime(chart.axesDesign?.y),};}
if(useRightAxis){config.options.scales.y1={...rightVerticalAxis,position:"right",grid:{display:false,},title:getChartAxisTitleRuntime(chart.axesDesign?.y1),};}
config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,background:chart.background,callback:formatTickValue({format:mainDataSetFormat,locale}),};const colors=getChartColorsGenerator(definition,dataSetsValues.length);let maxLength=0;const trendDatasets=[];for(let[index,{label,data}]of dataSetsValues.entries()){const design=definition.dataSets[index];const color=colors.next();const type=design?.type??"line";const dataset={label:design?.label??label,data,borderColor:color,backgroundColor:color,yAxisID:design?.yAxisId??"y",type,order:type==="bar"?dataSetsValues.length+index:index,};config.data.datasets.push(dataset);const trend=definition.dataSets?.[index].trend;if(!trend?.display){continue;}
maxLength=Math.max(maxLength,data.length);const trendDataset=getTrendDatasetForBarChart(trend,dataset);if(trendDataset){trendDatasets.push(trendDataset);}}
if(trendDatasets.length){const trendLinesMaxLength=Math.max(...trendDatasets.map((trend)=>trend.data.length));config.options.scales[TREND_LINE_XAXIS_ID]={labels:Array(Math.round(trendLinesMaxLength)).fill(""),offset:false,display:false,};trendDatasets.forEach((x)=>config.data.datasets.push(x));const originalTooltipTitle=config.options.plugins.tooltip.callbacks.title;config.options.plugins.tooltip.callbacks.title=function(tooltipItems){if(tooltipItems.some((item)=>item.dataset.xAxisID!==TREND_LINE_XAXIS_ID)){return originalTooltipTitle?.(tooltipItems);}
return"";};}
return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
function isDataRangeValid(definition){return definition.dataRange&&!rangeReference.test(definition.dataRange)?"InvalidGaugeDataRange":"Success";}
function checkRangeLimits(check,batchValidations){return batchValidations((definition)=>{if(definition.sectionRule){return check(definition.sectionRule.rangeMin,"rangeMin");}
return"Success";},(definition)=>{if(definition.sectionRule){return check(definition.sectionRule.rangeMax,"rangeMax");}
return"Success";});}
function checkInflectionPointsValue(check,batchValidations){return batchValidations((definition)=>{if(definition.sectionRule){return check(definition.sectionRule.lowerInflectionPoint.value,"lowerInflectionPointValue");}
return"Success";},(definition)=>{if(definition.sectionRule){return check(definition.sectionRule.upperInflectionPoint.value,"upperInflectionPointValue");}
return"Success";});}
function checkRangeMinBiggerThanRangeMax(definition){if(definition.sectionRule){if(Number(definition.sectionRule.rangeMin)>=Number(definition.sectionRule.rangeMax)){return"GaugeRangeMinBiggerThanRangeMax";}}
return"Success";}
function checkEmpty(value,valueName){if(value===""){switch(valueName){case"rangeMin":return"EmptyGaugeRangeMin";case"rangeMax":return"EmptyGaugeRangeMax";}}
return"Success";}
function checkNaN(value,valueName){if(isNaN(value)){switch(valueName){case"rangeMin":return"GaugeRangeMinNaN";case"rangeMax":return"GaugeRangeMaxNaN";case"lowerInflectionPointValue":return"GaugeLowerInflectionPointNaN";case"upperInflectionPointValue":return"GaugeUpperInflectionPointNaN";}}
return"Success";}
class GaugeChart extends AbstractChart{dataRange;sectionRule;background;type="gauge";constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataRange=createValidRange(this.getters,this.sheetId,definition.dataRange);this.sectionRule=definition.sectionRule;this.background=definition.background;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,isDataRangeValid,validator.chainValidations(checkRangeLimits(checkEmpty,validator.batchValidations),checkRangeLimits(checkNaN,validator.batchValidations),checkRangeMinBiggerThanRangeMax),validator.chainValidations(checkInflectionPointsValue(checkNaN,validator.batchValidations)));}
static transformDefinition(definition,executed){let dataRangeZone;if(definition.dataRange){dataRangeZone=transformZone(toUnboundedZone(definition.dataRange),executed);}
return{...definition,dataRange:dataRangeZone?zoneToXc(dataRangeZone):undefined,};}
static getDefinitionFromContextCreation(context){return{background:context.background,title:context.title||{text:""},type:"gauge",dataRange:context.range?context.range[0].dataRange:undefined,sectionRule:{colors:{lowerColor:DEFAULT_GAUGE_LOWER_COLOR,middleColor:DEFAULT_GAUGE_MIDDLE_COLOR,upperColor:DEFAULT_GAUGE_UPPER_COLOR,},rangeMin:"0",rangeMax:"100",lowerInflectionPoint:{type:"percentage",value:"15",operator:"<=",},upperInflectionPoint:{type:"percentage",value:"40",operator:"<=",},},};}
copyForSheetId(sheetId){const dataRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.dataRange);const definition=this.getDefinitionWithSpecificRanges(dataRange,sheetId);return new GaugeChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificRanges(this.dataRange,sheetId);return new GaugeChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificRanges(this.dataRange);}
getDefinitionWithSpecificRanges(dataRange,targetSheetId){return{background:this.background,sectionRule:this.sectionRule,title:this.title,type:"gauge",dataRange:dataRange?this.getters.getRangeString(dataRange,targetSheetId||this.sheetId):undefined,};}
getDefinitionForExcel(){return undefined;}
getContextCreation(){return{...this,range:this.dataRange?[{dataRange:this.getters.getRangeString(this.dataRange,this.sheetId)}]:undefined,};}
updateRanges(applyChange){const range=adaptChartRange(this.dataRange,applyChange);if(this.dataRange===range){return this;}
const definition=this.getDefinitionWithSpecificRanges(range);return new GaugeChart(definition,this.sheetId,this.getters);}}
function createGaugeChartRuntime(chart,getters){const locale=getters.getLocale();const chartColors=chart.sectionRule.colors;let gaugeValue=undefined;let formattedValue=undefined;let format=undefined;const dataRange=chart.dataRange;if(dataRange!==undefined){const cell=getters.getEvaluatedCell({sheetId:dataRange.sheetId,col:dataRange.zone.left,row:dataRange.zone.top,});if(cell.type===CellValueType.number){gaugeValue=cell.value;formattedValue=cell.formattedValue;format=cell.format;}}
const minValue=Number(chart.sectionRule.rangeMin);const maxValue=Number(chart.sectionRule.rangeMax);const lowerPoint=chart.sectionRule.lowerInflectionPoint;const upperPoint=chart.sectionRule.upperInflectionPoint;const lowerPointValue=getSectionThresholdValue(lowerPoint,minValue,maxValue);const upperPointValue=getSectionThresholdValue(upperPoint,minValue,maxValue);const inflectionValues=[];const colors=[];if(lowerPointValue!==undefined){inflectionValues.push({value:lowerPointValue,label:formatValue(lowerPointValue,{locale,format}),operator:lowerPoint.operator,});colors.push(chartColors.lowerColor);}
if(upperPointValue!==undefined&&upperPointValue!==lowerPointValue){inflectionValues.push({value:upperPointValue,label:formatValue(upperPointValue,{locale,format}),operator:upperPoint.operator,});colors.push(chartColors.middleColor);}
if(upperPointValue!==undefined&&lowerPointValue!==undefined&&lowerPointValue>upperPointValue){inflectionValues.reverse();colors.reverse();}
colors.push(chartColors.upperColor);return{background:getters.getStyleOfSingleCellChart(chart.background,dataRange).background,title:chart.title??{text:""},minValue:{value:minValue,label:formatValue(minValue,{locale,format}),},maxValue:{value:maxValue,label:formatValue(maxValue,{locale,format}),},gaugeValue:gaugeValue!==undefined&&formattedValue?{value:gaugeValue,label:formattedValue}:undefined,inflectionValues,colors,};}
function getSectionThresholdValue(threshold,minValue,maxValue){if(threshold.value===""||isNaN(Number(threshold.value))){return undefined;}
const numberValue=Number(threshold.value);const value=threshold.type==="number"?numberValue:minValue+((maxValue-minValue)*numberValue)/100;return clip(value,minValue,maxValue);}
class LineChart extends AbstractChart{dataSets;labelRange;background;legendPosition;labelsAsText;stacked;aggregated;type="line";dataSetsHaveTitle;cumulative;dataSetDesign;axesDesign;fillArea;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(this.getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(this.getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.labelsAsText=definition.labelsAsText;this.stacked=definition.stacked;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.cumulative=definition.cumulative;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.fillArea=definition.fillArea;this.showValues=definition.showValues;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,labelsAsText:context.labelsAsText??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"line",labelRange:context.auxiliaryRange||undefined,stacked:context.stacked??false,aggregated:context.aggregated??false,cumulative:context.cumulative??false,axesDesign:context.axesDesign,fillArea:context.fillArea,showValues:context.showValues,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"line",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,labelsAsText:this.labelsAsText,stacked:this.stacked,aggregated:this.aggregated,cumulative:this.cumulative,axesDesign:this.axesDesign,fillArea:this.fillArea,showValues:this.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new LineChart(definition,this.sheetId,this.getters);}
getDefinitionForExcel(){if(this.aggregated)
return undefined;const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new LineChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new LineChart(definition,sheetId,this.getters);}}
class PieChart extends AbstractChart{dataSets;labelRange;background;legendPosition;type="pie";aggregated;dataSetsHaveTitle;isDoughnut;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.isDoughnut=definition.isDoughnut;this.showValues=definition.showValues;}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"pie",labelRange:context.auxiliaryRange||undefined,aggregated:context.aggregated??false,isDoughnut:false,showValues:context.showValues,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getContextCreation(){return{...this,range:this.dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,this.sheetId),})),auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){return{type:"pie",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,targetSheetId||this.sheetId),})),legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,isDoughnut:this.isDoughnut,showValues:this.showValues,};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new PieChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new PieChart(definition,sheetId,this.getters);}
getDefinitionForExcel(){if(this.aggregated)
return undefined;const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));return{...this.getDefinition(),backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new PieChart(definition,this.sheetId,this.getters);}}
function getPieConfiguration(chart,labels,localeFormat){const fontColor=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,fontColor,localeFormat);const legend={labels:{color:fontColor},};if((!chart.labelRange&&chart.dataSets.length===1)||chart.legendPosition==="none"){legend.display=false;}
else{legend.position=chart.legendPosition;}
Object.assign(config.options.plugins.legend||{},legend);config.options.layout={padding:{left:20,right:20,top:chart.title?10:25,bottom:10},};config.options.plugins.tooltip.callbacks.title=function(tooltipItems){return tooltipItems[0].dataset.label;};config.options.plugins.tooltip.callbacks.label=function(tooltipItem){const{format,locale}=localeFormat;const data=tooltipItem.dataset.data;const dataIndex=tooltipItem.dataIndex;const percentage=calculatePercentage(data,dataIndex);const xLabel=tooltipItem.label||tooltipItem.dataset.label;const yLabel=tooltipItem.parsed.y??tooltipItem.parsed;const toolTipFormat=!format&&yLabel>=1000?"#,##":format;const yLabelStr=formatValue(yLabel,{format:toolTipFormat,locale});return xLabel?`${xLabel}: ${yLabelStr} (${percentage}%)`:`${yLabelStr} (${percentage}%)`;};config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,callback:formatTickValue(localeFormat),};return config;}
function getPieColors(colors,dataSetsValues){const pieColors=[];const maxLength=largeMax(dataSetsValues.map((ds)=>ds.data.length));for(let i=0;i<=maxLength;i++){pieColors.push(colors.next());}
return pieColors;}
function calculatePercentage(dataset,dataIndex){const numericData=dataset.filter((value)=>typeof value==="number");const total=numericData.reduce((sum,value)=>sum+value,0);if(!total){return"";}
const percentage=(dataset[dataIndex]/total)*100;return percentage.toFixed(2);}
function filterNegativeValues(labels,datasets){const dataPointsIndexes=labels.reduce((indexes,label,i)=>{const shouldKeep=datasets.some((dataset)=>{const dataPoint=dataset.data[i];return typeof dataPoint!=="number"||dataPoint>=0;});if(shouldKeep){indexes.push(i);}
return indexes;},[]);const filteredLabels=dataPointsIndexes.map((i)=>labels[i]||"");const filteredDatasets=datasets.map((dataset)=>({...dataset,data:dataPointsIndexes.map((i)=>{const dataPoint=dataset.data[i];return typeof dataPoint!=="number"||dataPoint>=0?dataPoint:0;}),}));return{labels:filteredLabels,dataSetsValues:filteredDatasets};}
function createPieChartRuntime(chart,getters){const labelValues=getChartLabelValues(getters,chart.dataSets,chart.labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,chart.dataSets);if(chart.dataSetsHaveTitle&&dataSetsValues[0]&&labels.length>dataSetsValues[0].data.length){labels.shift();}
({labels,dataSetsValues}=filterEmptyDataPoints(labels,dataSetsValues));if(chart.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
({dataSetsValues,labels}=filterNegativeValues(labels,dataSetsValues));const dataSetFormat=getChartDatasetFormat(getters,chart.dataSets);const locale=getters.getLocale();const config=getPieConfiguration(chart,labels,{format:dataSetFormat,locale});const dataSetsLength=Math.max(0,...dataSetsValues.map((ds)=>ds?.data?.length??0));const backgroundColor=getPieColors(new ColorGenerator(dataSetsLength),dataSetsValues);for(const{label,data}of dataSetsValues){const dataset={label,data,borderColor:BACKGROUND_CHART_COLOR,backgroundColor,hoverOffset:30,};config.data.datasets.push(dataset);}
if(chart.isDoughnut){config.type="doughnut";}
return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class PyramidChart extends AbstractChart{dataSets;labelRange;background;legendPosition;aggregated;type="pyramid";dataSetsHaveTitle;dataSetDesign;axesDesign;horizontal=true;stacked=true;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle).slice(0,2);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"pyramid",labelRange:context.auxiliaryRange||undefined,axesDesign:context.axesDesign,horizontal:true,stacked:true,showValues:context.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new PyramidChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new PyramidChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"pyramid",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,axesDesign:this.axesDesign,horizontal:true,stacked:true,showValues:this.showValues,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new PyramidChart(definition,this.sheetId,this.getters);}}
function createPyramidChartRuntime(chart,getters){const barDef={...chart.getDefinition(),type:"bar"};const barChart=new BarChart(barDef,chart.sheetId,getters);const barRuntime=createBarChartRuntime(barChart,getters);const config=barRuntime.chartJsConfig;let datasets=config.data?.datasets;if(datasets&&datasets[0]){datasets[0].data=datasets[0].data.map((value)=>(value>0?value:0));}
if(datasets&&datasets[1]){datasets[1].data=datasets[1].data.map((value)=>(value>0?-value:0));}
const scales=config.options.scales;const scalesXCallback=scales.x.ticks.callback;scales.x.ticks.callback=(value)=>scalesXCallback(Math.abs(value));const tooltipLabelCallback=config.options.plugins.tooltip.callbacks.label;config.options.plugins.tooltip.callbacks.label=(item)=>{const tooltipItem={...item,parsed:{y:item.parsed.y,x:Math.abs(item.parsed.x)}};return tooltipLabelCallback(tooltipItem);};const callback=config.options.plugins.chartShowValuesPlugin.callback;config.options.plugins.chartShowValuesPlugin.callback=(x)=>callback(Math.abs(x));return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class ScatterChart extends AbstractChart{dataSets;labelRange;background;legendPosition;labelsAsText;aggregated;type="scatter";dataSetsHaveTitle;dataSetDesign;axesDesign;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(this.getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(this.getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.labelsAsText=definition.labelsAsText;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,labelsAsText:context.labelsAsText??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"scatter",labelRange:context.auxiliaryRange||undefined,aggregated:context.aggregated??false,axesDesign:context.axesDesign,showValues:context.showValues,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"scatter",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,labelsAsText:this.labelsAsText,aggregated:this.aggregated,axesDesign:this.axesDesign,showValues:this.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new ScatterChart(definition,this.sheetId,this.getters);}
getDefinitionForExcel(){if(this.aggregated){return undefined;}
const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!=="");const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new ScatterChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new ScatterChart(definition,sheetId,this.getters);}}
function createScatterChartRuntime(chart,getters){const{chartJsConfig,background}=createLineOrScatterChartRuntime(chart,getters);chartJsConfig.type="line";for(const dataSet of chartJsConfig.data.datasets){dataSet.showLine="showLine"in dataSet?dataSet.showLine:false;}
return{chartJsConfig,background};}
class WaterfallChart extends AbstractChart{dataSets;labelRange;background;verticalAxisPosition;legendPosition;aggregated;type="waterfall";dataSetsHaveTitle;showSubTotals;firstValueAsSubtotal;showConnectorLines;positiveValuesColor;negativeValuesColor;subTotalValuesColor;dataSetDesign;axesDesign;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.verticalAxisPosition=definition.verticalAxisPosition;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.showSubTotals=definition.showSubTotals;this.showConnectorLines=definition.showConnectorLines;this.positiveValuesColor=definition.positiveValuesColor;this.negativeValuesColor=definition.negativeValuesColor;this.subTotalValuesColor=definition.subTotalValuesColor;this.firstValueAsSubtotal=definition.firstValueAsSubtotal;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static transformDefinition(definition,executed){return transformChartDefinitionWithDataSetsWithZone(definition,executed);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range?context.range:[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"waterfall",verticalAxisPosition:"left",labelRange:context.auxiliaryRange||undefined,showSubTotals:context.showSubTotals??false,showConnectorLines:context.showConnectorLines??true,firstValueAsSubtotal:context.firstValueAsSubtotal??false,axesDesign:context.axesDesign,showValues:context.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
copyForSheetId(sheetId){const dataSets=copyDataSetsWithNewSheetId(this.sheetId,sheetId,this.dataSets);const labelRange=copyLabelRangeWithNewSheetId(this.sheetId,sheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,sheetId);return new WaterfallChart(definition,sheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new WaterfallChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"waterfall",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,verticalAxisPosition:this.verticalAxisPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,showSubTotals:this.showSubTotals,showConnectorLines:this.showConnectorLines,positiveValuesColor:this.positiveValuesColor,negativeValuesColor:this.negativeValuesColor,subTotalValuesColor:this.subTotalValuesColor,firstValueAsSubtotal:this.firstValueAsSubtotal,axesDesign:this.axesDesign,showValues:this.showValues,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new WaterfallChart(definition,this.sheetId,this.getters);}}
function getWaterfallConfiguration(chart,labels,dataSeriesLabels,localeFormat){const{locale,format}=localeFormat;const fontColor=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,fontColor,localeFormat);const negativeColor=chart.negativeValuesColor||CHART_WATERFALL_NEGATIVE_COLOR;const positiveColor=chart.positiveValuesColor||CHART_WATERFALL_POSITIVE_COLOR;const subTotalColor=chart.subTotalValuesColor||CHART_WATERFALL_SUBTOTAL_COLOR;const legend={labels:{generateLabels:()=>{const legendValues=[{text:_t("Positive values"),fontColor,fillStyle:positiveColor,strokeStyle:positiveColor,},{text:_t("Negative values"),fontColor,fillStyle:negativeColor,strokeStyle:negativeColor,},];if(chart.showSubTotals||chart.firstValueAsSubtotal){legendValues.push({text:_t("Subtotals"),fontColor,fillStyle:subTotalColor,strokeStyle:subTotalColor,});}
return legendValues;},},};if(chart.legendPosition==="none"){legend.display=false;}
else{legend.position=chart.legendPosition;}
config.options.plugins.legend={...config.options.plugins?.legend,...legend};config.options.layout={padding:{left:20,right:20,top:chart.title?10:25,bottom:10},};config.options.scales={x:{ticks:{padding:5,color:fontColor,},grid:{display:false,},title:getChartAxisTitleRuntime(chart.axesDesign?.x),},y:{position:chart.verticalAxisPosition,ticks:{color:fontColor,callback:(value)=>{value=Number(value);if(isNaN(value))
return value;return formatValue(value,{locale,format:!format&&Math.abs(value)>1000?"#,##":format,});},},grid:{lineWidth:(context)=>{return context.tick.value===0?2:1;},},title:getChartAxisTitleRuntime(chart.axesDesign?.y),},};config.options.plugins.tooltip={callbacks:{label:function(tooltipItem){const[lastValue,currentValue]=tooltipItem.raw;const yLabel=currentValue-lastValue;const dataSeriesIndex=Math.floor(tooltipItem.dataIndex/labels.length);const dataSeriesLabel=dataSeriesLabels[dataSeriesIndex];const toolTipFormat=!format&&Math.abs(yLabel)>1000?"#,##":format;const yLabelStr=formatValue(yLabel,{format:toolTipFormat,locale});return dataSeriesLabel?`${dataSeriesLabel}: ${yLabelStr}`:yLabelStr;},},};config.options.plugins.waterfallLinesPlugin={showConnectorLines:chart.showConnectorLines};config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,background:chart.background,callback:formatTickValue(localeFormat),};return config;}
function createWaterfallChartRuntime(chart,getters){const labelValues=getChartLabelValues(getters,chart.dataSets,chart.labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,chart.dataSets);if(chart.dataSetsHaveTitle&&dataSetsValues[0]&&labels.length>dataSetsValues[0].data.length){labels.shift();}
({labels,dataSetsValues}=filterEmptyDataPoints(labels,dataSetsValues));if(chart.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
if(chart.showSubTotals){labels.push(_t("Subtotal"));}
const dataSetFormat=getChartDatasetFormat(getters,chart.dataSets);const locale=getters.getLocale();const dataSeriesLabels=dataSetsValues.map((dataSet)=>dataSet.label);const config=getWaterfallConfiguration(chart,labels,dataSeriesLabels,{format:dataSetFormat,locale,});config.type="bar";const negativeColor=chart.negativeValuesColor||CHART_WATERFALL_NEGATIVE_COLOR;const positiveColor=chart.positiveValuesColor||CHART_WATERFALL_POSITIVE_COLOR;const subTotalColor=chart.subTotalValuesColor||CHART_WATERFALL_SUBTOTAL_COLOR;const backgroundColor=[];const datasetValues=[];const dataset={label:"",data:datasetValues,backgroundColor,};const labelsWithSubTotals=[];let lastValue=0;for(const dataSetsValue of dataSetsValues){for(let i=0;i<dataSetsValue.data.length;i++){const data=dataSetsValue.data[i];labelsWithSubTotals.push(labels[i]);if(isNaN(Number(data))){datasetValues.push([lastValue,lastValue]);backgroundColor.push("");continue;}
datasetValues.push([lastValue,data+lastValue]);let color=data>=0?positiveColor:negativeColor;if(i===0&&dataSetsValue===dataSetsValues[0]&&chart.firstValueAsSubtotal){color=subTotalColor;}
backgroundColor.push(color);lastValue+=data;}
if(chart.showSubTotals){labelsWithSubTotals.push(_t("Subtotal"));datasetValues.push([0,lastValue]);backgroundColor.push(subTotalColor);}}
config.data.datasets.push(dataset);config.data.labels=labelsWithSubTotals.map(truncateLabel);return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
const chartRegistry=new Registry();chartRegistry.add("bar",{match:(type)=>type==="bar",createChart:(definition,sheetId,getters)=>new BarChart(definition,sheetId,getters),getChartRuntime:createBarChartRuntime,validateChartDefinition:BarChart.validateChartDefinition,transformDefinition:BarChart.transformDefinition,getChartDefinitionFromContextCreation:BarChart.getDefinitionFromContextCreation,sequence:10,});chartRegistry.add("combo",{match:(type)=>type==="combo",createChart:(definition,sheetId,getters)=>new ComboChart(definition,sheetId,getters),getChartRuntime:createComboChartRuntime,validateChartDefinition:ComboChart.validateChartDefinition,transformDefinition:ComboChart.transformDefinition,getChartDefinitionFromContextCreation:ComboChart.getDefinitionFromContextCreation,sequence:15,});chartRegistry.add("line",{match:(type)=>type==="line",createChart:(definition,sheetId,getters)=>new LineChart(definition,sheetId,getters),getChartRuntime:createLineOrScatterChartRuntime,validateChartDefinition:LineChart.validateChartDefinition,transformDefinition:LineChart.transformDefinition,getChartDefinitionFromContextCreation:LineChart.getDefinitionFromContextCreation,sequence:20,});chartRegistry.add("pie",{match:(type)=>type==="pie",createChart:(definition,sheetId,getters)=>new PieChart(definition,sheetId,getters),getChartRuntime:createPieChartRuntime,validateChartDefinition:PieChart.validateChartDefinition,transformDefinition:PieChart.transformDefinition,getChartDefinitionFromContextCreation:PieChart.getDefinitionFromContextCreation,sequence:30,});chartRegistry.add("scorecard",{match:(type)=>type==="scorecard",createChart:(definition,sheetId,getters)=>new ScorecardChart$1(definition,sheetId,getters),getChartRuntime:createScorecardChartRuntime,validateChartDefinition:ScorecardChart$1.validateChartDefinition,transformDefinition:ScorecardChart$1.transformDefinition,getChartDefinitionFromContextCreation:ScorecardChart$1.getDefinitionFromContextCreation,sequence:40,});chartRegistry.add("gauge",{match:(type)=>type==="gauge",createChart:(definition,sheetId,getters)=>new GaugeChart(definition,sheetId,getters),getChartRuntime:createGaugeChartRuntime,validateChartDefinition:GaugeChart.validateChartDefinition,transformDefinition:GaugeChart.transformDefinition,getChartDefinitionFromContextCreation:GaugeChart.getDefinitionFromContextCreation,sequence:50,});chartRegistry.add("scatter",{match:(type)=>type==="scatter",createChart:(definition,sheetId,getters)=>new ScatterChart(definition,sheetId,getters),getChartRuntime:createScatterChartRuntime,validateChartDefinition:ScatterChart.validateChartDefinition,transformDefinition:ScatterChart.transformDefinition,getChartDefinitionFromContextCreation:ScatterChart.getDefinitionFromContextCreation,sequence:60,});chartRegistry.add("waterfall",{match:(type)=>type==="waterfall",createChart:(definition,sheetId,getters)=>new WaterfallChart(definition,sheetId,getters),getChartRuntime:createWaterfallChartRuntime,validateChartDefinition:WaterfallChart.validateChartDefinition,transformDefinition:WaterfallChart.transformDefinition,getChartDefinitionFromContextCreation:WaterfallChart.getDefinitionFromContextCreation,sequence:70,});chartRegistry.add("pyramid",{match:(type)=>type==="pyramid",createChart:(definition,sheetId,getters)=>new PyramidChart(definition,sheetId,getters),getChartRuntime:createPyramidChartRuntime,validateChartDefinition:PyramidChart.validateChartDefinition,transformDefinition:PyramidChart.transformDefinition,getChartDefinitionFromContextCreation:PyramidChart.getDefinitionFromContextCreation,sequence:80,});const chartComponentRegistry=new Registry();chartComponentRegistry.add("line",ChartJsComponent);chartComponentRegistry.add("bar",ChartJsComponent);chartComponentRegistry.add("combo",ChartJsComponent);chartComponentRegistry.add("pie",ChartJsComponent);chartComponentRegistry.add("gauge",GaugeChartComponent);chartComponentRegistry.add("scatter",ChartJsComponent);chartComponentRegistry.add("scorecard",ScorecardChart);chartComponentRegistry.add("waterfall",ChartJsComponent);chartComponentRegistry.add("pyramid",ChartJsComponent);const chartCategories={line:_t("Line"),column:_t("Column"),bar:_t("Bar"),area:_t("Area"),pie:_t("Pie"),misc:_t("Miscellaneous"),};const chartSubtypeRegistry=new Registry();chartSubtypeRegistry.add("line",{matcher:(definition)=>definition.type==="line"&&!definition.stacked&&!definition.fillArea,displayName:_t("Line"),chartType:"line",chartSubtype:"line",subtypeDefinition:{stacked:false,fillArea:false},category:"line",preview:"o-spreadsheet-ChartPreview.LINE_CHART",}).add("stacked_line",{matcher:(definition)=>definition.type==="line"&&!definition.fillArea&&!!definition.stacked,displayName:_t("Stacked Line"),chartType:"line",chartSubtype:"stacked_line",subtypeDefinition:{stacked:true,fillArea:false},category:"line",preview:"o-spreadsheet-ChartPreview.STACKED_LINE_CHART",}).add("area",{matcher:(definition)=>definition.type==="line"&&!definition.stacked&&!!definition.fillArea,displayName:_t("Area"),chartType:"line",chartSubtype:"area",subtypeDefinition:{stacked:false,fillArea:true},category:"area",preview:"o-spreadsheet-ChartPreview.AREA_CHART",}).add("stacked_area",{matcher:(definition)=>definition.type==="line"&&definition.stacked&&!!definition.fillArea,displayName:_t("Stacked Area"),chartType:"line",chartSubtype:"stacked_area",subtypeDefinition:{stacked:true,fillArea:true},category:"area",preview:"o-spreadsheet-ChartPreview.STACKED_AREA_CHART",}).add("scatter",{displayName:_t("Scatter"),chartType:"scatter",chartSubtype:"scatter",category:"misc",preview:"o-spreadsheet-ChartPreview.SCATTER_CHART",}).add("column",{matcher:(definition)=>definition.type==="bar"&&!definition.stacked&&!definition.horizontal,displayName:_t("Column"),chartType:"bar",chartSubtype:"column",subtypeDefinition:{stacked:false,horizontal:false},category:"column",preview:"o-spreadsheet-ChartPreview.COLUMN_CHART",}).add("stacked_column",{matcher:(definition)=>definition.type==="bar"&&definition.stacked&&!definition.horizontal,displayName:_t("Stacked Column"),chartType:"bar",chartSubtype:"stacked_column",subtypeDefinition:{stacked:true,horizontal:false},category:"column",preview:"o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART",}).add("bar",{matcher:(definition)=>definition.type==="bar"&&!definition.stacked&&!!definition.horizontal,displayName:_t("Bar"),chartType:"bar",chartSubtype:"bar",subtypeDefinition:{horizontal:true,stacked:false},category:"bar",preview:"o-spreadsheet-ChartPreview.BAR_CHART",}).add("stacked_bar",{matcher:(definition)=>definition.type==="bar"&&definition.stacked&&!!definition.horizontal,displayName:_t("Stacked Bar"),chartType:"bar",chartSubtype:"stacked_bar",subtypeDefinition:{horizontal:true,stacked:true},category:"bar",preview:"o-spreadsheet-ChartPreview.STACKED_BAR_CHART",}).add("combo",{displayName:_t("Combo"),chartSubtype:"combo",chartType:"combo",category:"line",preview:"o-spreadsheet-ChartPreview.COMBO_CHART",}).add("pie",{matcher:(definition)=>definition.type==="pie"&&!definition.isDoughnut,displayName:_t("Pie"),chartSubtype:"pie",chartType:"pie",subtypeDefinition:{isDoughnut:false},category:"pie",preview:"o-spreadsheet-ChartPreview.PIE_CHART",}).add("doughnut",{matcher:(definition)=>definition.type==="pie"&&!!definition.isDoughnut,displayName:_t("Doughnut"),chartSubtype:"doughnut",chartType:"pie",subtypeDefinition:{isDoughnut:true},category:"pie",preview:"o-spreadsheet-ChartPreview.DOUGHNUT_CHART",}).add("gauge",{displayName:_t("Gauge"),chartSubtype:"gauge",chartType:"gauge",category:"misc",preview:"o-spreadsheet-ChartPreview.GAUGE_CHART",}).add("scorecard",{displayName:_t("Scorecard"),chartSubtype:"scorecard",chartType:"scorecard",category:"misc",preview:"o-spreadsheet-ChartPreview.SCORECARD_CHART",}).add("waterfall",{displayName:_t("Waterfall"),chartSubtype:"waterfall",chartType:"waterfall",category:"misc",preview:"o-spreadsheet-ChartPreview.WATERFALL_CHART",}).add("pyramid",{displayName:_t("Population Pyramid"),chartSubtype:"pyramid",chartType:"pyramid",category:"misc",preview:"o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART",});const currenciesRegistry=new Registry();css`
  .o-chart-container {
    width: 100%;
    height: 100%;
    position: relative;
  }
`;class ChartFigure extends Component{static template="o-spreadsheet-ChartFigure";static props={figure:Object,onFigureDeleted:Function,};static components={};onDoubleClick(){this.env.model.dispatch("SELECT_FIGURE",{id:this.props.figure.id});this.env.openSidePanel("ChartPanel");}
get chartType(){return this.env.model.getters.getChartType(this.props.figure.id);}
get chartComponent(){const type=this.chartType;const component=chartComponentRegistry.get(type);if(!component){throw new Error(`Component is not defined for type ${type}`);}
return component;}}
class ImageFigure extends Component{static template="o-spreadsheet-ImageFigure";static props={figure:Object,onFigureDeleted:Function,};static components={};get figureId(){return this.props.figure.id;}
get getImagePath(){return this.env.model.getters.getImagePath(this.figureId);}}
function centerFigurePosition(getters,size){const{x:offsetCorrectionX,y:offsetCorrectionY}=getters.getMainViewportCoordinates();const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();const dim=getters.getSheetViewDimension();const rect=getters.getVisibleRect(getters.getActiveMainViewport());const scrollableViewportWidth=Math.min(rect.width,dim.width-offsetCorrectionX);const scrollableViewportHeight=Math.min(rect.height,dim.height-offsetCorrectionY);const position={x:offsetCorrectionX+scrollX+Math.max(0,(scrollableViewportWidth-size.width)/2),y:offsetCorrectionY+scrollY+Math.max(0,(scrollableViewportHeight-size.height)/2),};return position;}
function getMaxFigureSize(getters,figureSize){const size=deepCopy(figureSize);const dim=getters.getSheetViewDimension();const maxWidth=dim.width;const maxHeight=dim.height;if(size.width>maxWidth){const ratio=maxWidth/size.width;size.width=maxWidth;size.height=size.height*ratio;}
if(size.height>maxHeight){const ratio=maxHeight/size.height;size.height=maxHeight;size.width=size.width*ratio;}
return size;}
const figureRegistry=new Registry();figureRegistry.add("chart",{Component:ChartFigure,SidePanelComponent:"ChartPanel",menuBuilder:getChartMenu,});figureRegistry.add("image",{Component:ImageFigure,keepRatio:true,minFigSize:20,borderWidth:0,menuBuilder:getImageMenuRegistry,});function getChartMenu(figureId,onFigureDeleted,env){const menuItemSpecs=[{id:"edit",name:_t("Edit"),sequence:1,execute:()=>{env.model.dispatch("SELECT_FIGURE",{id:figureId});env.openSidePanel("ChartPanel");},icon:"o-spreadsheet-Icon.EDIT",},getCopyMenuItem(figureId,env),getCutMenuItem(figureId,env),getDeleteMenuItem(figureId,onFigureDeleted,env),];return createActions(menuItemSpecs);}
function getImageMenuRegistry(figureId,onFigureDeleted,env){const menuItemSpecs=[getCopyMenuItem(figureId,env),getCutMenuItem(figureId,env),{id:"reset_size",name:_t("Reset size"),sequence:4,execute:async()=>{const imagePath=env.model.getters.getImagePath(figureId);const size=env.model.getters.getImageSize(figureId)??(await env.imageProvider?.getImageOriginalSize(imagePath));if(!env.model.getters.getImageSize(figureId)){const image=env.model.getters.getImage(figureId);image.size=size;}
const{height,width}=getMaxFigureSize(env.model.getters,size);env.model.dispatch("UPDATE_FIGURE",{sheetId:env.model.getters.getActiveSheetId(),id:figureId,height,width,});},icon:"o-spreadsheet-Icon.REFRESH",},getDeleteMenuItem(figureId,onFigureDeleted,env),];return createActions(menuItemSpecs);}
function getCopyMenuItem(figureId,env){return{id:"copy",name:_t("Copy"),sequence:2,description:"Ctrl+C",execute:async()=>{env.model.dispatch("SELECT_FIGURE",{id:figureId});env.model.dispatch("COPY");await env.clipboard.write(env.model.getters.getClipboardContent());},icon:"o-spreadsheet-Icon.COPY",};}
function getCutMenuItem(figureId,env){return{id:"cut",name:_t("Cut"),sequence:3,description:"Ctrl+X",execute:async()=>{env.model.dispatch("SELECT_FIGURE",{id:figureId});env.model.dispatch("CUT");await env.clipboard.write(env.model.getters.getClipboardContent());},icon:"o-spreadsheet-Icon.CUT",};}
function getDeleteMenuItem(figureId,onFigureDeleted,env){return{id:"delete",name:_t("Delete"),sequence:10,execute:()=>{env.model.dispatch("DELETE_FIGURE",{sheetId:env.model.getters.getActiveSheetId(),id:figureId,});onFigureDeleted();},icon:"o-spreadsheet-Icon.TRASH",};}
const inverseCommandRegistry=new Registry().add("ADD_COLUMNS_ROWS",inverseAddColumnsRows).add("REMOVE_COLUMNS_ROWS",inverseRemoveColumnsRows).add("ADD_MERGE",inverseAddMerge).add("REMOVE_MERGE",inverseRemoveMerge).add("CREATE_SHEET",inverseCreateSheet).add("DELETE_SHEET",inverseDeleteSheet).add("DUPLICATE_SHEET",inverseDuplicateSheet).add("CREATE_FIGURE",inverseCreateFigure).add("CREATE_CHART",inverseCreateChart).add("HIDE_COLUMNS_ROWS",inverseHideColumnsRows).add("UNHIDE_COLUMNS_ROWS",inverseUnhideColumnsRows).add("CREATE_TABLE_STYLE",inverseCreateTableStyle).add("ADD_PIVOT",inverseAddPivot);for(const cmd of coreTypes.values()){if(!inverseCommandRegistry.contains(cmd)){inverseCommandRegistry.add(cmd,identity);}}
function identity(cmd){return[cmd];}
function inverseAddPivot(cmd){return[{type:"REMOVE_PIVOT",pivotId:cmd.pivotId,},];}
function inverseAddColumnsRows(cmd){const elements=[];let start=cmd.base;if(cmd.position==="after"){start++;}
for(let i=0;i<cmd.quantity;i++){elements.push(i+start);}
return[{type:"REMOVE_COLUMNS_ROWS",dimension:cmd.dimension,elements,sheetId:cmd.sheetId,},];}
function inverseAddMerge(cmd){return[{type:"REMOVE_MERGE",sheetId:cmd.sheetId,target:cmd.target}];}
function inverseRemoveMerge(cmd){return[{type:"ADD_MERGE",sheetId:cmd.sheetId,target:cmd.target}];}
function inverseCreateSheet(cmd){return[{type:"DELETE_SHEET",sheetId:cmd.sheetId}];}
function inverseDuplicateSheet(cmd){return[{type:"DELETE_SHEET",sheetId:cmd.sheetIdTo}];}
function inverseRemoveColumnsRows(cmd){const commands=[];const elements=[...cmd.elements].sort((a,b)=>a-b);for(let group of groupConsecutive(elements)){const column=group[0]===0?0:group[0]-1;const position=group[0]===0?"before":"after";commands.push({type:"ADD_COLUMNS_ROWS",dimension:cmd.dimension,quantity:group.length,base:column,sheetId:cmd.sheetId,position,});}
return commands;}
function inverseDeleteSheet(cmd){return[{type:"CREATE_SHEET",sheetId:cmd.sheetId,position:1}];}
function inverseCreateFigure(cmd){return[{type:"DELETE_FIGURE",id:cmd.figure.id,sheetId:cmd.sheetId}];}
function inverseCreateChart(cmd){return[{type:"DELETE_FIGURE",id:cmd.id,sheetId:cmd.sheetId}];}
function inverseHideColumnsRows(cmd){return[{type:"UNHIDE_COLUMNS_ROWS",sheetId:cmd.sheetId,dimension:cmd.dimension,elements:cmd.elements,},];}
function inverseUnhideColumnsRows(cmd){return[{type:"HIDE_COLUMNS_ROWS",sheetId:cmd.sheetId,dimension:cmd.dimension,elements:cmd.elements,},];}
function inverseCreateTableStyle(cmd){return[{type:"REMOVE_TABLE_STYLE",tableStyleId:cmd.tableStyleId}];}
class MenuItemRegistry extends Registry{add(key,value){if(value.id===undefined){value.id=key;}
this.content[key]=value;return this;}
addChild(key,path,value,options={force:false}){if(typeof value!=="function"&&value.id===undefined){value.id=key;}
const root=path.splice(0,1)[0];let node=this.content[root];if(!node){throw new Error(`Path ${root + ":" + path.join(":")} not found`);}
for(let p of path){const children=node.children;if(!children||typeof children==="function"){throw new Error(`${p} is either not a node or it's dynamically computed`);}
node=children.find((elt)=>elt.id===p);if(!node){throw new Error(`Path ${root + ":" + path.join(":")} not found`);}}
if(!node.children){node.children=[];}
const children=node.children;if(!children||typeof children==="function"){throw new Error(`${path} is either not a node or it's dynamically computed`);}
if("id"in value){const valueIndex=children.findIndex((elt)=>"id"in elt&&elt.id===value.id);if(valueIndex>-1){if(!options.force)
throw new Error(`A child with the id "${value.id}" already exists.`);node.children.splice(valueIndex,1,value);return this;}}
node.children.push(value);return this;}
getMenuItems(){return createActions(this.getAll());}}
function interactiveCut(env){const result=env.model.dispatch("CUT");if(!result.isSuccessful){if(result.isCancelledBecause("WrongCutSelection")){env.raiseError(_t("This operation is not allowed with multiple selections."));}}}
const AddMergeInteractiveContent={MergeIsDestructive:_t("Merging these cells will only preserve the top-leftmost value. Merge anyway?"),MergeInFilter:_t("You can't merge cells inside of an existing filter."),};function interactiveAddMerge(env,sheetId,target){const result=env.model.dispatch("ADD_MERGE",{sheetId,target});if(result.isCancelledBecause("MergeInTable")){env.raiseError(AddMergeInteractiveContent.MergeInFilter);}
else if(result.isCancelledBecause("MergeIsDestructive")){env.askConfirmation(AddMergeInteractiveContent.MergeIsDestructive,()=>{env.model.dispatch("ADD_MERGE",{sheetId,target,force:true});});}}
class HoveredCellStore extends SpreadsheetStore{mutators=["clear","hover"];col;row;handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.clear();}}
hover(position){this.col=position.col;this.row=position.row;}
clear(){this.col=undefined;this.row=undefined;}}
class CellPopoverStore extends SpreadsheetStore{mutators=["open","close"];persistentPopover;hoveredCell=this.get(HoveredCellStore);handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.close();}}
open({col,row},type){const sheetId=this.getters.getActiveSheetId();if(!cellPopoverRegistry.contains(type)){return;}
this.persistentPopover={col,row,sheetId,type};}
close(){this.persistentPopover=undefined;}
get persistentCellPopover(){return((this.persistentPopover&&{isOpen:true,...this.persistentPopover})||{isOpen:false});}
get isOpen(){return this.persistentPopover!==undefined;}
get cellPopover(){const sheetId=this.getters.getActiveSheetId();if(this.persistentPopover&&this.getters.isVisibleInViewport(this.persistentPopover)){const position=this.getters.getMainCellPosition(this.persistentPopover);const popover=cellPopoverRegistry.get(this.persistentPopover.type).onOpen?.(position,this.getters);return!popover?.isOpen?{isOpen:false}:{...popover,anchorRect:this.computePopoverAnchorRect(this.persistentPopover),};}
const{col,row}=this.hoveredCell;if(col===undefined||row===undefined||!this.getters.isVisibleInViewport({sheetId,col,row})){return{isOpen:false};}
const position=this.getters.getMainCellPosition({sheetId,col,row});const popover=cellPopoverRegistry.getAll().map((matcher)=>matcher.onHover?.(position,this.getters)).find((popover)=>popover?.isOpen);return!popover?.isOpen?{isOpen:false}:{...popover,anchorRect:this.computePopoverAnchorRect(position),};}
computePopoverAnchorRect({col,row}){const sheetId=this.getters.getActiveSheetId();const merge=this.getters.getMerge({sheetId,col,row});if(merge){return this.getters.getVisibleRect(merge);}
return this.getters.getVisibleRect(positionToZone({col,row}));}}
function rectIntersection(rect1,rect2){return zoneToRect(intersection(rectToZone(rect1),rectToZone(rect2)));}
function rectUnion(...rects){return zoneToRect(union(...rects.map(rectToZone)));}
function rectToZone(rect){return{left:rect.x,top:rect.y,right:rect.x+rect.width,bottom:rect.y+rect.height,};}
function zoneToRect(zone){if(!zone)
return undefined;return{x:zone.left,y:zone.top,width:zone.right-zone.left,height:zone.bottom-zone.top,};}
css`
  .o-popover {
    position: absolute;
    z-index: ${ComponentsImportance.Popover};
    overflow: auto;
    box-shadow: 1px 2px 5px 2px rgb(51 51 51 / 15%);
    width: fit-content;
    height: fit-content;
  }
`;class Popover extends Component{static template="o-spreadsheet-Popover";static props={anchorRect:Object,containerRect:{type:Object,optional:true},positioning:{type:String,optional:true},maxWidth:{type:Number,optional:true},maxHeight:{type:Number,optional:true},verticalOffset:{type:Number,optional:true},onMouseWheel:{type:Function,optional:true},onPopoverHidden:{type:Function,optional:true},onPopoverMoved:{type:Function,optional:true},zIndex:{type:Number,optional:true},slots:Object,};static defaultProps={positioning:"BottomLeft",verticalOffset:0,onMouseWheel:()=>{},onPopoverMoved:()=>{},onPopoverHidden:()=>{},zIndex:ComponentsImportance.Popover,};popoverRef=useRef("popover");currentPosition=undefined;currentDisplayValue=undefined;spreadsheetRect=useSpreadsheetRect();containerRect;setup(){this.containerRect=usePopoverContainer();useEffect(()=>{if(!this.containerRect)
throw new Error("Popover container is not defined");const el=this.popoverRef.el;const anchor=rectIntersection(this.props.anchorRect,this.containerRect);const newDisplay=anchor?"block":"none";if(this.currentDisplayValue!=="none"&&newDisplay==="none"){this.props.onPopoverHidden?.();}
el.style.display=newDisplay;this.currentDisplayValue=newDisplay;if(!anchor)
return;const propsMaxSize={width:this.props.maxWidth,height:this.props.maxHeight};let elDims={width:el.getBoundingClientRect().width,height:el.getBoundingClientRect().height,};const spreadsheetRect=this.spreadsheetRect;const popoverPositionHelper=this.props.positioning==="BottomLeft"?new BottomLeftPopoverContext(anchor,this.containerRect,propsMaxSize,spreadsheetRect):new TopRightPopoverContext(anchor,this.containerRect,propsMaxSize,spreadsheetRect);el.style["max-height"]=popoverPositionHelper.getMaxHeight(elDims.height)+"px";el.style["max-width"]=popoverPositionHelper.getMaxWidth(elDims.width)+"px";elDims={width:el.getBoundingClientRect().width,height:el.getBoundingClientRect().height,};let style=popoverPositionHelper.getCss(elDims,this.props.verticalOffset);for(const property of Object.keys(style)){el.style[property]=style[property];}
const newPosition=popoverPositionHelper.getCurrentPosition(elDims);if(this.currentPosition&&newPosition!==this.currentPosition){this.props.onPopoverMoved?.();}
this.currentPosition=newPosition;});}
get popoverStyle(){return cssPropertiesToCss({"z-index":`${this.props.zIndex}`,});}}
class PopoverPositionContext{anchorRect;containerRect;propsMaxSize;spreadsheetOffset;constructor(anchorRect,containerRect,propsMaxSize,spreadsheetOffset){this.anchorRect=anchorRect;this.containerRect=containerRect;this.propsMaxSize=propsMaxSize;this.spreadsheetOffset=spreadsheetOffset;}
shouldRenderAtBottom(elementHeight){return(elementHeight<=this.availableHeightDown||this.availableHeightDown>=this.availableHeightUp);}
shouldRenderAtRight(elementWidth){return(elementWidth<=this.availableWidthRight||this.availableWidthRight>=this.availableWidthLeft);}
getMaxHeight(elementHeight){const shouldRenderAtBottom=this.shouldRenderAtBottom(elementHeight);const availableHeight=shouldRenderAtBottom?this.availableHeightDown:this.availableHeightUp;return this.propsMaxSize.height?Math.min(availableHeight,this.propsMaxSize.height):availableHeight;}
getMaxWidth(elementWidth){const shouldRenderAtRight=this.shouldRenderAtRight(elementWidth);const availableWidth=shouldRenderAtRight?this.availableWidthRight:this.availableWidthLeft;return this.propsMaxSize.width?Math.min(availableWidth,this.propsMaxSize.width):availableWidth;}
getCss(elDims,verticalOffset){const maxHeight=this.getMaxHeight(elDims.height);const maxWidth=this.getMaxWidth(elDims.width);const actualHeight=Math.min(maxHeight,elDims.height);const actualWidth=Math.min(maxWidth,elDims.width);const shouldRenderAtBottom=this.shouldRenderAtBottom(elDims.height);const shouldRenderAtRight=this.shouldRenderAtRight(elDims.width);verticalOffset=shouldRenderAtBottom?verticalOffset:-verticalOffset;const cssProperties={top:this.getTopCoordinate(actualHeight,shouldRenderAtBottom)-
this.spreadsheetOffset.y-
verticalOffset+"px",left:this.getLeftCoordinate(actualWidth,shouldRenderAtRight)-this.spreadsheetOffset.x+"px",};return cssProperties;}
getCurrentPosition(elDims){const shouldRenderAtBottom=this.shouldRenderAtBottom(elDims.height);const shouldRenderAtRight=this.shouldRenderAtRight(elDims.width);if(shouldRenderAtBottom&&shouldRenderAtRight)
return"BottomRight";if(shouldRenderAtBottom&&!shouldRenderAtRight)
return"BottomLeft";if(!shouldRenderAtBottom&&shouldRenderAtRight)
return"TopRight";return"TopLeft";}}
class BottomLeftPopoverContext extends PopoverPositionContext{get availableHeightUp(){return this.anchorRect.y-this.containerRect.y;}
get availableHeightDown(){return this.containerRect.height-this.availableHeightUp-this.anchorRect.height;}
get availableWidthRight(){return this.containerRect.x+this.containerRect.width-this.anchorRect.x;}
get availableWidthLeft(){return this.anchorRect.x+this.anchorRect.width-this.containerRect.x;}
getTopCoordinate(elementHeight,shouldRenderAtBottom){if(shouldRenderAtBottom){return this.anchorRect.y+this.anchorRect.height;}
else{return this.anchorRect.y-elementHeight;}}
getLeftCoordinate(elementWidth,shouldRenderAtRight){if(shouldRenderAtRight){return this.anchorRect.x;}
else{return this.anchorRect.x+this.anchorRect.width-elementWidth;}}}
class TopRightPopoverContext extends PopoverPositionContext{get availableHeightUp(){return this.anchorRect.y+this.anchorRect.height-this.containerRect.y;}
get availableHeightDown(){return this.containerRect.y+this.containerRect.height-this.anchorRect.y;}
get availableWidthRight(){return this.containerRect.width-this.anchorRect.width-this.availableWidthLeft;}
get availableWidthLeft(){return this.anchorRect.x-this.containerRect.x;}
getTopCoordinate(elementHeight,shouldRenderAtBottom){if(shouldRenderAtBottom){return this.anchorRect.y;}
else{return this.anchorRect.y+this.anchorRect.height-elementHeight;}}
getLeftCoordinate(elementWidth,shouldRenderAtRight){if(shouldRenderAtRight){return this.anchorRect.x+this.anchorRect.width;}
else{return this.anchorRect.x-elementWidth;}}}
const ERROR_TOOLTIP_MAX_HEIGHT=80;const ERROR_TOOLTIP_WIDTH=180;css`
  .o-error-tooltip {
    font-size: 13px;
    background-color: white;
    border-left: 3px solid red;
    padding: 10px;
    width: ${ERROR_TOOLTIP_WIDTH}px;
    box-sizing: border-box !important;
    overflow-wrap: break-word;

    .o-error-tooltip-message {
      overflow: hidden;
    }
  }
`;class ErrorToolTip extends Component{static maxSize={maxHeight:ERROR_TOOLTIP_MAX_HEIGHT};static template="o-spreadsheet-ErrorToolTip";static props={errors:Array,onClosed:{type:Function,optional:true},};}
const ErrorToolTipPopoverBuilder={onHover:(position,getters)=>{const cell=getters.getEvaluatedCell(position);const errors=[];if(cell.type===CellValueType.error&&!!cell.message){errors.push({title:_t("Error"),message:cell.message,});}
const validationErrorMessage=getters.getInvalidDataValidationMessage(position);if(validationErrorMessage){errors.push({title:_t("Invalid"),message:validationErrorMessage,});}
if(!errors.length){return{isOpen:false};}
return{isOpen:true,props:{errors:errors},Component:ErrorToolTip,cellCorner:"TopRight",};},};css`
  .o-filter-menu-value {
    padding: 4px;
    line-height: 20px;
    height: 28px;
    .o-filter-menu-value-checked {
      width: 20px;
    }
  }
`;class FilterMenuValueItem extends Component{static template="o-spreadsheet-FilterMenuValueItem";static props={value:String,isChecked:Boolean,isSelected:Boolean,onMouseMove:Function,onClick:Function,scrolledTo:{type:String,optional:true},};itemRef=useRef("menuValueItem");setup(){onWillPatch(()=>{if(this.props.scrolledTo){this.scrollListToSelectedValue();}});}
scrollListToSelectedValue(){if(!this.itemRef.el){return;}
this.itemRef.el.scrollIntoView?.({block:this.props.scrolledTo==="bottom"?"end":"start",});}}
const FILTER_MENU_HEIGHT=295;const CSS=css`
  .o-filter-menu {
    box-sizing: border-box;
    padding: 8px 16px;
    height: ${FILTER_MENU_HEIGHT}px;
    line-height: 1;

    .o-filter-menu-item {
      display: flex;
      box-sizing: border-box;
      height: ${MENU_ITEM_HEIGHT}px;
      padding: 4px 4px 4px 0px;
      cursor: pointer;
      user-select: none;

      &.selected {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    input {
      box-sizing: border-box;
      margin-bottom: 5px;
      border: 1px solid #949494;
      height: 24px;
      padding-right: 28px;
    }

    .o-search-icon {
      right: 5px;
      top: 3px;
      opacity: 0.4;

      svg {
        height: 16px;
        width: 16px;
        vertical-align: middle;
      }
    }

    .o-filter-menu-actions {
      display: flex;
      flex-direction: row;
      margin-bottom: 4px;

      .o-filter-menu-action-text {
        cursor: pointer;
        margin-right: 10px;
        color: blue;
        text-decoration: underline;
      }
    }

    .o-filter-menu-list {
      flex: auto;
      overflow-y: auto;
      border: 1px solid #949494;

      .o-filter-menu-no-values {
        color: #949494;
        font-style: italic;
      }
    }

    .o-filter-menu-buttons {
      margin-top: 9px;

      .o-button {
        height: 26px;
      }
    }
  }
`;class FilterMenu extends Component{static template="o-spreadsheet-FilterMenu";static props={filterPosition:Object,onClosed:{type:Function,optional:true},};static style=CSS;static components={FilterMenuValueItem};state=useState({values:[],textFilter:"",selectedValue:undefined,});searchBar=useRef("filterMenuSearchBar");setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(nextProps.filterPosition,this.props.filterPosition)){this.state.values=this.getFilterHiddenValues(nextProps.filterPosition);}});this.state.values=this.getFilterHiddenValues(this.props.filterPosition);}
get isSortable(){if(!this.table){return false;}
const coreTable=this.env.model.getters.getCoreTableMatchingTopLeft(this.table.range.sheetId,this.table.range.zone);return!this.env.model.getters.isReadonly()&&coreTable?.type!=="dynamic";}
getFilterHiddenValues(position){const sheetId=this.env.model.getters.getActiveSheetId();const filter=this.env.model.getters.getFilter({sheetId,...position});if(!filter){return[];}
const cellValues=(filter.filteredRange?positions(filter.filteredRange.zone):[]).filter(({row})=>!this.env.model.getters.isRowHidden(sheetId,row)).map(({col,row})=>this.env.model.getters.getEvaluatedCell({sheetId,col,row}).formattedValue);const filterValues=this.env.model.getters.getFilterHiddenValues({sheetId,...position});const strValues=[...cellValues,...filterValues];const normalizedFilteredValues=filterValues.map(toLowerCase);const normalizedValues=[...new Set(strValues.map(toLowerCase))];const sortedValues=normalizedValues.sort((val1,val2)=>val1.localeCompare(val2,undefined,{numeric:true,sensitivity:"base"}));return sortedValues.map((normalizedValue)=>{const checked=normalizedFilteredValues.findIndex((filteredValue)=>filteredValue===normalizedValue)===-1;return{checked,string:strValues.find((val)=>toLowerCase(val)===normalizedValue)||"",};});}
checkValue(value){this.state.selectedValue=value.string;value.checked=!value.checked;this.searchBar.el?.focus();}
onMouseMove(value){this.state.selectedValue=value.string;}
selectAll(){this.displayedValues.forEach((value)=>(value.checked=true));}
clearAll(){this.displayedValues.forEach((value)=>(value.checked=false));}
get table(){const sheetId=this.env.model.getters.getActiveSheetId();const position=this.props.filterPosition;return this.env.model.getters.getTable({sheetId,...position});}
get displayedValues(){if(!this.state.textFilter){return this.state.values;}
return fuzzyLookup(this.state.textFilter,this.state.values,(val)=>val.string);}
confirm(){const position=this.props.filterPosition;this.env.model.dispatch("UPDATE_FILTER",{...position,sheetId:this.env.model.getters.getActiveSheetId(),hiddenValues:this.state.values.filter((val)=>!val.checked).map((val)=>val.string),});this.props.onClosed?.();}
cancel(){this.props.onClosed?.();}
onKeyDown(ev){const displayedValues=this.displayedValues;if(displayedValues.length===0)
return;let selectedIndex=undefined;if(this.state.selectedValue!==undefined){const index=displayedValues.findIndex((val)=>val.string===this.state.selectedValue);selectedIndex=index===-1?undefined:index;}
switch(ev.key){case"ArrowDown":if(selectedIndex===undefined){selectedIndex=0;}
else{selectedIndex=Math.min(selectedIndex+1,displayedValues.length-1);}
ev.preventDefault();ev.stopPropagation();break;case"ArrowUp":if(selectedIndex===undefined){selectedIndex=displayedValues.length-1;}
else{selectedIndex=Math.max(selectedIndex-1,0);}
ev.preventDefault();ev.stopPropagation();break;case"Enter":if(selectedIndex!==undefined){this.checkValue(displayedValues[selectedIndex]);}
ev.stopPropagation();ev.preventDefault();break;}
this.state.selectedValue=selectedIndex!==undefined?displayedValues[selectedIndex].string:undefined;if(ev.key==="ArrowUp"||ev.key==="ArrowDown"){this.scrollListToSelectedValue(ev.key);}}
clearScrolledToValue(){this.state.values.forEach((val)=>(val.scrolledTo=undefined));}
scrollListToSelectedValue(arrow){this.clearScrolledToValue();const selectedValue=this.state.values.find((val)=>val.string===this.state.selectedValue);if(selectedValue){selectedValue.scrolledTo=arrow==="ArrowUp"?"top":"bottom";}}
sortFilterZone(sortDirection){const filterPosition=this.props.filterPosition;const table=this.table;const tableZone=table?.range.zone;if(!filterPosition||!tableZone||tableZone.top===tableZone.bottom){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const contentZone={...tableZone,top:tableZone.top+1};this.env.model.dispatch("SORT_CELLS",{sheetId,col:filterPosition.col,row:contentZone.top,zone:contentZone,sortDirection,sortOptions:{emptyCellAsZero:true,sortHeaders:true},});this.props.onClosed?.();}}
const FilterMenuPopoverBuilder={onOpen:(position,getters)=>{return{isOpen:true,props:{filterPosition:position},Component:FilterMenu,cellCorner:"BottomLeft",};},};const LINK_TOOLTIP_HEIGHT=32;const LINK_TOOLTIP_WIDTH=220;css`
  .o-link-tool {
    font-size: 13px;
    background-color: white;
    box-shadow: 0 1px 4px 3px rgba(60, 64, 67, 0.15);
    padding: 6px 12px;
    border-radius: 4px;
    display: flex;
    justify-content: space-between;
    height: ${LINK_TOOLTIP_HEIGHT}px;
    width: ${LINK_TOOLTIP_WIDTH}px;
    box-sizing: border-box !important;

    img {
      margin-right: 3px;
      width: 16px;
      height: 16px;
    }

    a.o-link {
      color: ${LINK_COLOR};
      text-decoration: none;
      flex-grow: 2;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    a.o-link:hover {
      text-decoration: none;
      color: #001d1f;
      cursor: pointer;
    }
  }
  .o-link-icon {
    float: right;
    padding-left: 5px;
    .o-icon {
      height: 16px;
    }
  }
  .o-link-icon .o-icon {
    height: 13px;
  }
  .o-link-icon:hover {
    cursor: pointer;
    color: #000;
  }
`;class LinkDisplay extends Component{static template="o-spreadsheet-LinkDisplay";static props={cellPosition:Object,onClosed:{type:Function,optional:true},};cellPopovers;setup(){this.cellPopovers=useStore(CellPopoverStore);}
get cell(){const{col,row}=this.props.cellPosition;const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getEvaluatedCell({sheetId,col,row});}
get link(){if(this.cell.link){return this.cell.link;}
const{col,row}=this.props.cellPosition;throw new Error(`LinkDisplay Component can only be used with link cells. ${toXC(col, row)} is not a link.`);}
getUrlRepresentation(link){return urlRepresentation(link,this.env.model.getters);}
openLink(){openLink(this.link,this.env);}
edit(){const{col,row}=this.props.cellPosition;this.env.model.selection.selectCell(col,row);this.cellPopovers.open({col,row},"LinkEditor");}
unlink(){const sheetId=this.env.model.getters.getActiveSheetId();const{col,row}=this.props.cellPosition;const style=this.env.model.getters.getCellComputedStyle({sheetId,col,row});const textColor=style?.textColor===LINK_COLOR?undefined:style?.textColor;this.env.model.dispatch("UPDATE_CELL",{col,row,sheetId,content:this.link.label,style:{...style,textColor,underline:undefined},});}}
const LinkCellPopoverBuilder={onHover:(position,getters)=>{const cell=getters.getEvaluatedCell(position);const shouldDisplayLink=!getters.isDashboard()&&cell.link&&getters.isVisibleInViewport(position);if(!shouldDisplayLink)
return{isOpen:false};return{isOpen:true,Component:LinkDisplay,props:{cellPosition:position},cellCorner:"BottomLeft",};},};const linkSheet={name:_t("Link sheet"),children:[(env)=>{const sheets=env.model.getters.getSheetIds().map((sheetId)=>env.model.getters.getSheet(sheetId));return sheets.map((sheet)=>({id:sheet.id,name:sheet.name,execute:()=>markdownLink(sheet.name,buildSheetLink(sheet.id)),}));},],};const deleteSheet={name:_t("Delete"),isVisible:(env)=>{return env.model.getters.getSheetIds().length>1;},execute:(env)=>env.askConfirmation(_t("Are you sure you want to delete this sheet?"),()=>{env.model.dispatch("DELETE_SHEET",{sheetId:env.model.getters.getActiveSheetId()});}),icon:"o-spreadsheet-Icon.TRASH",};const duplicateSheet={name:_t("Duplicate"),execute:(env)=>{const sheetIdFrom=env.model.getters.getActiveSheetId();const sheetIdTo=env.model.uuidGenerator.uuidv4();env.model.dispatch("DUPLICATE_SHEET",{sheetId:sheetIdFrom,sheetIdTo,});env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom,sheetIdTo});},icon:"o-spreadsheet-Icon.COPY",};const renameSheet=(args)=>{return{name:_t("Rename"),execute:args.renameSheetCallback,icon:"o-spreadsheet-Icon.RENAME_SHEET",};};const changeSheetColor=(args)=>{return{name:_t("Change color"),execute:args.openSheetColorPickerCallback,icon:"o-spreadsheet-Icon.PAINT_FORMAT",};};const sheetMoveRight={name:_t("Move right"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const sheetIds=env.model.getters.getVisibleSheetIds();return sheetIds.indexOf(sheetId)!==sheetIds.length-1;},execute:(env)=>env.model.dispatch("MOVE_SHEET",{sheetId:env.model.getters.getActiveSheetId(),delta:1,}),icon:"o-spreadsheet-Icon.MOVE_SHEET_RIGHT",};const sheetMoveLeft={name:_t("Move left"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();return env.model.getters.getVisibleSheetIds()[0]!==sheetId;},execute:(env)=>env.model.dispatch("MOVE_SHEET",{sheetId:env.model.getters.getActiveSheetId(),delta:-1,}),icon:"o-spreadsheet-Icon.MOVE_SHEET_LEFT",};const hideSheet={name:_t("Hide sheet"),isVisible:(env)=>env.model.getters.getVisibleSheetIds().length!==1,execute:(env)=>env.model.dispatch("HIDE_SHEET",{sheetId:env.model.getters.getActiveSheetId()}),icon:"o-spreadsheet-Icon.HIDE_SHEET",};const linkMenuRegistry=new MenuItemRegistry();linkMenuRegistry.add("sheet",{...linkSheet,sequence:10,});function useInterval(callback,delay){let intervalId;const{setInterval,clearInterval}=window;useEffect(()=>{intervalId=setInterval(callback,delay);return()=>clearInterval(intervalId);},()=>[delay]);return{pause:()=>{clearInterval(intervalId);intervalId=undefined;},resume:()=>{if(intervalId===undefined){intervalId=setInterval(callback,delay);}},};}
function useTimeOut(){let timeOutId;function clear(){if(timeOutId!==undefined){clearTimeout(timeOutId);timeOutId=undefined;}}
function schedule(callback,delay){clear();timeOutId=setTimeout(callback,delay);}
onWillUnmount(clear);return{clear,schedule,};}
css`
  .o-menu {
    background-color: white;
    padding: ${MENU_VERTICAL_PADDING}px 0px;
    width: ${MENU_WIDTH}px;
    box-sizing: border-box !important;
    user-select: none;

    .o-menu-item {
      box-sizing: border-box;
      height: ${MENU_ITEM_HEIGHT}px;
      padding: ${MENU_ITEM_PADDING_VERTICAL}px ${MENU_ITEM_PADDING_HORIZONTAL}px;
      cursor: pointer;
      user-select: none;

      .o-menu-item-name {
        min-width: 40%;
      }

      .o-menu-item-icon {
        display: inline-block;
        margin: 0px 8px 0px 0px;
        width: ${MENU_ITEM_HEIGHT - 2 * MENU_ITEM_PADDING_VERTICAL}px;
        line-height: ${MENU_ITEM_HEIGHT - 2 * MENU_ITEM_PADDING_VERTICAL}px;
      }

      &:not(.disabled) {
        &:hover,
        &.o-menu-item-active {
          background-color: ${BUTTON_ACTIVE_BG};
          color: ${BUTTON_ACTIVE_TEXT_COLOR};
        }
        .o-menu-item-description {
          color: grey;
        }
        .o-menu-item-icon {
          .o-icon {
            color: ${ICONS_COLOR};
          }
        }
      }
      &.disabled {
        color: ${DISABLED_TEXT_COLOR};
        cursor: not-allowed;
      }
    }
  }
`;const TIMEOUT_DELAY=250;class Menu extends Component{static template="o-spreadsheet-Menu";static props={position:Object,menuItems:Array,depth:{type:Number,optional:true},maxHeight:{type:Number,optional:true},onClose:Function,onMenuClicked:{type:Function,optional:true},menuId:{type:String,optional:true},onMouseOver:{type:Function,optional:true},width:{type:Number,optional:true},};static components={Menu,Popover};static defaultProps={depth:1,};subMenu=useState({isOpen:false,position:null,scrollOffset:0,menuItems:[],isHoveringChild:false,});menuRef=useRef("menu");hoveredMenu=undefined;position=useAbsoluteBoundingRect(this.menuRef);openingTimeOut=useTimeOut();setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});useExternalListener(window,"contextmenu",this.onExternalClick,{capture:true});onWillUpdateProps((nextProps)=>{if(nextProps.menuItems!==this.props.menuItems){this.closeSubMenu();}});onWillUnmount(()=>{this.hoveredMenu?.onStopHover?.(this.env);});}
get menuItemsAndSeparators(){const menuItemsAndSeparators=[];for(let i=0;i<this.props.menuItems.length;i++){const menuItem=this.props.menuItems[i];if(menuItem.isVisible(this.env)){menuItemsAndSeparators.push(menuItem);}
if(menuItem.separator&&i!==this.props.menuItems.length-1&&menuItemsAndSeparators[menuItemsAndSeparators.length-1]!=="separator"){menuItemsAndSeparators.push("separator");}}
if(menuItemsAndSeparators[menuItemsAndSeparators.length-1]==="separator"){menuItemsAndSeparators.pop();}
if(menuItemsAndSeparators.length===1&&menuItemsAndSeparators[0]==="separator"){return[];}
return menuItemsAndSeparators;}
get subMenuPosition(){const position=Object.assign({},this.subMenu.position);position.y-=this.subMenu.scrollOffset||0;return position;}
get popoverProps(){const isRoot=this.props.depth===1;return{anchorRect:{x:this.props.position.x,y:this.props.position.y,width:isRoot?0:this.props.width||MENU_WIDTH,height:isRoot?0:MENU_ITEM_HEIGHT,},positioning:"TopRight",verticalOffset:isRoot?0:MENU_VERTICAL_PADDING,onPopoverHidden:()=>this.closeSubMenu(),onPopoverMoved:()=>this.closeSubMenu(),};}
get childrenHaveIcon(){return this.props.menuItems.some((menuItem)=>!!this.getIconName(menuItem));}
getIconName(menu){if(menu.icon(this.env)){return menu.icon(this.env);}
if(menu.isActive?.(this.env)){return"o-spreadsheet-Icon.CHECK";}
return"";}
getColor(menu){return cssPropertiesToCss({color:menu.textColor});}
getIconColor(menu){return cssPropertiesToCss({color:menu.iconColor});}
async activateMenu(menu){const result=await menu.execute?.(this.env);this.close();this.props.onMenuClicked?.({detail:result});}
close(){this.closeSubMenu();this.props.onClose();}
onExternalClick(ev){const el=this.menuRef.el;if(el&&getOpenedMenus().some((el)=>isChildEvent(el,ev))){return;}
ev.closedMenuId=this.props.menuId;this.close();}
getName(menu){return menu.name(this.env);}
isRoot(menu){return!menu.execute;}
isEnabled(menu){if(menu.isEnabled(this.env)){return this.env.model.getters.isReadonly()?menu.isReadonlyAllowed:true;}
return false;}
isActive(menuItem){return(this.subMenu?.isHoveringChild||false)&&this.isParentMenu(this.subMenu,menuItem);}
onScroll(ev){this.subMenu.scrollOffset=ev.target.scrollTop;}
openSubMenu(menu,parentMenuEl){if(!parentMenuEl){return;}
const y=parentMenuEl.getBoundingClientRect().top;this.subMenu.position={x:this.position.x,y:y-(this.subMenu.scrollOffset||0),};this.subMenu.menuItems=menu.children(this.env);this.subMenu.isOpen=true;this.subMenu.parentMenu=menu;}
isParentMenu(subMenu,menuItem){return subMenu.parentMenu?.id===menuItem.id;}
closeSubMenu(){if(this.subMenu.isHoveringChild){return;}
this.subMenu.isOpen=false;this.subMenu.parentMenu=undefined;}
onClickMenu(menu,ev){if(this.isEnabled(menu)){if(this.isRoot(menu)){this.openSubMenu(menu,ev.currentTarget);}
else{this.activateMenu(menu);}}}
onMouseOver(menu,ev){if(this.isEnabled(menu)){if(this.isParentMenu(this.subMenu,menu)){this.openingTimeOut.clear();return;}
const currentTarget=ev.currentTarget;if(this.isRoot(menu)){this.openingTimeOut.schedule(()=>{this.openSubMenu(menu,currentTarget);},TIMEOUT_DELAY);}}}
onMouseOverMainMenu(){this.props.onMouseOver?.();this.subMenu.isHoveringChild=false;}
onMouseOverChildMenu(){this.subMenu.isHoveringChild=true;this.openingTimeOut.clear();}
onMouseEnter(menu,ev){this.hoveredMenu=menu;menu.onStartHover?.(this.env);}
onMouseLeave(menu){this.openingTimeOut.schedule(this.closeSubMenu.bind(this),TIMEOUT_DELAY);this.hoveredMenu=undefined;menu.onStopHover?.(this.env);}
get menuStyle(){return this.props.width?cssPropertiesToCss({width:this.props.width+"px"}):"";}}
const MENU_OFFSET_X=320;const MENU_OFFSET_Y=100;const PADDING=12;const LINK_EDITOR_WIDTH=340;css`
  .o-link-editor {
    font-size: 13px;
    background-color: white;
    box-shadow: 0 1px 4px 3px rgba(60, 64, 67, 0.15);
    padding: ${PADDING}px;
    display: flex;
    flex-direction: column;
    border-radius: 4px;
    width: ${LINK_EDITOR_WIDTH}px;

    .o-section {
      .o-section-title {
        font-weight: bold;
        margin-bottom: 5px;
      }
    }
    .o-buttons {
      padding-left: 16px;
      padding-top: 16px;
      text-align: right;
    }
    input.o-input {
      box-sizing: border-box;
      width: 100%;
      padding: 0 23px 4px 0;
    }
    .o-link-url {
      position: relative;
      flex-grow: 1;
      button {
        position: absolute;
        right: 0px;
        top: 0px;
        border: none;
        height: 20px;
        width: 20px;
        background-color: #fff;
        margin: 2px 3px 1px 0px;
        padding: 0px 1px 0px 0px;
      }
      button:hover {
        cursor: pointer;
      }
    }
  }
`;class LinkEditor extends Component{static template="o-spreadsheet-LinkEditor";static props={cellPosition:Object,onClosed:{type:Function,optional:true},};static components={Menu};menuItems=linkMenuRegistry.getMenuItems();link=useState(this.defaultState);menu=useState({isOpen:false,});linkEditorRef=useRef("linkEditor");position=useAbsoluteBoundingRect(this.linkEditorRef);urlInput=useRef("urlInput");setup(){onMounted(()=>this.urlInput.el?.focus());}
get defaultState(){const{col,row}=this.props.cellPosition;const sheetId=this.env.model.getters.getActiveSheetId();const cell=this.env.model.getters.getEvaluatedCell({sheetId,col,row});if(cell.link){return{url:cell.link.url,label:cell.formattedValue,isUrlEditable:cell.link.isUrlEditable,};}
return{label:cell.formattedValue,url:"",isUrlEditable:true,};}
get menuPosition(){return{x:this.position.x+MENU_OFFSET_X-PADDING-2,y:this.position.y+MENU_OFFSET_Y,};}
onSpecialLink(ev){const{detail:markdownLink}=ev;const link=detectLink(markdownLink);if(!link){return;}
this.link.url=link.url;this.link.label=link.label;this.link.isUrlEditable=link.isUrlEditable;}
getUrlRepresentation(link){return urlRepresentation(link,this.env.model.getters);}
openMenu(){this.menu.isOpen=true;}
removeLink(){this.link.url="";this.link.isUrlEditable=true;}
save(){const{col,row}=this.props.cellPosition;const locale=this.env.model.getters.getLocale();const label=this.link.label?canonicalizeNumberContent(this.link.label,locale):this.link.url;this.env.model.dispatch("UPDATE_CELL",{col:col,row:row,sheetId:this.env.model.getters.getActiveSheetId(),content:markdownLink(label,this.link.url),});this.props.onClosed?.();}
cancel(){this.props.onClosed?.();}
onKeyDown(ev){switch(ev.key){case"Enter":if(this.link.url){this.save();}
ev.stopPropagation();ev.preventDefault();break;case"Escape":this.cancel();ev.stopPropagation();break;}}}
const LinkEditorPopoverBuilder={onOpen:(position,getters)=>{return{isOpen:true,props:{cellPosition:position},Component:LinkEditor,cellCorner:"BottomLeft",};},};cellPopoverRegistry.add("ErrorToolTip",ErrorToolTipPopoverBuilder).add("LinkCell",LinkCellPopoverBuilder).add("LinkEditor",LinkEditorPopoverBuilder).add("FilterMenu",FilterMenuPopoverBuilder);function chartFactory(getters){const builders=chartRegistry.getAll().sort((a,b)=>a.sequence-b.sequence);function createChart(id,definition,sheetId){const builder=builders.find((builder)=>builder.match(definition.type));if(!builder){throw new Error(`No builder for this chart: ${definition.type}`);}
return builder.createChart(definition,sheetId,getters);}
return createChart;}
function chartRuntimeFactory(getters){const builders=chartRegistry.getAll().sort((a,b)=>a.sequence-b.sequence);function createRuntimeChart(chart){const builder=builders.find((builder)=>builder.match(chart.type));if(!builder){throw new Error("No runtime builder for this chart.");}
return builder.getChartRuntime(chart,getters);}
return createRuntimeChart;}
function validateChartDefinition(validator,definition){const validators=chartRegistry.getAll().find((validator)=>validator.match(definition.type));if(!validators){throw new Error("Unknown chart type.");}
return validators.validateChartDefinition(validator,definition);}
function transformDefinition(definition,executed){const transformation=chartRegistry.getAll().find((factory)=>factory.match(definition.type));if(!transformation){throw new Error("Unknown chart type.");}
return transformation.transformDefinition(definition,executed);}
function getSmartChartDefinition(zone,getters){let dataSetZone=zone;const singleColumn=zoneToDimension(zone).numberOfCols===1;if(!singleColumn){dataSetZone={...zone,left:zone.left+1};}
const dataRange=zoneToXc(dataSetZone);const dataSets=[{dataRange,yAxisId:"y"}];const sheetId=getters.getActiveSheetId();const topLeftCell=getters.getCell({sheetId,col:zone.left,row:zone.top});if(getZoneArea(zone)===1&&topLeftCell?.content){return{type:"scorecard",title:{},background:topLeftCell.style?.fillColor||undefined,keyValue:zoneToXc(zone),baselineMode:DEFAULT_SCORECARD_BASELINE_MODE,baselineColorUp:DEFAULT_SCORECARD_BASELINE_COLOR_UP,baselineColorDown:DEFAULT_SCORECARD_BASELINE_COLOR_DOWN,};}
const cellsInFirstRow=getters.getEvaluatedCellsInZone(sheetId,{...dataSetZone,bottom:dataSetZone.top,});const dataSetsHaveTitle=!!cellsInFirstRow.find((cell)=>cell.type!==CellValueType.empty&&cell.type!==CellValueType.number);let labelRangeXc;if(!singleColumn){labelRangeXc=zoneToXc({...zone,right:zone.left,});}
const newLegendPos=dataSetZone.right===dataSetZone.left?"none":"top";const labelRange=labelRangeXc?getters.getRangeFromSheetXC(sheetId,labelRangeXc):undefined;if(canChartParseLabels(labelRange,getters)){return{title:{},dataSets,labelsAsText:false,stacked:false,aggregated:false,cumulative:false,labelRange:labelRangeXc,type:"line",dataSetsHaveTitle,legendPosition:newLegendPos,};}
const _dataSets=createDataSets(getters,dataSets,sheetId,dataSetsHaveTitle);if(singleColumn&&getData(getters,_dataSets[0]).every((e)=>typeof e==="string"&&!isEvaluationError(e))){return{title:{},dataSets:[{dataRange}],aggregated:true,labelRange:dataRange,type:"pie",legendPosition:"top",dataSetsHaveTitle:false,};}
return{title:{},dataSets,labelRange:labelRangeXc,type:"bar",stacked:false,aggregated:false,dataSetsHaveTitle,legendPosition:newLegendPos,};}
function interactiveCreateTable(env,sheetId,tableConfig){let target=env.model.getters.getSelectedZones();let isDynamic=env.model.getters.canCreateDynamicTableOnZones(sheetId,target);if(target.length===1&&!isDynamic&&getZoneArea(target[0])===1){env.model.selection.selectTableAroundSelection();target=env.model.getters.getSelectedZones();isDynamic=env.model.getters.canCreateDynamicTableOnZones(sheetId,target);}
const ranges=target.map((zone)=>env.model.getters.getRangeDataFromZone(sheetId,zone));const result=env.model.dispatch("CREATE_TABLE",{ranges,sheetId,config:tableConfig,tableType:isDynamic?"dynamic":"static",});if(result.isCancelledBecause("TableOverlap")){env.raiseError(TableTerms.Errors.TableOverlap);}
else if(result.isCancelledBecause("NonContinuousTargets")){env.raiseError(TableTerms.Errors.NonContinuousTargets);}
return result;}
function setFormatter(env,format){env.model.dispatch("SET_FORMATTING_WITH_PIVOT",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),format,});}
function setStyle(env,style){env.model.dispatch("SET_FORMATTING",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),style,});}
const PASTE_ACTION=async(env)=>paste$1(env);const PASTE_AS_VALUE_ACTION=async(env)=>paste$1(env,"asValue");async function paste$1(env,pasteOption){const osClipboard=await env.clipboard.read();switch(osClipboard.status){case"ok":const htmlDocument=new DOMParser().parseFromString(osClipboard.content[ClipboardMIMEType.Html]??"<div></div>","text/html");const osClipboardSpreadsheetContent=osClipboard.content[ClipboardMIMEType.OSpreadsheet]||"{}";const clipboardId=JSON.parse(osClipboardSpreadsheetContent).clipboardId??htmlDocument.querySelector("div")?.getAttribute("data-clipboard-id");const target=env.model.getters.getSelectedZones();if(env.model.getters.getClipboardId()!==clipboardId){interactivePasteFromOS(env,target,osClipboard.content,pasteOption);}
else{interactivePaste(env,target,pasteOption);}
if(env.model.getters.isCutOperation()&&pasteOption!=="asValue"){await env.clipboard.write({[ClipboardMIMEType.PlainText]:""});}
break;case"notImplemented":env.raiseError(_t("Pasting from the context menu is not supported in this browser. Use keyboard shortcuts ctrl+c / ctrl+v instead."));break;case"permissionDenied":env.raiseError(_t("Access to the clipboard denied by the browser. Please enable clipboard permission for this page in your browser settings."));break;}}
const PASTE_FORMAT_ACTION=(env)=>paste$1(env,"onlyFormat");const DELETE_CONTENT_ROWS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Clear rows");}
let first;let last;const activesRows=env.model.getters.getActiveRows();if(activesRows.size!==0){first=largeMin([...activesRows]);last=largeMax([...activesRows]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.top;last=zone.bottom;}
if(first===last){return _t("Clear row %s",(first+1).toString());}
return _t("Clear rows %s - %s",(first+1).toString(),(last+1).toString());};const DELETE_CONTENT_ROWS_ACTION=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const target=[...env.model.getters.getActiveRows()].map((index)=>env.model.getters.getRowsZone(sheetId,index,index));env.model.dispatch("DELETE_CONTENT",{target,sheetId:env.model.getters.getActiveSheetId(),});};const DELETE_CONTENT_COLUMNS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Clear columns");}
let first;let last;const activeCols=env.model.getters.getActiveCols();if(activeCols.size!==0){first=largeMin([...activeCols]);last=largeMax([...activeCols]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.left;last=zone.right;}
if(first===last){return _t("Clear column %s",numberToLetters(first));}
return _t("Clear columns %s - %s",numberToLetters(first),numberToLetters(last));};const DELETE_CONTENT_COLUMNS_ACTION=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const target=[...env.model.getters.getActiveCols()].map((index)=>env.model.getters.getColsZone(sheetId,index,index));env.model.dispatch("DELETE_CONTENT",{target,sheetId:env.model.getters.getActiveSheetId(),});};const REMOVE_ROWS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Delete rows");}
let first;let last;const activesRows=env.model.getters.getActiveRows();if(activesRows.size!==0){first=largeMin([...activesRows]);last=largeMax([...activesRows]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.top;last=zone.bottom;}
if(first===last){return _t("Delete row %s",(first+1).toString());}
return _t("Delete rows %s - %s",(first+1).toString(),(last+1).toString());};const REMOVE_ROWS_ACTION=(env)=>{let rows=[...env.model.getters.getActiveRows()];if(!rows.length){const zone=env.model.getters.getSelectedZones()[0];for(let i=zone.top;i<=zone.bottom;i++){rows.push(i);}}
env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"ROW",elements:rows,});};const CAN_REMOVE_COLUMNS_ROWS=(dimension,env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedElements=env.model.getters.getElementsFromSelection(dimension);const includesAllVisibleHeaders=env.model.getters.checkElementsIncludeAllVisibleHeaders(sheetId,dimension,selectedElements);const includesAllNonFrozenHeaders=env.model.getters.checkElementsIncludeAllNonFrozenHeaders(sheetId,dimension,selectedElements);return!includesAllVisibleHeaders&&!includesAllNonFrozenHeaders;};const REMOVE_COLUMNS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Delete columns");}
let first;let last;const activeCols=env.model.getters.getActiveCols();if(activeCols.size!==0){first=largeMin([...activeCols]);last=largeMax([...activeCols]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.left;last=zone.right;}
if(first===last){return _t("Delete column %s",numberToLetters(first));}
return _t("Delete columns %s - %s",numberToLetters(first),numberToLetters(last));};const NOT_ALL_VISIBLE_ROWS_SELECTED=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedRows=env.model.getters.getElementsFromSelection("ROW");return!env.model.getters.checkElementsIncludeAllVisibleHeaders(sheetId,"ROW",selectedRows);};const REMOVE_COLUMNS_ACTION=(env)=>{let columns=[...env.model.getters.getActiveCols()];if(!columns.length){const zone=env.model.getters.getSelectedZones()[0];for(let i=zone.left;i<=zone.right;i++){columns.push(i);}}
env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"COL",elements:columns,});};const NOT_ALL_VISIBLE_COLS_SELECTED=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedCols=env.model.getters.getElementsFromSelection("COL");return!env.model.getters.checkElementsIncludeAllVisibleHeaders(sheetId,"COL",selectedCols);};const INSERT_ROWS_BEFORE_ACTION=(env)=>{const activeRows=env.model.getters.getActiveRows();let row;let quantity;if(activeRows.size){row=largeMin([...activeRows]);quantity=activeRows.size;}
else{const zone=env.model.getters.getSelectedZones()[0];row=zone.top;quantity=zone.bottom-zone.top+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),position:"before",base:row,quantity,dimension:"ROW",});};const INSERT_ROWS_AFTER_ACTION=(env)=>{const activeRows=env.model.getters.getActiveRows();let row;let quantity;if(activeRows.size){row=largeMax([...activeRows]);quantity=activeRows.size;}
else{const zone=env.model.getters.getSelectedZones()[0];row=zone.bottom;quantity=zone.bottom-zone.top+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),position:"after",base:row,quantity,dimension:"ROW",});};const INSERT_COLUMNS_BEFORE_ACTION=(env)=>{const activeCols=env.model.getters.getActiveCols();let column;let quantity;if(activeCols.size){column=largeMin([...activeCols]);quantity=activeCols.size;}
else{const zone=env.model.getters.getSelectedZones()[0];column=zone.left;quantity=zone.right-zone.left+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),position:"before",dimension:"COL",base:column,quantity,});};const INSERT_COLUMNS_AFTER_ACTION=(env)=>{const activeCols=env.model.getters.getActiveCols();let column;let quantity;if(activeCols.size){column=largeMax([...activeCols]);quantity=activeCols.size;}
else{const zone=env.model.getters.getSelectedZones()[0];column=zone.right;quantity=zone.right-zone.left+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),position:"after",dimension:"COL",base:column,quantity,});};const HIDE_COLUMNS_NAME=(env)=>{const cols=env.model.getters.getElementsFromSelection("COL");let first=cols[0];let last=cols[cols.length-1];if(cols.length===1){return _t("Hide column %s",numberToLetters(first).toString());}
else if(last-first+1===cols.length){return _t("Hide columns %s - %s",numberToLetters(first).toString(),numberToLetters(last).toString());}
else{return _t("Hide columns");}};const HIDE_ROWS_NAME=(env)=>{const rows=env.model.getters.getElementsFromSelection("ROW");let first=rows[0];let last=rows[rows.length-1];if(rows.length===1){return _t("Hide row %s",(first+1).toString());}
else if(last-first+1===rows.length){return _t("Hide rows %s - %s",(first+1).toString(),(last+1).toString());}
else{return _t("Hide rows");}};const CREATE_CHART=(env)=>{const getters=env.model.getters;const id=env.model.uuidGenerator.uuidv4();const sheetId=getters.getActiveSheetId();if(getZoneArea(env.model.getters.getSelectedZone())===1){env.model.selection.selectTableAroundSelection();}
const size={width:DEFAULT_FIGURE_WIDTH,height:DEFAULT_FIGURE_HEIGHT};const position=getChartPositionAtCenterOfViewport(getters,size);const result=env.model.dispatch("CREATE_CHART",{sheetId,id,position,size,definition:getSmartChartDefinition(env.model.getters.getSelectedZone(),env.model.getters),});if(result.isSuccessful){env.model.dispatch("SELECT_FIGURE",{id});env.openSidePanel("ChartPanel");}};const CREATE_PIVOT=(env)=>{const pivotId=env.model.uuidGenerator.uuidv4();const newSheetId=env.model.uuidGenerator.uuidv4();const result=env.model.dispatch("INSERT_NEW_PIVOT",{pivotId,newSheetId});if(result.isSuccessful){env.openSidePanel("PivotSidePanel",{pivotId});}};const REINSERT_DYNAMIC_PIVOT_CHILDREN=(env)=>env.model.getters.getPivotIds().map((pivotId,index)=>({id:`reinsert_dynamic_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:index,execute:(env)=>{const zone=env.model.getters.getSelectedZone();const table=env.model.getters.getPivot(pivotId).getTableStructure().export();env.model.dispatch("INSERT_PIVOT_WITH_TABLE",{pivotId,table,col:zone.left,row:zone.top,sheetId:env.model.getters.getActiveSheetId(),pivotMode:"dynamic",});env.model.dispatch("REFRESH_PIVOT",{id:pivotId});},isVisible:(env)=>env.model.getters.getPivot(pivotId).isValid(),}));const REINSERT_STATIC_PIVOT_CHILDREN=(env)=>env.model.getters.getPivotIds().map((pivotId,index)=>({id:`reinsert_static_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:index,execute:(env)=>{const zone=env.model.getters.getSelectedZone();const table=env.model.getters.getPivot(pivotId).getTableStructure().export();env.model.dispatch("INSERT_PIVOT_WITH_TABLE",{pivotId,table,col:zone.left,row:zone.top,sheetId:env.model.getters.getActiveSheetId(),pivotMode:"static",});env.model.dispatch("REFRESH_PIVOT",{id:pivotId});},isVisible:(env)=>env.model.getters.getPivot(pivotId).isValid(),}));async function requestImage(env){try{return await env.imageProvider.requestImage();}
catch{env.raiseError(_t("An unexpected error occurred during the image transfer"));return undefined;}}
const CREATE_IMAGE=async(env)=>{if(env.imageProvider){const sheetId=env.model.getters.getActiveSheetId();const figureId=env.model.uuidGenerator.uuidv4();const image=await requestImage(env);if(!image){throw new Error("No image provider was given to the environment");}
const size=getMaxFigureSize(env.model.getters,image.size);const position=centerFigurePosition(env.model.getters,size);env.model.dispatch("CREATE_IMAGE",{sheetId,figureId,position,size,definition:image,});}};const FORMAT_PERCENT_ACTION=(env)=>setFormatter(env,"0.00%");const OPEN_CF_SIDEPANEL_ACTION=(env)=>{env.openSidePanel("ConditionalFormatting",{selection:env.model.getters.getSelectedZones()});};const INSERT_LINK=(env)=>{let{col,row}=env.model.getters.getActivePosition();env.getStore(CellPopoverStore).open({col,row},"LinkEditor");};const INSERT_LINK_NAME=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const{col,row}=env.model.getters.getActivePosition();const cell=env.model.getters.getEvaluatedCell({sheetId,col,row});return cell&&cell.link?_t("Edit link"):_t("Insert link");};const SELECTED_TABLE_HAS_FILTERS=(env)=>{const table=env.model.getters.getFirstTableInSelection();return table?.config.hasFilters||false;};const SELECTION_CONTAINS_SINGLE_TABLE=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedZones=env.model.getters.getSelectedZones();return env.model.getters.getTablesOverlappingZones(sheetId,selectedZones).length===1;};const IS_SELECTION_CONTINUOUS=(env)=>{return areZonesContinuous(env.model.getters.getSelectedZones());};const ADD_DATA_FILTER=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const table=env.model.getters.getFirstTableInSelection();if(table){env.model.dispatch("UPDATE_TABLE",{sheetId,zone:table.range.zone,config:{hasFilters:true},});}
else{const tableConfig={...DEFAULT_TABLE_CONFIG,hasFilters:true,bandedRows:false,styleId:"TableStyleLight11",};interactiveCreateTable(env,sheetId,tableConfig);}};const REMOVE_DATA_FILTER=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const table=env.model.getters.getFirstTableInSelection();if(!table){return;}
env.model.dispatch("UPDATE_TABLE",{sheetId,zone:table.range.zone,config:{hasFilters:false},});};const INSERT_TABLE=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const result=interactiveCreateTable(env,sheetId);if(result.isSuccessful){env.openSidePanel("TableSidePanel",{});}};const DELETE_SELECTED_TABLE=(env)=>{const position=env.model.getters.getActivePosition();const table=env.model.getters.getTable(position);if(!table){return;}
env.model.dispatch("REMOVE_TABLE",{sheetId:position.sheetId,target:[table.range.zone],});};const IS_ONLY_ONE_RANGE=(env)=>{return env.model.getters.getSelectedZones().length===1;};const CAN_INSERT_HEADER=(env,dimension)=>{if(!IS_ONLY_ONE_RANGE(env)){return false;}
const activeHeaders=dimension==="COL"?env.model.getters.getActiveCols():env.model.getters.getActiveRows();const ortogonalActiveHeaders=dimension==="COL"?env.model.getters.getActiveRows():env.model.getters.getActiveCols();const sheetId=env.model.getters.getActiveSheetId();const zone=env.model.getters.getSelectedZone();const allSheetSelected=isEqual(zone,env.model.getters.getSheetZone(sheetId));return isConsecutive(activeHeaders)&&(ortogonalActiveHeaders.size===0||allSheetSelected);};const CREATE_OR_REMOVE_FILTER_ACTION={name:(env)=>SELECTED_TABLE_HAS_FILTERS(env)?_t("Remove selected filters"):_t("Add filters"),isEnabled:(env)=>IS_SELECTION_CONTINUOUS(env),execute:(env)=>SELECTED_TABLE_HAS_FILTERS(env)?REMOVE_DATA_FILTER(env):ADD_DATA_FILTER(env),icon:"o-spreadsheet-Icon.FILTER_ICON_ACTIVE",};const undo={name:_t("Undo"),description:"Ctrl+Z",execute:(env)=>env.model.dispatch("REQUEST_UNDO"),isEnabled:(env)=>env.model.getters.canUndo(),icon:"o-spreadsheet-Icon.UNDO",};const redo={name:_t("Redo"),description:"Ctrl+Y",execute:(env)=>env.model.dispatch("REQUEST_REDO"),isEnabled:(env)=>env.model.getters.canRedo(),icon:"o-spreadsheet-Icon.REDO",};const copy={name:_t("Copy"),description:"Ctrl+C",isReadonlyAllowed:true,execute:async(env)=>{env.model.dispatch("COPY");await env.clipboard.write(env.model.getters.getClipboardContent());},icon:"o-spreadsheet-Icon.COPY",};const cut={name:_t("Cut"),description:"Ctrl+X",execute:async(env)=>{interactiveCut(env);await env.clipboard.write(env.model.getters.getClipboardContent());},icon:"o-spreadsheet-Icon.CUT",};const paste={name:_t("Paste"),description:"Ctrl+V",execute:PASTE_ACTION,icon:"o-spreadsheet-Icon.PASTE",};const pasteSpecial={name:_t("Paste special"),isVisible:(env)=>{return!env.model.getters.isCutOperation();},icon:"o-spreadsheet-Icon.PASTE",};const pasteSpecialValue={name:_t("Paste as value"),description:"Ctrl+Shift+V",execute:PASTE_AS_VALUE_ACTION,};const pasteSpecialFormat={name:_t("Paste format only"),execute:PASTE_FORMAT_ACTION,};const findAndReplace={name:_t("Find and replace"),description:"Ctrl+H",isReadonlyAllowed:true,execute:(env)=>{env.openSidePanel("FindAndReplace",{});},icon:"o-spreadsheet-Icon.SEARCH",};const deleteValues={name:_t("Delete values"),execute:(env)=>env.model.dispatch("DELETE_CONTENT",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),}),};const deleteRows={name:REMOVE_ROWS_NAME,execute:REMOVE_ROWS_ACTION,isVisible:(env)=>CAN_REMOVE_COLUMNS_ROWS("ROW",env),};const deleteRow={...deleteRows,isVisible:IS_ONLY_ONE_RANGE,};const clearRows={name:DELETE_CONTENT_ROWS_NAME,execute:DELETE_CONTENT_ROWS_ACTION,};const deleteCols={name:REMOVE_COLUMNS_NAME,execute:REMOVE_COLUMNS_ACTION,isVisible:(env)=>CAN_REMOVE_COLUMNS_ROWS("COL",env),};const deleteCol={...deleteCols,isVisible:IS_ONLY_ONE_RANGE,};const clearCols={name:DELETE_CONTENT_COLUMNS_NAME,execute:DELETE_CONTENT_COLUMNS_ACTION,};const deleteCells={name:_t("Delete cells"),isVisible:IS_ONLY_ONE_RANGE,};const deleteCellShiftUp={name:_t("Delete cell and shift up"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("DELETE_CELL",{zone,shiftDimension:"ROW"});handlePasteResult(env,result);},};const deleteCellShiftLeft={name:_t("Delete cell and shift left"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("DELETE_CELL",{zone,shiftDimension:"COL"});handlePasteResult(env,result);},};const mergeCells={name:_t("Merge cells"),isEnabled:(env)=>!cannotMerge(env),isActive:(env)=>isInMerge(env),execute:(env)=>toggleMerge(env),icon:"o-spreadsheet-Icon.MERGE_CELL",};const editTable={name:()=>_t("Edit table"),execute:(env)=>env.openSidePanel("TableSidePanel",{}),icon:"o-spreadsheet-Icon.EDIT_TABLE",};const deleteTable={name:()=>_t("Delete table"),execute:DELETE_SELECTED_TABLE,icon:"o-spreadsheet-Icon.DELETE_TABLE",};function cannotMerge(env){const zones=env.model.getters.getSelectedZones();const{top,left,right,bottom}=env.model.getters.getSelectedZone();const{sheetId}=env.model.getters.getActivePosition();const{xSplit,ySplit}=env.model.getters.getPaneDivisions(sheetId);return(zones.length>1||(top===bottom&&left===right)||(left<xSplit&&xSplit<=right)||(top<ySplit&&ySplit<=bottom));}
function isInMerge(env){if(!cannotMerge(env)){const zones=env.model.getters.getSelectedZones();const{col,row,sheetId}=env.model.getters.getActivePosition();const zone=env.model.getters.expandZone(sheetId,positionToZone({col,row}));return isEqual(zones[0],zone);}
return false;}
function toggleMerge(env){if(cannotMerge(env)){return;}
const zones=env.model.getters.getSelectedZones();const target=[zones[zones.length-1]];const sheetId=env.model.getters.getActiveSheetId();if(isInMerge(env)){env.model.dispatch("REMOVE_MERGE",{sheetId,target});}
else{interactiveAddMerge(env,sheetId,target);}}
var ACTION_EDIT=Object.freeze({__proto__:null,clearCols:clearCols,clearRows:clearRows,copy:copy,cut:cut,deleteCellShiftLeft:deleteCellShiftLeft,deleteCellShiftUp:deleteCellShiftUp,deleteCells:deleteCells,deleteCol:deleteCol,deleteCols:deleteCols,deleteRow:deleteRow,deleteRows:deleteRows,deleteTable:deleteTable,deleteValues:deleteValues,editTable:editTable,findAndReplace:findAndReplace,mergeCells:mergeCells,paste:paste,pasteSpecial:pasteSpecial,pasteSpecialFormat:pasteSpecialFormat,pasteSpecialValue:pasteSpecialValue,redo:redo,undo:undo});const insertRow={name:(env)=>{const number=getRowsNumber(env);return number===1?_t("Insert row"):_t("Insert %s rows",number.toString());},isVisible:(env)=>CAN_INSERT_HEADER(env,"ROW"),icon:"o-spreadsheet-Icon.INSERT_ROW",};const rowInsertRowBefore={name:(env)=>{const number=getRowsNumber(env);return number===1?_t("Insert row above"):_t("Insert %s rows above",number.toString());},execute:INSERT_ROWS_BEFORE_ACTION,isVisible:(env)=>CAN_INSERT_HEADER(env,"ROW"),icon:"o-spreadsheet-Icon.INSERT_ROW_BEFORE",};const topBarInsertRowsBefore={...rowInsertRowBefore,name:(env)=>{const number=getRowsNumber(env);if(number===1){return _t("Row above");}
return _t("%s Rows above",number.toString());},};const cellInsertRowsBefore={...rowInsertRowBefore,name:(env)=>{const number=getRowsNumber(env);if(number===1){return _t("Insert row");}
return _t("Insert %s rows",number.toString());},isVisible:IS_ONLY_ONE_RANGE,icon:"o-spreadsheet-Icon.INSERT_ROW_BEFORE",};const rowInsertRowsAfter={execute:INSERT_ROWS_AFTER_ACTION,name:(env)=>{const number=getRowsNumber(env);return number===1?_t("Insert row below"):_t("Insert %s rows below",number.toString());},isVisible:(env)=>CAN_INSERT_HEADER(env,"ROW"),icon:"o-spreadsheet-Icon.INSERT_ROW_AFTER",};const topBarInsertRowsAfter={...rowInsertRowsAfter,name:(env)=>{const number=getRowsNumber(env);if(number===1){return _t("Row below");}
return _t("%s Rows below",number.toString());},};const insertCol={name:(env)=>{const number=getColumnsNumber(env);return number===1?_t("Insert column"):_t("Insert %s columns",number.toString());},isVisible:(env)=>CAN_INSERT_HEADER(env,"COL"),icon:"o-spreadsheet-Icon.INSERT_COL",};const colInsertColsBefore={name:(env)=>{const number=getColumnsNumber(env);return number===1?_t("Insert column left"):_t("Insert %s columns left",number.toString());},execute:INSERT_COLUMNS_BEFORE_ACTION,isVisible:(env)=>CAN_INSERT_HEADER(env,"COL"),icon:"o-spreadsheet-Icon.INSERT_COL_BEFORE",};const topBarInsertColsBefore={...colInsertColsBefore,name:(env)=>{const number=getColumnsNumber(env);if(number===1){return _t("Column left");}
return _t("%s Columns left",number.toString());},};const cellInsertColsBefore={...colInsertColsBefore,name:(env)=>{const number=getColumnsNumber(env);if(number===1){return _t("Insert column");}
return _t("Insert %s columns",number.toString());},isVisible:IS_ONLY_ONE_RANGE,icon:"o-spreadsheet-Icon.INSERT_COL_BEFORE",};const colInsertColsAfter={name:(env)=>{const number=getColumnsNumber(env);return number===1?_t("Insert column right"):_t("Insert %s columns right",number.toString());},execute:INSERT_COLUMNS_AFTER_ACTION,isVisible:(env)=>CAN_INSERT_HEADER(env,"COL"),icon:"o-spreadsheet-Icon.INSERT_COL_AFTER",};const topBarInsertColsAfter={...colInsertColsAfter,name:(env)=>{const number=getColumnsNumber(env);if(number===1){return _t("Column right");}
return _t("%s Columns right",number.toString());},execute:INSERT_COLUMNS_AFTER_ACTION,};const insertCell={name:_t("Insert cells"),isVisible:(env)=>IS_ONLY_ONE_RANGE(env)&&env.model.getters.getActiveCols().size===0&&env.model.getters.getActiveRows().size===0,icon:"o-spreadsheet-Icon.INSERT_CELL",};const insertCellShiftDown={name:_t("Insert cells and shift down"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("INSERT_CELL",{zone,shiftDimension:"ROW"});handlePasteResult(env,result);},isVisible:(env)=>env.model.getters.getActiveRows().size===0&&env.model.getters.getActiveCols().size===0,icon:"o-spreadsheet-Icon.INSERT_CELL_SHIFT_DOWN",};const insertCellShiftRight={name:_t("Insert cells and shift right"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("INSERT_CELL",{zone,shiftDimension:"COL"});handlePasteResult(env,result);},isVisible:(env)=>env.model.getters.getActiveRows().size===0&&env.model.getters.getActiveCols().size===0,icon:"o-spreadsheet-Icon.INSERT_CELL_SHIFT_RIGHT",};const insertChart={name:_t("Chart"),execute:CREATE_CHART,icon:"o-spreadsheet-Icon.INSERT_CHART",};const insertPivot={name:_t("Pivot table"),execute:CREATE_PIVOT,icon:"o-spreadsheet-Icon.PIVOT",};const insertImage={name:_t("Image"),description:"Ctrl+O",execute:CREATE_IMAGE,isVisible:(env)=>env.imageProvider!==undefined,icon:"o-spreadsheet-Icon.INSERT_IMAGE",};const insertTable={name:()=>_t("Table"),execute:INSERT_TABLE,isVisible:(env)=>IS_SELECTION_CONTINUOUS(env)&&!env.model.getters.getFirstTableInSelection(),icon:"o-spreadsheet-Icon.PAINT_TABLE",};const insertFunction={name:_t("Function"),icon:"o-spreadsheet-Icon.FORMULA",};const insertFunctionSum={name:_t("SUM"),execute:(env)=>env.startCellEdition(`=SUM(`),};const insertFunctionAverage={name:_t("AVERAGE"),execute:(env)=>env.startCellEdition(`=AVERAGE(`),};const insertFunctionCount={name:_t("COUNT"),execute:(env)=>env.startCellEdition(`=COUNT(`),};const insertFunctionMax={name:_t("MAX"),execute:(env)=>env.startCellEdition(`=MAX(`),};const insertFunctionMin={name:_t("MIN"),execute:(env)=>env.startCellEdition(`=MIN(`),};const categorieFunctionAll={name:_t("All"),children:[allFunctionListMenuBuilder],};function allFunctionListMenuBuilder(){const fnNames=functionRegistry.getKeys().filter((key)=>!functionRegistry.get(key).hidden);return createFormulaFunctions(fnNames);}
const categoriesFunctionListMenuBuilder=()=>{const functions=functionRegistry.content;const categories=[...new Set(functionRegistry.getAll().filter((fn)=>!fn.hidden).map((fn)=>fn.category)),].filter(isDefined);return categories.sort().map((category,i)=>{const functionsInCategory=Object.keys(functions).filter((key)=>functions[key].category===category&&!functions[key].hidden);return{name:category,children:createFormulaFunctions(functionsInCategory),};});};const insertLink={name:_t("Link"),execute:INSERT_LINK,icon:"o-spreadsheet-Icon.INSERT_LINK",};const insertCheckbox={name:_t("Checkbox"),execute:(env)=>{const zones=env.model.getters.getSelectedZones();const sheetId=env.model.getters.getActiveSheetId();const ranges=zones.map((zone)=>env.model.getters.getRangeDataFromZone(sheetId,zone));env.model.dispatch("ADD_DATA_VALIDATION_RULE",{ranges,sheetId,rule:{id:env.model.uuidGenerator.uuidv4(),criterion:{type:"isBoolean",values:[],},},});},icon:"o-spreadsheet-Icon.INSERT_CHECKBOX",};const insertDropdown={name:_t("Dropdown list"),execute:(env)=>{const zones=env.model.getters.getSelectedZones();const sheetId=env.model.getters.getActiveSheetId();const ranges=zones.map((zone)=>env.model.getters.getRangeDataFromZone(sheetId,zone));const ruleID=env.model.uuidGenerator.uuidv4();env.model.dispatch("ADD_DATA_VALIDATION_RULE",{ranges,sheetId,rule:{id:ruleID,criterion:{type:"isValueInList",values:[],displayStyle:"arrow",},},});const rule=env.model.getters.getDataValidationRule(sheetId,ruleID);if(!rule){return;}
env.openSidePanel("DataValidationEditor",{rule:localizeDataValidationRule(rule,env.model.getters.getLocale()),onExit:()=>{env.openSidePanel("DataValidation");},});},icon:"o-spreadsheet-Icon.INSERT_DROPDOWN",};const insertSheet={name:_t("Insert sheet"),execute:(env)=>{const activeSheetId=env.model.getters.getActiveSheetId();const position=env.model.getters.getSheetIds().indexOf(activeSheetId)+1;const sheetId=env.model.uuidGenerator.uuidv4();env.model.dispatch("CREATE_SHEET",{sheetId,position});env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:sheetId});},icon:"o-spreadsheet-Icon.INSERT_SHEET",};function createFormulaFunctions(fnNames){return fnNames.sort().map((fnName,i)=>{return{name:fnName,sequence:i*10,execute:(env)=>env.startCellEdition(`=${fnName}(`),};});}
function getRowsNumber(env){const activeRows=env.model.getters.getActiveRows();if(activeRows.size){return activeRows.size;}
else{const zone=env.model.getters.getSelectedZones()[0];return zone.bottom-zone.top+1;}}
function getColumnsNumber(env){const activeCols=env.model.getters.getActiveCols();if(activeCols.size){return activeCols.size;}
else{const zone=env.model.getters.getSelectedZones()[0];return zone.right-zone.left+1;}}
const pivotProperties={name:_t("Edit Pivot"),execute(env){const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);env.openSidePanel("PivotSidePanel",{pivotId});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);return(pivotId&&env.model.getters.isExistingPivot(pivotId))||false;},icon:"o-spreadsheet-Icon.PIVOT",};const FIX_FORMULAS={name:_t("Convert to individual formulas"),execute(env){const position=env.model.getters.getActivePosition();const cell=env.model.getters.getCorrespondingFormulaCell(position);const pivotId=env.model.getters.getPivotIdFromPosition(position);if(!cell||!pivotId){return;}
const{sheetId,col,row}=env.model.getters.getCellPosition(cell.id);const pivot=env.model.getters.getPivot(pivotId);pivot.init();if(!pivot.isValid()){return;}
env.model.dispatch("SPLIT_PIVOT_FORMULA",{sheetId,col,row,pivotId,});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);if(!pivotId){return false;}
const pivot=env.model.getters.getPivot(pivotId);const cell=env.model.getters.getEvaluatedCell(position);return(pivot.isValid()&&env.model.getters.isSpillPivotFormula(position)&&cell.type!==CellValueType.error);},icon:"o-spreadsheet-Icon.PIVOT",};const cellMenuRegistry=new MenuItemRegistry();cellMenuRegistry.add("cut",{...cut,sequence:10,}).add("copy",{...copy,sequence:20,}).add("paste",{...paste,sequence:30,}).add("paste_special",{...pasteSpecial,sequence:40,separator:true,}).addChild("paste_value_only",["paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_format_only",["paste_special"],{...pasteSpecialFormat,sequence:20,}).add("add_row_before",{...cellInsertRowsBefore,sequence:70,}).add("add_column_before",{...cellInsertColsBefore,sequence:90,}).add("insert_cell",{...insertCell,sequence:100,separator:true,}).addChild("insert_cell_down",["insert_cell"],{...insertCellShiftDown,name:_t("Shift down"),sequence:10,}).addChild("insert_cell_right",["insert_cell"],{...insertCellShiftRight,name:_t("Shift right"),sequence:20,}).add("delete_row",{...deleteRow,sequence:110,icon:"o-spreadsheet-Icon.TRASH",}).add("delete_column",{...deleteCol,sequence:120,icon:"o-spreadsheet-Icon.TRASH",}).add("delete_cell",{...deleteCells,sequence:130,separator:true,icon:"o-spreadsheet-Icon.TRASH",}).addChild("delete_cell_up",["delete_cell"],{...deleteCellShiftUp,name:_t("Shift up"),sequence:10,icon:"o-spreadsheet-Icon.DELETE_CELL_SHIFT_UP",}).addChild("delete_cell_left",["delete_cell"],{...deleteCellShiftLeft,name:_t("Shift left"),sequence:20,icon:"o-spreadsheet-Icon.DELETE_CELL_SHIFT_LEFT",}).add("edit_table",{...editTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:140,}).add("delete_table",{...deleteTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:145,separator:true,}).add("insert_link",{...insertLink,name:INSERT_LINK_NAME,sequence:150,separator:true,}).add("pivot_fix_formulas",{...FIX_FORMULAS,sequence:155,}).add("pivot_properties",{...pivotProperties,sequence:160,separator:true,});const sortRange={name:_t("Sort range"),isVisible:IS_ONLY_ONE_RANGE,icon:"o-spreadsheet-Icon.SORT_RANGE",};const sortAscending={name:_t("Ascending (A ⟶ Z)"),execute:(env)=>{const{anchor,zones}=env.model.getters.getSelection();const sheetId=env.model.getters.getActiveSheetId();interactiveSortSelection(env,sheetId,anchor.cell,zones[0],"ascending");},icon:"o-spreadsheet-Icon.SORT_ASCENDING",};const dataCleanup={name:_t("Data cleanup"),icon:"o-spreadsheet-Icon.DATA_CLEANUP",};const removeDuplicates={name:_t("Remove duplicates"),execute:(env)=>{if(getZoneArea(env.model.getters.getSelectedZone())===1){env.model.selection.selectTableAroundSelection();}
env.openSidePanel("RemoveDuplicates",{});},};const trimWhitespace={name:_t("Trim whitespace"),execute:(env)=>{env.model.dispatch("TRIM_WHITESPACE");},};const sortDescending={name:_t("Descending (Z ⟶ A)"),execute:(env)=>{const{anchor,zones}=env.model.getters.getSelection();const sheetId=env.model.getters.getActiveSheetId();interactiveSortSelection(env,sheetId,anchor.cell,zones[0],"descending");},icon:"o-spreadsheet-Icon.SORT_DESCENDING",};const createRemoveFilter={...CREATE_OR_REMOVE_FILTER_ACTION,};const createRemoveFilterTool={...CREATE_OR_REMOVE_FILTER_ACTION,isActive:(env)=>SELECTED_TABLE_HAS_FILTERS(env),};const splitToColumns={name:_t("Split text to columns"),sequence:1,execute:(env)=>env.openSidePanel("SplitToColumns",{}),isEnabled:(env)=>env.model.getters.isSingleColSelected(),icon:"o-spreadsheet-Icon.SPLIT_TEXT",};const reinsertDynamicPivotMenu={id:"reinsert_dynamic_pivot",name:_t("Re-insert dynamic pivot"),sequence:1020,icon:"o-spreadsheet-Icon.INSERT_PIVOT",children:[REINSERT_DYNAMIC_PIVOT_CHILDREN],isVisible:(env)=>env.model.getters.getPivotIds().some((id)=>env.model.getters.getPivot(id).isValid()),};const reinsertStaticPivotMenu={id:"reinsert_static_pivot",name:_t("Re-insert static pivot"),sequence:1020,icon:"o-spreadsheet-Icon.INSERT_PIVOT",children:[REINSERT_STATIC_PIVOT_CHILDREN],isVisible:(env)=>env.model.getters.getPivotIds().some((id)=>env.model.getters.getPivot(id).isValid()),};var ACTION_DATA=Object.freeze({__proto__:null,createRemoveFilter:createRemoveFilter,createRemoveFilterTool:createRemoveFilterTool,dataCleanup:dataCleanup,reinsertDynamicPivotMenu:reinsertDynamicPivotMenu,reinsertStaticPivotMenu:reinsertStaticPivotMenu,removeDuplicates:removeDuplicates,sortAscending:sortAscending,sortDescending:sortDescending,sortRange:sortRange,splitToColumns:splitToColumns,trimWhitespace:trimWhitespace});function createFormatActionSpec({name,format,descriptionValue,}){const formatCallback=typeof format==="function"?format:()=>format;return{name,description:(env)=>formatValue(descriptionValue,{format:formatCallback(env),locale:env.model.getters.getLocale(),}),execute:(env)=>setFormatter(env,formatCallback(env)),isActive:(env)=>isFormatSelected(env,formatCallback(env)),format,};}
const formatNumberAutomatic={name:_t("Automatic"),execute:(env)=>setFormatter(env,""),isActive:(env)=>isAutomaticFormatSelected(env),};const formatNumberPlainText={name:_t("Plain text"),execute:(env)=>setFormatter(env,"@"),isActive:(env)=>isFormatSelected(env,"@"),};const formatNumberNumber=createFormatActionSpec({name:_t("Number"),descriptionValue:1000.12,format:"#,##0.00",});const formatPercent={name:_t("Format as percent"),execute:FORMAT_PERCENT_ACTION,icon:"o-spreadsheet-Icon.PERCENT",};const formatNumberPercent=createFormatActionSpec({name:_t("Percent"),descriptionValue:0.1012,format:"0.00%",});const formatNumberCurrency=createFormatActionSpec({name:_t("Currency"),descriptionValue:1000.12,format:(env)=>createCurrencyFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY),});const formatNumberCurrencyRounded={...createFormatActionSpec({name:_t("Currency rounded"),descriptionValue:1000,format:(env)=>roundFormat(createCurrencyFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY)),}),isVisible:(env)=>{const currencyFormat=createCurrencyFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY);const roundedFormat=roundFormat(currencyFormat);return currencyFormat!==roundedFormat;},};const formatNumberAccounting=createFormatActionSpec({name:_t("Accounting"),descriptionValue:-1000.12,format:(env)=>createAccountingFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY),});const EXAMPLE_DATE=parseLiteral("2023/09/26 10:43:00 PM",DEFAULT_LOCALE);const formatCustomCurrency={name:_t("Custom currency"),isVisible:(env)=>env.loadCurrencies!==undefined,execute:(env)=>env.openSidePanel("CustomCurrency",{}),};const formatNumberDate=createFormatActionSpec({name:_t("Date"),descriptionValue:EXAMPLE_DATE,format:(env)=>env.model.getters.getLocale().dateFormat,});const formatNumberTime=createFormatActionSpec({name:_t("Time"),descriptionValue:EXAMPLE_DATE,format:(env)=>env.model.getters.getLocale().timeFormat,});const formatNumberDateTime=createFormatActionSpec({name:_t("Date time"),descriptionValue:EXAMPLE_DATE,format:(env)=>{const locale=env.model.getters.getLocale();return getDateTimeFormat(locale);},});const formatNumberDuration=createFormatActionSpec({name:_t("Duration"),descriptionValue:"27:51:38",format:"hhhh:mm:ss",});const formatNumberQuarter=createFormatActionSpec({name:_t("Quarter"),descriptionValue:EXAMPLE_DATE,format:"qq yyyy",});const formatNumberFullQuarter=createFormatActionSpec({name:_t("Full quarter"),descriptionValue:EXAMPLE_DATE,format:"qqqq yyyy",});const moreFormats={name:_t("More date formats"),execute:(env)=>env.openSidePanel("MoreFormats",{}),};const formatNumberFullDateTime=createFormatActionSpec({name:_t("Full date time"),format:"dddd d mmmm yyyy hh:mm:ss a",descriptionValue:EXAMPLE_DATE,});const formatNumberFullWeekDayAndMonth=createFormatActionSpec({name:_t("Full week day and month"),format:"dddd d mmmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberDayAndFullMonth=createFormatActionSpec({name:_t("Day and full month"),format:"d mmmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberShortWeekDay=createFormatActionSpec({name:_t("Short week day"),format:"ddd d mmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberDayAndShortMonth=createFormatActionSpec({name:_t("Day and short month"),format:"d mmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberFullMonth=createFormatActionSpec({name:_t("Full month"),format:"mmmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberShortMonth=createFormatActionSpec({name:_t("Short month"),format:"mmm yyyy",descriptionValue:EXAMPLE_DATE,});const incraseDecimalPlaces={name:_t("Increase decimal places"),icon:"o-spreadsheet-Icon.INCREASE_DECIMAL",execute:(env)=>env.model.dispatch("SET_DECIMAL",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),step:1,}),};const decraseDecimalPlaces={name:_t("Decrease decimal places"),icon:"o-spreadsheet-Icon.DECRASE_DECIMAL",execute:(env)=>env.model.dispatch("SET_DECIMAL",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),step:-1,}),};const formatBold={name:_t("Bold"),description:"Ctrl+B",execute:(env)=>setStyle(env,{bold:!env.model.getters.getCurrentStyle().bold}),icon:"o-spreadsheet-Icon.BOLD",isActive:(env)=>!!env.model.getters.getCurrentStyle().bold,};const formatItalic={name:_t("Italic"),description:"Ctrl+I",execute:(env)=>setStyle(env,{italic:!env.model.getters.getCurrentStyle().italic}),icon:"o-spreadsheet-Icon.ITALIC",isActive:(env)=>!!env.model.getters.getCurrentStyle().italic,};const formatUnderline={name:_t("Underline"),description:"Ctrl+U",execute:(env)=>setStyle(env,{underline:!env.model.getters.getCurrentStyle().underline}),icon:"o-spreadsheet-Icon.UNDERLINE",isActive:(env)=>!!env.model.getters.getCurrentStyle().underline,};const formatStrikethrough={name:_t("Strikethrough"),execute:(env)=>setStyle(env,{strikethrough:!env.model.getters.getCurrentStyle().strikethrough}),icon:"o-spreadsheet-Icon.STRIKE",isActive:(env)=>!!env.model.getters.getCurrentStyle().strikethrough,};const formatFontSize={name:_t("Font size"),children:fontSizeMenuBuilder(),icon:"o-spreadsheet-Icon.FONT_SIZE",};const formatAlignment={name:_t("Alignment"),icon:"o-spreadsheet-Icon.ALIGN_LEFT",};const formatAlignmentHorizontal={name:_t("Horizontal align"),icon:(env)=>getHorizontalAlignmentIcon(env),};const formatAlignmentLeft={name:_t("Left"),description:"Ctrl+Shift+L",execute:(env)=>setStyle(env,{align:"left"}),isActive:(env)=>getHorizontalAlign(env)==="left",icon:"o-spreadsheet-Icon.ALIGN_LEFT",};const formatAlignmentCenter={name:_t("Center"),description:"Ctrl+Shift+E",execute:(env)=>setStyle(env,{align:"center"}),isActive:(env)=>getHorizontalAlign(env)==="center",icon:"o-spreadsheet-Icon.ALIGN_CENTER",};const formatAlignmentRight={name:_t("Right"),description:"Ctrl+Shift+R",execute:(env)=>setStyle(env,{align:"right"}),isActive:(env)=>getHorizontalAlign(env)==="right",icon:"o-spreadsheet-Icon.ALIGN_RIGHT",};const formatAlignmentVertical={name:_t("Vertical align"),icon:(env)=>getVerticalAlignmentIcon(env),};const formatAlignmentTop={name:_t("Top"),execute:(env)=>setStyle(env,{verticalAlign:"top"}),isActive:(env)=>getVerticalAlign(env)==="top",icon:"o-spreadsheet-Icon.ALIGN_TOP",};const formatAlignmentMiddle={name:_t("Middle"),execute:(env)=>setStyle(env,{verticalAlign:"middle"}),isActive:(env)=>getVerticalAlign(env)==="middle",icon:"o-spreadsheet-Icon.ALIGN_MIDDLE",};const formatAlignmentBottom={name:_t("Bottom"),execute:(env)=>setStyle(env,{verticalAlign:"bottom"}),isActive:(env)=>getVerticalAlign(env)==="bottom",icon:"o-spreadsheet-Icon.ALIGN_BOTTOM",};const formatWrappingIcon={name:_t("Wrapping"),icon:"o-spreadsheet-Icon.WRAPPING_OVERFLOW",};const formatWrapping={name:_t("Wrapping"),icon:(env)=>getWrapModeIcon(env),};const formatWrappingOverflow={name:_t("Overflow"),execute:(env)=>setStyle(env,{wrapping:"overflow"}),isActive:(env)=>getWrappingMode(env)==="overflow",icon:"o-spreadsheet-Icon.WRAPPING_OVERFLOW",};const formatWrappingWrap={name:_t("Wrap"),execute:(env)=>setStyle(env,{wrapping:"wrap"}),isActive:(env)=>getWrappingMode(env)==="wrap",icon:"o-spreadsheet-Icon.WRAPPING_WRAP",};const formatWrappingClip={name:_t("Clip"),execute:(env)=>setStyle(env,{wrapping:"clip"}),isActive:(env)=>getWrappingMode(env)==="clip",icon:"o-spreadsheet-Icon.WRAPPING_CLIP",};const textColor={name:_t("Text Color"),icon:"o-spreadsheet-Icon.TEXT_COLOR",};const fillColor={name:_t("Fill Color"),icon:"o-spreadsheet-Icon.FILL_COLOR",};const formatCF={name:_t("Conditional formatting"),execute:OPEN_CF_SIDEPANEL_ACTION,icon:"o-spreadsheet-Icon.CONDITIONAL_FORMAT",};const clearFormat={name:_t("Clear formatting"),description:"Ctrl+<",execute:(env)=>env.model.dispatch("CLEAR_FORMATTING",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),}),icon:"o-spreadsheet-Icon.CLEAR_FORMAT",};function fontSizeMenuBuilder(){return FONT_SIZES.map((fs)=>{return{name:fs.toString(),sequence:fs,id:`font_size_${fs}`,execute:(env)=>setStyle(env,{fontSize:fs}),isActive:(env)=>isFontSizeSelected(env,fs),};});}
function isAutomaticFormatSelected(env){const activeCell=env.model.getters.getCell(env.model.getters.getActivePosition());return!activeCell||!activeCell.format;}
function isFormatSelected(env,format){const activeCell=env.model.getters.getCell(env.model.getters.getActivePosition());return activeCell?.format===format;}
function isFontSizeSelected(env,fontSize){const currentFontSize=env.model.getters.getCurrentStyle().fontSize||DEFAULT_FONT_SIZE;return currentFontSize===fontSize;}
function getHorizontalAlign(env){const style=env.model.getters.getCurrentStyle();if(style.align){return style.align;}
const cell=env.model.getters.getActiveCell();return cell.defaultAlign;}
function getVerticalAlign(env){const style=env.model.getters.getCurrentStyle();if(style.verticalAlign){return style.verticalAlign;}
return DEFAULT_VERTICAL_ALIGN;}
function getWrappingMode(env){const style=env.model.getters.getCurrentStyle();if(style.wrapping){return style.wrapping;}
return DEFAULT_WRAPPING_MODE;}
function getHorizontalAlignmentIcon(env){const horizontalAlign=getHorizontalAlign(env);switch(horizontalAlign){case"right":return"o-spreadsheet-Icon.ALIGN_RIGHT";case"center":return"o-spreadsheet-Icon.ALIGN_CENTER";default:return"o-spreadsheet-Icon.ALIGN_LEFT";}}
function getVerticalAlignmentIcon(env){const verticalAlign=getVerticalAlign(env);switch(verticalAlign){case"top":return"o-spreadsheet-Icon.ALIGN_TOP";case"middle":return"o-spreadsheet-Icon.ALIGN_MIDDLE";default:return"o-spreadsheet-Icon.ALIGN_BOTTOM";}}
function getWrapModeIcon(env){const wrapMode=getWrappingMode(env);switch(wrapMode){case"wrap":return"o-spreadsheet-Icon.WRAPPING_WRAP";case"clip":return"o-spreadsheet-Icon.WRAPPING_CLIP";default:return"o-spreadsheet-Icon.WRAPPING_OVERFLOW";}}
var ACTION_FORMAT=Object.freeze({__proto__:null,EXAMPLE_DATE:EXAMPLE_DATE,clearFormat:clearFormat,createFormatActionSpec:createFormatActionSpec,decraseDecimalPlaces:decraseDecimalPlaces,fillColor:fillColor,formatAlignment:formatAlignment,formatAlignmentBottom:formatAlignmentBottom,formatAlignmentCenter:formatAlignmentCenter,formatAlignmentHorizontal:formatAlignmentHorizontal,formatAlignmentLeft:formatAlignmentLeft,formatAlignmentMiddle:formatAlignmentMiddle,formatAlignmentRight:formatAlignmentRight,formatAlignmentTop:formatAlignmentTop,formatAlignmentVertical:formatAlignmentVertical,formatBold:formatBold,formatCF:formatCF,formatCustomCurrency:formatCustomCurrency,formatFontSize:formatFontSize,formatItalic:formatItalic,formatNumberAccounting:formatNumberAccounting,formatNumberAutomatic:formatNumberAutomatic,formatNumberCurrency:formatNumberCurrency,formatNumberCurrencyRounded:formatNumberCurrencyRounded,formatNumberDate:formatNumberDate,formatNumberDateTime:formatNumberDateTime,formatNumberDayAndFullMonth:formatNumberDayAndFullMonth,formatNumberDayAndShortMonth:formatNumberDayAndShortMonth,formatNumberDuration:formatNumberDuration,formatNumberFullDateTime:formatNumberFullDateTime,formatNumberFullMonth:formatNumberFullMonth,formatNumberFullQuarter:formatNumberFullQuarter,formatNumberFullWeekDayAndMonth:formatNumberFullWeekDayAndMonth,formatNumberNumber:formatNumberNumber,formatNumberPercent:formatNumberPercent,formatNumberPlainText:formatNumberPlainText,formatNumberQuarter:formatNumberQuarter,formatNumberShortMonth:formatNumberShortMonth,formatNumberShortWeekDay:formatNumberShortWeekDay,formatNumberTime:formatNumberTime,formatPercent:formatPercent,formatStrikethrough:formatStrikethrough,formatUnderline:formatUnderline,formatWrapping:formatWrapping,formatWrappingClip:formatWrappingClip,formatWrappingIcon:formatWrappingIcon,formatWrappingOverflow:formatWrappingOverflow,formatWrappingWrap:formatWrappingWrap,incraseDecimalPlaces:incraseDecimalPlaces,moreFormats:moreFormats,textColor:textColor});function interactiveFreezeColumnsRows(env,dimension,base){const sheetId=env.model.getters.getActiveSheetId();const cmd=dimension==="COL"?"FREEZE_COLUMNS":"FREEZE_ROWS";const result=env.model.dispatch(cmd,{sheetId,quantity:base});if(result.isCancelledBecause("MergeOverlap")){env.raiseError(MergeErrorMessage);}}
const hideCols={name:HIDE_COLUMNS_NAME,execute:(env)=>{const columns=env.model.getters.getElementsFromSelection("COL");env.model.dispatch("HIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"COL",elements:columns,});},isVisible:NOT_ALL_VISIBLE_COLS_SELECTED,icon:"o-spreadsheet-Icon.HIDE_COL",};const unhideCols={name:_t("Unhide columns"),execute:(env)=>{const columns=env.model.getters.getElementsFromSelection("COL");env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"COL",elements:columns,});},isVisible:(env)=>{const hiddenCols=env.model.getters.getHiddenColsGroups(env.model.getters.getActiveSheetId()).flat();const currentCols=env.model.getters.getElementsFromSelection("COL");return currentCols.some((col)=>hiddenCols.includes(col));},icon:"o-spreadsheet-Icon.UNHIDE_COL",};const unhideAllCols={name:_t("Unhide all columns"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId,dimension:"COL",elements:Array.from(Array(env.model.getters.getNumberCols(sheetId)).keys()),});},isVisible:(env)=>env.model.getters.getHiddenColsGroups(env.model.getters.getActiveSheetId()).length>0,icon:"o-spreadsheet-Icon.UNHIDE_COL",};const hideRows={name:HIDE_ROWS_NAME,execute:(env)=>{const rows=env.model.getters.getElementsFromSelection("ROW");env.model.dispatch("HIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"ROW",elements:rows,});},isVisible:NOT_ALL_VISIBLE_ROWS_SELECTED,icon:"o-spreadsheet-Icon.HIDE_ROW",};const unhideRows={name:_t("Unhide rows"),execute:(env)=>{const columns=env.model.getters.getElementsFromSelection("ROW");env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"ROW",elements:columns,});},isVisible:(env)=>{const hiddenRows=env.model.getters.getHiddenRowsGroups(env.model.getters.getActiveSheetId()).flat();const currentRows=env.model.getters.getElementsFromSelection("ROW");return currentRows.some((col)=>hiddenRows.includes(col));},icon:"o-spreadsheet-Icon.UNHIDE_ROW",};const unhideAllRows={name:_t("Unhide all rows"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId,dimension:"ROW",elements:Array.from(Array(env.model.getters.getNumberRows(sheetId)).keys()),});},isVisible:(env)=>env.model.getters.getHiddenRowsGroups(env.model.getters.getActiveSheetId()).length>0,icon:"o-spreadsheet-Icon.UNHIDE_ROW",};const unFreezePane={name:_t("Unfreeze"),isVisible:(env)=>{const{xSplit,ySplit}=env.model.getters.getPaneDivisions(env.model.getters.getActiveSheetId());return xSplit+ySplit>0;},execute:(env)=>env.model.dispatch("UNFREEZE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),}),icon:"o-spreadsheet-Icon.UNFREEZE",};const freezePane={name:_t("Freeze"),icon:"o-spreadsheet-Icon.FREEZE",};const unFreezeRows={name:_t("No rows"),execute:(env)=>env.model.dispatch("UNFREEZE_ROWS",{sheetId:env.model.getters.getActiveSheetId(),}),isReadonlyAllowed:true,isVisible:(env)=>!!env.model.getters.getPaneDivisions(env.model.getters.getActiveSheetId()).ySplit,};const freezeFirstRow={name:_t("1 row"),execute:(env)=>interactiveFreezeColumnsRows(env,"ROW",1),isReadonlyAllowed:true,};const freezeSecondRow={name:_t("2 rows"),execute:(env)=>interactiveFreezeColumnsRows(env,"ROW",2),isReadonlyAllowed:true,};const freezeCurrentRow={name:_t("Up to current row"),execute:(env)=>{const{bottom}=env.model.getters.getSelectedZone();interactiveFreezeColumnsRows(env,"ROW",bottom+1);},isReadonlyAllowed:true,};const unFreezeCols={name:_t("No columns"),execute:(env)=>env.model.dispatch("UNFREEZE_COLUMNS",{sheetId:env.model.getters.getActiveSheetId(),}),isReadonlyAllowed:true,isVisible:(env)=>!!env.model.getters.getPaneDivisions(env.model.getters.getActiveSheetId()).xSplit,};const freezeFirstCol={name:_t("1 column"),execute:(env)=>interactiveFreezeColumnsRows(env,"COL",1),isReadonlyAllowed:true,};const freezeSecondCol={name:_t("2 columns"),execute:(env)=>interactiveFreezeColumnsRows(env,"COL",2),isReadonlyAllowed:true,};const freezeCurrentCol={name:_t("Up to current column"),execute:(env)=>{const{right}=env.model.getters.getSelectedZone();interactiveFreezeColumnsRows(env,"COL",right+1);},isReadonlyAllowed:true,};const viewGridlines={name:_t("Gridlines"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("SET_GRID_LINES_VISIBILITY",{sheetId,areGridLinesVisible:!env.model.getters.getGridLinesVisibility(sheetId),});},isActive:(env)=>{const sheetId=env.model.getters.getActiveSheetId();return env.model.getters.getGridLinesVisibility(sheetId);},};const viewFormulas={name:_t("Formulas"),isActive:(env)=>env.model.getters.shouldShowFormulas(),execute:(env)=>env.model.dispatch("SET_FORMULA_VISIBILITY",{show:!env.model.getters.shouldShowFormulas()}),isReadonlyAllowed:true,};const groupColumns={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.left===selection.right){return _t("Group column %s",numberToLetters(selection.left));}
return _t("Group columns %s - %s",numberToLetters(selection.left),numberToLetters(selection.right));},execute:(env)=>groupHeadersAction(env,"COL"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selection=env.model.getters.getSelectedZone();const groups=env.model.getters.getHeaderGroupsInZone(sheetId,"COL",selection);return(IS_ONLY_ONE_RANGE(env)&&!groups.some((group)=>group.start===selection.left&&group.end===selection.right));},icon:"o-spreadsheet-Icon.GROUP_COLUMNS",};const groupRows={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.top===selection.bottom){return _t("Group row %s",String(selection.top+1));}
return _t("Group rows %s - %s",String(selection.top+1),String(selection.bottom+1));},execute:(env)=>groupHeadersAction(env,"ROW"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selection=env.model.getters.getSelectedZone();const groups=env.model.getters.getHeaderGroupsInZone(sheetId,"ROW",selection);return(IS_ONLY_ONE_RANGE(env)&&!groups.some((group)=>group.start===selection.top&&group.end===selection.bottom));},icon:"o-spreadsheet-Icon.GROUP_ROWS",};const ungroupColumns={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.left===selection.right){return _t("Ungroup column %s",numberToLetters(selection.left));}
return _t("Ungroup columns %s - %s",numberToLetters(selection.left),numberToLetters(selection.right));},execute:(env)=>ungroupHeaders(env,"COL"),icon:"o-spreadsheet-Icon.UNGROUP_COLUMNS",};const ungroupRows={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.top===selection.bottom){return _t("Ungroup row %s",String(selection.top+1));}
return _t("Ungroup rows %s - %s",String(selection.top+1),String(selection.bottom+1));},execute:(env)=>ungroupHeaders(env,"ROW"),icon:"o-spreadsheet-Icon.UNGROUP_ROWS",};function groupHeadersAction(env,dim){const selection=env.model.getters.getSelectedZone();const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("GROUP_HEADERS",{sheetId,dimension:dim,start:dim==="COL"?selection.left:selection.top,end:dim==="COL"?selection.right:selection.bottom,});}
function ungroupHeaders(env,dim){const selection=env.model.getters.getSelectedZone();const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNGROUP_HEADERS",{sheetId,dimension:dim,start:dim==="COL"?selection.left:selection.top,end:dim==="COL"?selection.right:selection.bottom,});}
function canUngroupHeaders(env,dimension){const sheetId=env.model.getters.getActiveSheetId();const selection=env.model.getters.getSelectedZones();return(selection.length===1&&env.model.getters.getHeaderGroupsInZone(sheetId,dimension,selection[0]).length>0);}
const colMenuRegistry=new MenuItemRegistry();colMenuRegistry.add("cut",{...cut,sequence:10,}).add("copy",{...copy,sequence:20,}).add("paste",{...paste,sequence:30,}).add("paste_special",{...pasteSpecial,sequence:40,separator:true,}).addChild("paste_value_only",["paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_format_only",["paste_special"],{...pasteSpecialFormat,sequence:20,}).add("sort_columns",{...sortRange,name:(env)=>env.model.getters.getActiveCols().size>1?_t("Sort columns"):_t("Sort column"),sequence:50,separator:true,}).addChild("sort_ascending",["sort_columns"],{...sortAscending,sequence:10,}).addChild("sort_descending",["sort_columns"],{...sortDescending,sequence:20,}).add("add_column_before",{...colInsertColsBefore,sequence:70,}).add("add_column_after",{...colInsertColsAfter,sequence:80,}).add("delete_column",{...deleteCols,sequence:90,icon:"o-spreadsheet-Icon.TRASH",}).add("clear_column",{...clearCols,sequence:100,icon:"o-spreadsheet-Icon.CLEAR",}).add("hide_columns",{...hideCols,sequence:105,separator:true,}).add("unhide_columns",{...unhideCols,sequence:106,separator:true,}).add("conditional_formatting",{...formatCF,sequence:110,separator:true,}).add("edit_table",{...editTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:120,}).add("delete_table",{...deleteTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:125,separator:true,}).add("group_columns",{sequence:150,...groupColumns,}).add("ungroup_columns",{sequence:155,...ungroupColumns,isVisible:(env)=>canUngroupHeaders(env,"COL"),});const numberFormatMenuRegistry=new Registry();numberFormatMenuRegistry.add("format_number_automatic",{...formatNumberAutomatic,id:"format_number_automatic",sequence:10,}).add("format_number_plain_text",{...formatNumberPlainText,id:"format_number_plain_text",sequence:15,separator:true,}).add("format_number_number",{...formatNumberNumber,id:"format_number_number",sequence:20,}).add("format_number_percent",{...formatNumberPercent,id:"format_number_percent",sequence:30,separator:true,}).add("format_number_currency",{...formatNumberCurrency,id:"format_number_currency",sequence:40,}).add("format_number_accounting",{...formatNumberAccounting,id:"format_number_accounting",sequence:45,}).add("format_number_currency_rounded",{...formatNumberCurrencyRounded,id:"format_number_currency_rounded",sequence:50,}).add("format_custom_currency",{...formatCustomCurrency,id:"format_custom_currency",sequence:60,separator:true,}).add("format_number_date",{...formatNumberDate,id:"format_number_date",sequence:70,}).add("format_number_time",{...formatNumberTime,id:"format_number_time",sequence:80,}).add("format_number_date_time",{...formatNumberDateTime,id:"format_number_date_time",sequence:90,}).add("format_number_duration",{...formatNumberDuration,id:"format_number_duration",sequence:100,separator:true,}).add("more_formats",{...moreFormats,id:"more_formats",sequence:120,});function getCustomNumberFormats(env){const defaultFormats=new Set(numberFormatMenuRegistry.getAll().map((f)=>(typeof f.format==="function"?f.format(env):f.format)));const customFormats=new Map();for(const sheetId of env.model.getters.getSheetIds()){const cells=env.model.getters.getEvaluatedCells(sheetId);for(const cellId in cells){const cell=cells[cellId];if(cell.format&&!customFormats.has(cell.format)&&!defaultFormats.has(cell.format)){const formatType=getNumberFormatType(cell.format);if(formatType==="date"||formatType==="currency"){customFormats.set(cell.format,createFormatActionSpec({descriptionValue:formatType==="currency"?1000:EXAMPLE_DATE,format:cell.format,name:cell.format,}));}}}}
return[...customFormats.values()];}
const getNumberFormatType=memoize((format)=>{if(isDateTimeFormat(format)){return"date";}
else if(format.includes("[$")){return"currency";}
return"number";});const formatNumberMenuItemSpec={name:_t("More formats"),icon:"o-spreadsheet-Icon.NUMBER_FORMATS",children:[(env)=>{const customFormats=getCustomNumberFormats(env).map((action)=>({...action,sequence:110,}));if(customFormats.length>0){customFormats[customFormats.length-1].separator=true;}
return createActions([...numberFormatMenuRegistry.getAll(),...customFormats]);},],};const rowMenuRegistry=new MenuItemRegistry();rowMenuRegistry.add("cut",{...cut,sequence:10,}).add("copy",{...copy,sequence:20,}).add("paste",{...paste,sequence:30,}).add("paste_special",{...pasteSpecial,sequence:40,separator:true,}).addChild("paste_value_only",["paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_format_only",["paste_special"],{...pasteSpecialFormat,sequence:20,}).add("add_row_before",{...rowInsertRowBefore,sequence:50,}).add("add_row_after",{...rowInsertRowsAfter,sequence:60,}).add("delete_row",{...deleteRows,sequence:70,icon:"o-spreadsheet-Icon.TRASH",}).add("clear_row",{...clearRows,sequence:80,icon:"o-spreadsheet-Icon.CLEAR",}).add("hide_rows",{...hideRows,sequence:85,separator:true,}).add("unhide_rows",{...unhideRows,sequence:86,separator:true,}).add("conditional_formatting",{...formatCF,sequence:90,separator:true,}).add("group_rows",{sequence:100,...groupRows,}).add("ungroup_rows",{sequence:110,...ungroupRows,isVisible:(env)=>canUngroupHeaders(env,"ROW"),});function getSheetMenuRegistry(args){const sheetMenuRegistry=new MenuItemRegistry();sheetMenuRegistry.add("delete",{...deleteSheet,sequence:10,}).add("hide_sheet",{...hideSheet,sequence:20,}).add("duplicate",{...duplicateSheet,sequence:30,separator:true,}).add("rename",{...renameSheet(args),sequence:40,}).add("change_color",{...changeSheetColor(args),sequence:50,separator:true,}).add("move_right",{...sheetMoveRight,sequence:60,}).add("move_left",{...sheetMoveLeft,sequence:70,});return sheetMenuRegistry;}
function getPivotHighlights(getters,pivotId){const sheetId=getters.getActiveSheetId();const pivotCellPositions=getVisiblePivotCellPositions(getters,pivotId);const mergedZones=mergeContiguousZones(pivotCellPositions.map(positionToZone));return mergedZones.map((zone)=>({sheetId,zone,noFill:true,color:HIGHLIGHT_COLOR}));}
function getVisiblePivotCellPositions(getters,pivotId){const positions=[];const sheetId=getters.getActiveSheetId();for(const col of getters.getSheetViewVisibleCols()){for(const row of getters.getSheetViewVisibleRows()){const position={sheetId,col,row};const cellPivotId=getters.getPivotIdFromPosition(position);if(pivotId===cellPivotId){positions.push(position);}}}
return positions;}
function drawHighlight(renderingContext,highlight,rect){const{x,y,width,height}=rect;if(width<0||height<0){return;}
const color=highlight.color||HIGHLIGHT_COLOR;const{ctx}=renderingContext;ctx.save();if(!highlight.noBorder){if(highlight.dashed){ctx.setLineDash([5,3]);}
ctx.strokeStyle=color;if(highlight.thinLine){ctx.lineWidth=1;ctx.strokeRect(x,y,width,height);}
else{ctx.lineWidth=2;ctx.strokeRect(x+0.5,y+0.5,width,height);}}
if(!highlight.noFill){ctx.fillStyle=setColorAlpha(toHex(color),highlight.fillAlpha??0.12);ctx.fillRect(x,y,width,height);}
ctx.restore();}
class HighlightStore extends SpreadsheetStore{mutators=["register","unRegister"];providers=[];constructor(get){super(get);this.onDispose(()=>{this.providers=[];});}
get renderingLayers(){return["Highlights"];}
get highlights(){const activeSheetId=this.getters.getActiveSheetId();return this.providers.flatMap((h)=>h.highlights).filter((h)=>h.sheetId===activeSheetId).map((highlight)=>{const{numberOfRows,numberOfCols}=zoneToDimension(highlight.zone);const zone=numberOfRows*numberOfCols===1?this.getters.expandZone(highlight.sheetId,highlight.zone):highlight.zone;return{...highlight,zone,};});}
register(highlightProvider){this.providers.push(highlightProvider);}
unRegister(highlightProvider){this.providers=this.providers.filter((h)=>h!==highlightProvider);}
drawLayer(ctx,layer){if(layer==="Highlights"){for(const highlight of this.highlights){const rect=this.getters.getVisibleRect(highlight.zone);drawHighlight(ctx,highlight,rect);}}}}
const topbarMenuRegistry=new MenuItemRegistry();topbarMenuRegistry.add("file",{name:_t("File"),sequence:10,}).addChild("settings",["file"],{name:_t("Settings"),sequence:100,execute:(env)=>env.openSidePanel("Settings"),icon:"o-spreadsheet-Icon.COG",}).add("edit",{name:_t("Edit"),sequence:20,}).addChild("undo",["edit"],{...undo,sequence:10,}).addChild("redo",["edit"],{...redo,sequence:20,separator:true,}).addChild("copy",["edit"],{...copy,sequence:30,}).addChild("cut",["edit"],{...cut,sequence:40,}).addChild("paste",["edit"],{...paste,sequence:50,}).addChild("paste_special",["edit"],{...pasteSpecial,sequence:60,separator:true,}).addChild("paste_special_value",["edit","paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_special_format",["edit","paste_special"],{...pasteSpecialFormat,sequence:20,}).addChild("edit_table",["edit"],{...editTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:60,}).addChild("find_and_replace",["edit"],{...findAndReplace,sequence:65,separator:true,}).addChild("delete",["edit"],{name:_t("Delete"),icon:"o-spreadsheet-Icon.TRASH",sequence:70,}).addChild("edit_delete_cell_values",["edit","delete"],{...deleteValues,sequence:10,}).addChild("edit_delete_row",["edit","delete"],{...deleteRows,sequence:20,}).addChild("edit_delete_column",["edit","delete"],{...deleteCols,sequence:30,}).addChild("edit_delete_cell_shift_up",["edit","delete"],{...deleteCellShiftUp,sequence:40,}).addChild("edit_delete_cell_shift_left",["edit","delete"],{...deleteCellShiftLeft,sequence:50,}).addChild("edit_unhide_columns",["edit"],{...unhideAllCols,sequence:80,}).addChild("edit_unhide_rows",["edit"],{...unhideAllRows,sequence:80,}).add("view",{name:_t("View"),sequence:30,}).addChild("unfreeze_panes",["view"],{...unFreezePane,sequence:4,}).addChild("freeze_panes",["view"],{...freezePane,sequence:5,}).addChild("unfreeze_rows",["view","freeze_panes"],{...unFreezeRows,sequence:5,}).addChild("freeze_first_row",["view","freeze_panes"],{...freezeFirstRow,sequence:10,}).addChild("freeze_second_row",["view","freeze_panes"],{...freezeSecondRow,sequence:15,}).addChild("freeze_current_row",["view","freeze_panes"],{...freezeCurrentRow,sequence:20,separator:true,}).addChild("unfreeze_columns",["view","freeze_panes"],{...unFreezeCols,sequence:25,}).addChild("freeze_first_col",["view","freeze_panes"],{...freezeFirstCol,sequence:30,}).addChild("freeze_second_col",["view","freeze_panes"],{...freezeSecondCol,sequence:35,}).addChild("freeze_current_col",["view","freeze_panes"],{...freezeCurrentCol,sequence:40,}).addChild("group_headers",["view"],{name:_t("Group"),sequence:15,separator:true,icon:"o-spreadsheet-Icon.PLUS_IN_BOX",isVisible:IS_ONLY_ONE_RANGE,}).addChild("group_columns",["view","group_headers"],{...groupColumns,sequence:5,}).addChild("ungroup_columns",["view","group_headers"],{...ungroupColumns,isVisible:(env)=>canUngroupHeaders(env,"COL"),sequence:10,}).addChild("group_rows",["view","group_headers"],{...groupRows,sequence:15,}).addChild("ungroup_rows",["view","group_headers"],{...ungroupRows,isVisible:(env)=>canUngroupHeaders(env,"ROW"),sequence:20,}).addChild("show",["view"],{name:_t("Show"),sequence:1,icon:"o-spreadsheet-Icon.SHOW",}).addChild("view_gridlines",["view","show"],{...viewGridlines,sequence:5,}).addChild("view_formulas",["view","show"],{...viewFormulas,sequence:10,}).add("insert",{name:_t("Insert"),sequence:40,}).addChild("insert_row",["insert"],{...insertRow,sequence:10,}).addChild("insert_row_before",["insert","insert_row"],{...topBarInsertRowsBefore,sequence:10,}).addChild("insert_row_after",["insert","insert_row"],{...topBarInsertRowsAfter,sequence:20,}).addChild("insert_column",["insert"],{...insertCol,sequence:20,}).addChild("insert_column_before",["insert","insert_column"],{...topBarInsertColsBefore,sequence:10,}).addChild("insert_column_after",["insert","insert_column"],{...topBarInsertColsAfter,sequence:20,}).addChild("insert_cell",["insert"],{...insertCell,sequence:30,}).addChild("insert_cell_down",["insert","insert_cell"],{...insertCellShiftDown,name:_t("Shift down"),sequence:10,}).addChild("insert_cell_right",["insert","insert_cell"],{...insertCellShiftRight,name:_t("Shift right"),sequence:20,}).addChild("insert_sheet",["insert"],{...insertSheet,sequence:40,separator:true,}).addChild("insert_chart",["insert"],{...insertChart,sequence:50,}).addChild("insert_pivot",["insert"],{...insertPivot,sequence:52,}).addChild("insert_image",["insert"],{...insertImage,sequence:55,}).addChild("insert_table",["insert"],{...insertTable,sequence:57,}).addChild("insert_function",["insert"],{...insertFunction,sequence:60,}).addChild("insert_function_sum",["insert","insert_function"],{...insertFunctionSum,sequence:0,}).addChild("insert_function_average",["insert","insert_function"],{...insertFunctionAverage,sequence:10,}).addChild("insert_function_count",["insert","insert_function"],{...insertFunctionCount,sequence:20,}).addChild("insert_function_max",["insert","insert_function"],{...insertFunctionMax,sequence:30,}).addChild("insert_function_min",["insert","insert_function"],{...insertFunctionMin,sequence:40,separator:true,}).addChild("categorie_function_all",["insert","insert_function"],{...categorieFunctionAll,sequence:50,}).addChild("categories_function_list",["insert","insert_function"],categoriesFunctionListMenuBuilder).addChild("insert_link",["insert"],{...insertLink,separator:true,sequence:70,}).addChild("insert_checkbox",["insert"],{...insertCheckbox,sequence:80,}).addChild("insert_dropdown",["insert"],{...insertDropdown,separator:true,sequence:90,}).add("format",{name:_t("Format"),sequence:50}).addChild("format_number",["format"],{...formatNumberMenuItemSpec,name:_t("Number"),sequence:10,separator:true,}).addChild("format_bold",["format"],{...formatBold,sequence:20,}).addChild("format_italic",["format"],{...formatItalic,sequence:30,}).addChild("format_underline",["format"],{...formatUnderline,sequence:40,}).addChild("format_strikethrough",["format"],{...formatStrikethrough,sequence:50,separator:true,}).addChild("format_font_size",["format"],{...formatFontSize,sequence:60,separator:true,}).addChild("format_alignment",["format"],{...formatAlignment,sequence:70,}).addChild("format_alignment_left",["format","format_alignment"],{...formatAlignmentLeft,sequence:10,}).addChild("format_alignment_center",["format","format_alignment"],{...formatAlignmentCenter,sequence:20,}).addChild("format_alignment_right",["format","format_alignment"],{...formatAlignmentRight,sequence:30,separator:true,}).addChild("format_alignment_top",["format","format_alignment"],{...formatAlignmentTop,sequence:40,}).addChild("format_alignment_middle",["format","format_alignment"],{...formatAlignmentMiddle,sequence:50,}).addChild("format_alignment_bottom",["format","format_alignment"],{...formatAlignmentBottom,sequence:60,separator:true,}).addChild("format_wrapping",["format"],{...formatWrappingIcon,sequence:80,separator:true,}).addChild("format_wrapping_overflow",["format","format_wrapping"],{...formatWrappingOverflow,sequence:10,}).addChild("format_wrapping_wrap",["format","format_wrapping"],{...formatWrappingWrap,sequence:20,}).addChild("format_wrapping_clip",["format","format_wrapping"],{...formatWrappingClip,sequence:30,}).addChild("format_cf",["format"],{...formatCF,sequence:90,separator:true,}).addChild("format_clearFormat",["format"],{...clearFormat,sequence:100,separator:true,}).add("data",{name:_t("Data"),sequence:60,}).addChild("sort_range",["data"],{...sortRange,sequence:10,separator:true,}).addChild("sort_ascending",["data","sort_range"],{...sortAscending,sequence:10,}).addChild("sort_descending",["data","sort_range"],{...sortDescending,sequence:20,}).addChild("data_cleanup",["data"],{...dataCleanup,sequence:15,}).addChild("remove_duplicates",["data","data_cleanup"],{...removeDuplicates,sequence:10,}).addChild("trim_whitespace",["data","data_cleanup"],{...trimWhitespace,sequence:20,}).addChild("split_to_columns",["data"],{...splitToColumns,sequence:20,}).addChild("data_validation",["data"],{name:_t("Data Validation"),execute:(env)=>{env.openSidePanel("DataValidation");},icon:"o-spreadsheet-Icon.DATA_VALIDATION",sequence:30,separator:true,}).addChild("add_remove_data_filter",["data"],{...createRemoveFilter,sequence:40,separator:true,}).addChild("data_sources_data",["data"],(env)=>{const sequence=50;return env.model.getters.getPivotIds().map((pivotId,index)=>{const highlightProvider={get highlights(){return getPivotHighlights(env.model.getters,pivotId);},};return{id:`item_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:sequence+index,execute:(env)=>env.openSidePanel("PivotSidePanel",{pivotId}),onStartHover:(env)=>env.getStore(HighlightStore).register(highlightProvider),onStopHover:(env)=>env.getStore(HighlightStore).unRegister(highlightProvider),icon:"o-spreadsheet-Icon.PIVOT",separator:index===env.model.getters.getPivotIds().length-1,secondaryIcon:(env)=>env.model.getters.isPivotUnused(pivotId)?"o-spreadsheet-Icon.UNUSED_PIVOT_WARNING":undefined,};});}).addChild("reinsert_dynamic_pivot",["data"],reinsertDynamicPivotMenu).addChild("reinsert_static_pivot",["data"],reinsertStaticPivotMenu);class OTRegistry extends Registry{addTransformation(executed,toTransforms,fn){for(let toTransform of toTransforms){if(!this.content[toTransform]){this.content[toTransform]=new Map();}
this.content[toTransform].set(executed,fn);}
return this;}
getTransformation(toTransform,executed){return this.content[toTransform]&&this.content[toTransform].get(executed);}}
const otRegistry=new OTRegistry();const CHECK_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'>
  <path fill='none' stroke='#FFF' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/>
</svg>
`;const CHECKBOX_WIDTH=14;css`
  label.o-checkbox {
    input {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      border-radius: 0;
      width: ${CHECKBOX_WIDTH}px;
      height: ${CHECKBOX_WIDTH}px;
      vertical-align: top;
      box-sizing: border-box;
      outline: none;
      border: 1px solid ${GRAY_300};

      &:hover {
        border-color: ${ACTION_COLOR};
      }

      &:checked {
        background: url("data:image/svg+xml,${encodeURIComponent(CHECK_SVG)}");
        background-color: ${ACTION_COLOR};
        border-color: ${ACTION_COLOR};
      }

      &:focus {
        outline: none;
        box-shadow: 0 0 0 0.25rem rgba(113, 75, 103, 0.25);
        border-color: ${ACTION_COLOR};
      }
    }
  }
`;class Checkbox extends Component{static template="o-spreadsheet.Checkbox";static props={label:{type:String,optional:true},value:{type:Boolean,optional:true},className:{type:String,optional:true},name:{type:String,optional:true},title:{type:String,optional:true},disabled:{type:Boolean,optional:true},onChange:Function,};static defaultProps={value:false};onChange(ev){const value=ev.target.checked;this.props.onChange(value);}}
class Section extends Component{static template="o_spreadsheet.Section";static props={class:{type:String,optional:true},slots:Object,};}
class FocusStore{mutators=["focus","unfocus"];focusedElement=null;focus(element){this.focusedElement=element;}
unfocus(element){if(this.focusedElement&&this.focusedElement===element){this.focusedElement=null;}}}
class SelectionInputStore extends SpreadsheetStore{initialRanges;inputHasSingleRange;colors;mutators=["resetWithRanges","focusById","unfocus","addEmptyRange","removeRange","changeRange","reset","confirm",];ranges=[];focusedRangeIndex=null;inputSheetId;focusStore=this.get(FocusStore);highlightStore=this.get(HighlightStore);constructor(get,initialRanges=[],inputHasSingleRange=false,colors=[]){super(get);this.initialRanges=initialRanges;this.inputHasSingleRange=inputHasSingleRange;this.colors=colors;if(inputHasSingleRange&&initialRanges.length>1){throw new Error("Input with a single range cannot be instantiated with several range references.");}
this.inputSheetId=this.getters.getActiveSheetId();this.resetWithRanges(initialRanges);this.highlightStore.register(this);this.onDispose(()=>{this.unfocus();this.highlightStore.unRegister(this);});}
handleEvent(event){if(this.focusedRangeIndex===null){return;}
const inputSheetId=this.inputSheetId;const activeSheetId=this.getters.getActiveSheetId();const zone=event.options.unbounded?this.getters.getUnboundedZone(activeSheetId,event.anchor.zone):event.anchor.zone;const range=this.getters.getRangeFromZone(activeSheetId,zone);const willAddNewRange=event.mode==="newAnchor"&&!this.inputHasSingleRange&&this.ranges[this.focusedRangeIndex].xc.trim()!=="";if(willAddNewRange){const xc=this.getters.getSelectionRangeString(range,inputSheetId);this.insertNewRange(this.ranges.length,[xc]);this.focusLast();}
else{let parts=range.parts;const previousXc=this.ranges[this.focusedRangeIndex].xc.trim();if(previousXc){parts=this.getters.getRangeFromSheetXC(inputSheetId,previousXc).parts;}
const newRange=range.clone({parts});const xc=this.getters.getSelectionRangeString(newRange,inputSheetId);this.setRange(this.focusedRangeIndex,[xc]);}}
handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":{if(cmd.sheetIdFrom!==cmd.sheetIdTo){const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:cmd.sheetIdTo,col:0,row:0,});const zone=this.getters.expandZone(cmd.sheetIdTo,positionToZone({col,row}));this.model.selection.resetAnchor(this,{cell:{col,row},zone});}
break;}
case"START_CHANGE_HIGHLIGHT":const activeSheetId=this.getters.getActiveSheetId();const newZone=this.getters.expandZone(activeSheetId,cmd.zone);const focusIndex=this.ranges.findIndex((range)=>{const{xc,sheetName:sheet}=splitReference(range.xc);const sheetName=sheet||this.getters.getSheetName(this.inputSheetId);if(this.getters.getSheetName(activeSheetId)!==sheetName){return false;}
const refRange=this.getters.getRangeFromSheetXC(activeSheetId,xc);return isEqual(this.getters.expandZone(activeSheetId,refRange.zone),newZone);});if(focusIndex!==-1){this.focus(focusIndex);const{left,top}=newZone;this.model.selection.resetAnchor(this,{cell:{col:left,row:top},zone:newZone,});}
break;}}
changeRange(rangeId,value){if(this.inputHasSingleRange&&value.split(",").length>1){return;}
const index=this.getIndex(rangeId);if(index!==null&&this.focusedRangeIndex!==index){this.focus(index);}
if(index!==null){const valueWithoutLeadingComma=value.replace(/^,+/,"");const values=valueWithoutLeadingComma.split(",").map((reference)=>reference.trim());this.setRange(index,values);this.captureSelection();}}
addEmptyRange(){if(this.inputHasSingleRange&&this.ranges.length===1){return;}
this.insertNewRange(this.ranges.length,[""]);this.focusLast();}
removeRange(rangeId){if(this.ranges.length===1){return;}
const index=this.getIndex(rangeId);if(index!==null){this.removeRangeByIndex(index);}}
confirm(){for(const range of this.selectionInputs){if(range.xc===""){this.removeRange(range.id);}}
const activeSheetId=this.getters.getActiveSheetId();if(this.inputSheetId!==activeSheetId){this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:this.inputSheetId,});}
if(this.selectionInputValues.join()!==this.initialRanges.join()){this.resetWithRanges(this.selectionInputValues);}
this.initialRanges=this.selectionInputValues;this.unfocus();}
reset(){this.resetWithRanges(this.initialRanges);this.confirm();}
get selectionInputValues(){return this.cleanInputs(this.ranges.map((range)=>{return range.xc?range.xc:"";}));}
get selectionInputs(){const generator=new ColorGenerator(this.ranges.length,this.colors);return this.ranges.map((input,index)=>Object.assign({},input,{color:this.hasMainFocus&&this.focusedRangeIndex!==null&&this.getters.isRangeValid(input.xc)?generator.next():null,isFocused:this.hasMainFocus&&this.focusedRangeIndex===index,isValidRange:input.xc===""||this.getters.isRangeValid(input.xc),}));}
get isResettable(){return this.initialRanges.join()!==this.ranges.map((r)=>r.xc).join();}
get isConfirmable(){return this.selectionInputs.every((range)=>range.isValidRange);}
get hasFocus(){return this.selectionInputs.some((i)=>i.isFocused);}
get hasMainFocus(){const focusedElement=this.focusStore.focusedElement;return!!focusedElement&&focusedElement===this;}
get highlights(){if(!this.hasMainFocus){return[];}
return this.ranges.map((input)=>this.inputToHighlights(input)).flat();}
focusById(rangeId){this.focus(this.getIndex(rangeId));}
focus(index){this.focusStore.focus(this);this.focusedRangeIndex=index;this.captureSelection();}
focusLast(){this.focus(this.ranges.length-1);}
unfocus(){this.focusedRangeIndex=null;this.focusStore.unfocus(this);this.model.selection.release(this);}
captureSelection(){if(this.focusedRangeIndex===null){return;}
const range=this.ranges[this.focusedRangeIndex];const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getRangeFromSheetXC(sheetId,range?.xc||"A1").zone;this.model.selection.capture(this,{cell:{col:zone.left,row:zone.top},zone},{handleEvent:this.handleEvent.bind(this),release:this.unfocus.bind(this),});}
resetWithRanges(ranges){this.ranges=[];this.insertNewRange(0,ranges);if(this.ranges.length===0){this.insertNewRange(this.ranges.length,[""]);this.focusLast();}}
setContent(index,xc){this.ranges[index]={...this.ranges[index],xc,};}
insertNewRange(index,values){const currentMaxId=Math.max(0,...this.ranges.map((range)=>Number(range.id)));const colors=new ColorGenerator(this.ranges.length,this.colors);for(let i=0;i<index;i++){colors.next();}
this.ranges.splice(index,0,...values.map((xc,i)=>({xc,id:currentMaxId+i+1,color:colors.next(),})));}
setRange(index,values){const[,...additionalValues]=values;this.setContent(index,values[0]);this.insertNewRange(index+1,additionalValues);if(additionalValues.length){this.focus(index+additionalValues.length);}}
removeRangeByIndex(index){this.ranges.splice(index,1);if(this.focusedRangeIndex!==null){this.focusLast();}}
inputToHighlights({xc,color}){const XCs=this.cleanInputs([xc]).filter((range)=>this.getters.isRangeValid(range)).filter((reference)=>this.shouldBeHighlighted(this.inputSheetId,reference));return XCs.map((xc)=>{const{sheetName}=splitReference(xc);return{zone:this.getters.getRangeFromSheetXC(this.inputSheetId,xc).zone,sheetId:(sheetName&&this.getters.getSheetIdByName(sheetName))||this.inputSheetId,color,interactive:true,};});}
cleanInputs(ranges){return ranges.map((xc)=>xc.split(",")).flat().map((xc)=>xc.trim()).filter((xc)=>xc!=="");}
shouldBeHighlighted(inputSheetId,reference){const{sheetName}=splitReference(reference);const sheetId=this.getters.getSheetIdByName(sheetName);const activeSheetId=this.getters.getActiveSheet().id;const valid=this.getters.isRangeValid(reference);return(valid&&(sheetId===activeSheetId||(sheetId===undefined&&activeSheetId===inputSheetId)));}
getIndex(rangeId){const index=this.ranges.findIndex((range)=>range.id===rangeId);return index>=0?index:null;}}
css`
  .o-selection {
    .o-selection-input {
      padding: 2px 0px;

      input.o-invalid {
        background-color: ${ALERT_DANGER_BG};
      }
      .error-icon {
        right: 7px;
        top: 4px;
      }
    }
    .o-button {
      height: 28px;
      flex-grow: 0;
    }

    /** Make the character a bit bigger
    compared to its neighbor INPUT box  */
    .o-remove-selection {
      font-size: calc(100% + 4px);
    }
  }
`;class SelectionInput extends Component{static template="o-spreadsheet-SelectionInput";static props={ranges:Array,hasSingleRange:{type:Boolean,optional:true},required:{type:Boolean,optional:true},isInvalid:{type:Boolean,optional:true},class:{type:String,optional:true},onSelectionChanged:{type:Function,optional:true},onSelectionConfirmed:{type:Function,optional:true},colors:{type:Array,optional:true,default:[]},};state=useState({isMissing:false,mode:"select-range",});focusedInput=useRef("focusedInput");store;get ranges(){return this.store.selectionInputs;}
get canAddRange(){return!this.props.hasSingleRange;}
get isInvalid(){return this.props.isInvalid||this.state.isMissing;}
get isConfirmable(){return this.store.isConfirmable;}
get isResettable(){return this.store.isResettable;}
setup(){useEffect(()=>this.focusedInput.el?.focus(),()=>[this.focusedInput.el]);this.store=useLocalStore(SelectionInputStore,this.props.ranges,this.props.hasSingleRange||false,this.props.colors);onWillUpdateProps((nextProps)=>{if(nextProps.ranges.join()!==this.store.selectionInputValues.join()){this.triggerChange();}
if(nextProps.ranges.join()!==this.props.ranges.join()&&nextProps.ranges.join()!==this.store.selectionInputValues.join()){this.store.resetWithRanges(nextProps.ranges);}});}
getColor(range){if(!range.color){return"";}
return cssPropertiesToCss({color:range.color});}
triggerChange(){const ranges=this.store.selectionInputValues;this.props.onSelectionChanged?.(ranges);}
onKeydown(ev){if(ev.key==="F2"){ev.preventDefault();ev.stopPropagation();this.state.mode=this.state.mode==="select-range"?"text-edit":"select-range";}
else if(ev.key.startsWith("Arrow")){ev.stopPropagation();if(this.state.mode==="select-range"){ev.preventDefault();updateSelectionWithArrowKeys(ev,this.env.model.selection);}}
else if(ev.key==="Enter"){const target=ev.target;target.blur();this.confirm();}}
extractRanges(value){return this.props.hasSingleRange?value.split(",")[0]:value;}
focus(rangeId){this.state.isMissing=false;this.state.mode="select-range";this.store.focusById(rangeId);}
addEmptyInput(){this.store.addEmptyRange();}
removeInput(rangeId){this.store.removeRange(rangeId);this.triggerChange();this.props.onSelectionConfirmed?.();}
onInputChanged(rangeId,ev){const target=ev.target;const value=this.extractRanges(target.value);this.store.changeRange(rangeId,value);this.triggerChange();}
reset(){this.store.reset();this.triggerChange();}
confirm(){this.store.confirm();const anyValidInput=this.store.selectionInputs.some((range)=>this.env.model.getters.isRangeValid(range.xc));if(this.props.required&&!anyValidInput){this.state.isMissing=true;}
this.props.onSelectionChanged?.(this.store.selectionInputValues);this.props.onSelectionConfirmed?.();}}
class ChartDataSeries extends Component{static template="o-spreadsheet.ChartDataSeries";static components={SelectionInput,Section};static props={ranges:Array,hasSingleRange:{type:Boolean,optional:true},onSelectionChanged:Function,onSelectionConfirmed:Function,};get ranges(){return this.props.ranges.map((r)=>r.dataRange);}
get colors(){return this.props.ranges.map((r)=>r.backgroundColor);}
get title(){return this.props.hasSingleRange?_t("Data range"):_t("Data series");}}
css`
  .o-validation {
    border-radius: 4px;
    border-width: 0 0 0 3px;
    border-style: solid;
    gap: 3px;

    .o-icon {
      margin-right: 5px;
      height: 1.2em;
      width: 1.2em;
    }
  }

  .o-validation-warning {
    border-color: ${ALERT_WARNING_BORDER};
    color: ${ALERT_WARNING_TEXT_COLOR};
    background-color: ${ALERT_WARNING_BG};
  }

  .o-validation-error {
    border-color: ${ALERT_DANGER_BORDER};
    color: ${ALERT_DANGER_TEXT_COLOR};
    background-color: ${ALERT_DANGER_BG};
  }

  .o-validation-info {
    border-color: ${ALERT_INFO_BORDER};
    color: ${ALERT_INFO_TEXT_COLOR};
    background-color: ${ALERT_INFO_BG};
  }
`;class ValidationMessages extends Component{static template="o-spreadsheet-ValidationMessages";static props={messages:Array,msgType:String,singleBox:{type:Boolean,optional:true},};get divClasses(){if(this.props.msgType==="warning"){return"o-validation-warning";}
if(this.props.msgType==="info"){return"o-validation-info";}
return"o-validation-error";}
get alertBoxes(){return this.props.singleBox?[this.props.messages]:this.props.messages.map((msg)=>[msg]);}}
class ChartErrorSection extends Component{static template="o-spreadsheet.ChartErrorSection";static components={Section,ValidationMessages};static props={messages:{type:Array,element:String}};}
class ChartLabelRange extends Component{static template="o-spreadsheet.ChartLabelRange";static components={SelectionInput,Checkbox,Section};static props={title:{type:String,optional:true},range:String,isInvalid:Boolean,onSelectionChanged:Function,onSelectionConfirmed:Function,options:{type:Array,optional:true},};static defaultProps={title:_t("Categories / Labels"),options:[],};}
class GenericChartConfigPanel extends Component{static template="o-spreadsheet-GenericChartConfigPanel";static components={ChartDataSeries,ChartLabelRange,Section,Checkbox,ChartErrorSection,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};state=useState({datasetDispatchResult:undefined,labelsDispatchResult:undefined,});dataSeriesRanges=[];labelRange;chartTerms=ChartTerms;setup(){this.dataSeriesRanges=this.props.definition.dataSets;this.labelRange=this.props.definition.labelRange;}
get errorMessages(){const cancelledReasons=[...(this.state.datasetDispatchResult?.reasons||[]),...(this.state.labelsDispatchResult?.reasons||[]),];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isDatasetInvalid(){return!!this.state.datasetDispatchResult?.isCancelledBecause("InvalidDataSet");}
get isLabelInvalid(){return!!this.state.labelsDispatchResult?.isCancelledBecause("InvalidLabelRange");}
get dataSetsHaveTitleLabel(){return _t("Use row %s as headers",this.calculateHeaderPosition()||"");}
getLabelRangeOptions(){return[{name:"aggregated",label:this.chartTerms.AggregatedChart,value:this.props.definition.aggregated??false,onChange:this.onUpdateAggregated.bind(this),},{name:"dataSetsHaveTitle",label:this.dataSetsHaveTitleLabel,value:this.props.definition.dataSetsHaveTitle,onChange:this.onUpdateDataSetsHaveTitle.bind(this),},];}
onUpdateDataSetsHaveTitle(dataSetsHaveTitle){this.props.updateChart(this.props.figureId,{dataSetsHaveTitle,});}
onDataSeriesRangesChanged(ranges){this.dataSeriesRanges=ranges.map((dataRange,i)=>({...this.dataSeriesRanges?.[i],dataRange,}));this.state.datasetDispatchResult=this.props.canUpdateChart(this.props.figureId,{dataSets:this.dataSeriesRanges,});}
onDataSeriesConfirmed(){this.dataSeriesRanges=spreadRange(this.env.model.getters,this.dataSeriesRanges);this.state.datasetDispatchResult=this.props.updateChart(this.props.figureId,{dataSets:this.dataSeriesRanges,});}
getDataSeriesRanges(){return this.dataSeriesRanges;}
onLabelRangeChanged(ranges){this.labelRange=ranges[0];this.state.labelsDispatchResult=this.props.canUpdateChart(this.props.figureId,{labelRange:this.labelRange,});}
onLabelRangeConfirmed(){this.state.labelsDispatchResult=this.props.updateChart(this.props.figureId,{labelRange:this.labelRange,});}
getLabelRange(){return this.labelRange||"";}
onUpdateAggregated(aggregated){this.props.updateChart(this.props.figureId,{aggregated,});}
calculateHeaderPosition(){if(this.isDatasetInvalid||this.isLabelInvalid){return undefined;}
const getters=this.env.model.getters;const sheetId=getters.getActiveSheetId();const labelRange=createValidRange(getters,sheetId,this.labelRange);const dataSets=createDataSets(getters,this.dataSeriesRanges,sheetId,this.props.definition.dataSetsHaveTitle);if(dataSets.length){return dataSets[0].dataRange.zone.top+1;}
else if(labelRange){return labelRange.zone.top+1;}
return undefined;}}
class BarConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-BarConfigPanel";onUpdateStacked(stacked){this.props.updateChart(this.props.figureId,{stacked,});}
onUpdateAggregated(aggregated){this.props.updateChart(this.props.figureId,{aggregated,});}}
css`
  .o_side_panel_collapsible_title {
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    padding: 6px 0px 6px 6px !important;

    .collapsor-arrow {
      transform: rotate(-90deg);
      display: inline-block;
      transform-origin: 8px 11px;
      transition: transform 0.2s ease-in-out;

      .o-icon {
        width: 16px;
        height: 22px;
      }
    }
    .collapsor:not(.collapsed) .collapsor-arrow {
      transform: rotate(0);
    }

    .collapsor {
      width: 100%;
      transition-delay: 0.35s;
      transition-property: all;
    }
  }

  .collapsible_section {
    &.collapsing {
      transition: height 0.35s, background-color 0.35s !important;
    }
  }
`;let CURRENT_COLLAPSIBLE_ID=0;class SidePanelCollapsible extends Component{static template="o-spreadsheet-SidePanelCollapsible";static props={slots:Object,collapsedAtInit:{type:Boolean,optional:true},class:{type:String,optional:true},};currentId=(CURRENT_COLLAPSIBLE_ID++).toString();}
const CIRCLE_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'>
  <circle r="2" fill="#FFF"/>
</svg>
`;css`
  .o-radio {
    input {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      width: 14px;
      height: 14px;
      border: 1px solid ${GRAY_300};
      box-sizing: border-box;
      outline: none;
      border-radius: 8px;

      &:checked {
        background: url("data:image/svg+xml,${encodeURIComponent(CIRCLE_SVG)}");
        background-color: ${ACTION_COLOR};
        border-color: ${ACTION_COLOR};
      }
    }
  }
`;class RadioSelection extends Component{static template="o-spreadsheet.RadioSelection";static props={choices:Array,onChange:Function,selectedValue:{optional:false},name:String,direction:{type:String,optional:true},};static defaultProps={direction:"horizontal",};}
function startDnd(onMouseMove,onMouseUp,onMouseDown=()=>{}){const removeListeners=()=>{window.removeEventListener("pointerdown",onMouseDown);window.removeEventListener("pointerup",_onMouseUp);window.removeEventListener("dragstart",_onDragStart);window.removeEventListener("pointermove",onMouseMove);window.removeEventListener("wheel",onMouseMove);};const _onMouseUp=(ev)=>{onMouseUp(ev);removeListeners();};function _onDragStart(ev){ev.preventDefault();}
window.addEventListener("pointerdown",onMouseDown);window.addEventListener("pointerup",_onMouseUp);window.addEventListener("dragstart",_onDragStart);window.addEventListener("pointermove",onMouseMove);window.addEventListener("wheel",onMouseMove,{passive:false});return removeListeners;}
function dragAndDropBeyondTheViewport(env,cbMouseMove,cbMouseUp,only=false){let timeOutId=null;let currentEv;let previousEv;let startingEv;let startingX;let startingY;const getters=env.model.getters;const sheetId=getters.getActiveSheetId();const position=gridOverlayPosition();let colIndex;let rowIndex;const onMouseDown=(ev)=>{previousEv=ev;startingEv=ev;startingX=startingEv.clientX-position.left;startingY=startingEv.clientY-position.top;};const onMouseMove=(ev)=>{currentEv=ev;if(timeOutId){return;}
const{x:offsetCorrectionX,y:offsetCorrectionY}=getters.getMainViewportCoordinates();let{top,left,bottom,right}=getters.getActiveMainViewport();let{scrollX,scrollY}=getters.getActiveSheetDOMScrollInfo();const{xSplit,ySplit}=getters.getPaneDivisions(sheetId);let canEdgeScroll=false;let timeoutDelay=MAX_DELAY;const x=currentEv.clientX-position.left;colIndex=getters.getColIndex(x);if(only!=="vertical"){const previousX=previousEv.clientX-position.left;const edgeScrollInfoX=getters.getEdgeScrollCol(x,previousX,startingX);if(edgeScrollInfoX.canEdgeScroll){canEdgeScroll=true;timeoutDelay=Math.min(timeoutDelay,edgeScrollInfoX.delay);let newTarget;switch(edgeScrollInfoX.direction){case"reset":colIndex=xSplit;newTarget=xSplit;break;case 1:colIndex=right;newTarget=left+1;break;case-1:colIndex=left-1;while(env.model.getters.isColHidden(sheetId,colIndex)){colIndex--;}
newTarget=colIndex;break;}
scrollX=getters.getColDimensions(sheetId,newTarget).start-offsetCorrectionX;}}
const y=currentEv.clientY-position.top;rowIndex=getters.getRowIndex(y);if(only!=="horizontal"){const previousY=previousEv.clientY-position.top;const edgeScrollInfoY=getters.getEdgeScrollRow(y,previousY,startingY);if(edgeScrollInfoY.canEdgeScroll){canEdgeScroll=true;timeoutDelay=Math.min(timeoutDelay,edgeScrollInfoY.delay);let newTarget;switch(edgeScrollInfoY.direction){case"reset":rowIndex=ySplit;newTarget=ySplit;break;case 1:rowIndex=bottom;newTarget=top+edgeScrollInfoY.direction;break;case-1:rowIndex=top-1;while(env.model.getters.isRowHidden(sheetId,rowIndex)){rowIndex--;}
newTarget=rowIndex;break;}
scrollY=env.model.getters.getRowDimensions(sheetId,newTarget).start-offsetCorrectionY;}}
if(!canEdgeScroll){if(rowIndex===-1){rowIndex=y<0?0:getters.getNumberRows(sheetId)-1;}
if(colIndex===-1&&x<0){colIndex=x<0?0:getters.getNumberCols(sheetId)-1;}}
cbMouseMove(colIndex,rowIndex,currentEv);if(canEdgeScroll){env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX,offsetY:scrollY});timeOutId=setTimeout(()=>{timeOutId=null;onMouseMove(currentEv);},Math.round(timeoutDelay));}
previousEv=currentEv;};const onMouseUp=()=>{clearTimeout(timeOutId);cbMouseUp();};startDnd(onMouseMove,onMouseUp,onMouseDown);}
const LINE_VERTICAL_PADDING=1;const PICKER_PADDING=8;const ITEM_BORDER_WIDTH=1;const ITEM_EDGE_LENGTH=18;const ITEMS_PER_LINE=10;const MAGNIFIER_EDGE=16;const ITEM_GAP=2;const CONTENT_WIDTH=ITEMS_PER_LINE*(ITEM_EDGE_LENGTH+2*ITEM_BORDER_WIDTH)+(ITEMS_PER_LINE-1)*ITEM_GAP;const INNER_GRADIENT_WIDTH=CONTENT_WIDTH-2*ITEM_BORDER_WIDTH;const INNER_GRADIENT_HEIGHT=CONTENT_WIDTH-30-2*ITEM_BORDER_WIDTH;const CONTAINER_WIDTH=CONTENT_WIDTH+2*PICKER_PADDING;css`
  .o-color-picker {
    padding: ${PICKER_PADDING}px 0;
    /** FIXME: this is useless, overiden by the popover container */
    box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);
    background-color: white;
    line-height: 1.2;
    overflow-y: auto;
    overflow-x: hidden;
    width: ${CONTAINER_WIDTH}px;

    .o-color-picker-section-name {
      margin: 0px ${ITEM_BORDER_WIDTH}px;
      padding: 4px ${PICKER_PADDING}px;
    }
    .colors-grid {
      display: grid;
      padding: ${LINE_VERTICAL_PADDING}px ${PICKER_PADDING}px;
      grid-template-columns: repeat(${ITEMS_PER_LINE}, 1fr);
      grid-gap: ${ITEM_GAP}px;
    }
    .o-color-picker-toggler-button {
      display: flex;
      .o-color-picker-toggler-sign {
        display: flex;
        margin: auto auto;
        width: 55%;
        height: 55%;
        .o-icon {
          width: 100%;
          height: 100%;
        }
      }
    }
    .o-color-picker-line-item {
      width: ${ITEM_EDGE_LENGTH}px;
      height: ${ITEM_EDGE_LENGTH}px;
      margin: 0px;
      border-radius: 50px;
      border: ${ITEM_BORDER_WIDTH}px solid #666666;
      padding: 0px;
      font-size: 16px;
      background: white;
      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
        outline: 1px solid gray;
        cursor: pointer;
      }
    }
    .o-buttons {
      padding: ${PICKER_PADDING}px;
      display: flex;
      .o-cancel {
        border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
        width: 100%;
        padding: 5px;
        font-size: 14px;
        background: white;
        border-radius: 4px;
        box-sizing: border-box;
        &:hover:enabled {
          background-color: rgba(0, 0, 0, 0.08);
        }
      }
    }
    .o-add-button {
      border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
      padding: 4px;
      background: white;
      border-radius: 4px;
      &:hover:enabled {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }
    .o-separator {
      border-bottom: ${MENU_SEPARATOR_BORDER_WIDTH}px solid ${SEPARATOR_COLOR};
      margin-top: ${MENU_SEPARATOR_PADDING}px;
      margin-bottom: ${MENU_SEPARATOR_PADDING}px;
    }

    .o-custom-selector {
      padding: ${PICKER_PADDING + 2}px ${PICKER_PADDING}px;
      position: relative;
      .o-gradient {
        margin-bottom: ${MAGNIFIER_EDGE / 2}px;
        border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
        box-sizing: border-box;
        width: ${INNER_GRADIENT_WIDTH + 2 * ITEM_BORDER_WIDTH}px;
        height: ${INNER_GRADIENT_HEIGHT + 2 * ITEM_BORDER_WIDTH}px;
        position: relative;
      }

      .magnifier {
        height: ${MAGNIFIER_EDGE}px;
        width: ${MAGNIFIER_EDGE}px;
        box-sizing: border-box;
        border-radius: 50%;
        border: 2px solid #fff;
        box-shadow: 0px 0px 3px #c0c0c0;
        position: absolute;
        z-index: 2;
      }
      .saturation {
        background: linear-gradient(to right, #fff 0%, transparent 100%);
      }
      .lightness {
        background: linear-gradient(to top, #000 0%, transparent 100%);
      }
      .o-hue-picker {
        border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
        box-sizing: border-box;
        width: 100%;
        height: 12px;
        border-radius: 4px;
        background: linear-gradient(
          to right,
          hsl(0 100% 50%) 0%,
          hsl(0.2turn 100% 50%) 20%,
          hsl(0.3turn 100% 50%) 30%,
          hsl(0.4turn 100% 50%) 40%,
          hsl(0.5turn 100% 50%) 50%,
          hsl(0.6turn 100% 50%) 60%,
          hsl(0.7turn 100% 50%) 70%,
          hsl(0.8turn 100% 50%) 80%,
          hsl(0.9turn 100% 50%) 90%,
          hsl(1turn 100% 50%) 100%
        );
        position: relative;
        cursor: crosshair;
      }
      .o-hue-slider {
        margin-top: -3px;
      }
      .o-custom-input-preview {
        padding: 2px 0px;
        display: flex;
        input {
          box-sizing: border-box;
          width: 50%;
          border-radius: 4px;
          padding: 4px 23px 4px 10px;
          height: 24px;
          border: 1px solid #c0c0c0;
          margin-right: 2px;
        }
        .o-wrong-color {
          /** FIXME bootstrap class instead? */
          outline-color: red;
          border-color: red;
          &:focus {
            outline-style: solid;
            outline-width: 1px;
          }
        }
      }
      .o-custom-input-buttons {
        padding: 2px 0px;
        display: flex;
        justify-content: end;
      }
      .o-color-preview {
        border: 1px solid #c0c0c0;
        border-radius: 4px;
        width: 50%;
      }
    }
  }
`;class ColorPicker extends Component{static template="o-spreadsheet-ColorPicker";static props={onColorPicked:Function,currentColor:{type:String,optional:true},maxHeight:{type:Number,optional:true},anchorRect:Object,};static defaultProps={currentColor:""};static components={Popover};COLORS=COLOR_PICKER_DEFAULTS;state=useState({showGradient:false,currentHslaColor:isColorValid(this.props.currentColor)?{...hexToHSLA(this.props.currentColor),a:1}:{h:0,s:100,l:100,a:1},customHexColor:isColorValid(this.props.currentColor)?toHex(this.props.currentColor):"",});get colorPickerStyle(){if(this.props.maxHeight!==undefined&&this.props.maxHeight<=0){return cssPropertiesToCss({display:"none"});}
return"";}
get popoverProps(){return{anchorRect:this.props.anchorRect,maxHeight:this.props.maxHeight,positioning:"BottomLeft",verticalOffset:0,};}
get gradientHueStyle(){const hue=this.state.currentHslaColor?.h||0;return cssPropertiesToCss({background:`hsl(${hue} 100% 50%)`,});}
get sliderStyle(){const hue=this.state.currentHslaColor?.h||0;const delta=Math.round((hue/360)*INNER_GRADIENT_WIDTH);const left=clip(delta,1,INNER_GRADIENT_WIDTH)-ICON_EDGE_LENGTH/2;return cssPropertiesToCss({"margin-left":`${left}px`,});}
get pointerStyle(){const{s,l}=this.state.currentHslaColor||{s:0,l:0};const left=Math.round(INNER_GRADIENT_WIDTH*clip(s/100,0,1));const top=Math.round(INNER_GRADIENT_HEIGHT*clip(1-(2*l)/(200-s),0,1));return cssPropertiesToCss({left:`${-MAGNIFIER_EDGE / 2 + left}px`,top:`${-MAGNIFIER_EDGE / 2 + top}px`,background:hslaToHex(this.state.currentHslaColor),});}
get colorPreviewStyle(){return cssPropertiesToCss({"background-color":hslaToHex(this.state.currentHslaColor),});}
get checkmarkColor(){return chartFontColor(this.props.currentColor);}
get isHexColorInputValid(){return!this.state.customHexColor||isColorValid(this.state.customHexColor);}
setCustomGradient({x,y}){const offsetX=clip(x,0,INNER_GRADIENT_WIDTH);const offsetY=clip(y,0,INNER_GRADIENT_HEIGHT);const deltaX=offsetX/INNER_GRADIENT_WIDTH;const deltaY=offsetY/INNER_GRADIENT_HEIGHT;const s=100*deltaX;const l=100*(1-deltaY)*(1-0.5*deltaX);this.updateColor({s,l});}
setCustomHue(x){const h=Math.round(clip((360*x)/INNER_GRADIENT_WIDTH,0,359));this.updateColor({h});}
updateColor(newHsl){this.state.currentHslaColor={...this.state.currentHslaColor,...newHsl};this.state.customHexColor=hslaToHex(this.state.currentHslaColor);}
onColorClick(color){if(color){this.props.onColorPicked(toHex(color));}}
resetColor(){this.props.onColorPicked("");}
toggleColorPicker(){this.state.showGradient=!this.state.showGradient;}
dragGradientPointer(ev){const initialGradientCoordinates={x:ev.offsetX,y:ev.offsetY};this.setCustomGradient(initialGradientCoordinates);const initialMousePosition={x:ev.clientX,y:ev.clientY};const onMouseMove=(ev)=>{const currentMousePosition={x:ev.clientX,y:ev.clientY};const deltaX=currentMousePosition.x-initialMousePosition.x;const deltaY=currentMousePosition.y-initialMousePosition.y;const currentGradientCoordinates={x:initialGradientCoordinates.x+deltaX,y:initialGradientCoordinates.y+deltaY,};this.setCustomGradient(currentGradientCoordinates);};startDnd(onMouseMove,()=>{});}
dragHuePointer(ev){const initialX=ev.offsetX;const initialMouseX=ev.clientX;this.setCustomHue(initialX);const onMouseMove=(ev)=>{const currentMouseX=ev.clientX;const deltaX=currentMouseX-initialMouseX;const x=initialX+deltaX;this.setCustomHue(x);};startDnd(onMouseMove,()=>{});}
setHexColor(ev){const val=ev.target.value.slice(0,7);this.state.customHexColor=val;if(!isColorValid(val));else{this.state.currentHslaColor={...hexToHSLA(val),a:1};}}
addCustomColor(ev){if(!isHSLAValid(this.state.currentHslaColor)||!isColorValid(this.state.customHexColor)){return;}
this.props.onColorPicked(toHex(this.state.customHexColor));}
isSameColor(color1,color2){return isSameColor(color1,color2);}}
css`
  .o-color-picker-widget {
    display: flex;
    position: relative;
    align-items: center;
    height: 30px;

    .o-color-picker-button-style {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 2px;
      padding: 3px;
      border-radius: 2px;
      cursor: pointer;
      &:not([disabled]):hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    .o-color-picker-button {
      > span {
        border-bottom: 4px solid;
        height: 16px;
        margin-top: 2px;
        display: block;
      }

      &[disabled] {
        pointer-events: none;
        opacity: 0.3;
      }
    }
  }
`;class ColorPickerWidget extends Component{static template="o-spreadsheet-ColorPickerWidget";static props={currentColor:{type:String,optional:true},toggleColorPicker:Function,showColorPicker:Boolean,onColorPicked:Function,icon:String,title:{type:String,optional:true},disabled:{type:Boolean,optional:true},dropdownMaxHeight:{type:Number,optional:true},class:{type:String,optional:true},};static components={ColorPicker};colorPickerButtonRef=useRef("colorPickerButton");get iconStyle(){return this.props.currentColor?`border-color: ${this.props.currentColor}`:"border-bottom-style: hidden";}
get colorPickerAnchorRect(){const button=this.colorPickerButtonRef.el;const buttonRect=button.getBoundingClientRect();return{x:buttonRect.x,y:buttonRect.y,width:buttonRect.width,height:buttonRect.height,};}}
const TRANSPARENT_BACKGROUND_SVG=`
<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10">
  <path fill="#d9d9d9" d="M5 5h5v5H5zH0V0h5"/>
</svg>
`;css`
  .o-round-color-picker-button {
    width: 18px;
    height: 18px;
    cursor: pointer;
    border: 1px solid ${GRAY_300};
    background-position: 1px 1px;
    background-image: url("data:image/svg+xml,${encodeURIComponent(TRANSPARENT_BACKGROUND_SVG)}");
  }
`;class RoundColorPicker extends Component{static template="o-spreadsheet.RoundColorPicker";static components={ColorPickerWidget,Section,ColorPicker};static props={currentColor:{type:String,optional:true},title:{type:String,optional:true},onColorPicked:Function,};colorPickerButtonRef=useRef("colorPickerButton");state;setup(){this.state=useState({pickerOpened:false});useExternalListener(window,"click",this.closePicker);}
closePicker(){this.state.pickerOpened=false;}
togglePicker(){this.state.pickerOpened=!this.state.pickerOpened;}
onColorPicked(color){this.props.onColorPicked(color);this.state.pickerOpened=false;}
get colorPickerAnchorRect(){const button=this.colorPickerButtonRef.el;return getBoundingRectAsPOJO(button);}
get buttonStyle(){return cssPropertiesToCss({background:this.props.currentColor,});}}
css`
  .o-badge-selection {
    gap: 1px;
    button.o-button {
      border-radius: 0;
      &.selected {
        color: ${GRAY_900};
        border-color: ${ACTION_COLOR};
        background: ${BADGE_SELECTED_COLOR};
        font-weight: 600;
      }

      &:first-child {
        border-radius: 4px 0 0 4px;
      }
      &:last-child {
        border-radius: 0 4px 4px 0;
      }
    }
  }
`;class BadgeSelection extends Component{static template="o-spreadsheet.BadgeSelection";static props={choices:Array,onChange:Function,selectedValue:String,};}
css`
  .o-chart-title-designer {
    > span {
      height: 30px;
    }

    .o-divider {
      border-right: 1px solid ${GRAY_300};
      margin: 0px 4px;
      height: 14px;
    }

    .o-menu-item-button.active {
      background-color: #e6f4ea;
      color: #188038;
    }

    .o-dropdown-content {
      overflow-y: auto;
      overflow-x: hidden;
      padding: 2px;
      z-index: 100;
      box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);

      .o-dropdown-line {
        > span {
          padding: 4px;
        }
      }
    }
  }
`;class ChartTitle extends Component{static template="o-spreadsheet.ChartTitle";static components={Section,ColorPickerWidget};static props={title:{type:String,optional:true},updateTitle:Function,name:{type:String,optional:true},toggleItalic:{type:Function,optional:true},toggleBold:{type:Function,optional:true},updateAlignment:{type:Function,optional:true},updateColor:{type:Function,optional:true},style:{type:Object,optional:true},};static defaultProps={title:"",};openedEl=null;setup(){useExternalListener(window,"click",this.onExternalClick);}
state=useState({activeTool:"",});updateTitle(ev){this.props.updateTitle(ev.target.value);}
toggleDropdownTool(tool,ev){const isOpen=this.state.activeTool===tool;this.closeMenus();this.state.activeTool=isOpen?"":tool;this.openedEl=isOpen?null:ev.target;}
onExternalClick(ev){if(this.openedEl===ev.target){return;}
this.closeMenus();}
onColorPicked(color){this.props.updateColor?.(color);this.closeMenus();}
updateAlignment(aligment){this.props.updateAlignment?.(aligment);this.closeMenus();}
closeMenus(){this.state.activeTool="";this.openedEl=null;}}
class AxisDesignEditor extends Component{static template="o-spreadsheet-AxisDesignEditor";static components={Section,ChartTitle,BadgeSelection};static props={figureId:String,definition:Object,updateChart:Function,axesList:Array};state=useState({currentAxis:"x"});get axisTitleStyle(){const axisDesign=this.props.definition.axesDesign?.[this.state.currentAxis]??{};return{color:"",align:"center",...axisDesign.title,};}
get badgeAxes(){return this.props.axesList.map((axis)=>({value:axis.id,label:axis.name}));}
updateAxisTitleColor(color){const axesDesign=this.props.definition.axesDesign??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:{...(axesDesign[this.state.currentAxis]?.title??{}),color,},};this.props.updateChart(this.props.figureId,{axesDesign});}
toggleBoldAxisTitle(){const axesDesign=this.props.definition.axesDesign??{};const title=axesDesign[this.state.currentAxis]?.title??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:{...title,bold:!title?.bold,},};this.props.updateChart(this.props.figureId,{axesDesign});}
toggleItalicAxisTitle(){const axesDesign=this.props.definition.axesDesign??{};const title=axesDesign[this.state.currentAxis]?.title??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:{...title,italic:!title?.italic,},};this.props.updateChart(this.props.figureId,{axesDesign});}
updateAxisTitleAlignment(align){const axesDesign=this.props.definition.axesDesign??{};const title=axesDesign[this.state.currentAxis]?.title??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:{...title,align,},};this.props.updateChart(this.props.figureId,{axesDesign});}
updateAxisEditor(ev){const axis=ev.target.value;this.state.currentAxis=axis;}
getAxisTitle(){const axesDesign=this.props.definition.axesDesign??{};return axesDesign[this.state.currentAxis]?.title.text||"";}
updateAxisTitle(text){const axesDesign=this.props.definition.axesDesign??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:{...axesDesign?.[this.state.currentAxis]?.title,text,},};this.props.updateChart(this.props.figureId,{axesDesign});}}
class GeneralDesignEditor extends Component{static template="o-spreadsheet-GeneralDesignEditor";static components={RoundColorPicker,ChartTitle,Section,SidePanelCollapsible,};static props={figureId:String,definition:Object,updateChart:Function,slots:{type:Object,optional:true},};state;setup(){this.state=useState({activeTool:"",});}
get title(){return this.props.definition.title;}
toggleDropdownTool(tool,ev){const isOpen=this.state.activeTool===tool;this.state.activeTool=isOpen?"":tool;}
updateBackgroundColor(color){this.props.updateChart(this.props.figureId,{background:color,});}
updateTitle(newTitle){const title={...this.title,text:newTitle};this.props.updateChart(this.props.figureId,{title});}
get titleStyle(){return{align:"left",...this.title,};}
updateChartTitleColor(color){const title={...this.title,color};this.props.updateChart(this.props.figureId,{title});this.state.activeTool="";}
toggleBoldChartTitle(){let title=this.title;title={...title,bold:!title.bold};this.props.updateChart(this.props.figureId,{title});}
toggleItalicChartTitle(){let title=this.title;title={...title,italic:!title.italic};this.props.updateChart(this.props.figureId,{title});}
updateChartTitleAlignment(align){const title={...this.title,align};this.props.updateChart(this.props.figureId,{title});this.state.activeTool="";}}
class ChartWithAxisDesignPanel extends Component{static template="o-spreadsheet-ChartWithAxisDesignPanel";static components={GeneralDesignEditor,SidePanelCollapsible,Section,AxisDesignEditor,RoundColorPicker,Checkbox,RadioSelection,};static props={figureId:String,definition:Object,canUpdateChart:Function,updateChart:Function,};axisChoices=CHART_AXIS_CHOICES;state=useState({index:0});get axesList(){const{useLeftAxis,useRightAxis}=getDefinedAxis(this.props.definition);let axes=[{id:"x",name:_t("Horizontal axis")}];if(useLeftAxis){axes.push({id:"y",name:useRightAxis?_t("Left axis"):_t("Vertical axis")});}
if(useRightAxis){axes.push({id:"y1",name:useLeftAxis?_t("Right axis"):_t("Vertical axis")});}
return axes;}
updateLegendPosition(ev){this.props.updateChart(this.props.figureId,{legendPosition:ev.target.value,});}
getDataSeries(){return this.props.definition.dataSets.map((d,i)=>d.label??`${ChartTerms.Series} ${i + 1}`);}
updateSerieEditor(ev){const chartId=this.props.figureId;const selectedIndex=ev.target.selectedIndex;const runtime=this.env.model.getters.getChartRuntime(chartId);if(!runtime){return;}
this.state.index=selectedIndex;}
updateDataSeriesColor(color){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[this.state.index]){return;}
dataSets[this.state.index]={...dataSets[this.state.index],backgroundColor:color,};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSerieColor(){const dataSets=this.props.definition.dataSets;if(!dataSets?.[this.state.index]){return"";}
const color=dataSets[this.state.index].backgroundColor;return color?toHex(color):getNthColor(this.state.index,getColorsPalette(dataSets.length));}
updateDataSeriesAxis(axis){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[this.state.index]){return;}
dataSets[this.state.index]={...dataSets[this.state.index],yAxisId:axis==="left"?"y":"y1",};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSerieAxis(){const dataSets=this.props.definition.dataSets;if(!dataSets?.[this.state.index]){return"left";}
return dataSets[this.state.index].yAxisId==="y1"?"right":"left";}
get canHaveTwoVerticalAxis(){return"horizontal"in this.props.definition?!this.props.definition.horizontal:true;}
updateDataSeriesLabel(ev){const label=ev.target.value;const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[this.state.index]){return;}
dataSets[this.state.index]={...dataSets[this.state.index],label,};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSerieLabel(){const dataSets=this.props.definition.dataSets;return dataSets[this.state.index]?.label||this.getDataSeries()[this.state.index];}
updateShowValues(showValues){this.props.updateChart(this.props.figureId,{showValues});}
toggleDataTrend(display){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[this.state.index]){return;}
dataSets[this.state.index]={...dataSets[this.state.index],trend:{type:"polynomial",order:1,...dataSets[this.state.index].trend,display,},};this.props.updateChart(this.props.figureId,{dataSets});}
getTrendLineConfiguration(){const dataSets=this.props.definition.dataSets;return dataSets?.[this.state.index]?.trend;}
getTrendType(config){if(!config){return"";}
return config.type==="polynomial"&&config.order===1?"linear":config.type;}
onChangeTrendType(ev){const type=ev.target.value;let config;switch(type){case"linear":case"polynomial":config={type:"polynomial",order:type==="linear"?1:2,};break;case"exponential":case"logarithmic":config={type};break;default:return;}
this.updateTrendLineValue(config);}
onChangePolynomialDegree(ev){const element=ev.target;const order=parseInt(element.value||"1");if(order<2){element.value=`${this.getTrendLineConfiguration()?.order ?? 2}`;return;}
this.updateTrendLineValue({order});}
getTrendLineColor(){return this.getTrendLineConfiguration()?.color??setColorAlpha(this.getDataSerieColor(),0.5);}
updateTrendLineColor(color){this.updateTrendLineValue({color});}
updateTrendLineValue(config){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[this.state.index]){return;}
dataSets[this.state.index]={...dataSets[this.state.index],trend:{...dataSets[this.state.index].trend,...config,},};this.props.updateChart(this.props.figureId,{dataSets});}}
class ComboChartDesignPanel extends ChartWithAxisDesignPanel{static template="o-spreadsheet-ComboChartDesignPanel";seriesTypeChoices=[{value:"bar",label:_t("Bar")},{value:"line",label:_t("Line")},];updateDataSeriesType(type){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[this.state.index]){return;}
dataSets[this.state.index]={...dataSets[this.state.index],type,};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSeriesType(){const dataSets=this.props.definition.dataSets;if(!dataSets?.[this.state.index]){return"bar";}
return dataSets[this.state.index].type??"line";}}
class GaugeChartConfigPanel extends Component{static template="o-spreadsheet-GaugeChartConfigPanel";static components={ChartErrorSection,ChartDataSeries};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};state=useState({dataRangeDispatchResult:undefined,});dataRange=this.props.definition.dataRange;get configurationErrorMessages(){const cancelledReasons=[...(this.state.dataRangeDispatchResult?.reasons||[])];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isDataRangeInvalid(){return!!this.state.dataRangeDispatchResult?.isCancelledBecause("InvalidGaugeDataRange");}
onDataRangeChanged(ranges){this.dataRange=ranges[0];this.state.dataRangeDispatchResult=this.props.canUpdateChart(this.props.figureId,{dataRange:this.dataRange,});}
updateDataRange(){this.state.dataRangeDispatchResult=this.props.updateChart(this.props.figureId,{dataRange:this.dataRange,});}
getDataRange(){return{dataRange:this.dataRange||""};}}
css`
  .o-gauge-color-set {
    table {
      table-layout: fixed;
      margin-top: 2%;
      display: table;
      text-align: left;
      font-size: 12px;
      line-height: 18px;
      width: 100%;
      font-size: 12px;
    }

    td {
      box-sizing: border-box;
      height: 30px;
      padding: 6px 0;
    }
    th.o-gauge-color-set-colorPicker {
      width: 8%;
    }
    th.o-gauge-color-set-text {
      width: 25%;
    }
    th.o-gauge-color-set-operator {
      width: 10%;
    }
    th.o-gauge-color-set-value {
      width: 22%;
    }
    th.o-gauge-color-set-type {
      width: 30%;
    }
    input,
    select {
      width: 100%;
      height: 100%;
      box-sizing: border-box;
    }
  }
`;class GaugeChartDesignPanel extends Component{static template="o-spreadsheet-GaugeChartDesignPanel";static components={SidePanelCollapsible,Section,RoundColorPicker,GeneralDesignEditor,ChartErrorSection,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};state;setup(){this.state=useState({sectionRuleDispatchResult:undefined,sectionRule:deepCopy(this.props.definition.sectionRule),});}
get designErrorMessages(){const cancelledReasons=[...(this.state.sectionRuleDispatchResult?.reasons||[])];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
isRangeMinInvalid(){return!!(this.state.sectionRuleDispatchResult?.isCancelledBecause("EmptyGaugeRangeMin")||this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeRangeMinNaN")||this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeRangeMinBiggerThanRangeMax"));}
isRangeMaxInvalid(){return!!(this.state.sectionRuleDispatchResult?.isCancelledBecause("EmptyGaugeRangeMax")||this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeRangeMaxNaN")||this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeRangeMinBiggerThanRangeMax"));}
get isLowerInflectionPointInvalid(){return!!(this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeLowerInflectionPointNaN")||this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeLowerBiggerThanUpper"));}
get isUpperInflectionPointInvalid(){return!!(this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeUpperInflectionPointNaN")||this.state.sectionRuleDispatchResult?.isCancelledBecause("GaugeLowerBiggerThanUpper"));}
updateSectionColor(target,color){const sectionRule=deepCopy(this.state.sectionRule);sectionRule.colors[target]=color;this.updateSectionRule(sectionRule);}
updateSectionRule(sectionRule){this.state.sectionRuleDispatchResult=this.props.updateChart(this.props.figureId,{sectionRule,});if(this.state.sectionRuleDispatchResult.isSuccessful){this.state.sectionRule=deepCopy(sectionRule);}}
canUpdateSectionRule(sectionRule){this.state.sectionRuleDispatchResult=this.props.canUpdateChart(this.props.figureId,{sectionRule,});}}
class LineConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-LineConfigPanel";get canTreatLabelsAsText(){const chart=this.env.model.getters.getChart(this.props.figureId);if(chart&&chart instanceof LineChart){return canChartParseLabels(chart.labelRange,this.env.model.getters);}
return false;}
get stackedLabel(){const definition=this.props.definition;return definition.fillArea?this.chartTerms.StackedAreaChart:this.chartTerms.StackedBarChart;}
getLabelRangeOptions(){const options=super.getLabelRangeOptions();if(this.canTreatLabelsAsText){options.push({name:"labelsAsText",value:this.props.definition.labelsAsText,label:this.chartTerms.TreatLabelsAsText,onChange:this.onUpdateLabelsAsText.bind(this),});}
return options;}
onUpdateLabelsAsText(labelsAsText){this.props.updateChart(this.props.figureId,{labelsAsText,});}
onUpdateStacked(stacked){this.props.updateChart(this.props.figureId,{stacked,});}
onUpdateAggregated(aggregated){this.props.updateChart(this.props.figureId,{aggregated,});}
onUpdateCumulative(cumulative){this.props.updateChart(this.props.figureId,{cumulative,});}}
class PieChartDesignPanel extends Component{static template="o-spreadsheet-PieChartDesignPanel";static components={GeneralDesignEditor,Section,Checkbox,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};updateLegendPosition(ev){this.props.updateChart(this.props.figureId,{legendPosition:ev.target.value,});}}
class ScatterConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-ScatterConfigPanel";get canTreatLabelsAsText(){const chart=this.env.model.getters.getChart(this.props.figureId);if(chart&&chart instanceof ScatterChart){return canChartParseLabels(chart.labelRange,this.env.model.getters);}
return false;}
onUpdateLabelsAsText(labelsAsText){this.props.updateChart(this.props.figureId,{labelsAsText,});}
getLabelRangeOptions(){const options=super.getLabelRangeOptions();if(this.canTreatLabelsAsText){options.push({name:"labelsAsText",value:this.props.definition.labelsAsText,label:this.chartTerms.TreatLabelsAsText,onChange:this.onUpdateLabelsAsText.bind(this),});}
return options;}}
class ScorecardChartConfigPanel extends Component{static template="o-spreadsheet-ScorecardChartConfigPanel";static components={SelectionInput,ChartErrorSection,Section};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};state=useState({keyValueDispatchResult:undefined,baselineDispatchResult:undefined,});keyValue=this.props.definition.keyValue;baseline=this.props.definition.baseline;get errorMessages(){const cancelledReasons=[...(this.state.keyValueDispatchResult?.reasons||[]),...(this.state.baselineDispatchResult?.reasons||[]),];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isKeyValueInvalid(){return!!this.state.keyValueDispatchResult?.isCancelledBecause("InvalidScorecardKeyValue");}
get isBaselineInvalid(){return!!this.state.keyValueDispatchResult?.isCancelledBecause("InvalidScorecardBaseline");}
onKeyValueRangeChanged(ranges){this.keyValue=ranges[0];this.state.keyValueDispatchResult=this.props.canUpdateChart(this.props.figureId,{keyValue:this.keyValue,});}
updateKeyValueRange(){this.state.keyValueDispatchResult=this.props.updateChart(this.props.figureId,{keyValue:this.keyValue,});}
getKeyValueRange(){return this.keyValue||"";}
onBaselineRangeChanged(ranges){this.baseline=ranges[0];this.state.baselineDispatchResult=this.props.canUpdateChart(this.props.figureId,{baseline:this.baseline,});}
updateBaselineRange(){this.state.baselineDispatchResult=this.props.updateChart(this.props.figureId,{baseline:this.baseline,});}
getBaselineRange(){return this.baseline||"";}
updateBaselineMode(ev){this.props.updateChart(this.props.figureId,{baselineMode:ev.target.value});}}
class ScorecardChartDesignPanel extends Component{static template="o-spreadsheet-ScorecardChartDesignPanel";static components={GeneralDesignEditor,RoundColorPicker,SidePanelCollapsible,Section,Checkbox,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};get colorsSectionTitle(){return this.props.definition.baselineMode==="progress"?_t("Progress bar colors"):_t("Baseline colors");}
get humanizeNumbersLabel(){return _t("Humanize numbers");}
updateHumanizeNumbers(humanize){this.props.updateChart(this.props.figureId,{humanize});}
translate(term){return _t(term);}
updateBaselineDescr(ev){this.props.updateChart(this.props.figureId,{baselineDescr:ev.target.value});}
setColor(color,colorPickerId){switch(colorPickerId){case"backgroundColor":this.props.updateChart(this.props.figureId,{background:color});break;case"baselineColorDown":this.props.updateChart(this.props.figureId,{baselineColorDown:color});break;case"baselineColorUp":this.props.updateChart(this.props.figureId,{baselineColorUp:color});break;}}}
class WaterfallChartDesignPanel extends Component{static template="o-spreadsheet-WaterfallChartDesignPanel";static components={GeneralDesignEditor,Checkbox,SidePanelCollapsible,Section,RoundColorPicker,AxisDesignEditor,RadioSelection,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};axisChoices=CHART_AXIS_CHOICES;onUpdateShowSubTotals(showSubTotals){this.props.updateChart(this.props.figureId,{showSubTotals});}
onUpdateShowConnectorLines(showConnectorLines){this.props.updateChart(this.props.figureId,{showConnectorLines});}
onUpdateFirstValueAsSubtotal(firstValueAsSubtotal){this.props.updateChart(this.props.figureId,{firstValueAsSubtotal});}
updateColor(colorName,color){this.props.updateChart(this.props.figureId,{[colorName]:color});}
get axesList(){return[{id:"x",name:_t("Horizontal axis")},{id:"y",name:_t("Vertical axis")},];}
get positiveValuesColor(){return(this.props.definition.positiveValuesColor||CHART_WATERFALL_POSITIVE_COLOR);}
get negativeValuesColor(){return(this.props.definition.negativeValuesColor||CHART_WATERFALL_NEGATIVE_COLOR);}
get subTotalValuesColor(){return(this.props.definition.subTotalValuesColor||CHART_WATERFALL_SUBTOTAL_COLOR);}
updateLegendPosition(ev){this.props.updateChart(this.props.figureId,{legendPosition:ev.target.value,});}
updateVerticalAxisPosition(value){this.props.updateChart(this.props.figureId,{verticalAxisPosition:value,});}
updateShowValues(showValues){this.props.updateChart(this.props.figureId,{showValues});}}
const chartSidePanelComponentRegistry=new Registry();chartSidePanelComponentRegistry.add("line",{configuration:LineConfigPanel,design:ChartWithAxisDesignPanel,}).add("scatter",{configuration:ScatterConfigPanel,design:ChartWithAxisDesignPanel,}).add("bar",{configuration:BarConfigPanel,design:ChartWithAxisDesignPanel,}).add("combo",{configuration:GenericChartConfigPanel,design:ComboChartDesignPanel,}).add("pie",{configuration:GenericChartConfigPanel,design:PieChartDesignPanel,}).add("gauge",{configuration:GaugeChartConfigPanel,design:GaugeChartDesignPanel,}).add("scorecard",{configuration:ScorecardChartConfigPanel,design:ScorecardChartDesignPanel,}).add("waterfall",{configuration:GenericChartConfigPanel,design:WaterfallChartDesignPanel,}).add("pyramid",{configuration:GenericChartConfigPanel,design:ChartWithAxisDesignPanel,});css`
  .o-section .o-input.o-type-selector {
    height: 30px;
    padding-left: 35px;
    padding-top: 5px;
  }
  .o-type-selector-preview {
    left: 5px;
    top: 3px;
    .o-chart-preview {
      width: 24px;
      height: 24px;
    }
  }

  .o-popover .o-chart-select-popover {
    box-sizing: border-box;
    background: #fff;
    .o-chart-type-item {
      cursor: pointer;
      padding: 3px 6px;
      margin: 1px 2px;
      &.selected,
      &:hover {
        border: 1px solid ${ACTION_COLOR};
        background: ${BADGE_SELECTED_COLOR};
        padding: 2px 5px;
      }
      .o-chart-preview {
        width: 48px;
        height: 48px;
      }
    }
  }
`;class ChartTypePicker extends Component{static template="o-spreadsheet-ChartTypePicker";static components={Section,Popover};static props={figureId:String,chartPanelStore:Object};categories=chartCategories;chartTypeByCategories={};popoverRef=useRef("popoverRef");selectRef=useRef("selectRef");state=useState({popoverProps:undefined,popoverStyle:""});setup(){useExternalListener(window,"pointerdown",this.onExternalClick,{capture:true});for(const subtypeProperties of chartSubtypeRegistry.getAll()){if(this.chartTypeByCategories[subtypeProperties.category]){this.chartTypeByCategories[subtypeProperties.category].push(subtypeProperties);}
else{this.chartTypeByCategories[subtypeProperties.category]=[subtypeProperties];}}}
onExternalClick(ev){if(isChildEvent(this.popoverRef.el?.parentElement,ev)||isChildEvent(this.selectRef.el,ev)){return;}
this.closePopover();}
onTypeChange(type){this.props.chartPanelStore.changeChartType(this.props.figureId,type);this.closePopover();}
getChartDefinition(figureId){return this.env.model.getters.getChartDefinition(figureId);}
getSelectedChartSubtypeProperties(){const definition=this.getChartDefinition(this.props.figureId);const matchedChart=chartSubtypeRegistry.getAll().find((c)=>c.matcher?.(definition)||false);return matchedChart||chartSubtypeRegistry.get(definition.type);}
onPointerDown(ev){if(this.state.popoverProps){this.closePopover();return;}
const target=ev.currentTarget;const{bottom,right,width}=target.getBoundingClientRect();this.state.popoverProps={anchorRect:{x:right,y:bottom,width:0,height:0},positioning:"TopRight",verticalOffset:0,};this.state.popoverStyle=cssPropertiesToCss({width:`${width}px`});}
closePopover(){this.state.popoverProps=undefined;}}
class MainChartPanelStore extends SpreadsheetStore{mutators=["activatePanel","changeChartType"];panel="configuration";creationContext={};activatePanel(panel){this.panel=panel;}
changeChartType(figureId,newDisplayType){this.creationContext={...this.creationContext,...this.getters.getContextCreationChart(figureId),};const sheetId=this.getters.getFigureSheetId(figureId);if(!sheetId){return;}
const definition=this.getChartDefinitionFromContextCreation(figureId,newDisplayType);this.model.dispatch("UPDATE_CHART",{definition,id:figureId,sheetId,});}
getChartDefinitionFromContextCreation(figureId,newDisplayType){const newChartInfo=chartSubtypeRegistry.get(newDisplayType);const ChartClass=chartRegistry.get(newChartInfo.chartType);const contextCreation={...this.creationContext,...this.getters.getContextCreationChart(figureId),};return{...ChartClass.getChartDefinitionFromContextCreation(contextCreation),...newChartInfo.subtypeDefinition,};}}
css`
  .o-chart {
    .o-panel {
      display: flex;
      .o-panel-element {
        flex: 1 0 auto;
        padding: 8px 0px;
        text-align: center;
        cursor: pointer;
        border-right: 1px solid ${GRAY_300};

        &.inactive {
          color: ${TEXT_BODY};
          background-color: ${GRAY_100};
          border-bottom: 1px solid ${GRAY_300};
        }

        &:not(.inactive) {
          color: ${TEXT_HEADING};
          border-bottom: 1px solid #fff;
        }

        .fa {
          margin-right: 4px;
        }
      }
      .o-panel-element:last-child {
        border-right: none;
      }
    }
  }
`;class ChartPanel extends Component{static template="o-spreadsheet-ChartPanel";static components={Section,ChartTypePicker};static props={onCloseSidePanel:Function,figureId:String};store;get figureId(){return this.props.figureId;}
setup(){this.store=useLocalStore(MainChartPanelStore);}
updateChart(figureId,updateDefinition){if(figureId!==this.figureId){return;}
const definition={...this.getChartDefinition(this.figureId),...updateDefinition,};return this.env.model.dispatch("UPDATE_CHART",{definition,id:figureId,sheetId:this.env.model.getters.getFigureSheetId(figureId),});}
canUpdateChart(figureId,updateDefinition){if(figureId!==this.figureId||!this.env.model.getters.isChartDefined(figureId)){return;}
const definition={...this.getChartDefinition(this.figureId),...updateDefinition,};return this.env.model.canDispatch("UPDATE_CHART",{definition,id:figureId,sheetId:this.env.model.getters.getFigureSheetId(figureId),});}
onTypeChange(type){if(!this.figureId){return;}
this.store.changeChartType(this.figureId,type);}
get chartPanel(){if(!this.figureId){throw new Error("Chart not defined.");}
const type=this.env.model.getters.getChartType(this.figureId);if(!type){throw new Error("Chart not defined.");}
const chartPanel=chartSidePanelComponentRegistry.get(type);if(!chartPanel){throw new Error(`Component is not defined for type ${type}`);}
return chartPanel;}
getChartDefinition(figureId){return this.env.model.getters.getChartDefinition(figureId);}}
class NotificationStore{mutators=["notifyUser","raiseError","askConfirmation","updateNotificationCallbacks",];notifyUser=(notification)=>window.alert(notification.text);askConfirmation=(content,confirm,cancel)=>{if(window.confirm(content)){confirm();}
else{cancel?.();}};raiseError=(text,callback)=>{window.alert(text);callback?.();};updateNotificationCallbacks(methods){this.notifyUser=methods.notifyUser||this.notifyUser;this.raiseError=methods.raiseError||this.raiseError;this.askConfirmation=methods.askConfirmation||this.askConfirmation;}}
class AbstractComposerStore extends SpreadsheetStore{mutators=["startEdition","setCurrentContent","stopEdition","stopComposerRangeSelection","cancelEdition","cycleReferences","changeComposerCursorSelection","replaceComposerCursorSelection",];col=0;row=0;editionMode="inactive";sheetId="";_currentContent="";currentTokens=[];selectionStart=0;selectionEnd=0;initialContent="";colorIndexByRange={};notificationStore=this.get(NotificationStore);highlightStore=this.get(HighlightStore);constructor(get){super(get);this.highlightStore.register(this);this.onDispose(()=>{this.highlightStore.unRegister(this);});}
handleEvent(event){const sheetId=this.getters.getActiveSheetId();let unboundedZone;if(event.options.unbounded){unboundedZone=this.getters.getUnboundedZone(sheetId,event.anchor.zone);}
else{unboundedZone=event.anchor.zone;}
switch(event.mode){case"newAnchor":if(this.editionMode==="selecting"){this.insertSelectedRange(unboundedZone);}
break;default:if(this.editionMode==="selecting"){this.replaceSelectedRange(unboundedZone);}
else{this.updateComposerRange(event.previousAnchor.zone,unboundedZone);}
break;}}
changeComposerCursorSelection(start,end){if(!this.isSelectionValid(this._currentContent.length,start,end)){return;}
this.selectionStart=start;this.selectionEnd=end;}
stopComposerRangeSelection(){if(this.isSelectingRange){this.editionMode="editing";}}
startEdition(text,selection){if(selection){const content=text||this.getComposerContent(this.getters.getActivePosition());const validSelection=this.isSelectionValid(content.length,selection.start,selection.end);if(!validSelection){return;}}
const{col,row}=this.getters.getActivePosition();this.model.dispatch("SELECT_FIGURE",{id:null});this.model.dispatch("SCROLL_TO_CELL",{col,row});if(this.editionMode!=="inactive"&&text){this.setContent(text,selection);}
else{this._startEdition(text,selection);}
this.updateRangeColor();}
cancelEdition(){this.cancelEditionAndActivateSheet();this.resetContent();}
setCurrentContent(content,selection){if(selection&&!this.isSelectionValid(content.length,selection.start,selection.end)){return;}
this.setContent(content,selection,true);this.updateRangeColor();}
replaceComposerCursorSelection(text){this.replaceSelection(text);}
handle(cmd){switch(cmd.type){case"SELECT_FIGURE":if(cmd.id){this.cancelEditionAndActivateSheet();this.resetContent();}
break;case"START_CHANGE_HIGHLIGHT":const{left,top}=cmd.zone;if(this.isSelectingRange){this.editionMode="editing";}
this.model.selection.resetAnchor(this,{cell:{col:left,row:top},zone:cmd.zone,});break;}}
get currentContent(){if(this.editionMode==="inactive"){return this.getComposerContent(this.getters.getActivePosition());}
return this._currentContent;}
get composerSelection(){return{start:this.selectionStart,end:this.selectionEnd,};}
get isSelectingRange(){return this.editionMode==="selecting";}
get showSelectionIndicator(){return this.isSelectingRange&&this.canStartComposerRangeSelection();}
get tokenAtCursor(){const start=Math.min(this.selectionStart,this.selectionEnd);const end=Math.max(this.selectionStart,this.selectionEnd);if(start===end&&end===0){return undefined;}
else{return this.currentTokens.find((t)=>t.start<=start&&t.end>=end);}}
cycleReferences(){const locale=this.getters.getLocale();const updated=cycleFixedReference(this.composerSelection,this._currentContent,locale);if(updated===undefined){return;}
this.setCurrentContent(updated.content,updated.selection);}
isSelectionValid(length,start,end){return start>=0&&start<=length&&end>=0&&end<=length;}
startComposerRangeSelection(){if(this.sheetId===this.getters.getActiveSheetId()){const zone=positionToZone({col:this.col,row:this.row});this.model.selection.resetAnchor(this,{cell:{col:this.col,row:this.row},zone,});}
this.editionMode="selecting";}
_startEdition(str,selection){const evaluatedCell=this.getters.getActiveCell();const locale=this.getters.getLocale();if(str&&evaluatedCell.format?.includes("%")&&isNumber(str,locale)){selection=selection||{start:str.length,end:str.length};str=`${str}%`;}
const{col,row,sheetId}=this.getters.getActivePosition();this.col=col;this.sheetId=sheetId;this.row=row;this.initialContent=this.getComposerContent({sheetId,col,row});this.editionMode="editing";this.setContent(str||this.initialContent,selection);this.colorIndexByRange={};const zone=positionToZone({col:this.col,row:this.row});this.model.selection.capture(this,{cell:{col:this.col,row:this.row},zone},{handleEvent:this.handleEvent.bind(this),release:()=>{this._stopEdition();},});}
_stopEdition(){if(this.editionMode!=="inactive"){this.cancelEditionAndActivateSheet();let content=this.getCurrentCanonicalContent();const didChange=this.initialContent!==content;if(!didChange){return;}
if(content){if(content.startsWith("=")){const left=this.currentTokens.filter((t)=>t.type==="LEFT_PAREN").length;const right=this.currentTokens.filter((t)=>t.type==="RIGHT_PAREN").length;const missing=left-right;if(missing>0){content+=concat(new Array(missing).fill(")"));}}}
this.confirmEdition(content);}}
getCurrentCanonicalContent(){return canonicalizeNumberContent(this._currentContent,this.getters.getLocale());}
cancelEditionAndActivateSheet(){if(this.editionMode==="inactive"){return;}
this._cancelEdition();const sheetId=this.getters.getActiveSheetId();if(sheetId!==this.sheetId){this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.getters.getActiveSheetId(),sheetIdTo:this.sheetId,});}}
_cancelEdition(){if(this.editionMode==="inactive"){return;}
this.editionMode="inactive";this.model.selection.release(this);this.colorIndexByRange={};}
resetContent(){this.setContent(this.initialContent||"");}
setContent(text,selection,raise){const isNewCurrentContent=this._currentContent!==text;this._currentContent=text;if(selection){this.selectionStart=selection.start;this.selectionEnd=selection.end;}
else{this.selectionStart=this.selectionEnd=text.length;}
if(isNewCurrentContent||this.editionMode!=="inactive"){const locale=this.getters.getLocale();this.currentTokens=text.startsWith("=")?composerTokenize(text,locale):[];if(this.currentTokens.length>100){if(raise){this.notificationStore.raiseError(_t("This formula has over 100 parts. It can't be processed properly, consider splitting it into multiple cells"));}}}
if(this.canStartComposerRangeSelection()){this.startComposerRangeSelection();}}
getAutoCompleteProviders(){return autoCompleteProviders.getAll();}
insertSelectedRange(zone){const start=Math.min(this.selectionStart,this.selectionEnd);const ref=this.getZoneReference(zone);if(this.canStartComposerRangeSelection()){this.insertText(ref,start);}
else{this.insertText(","+ref,start);}}
replaceSelectedRange(zone){const ref=this.getZoneReference(zone);const currentToken=this.tokenAtCursor;let replaceStart=this.selectionStart;if(currentToken?.type==="REFERENCE"){replaceStart=currentToken.start;}
else if(currentToken?.type==="RIGHT_PAREN"){const leftParenthesisIndex=this.currentTokens.findIndex((token)=>token.type==="LEFT_PAREN"&&token.parenIndex===currentToken.parenIndex);const functionToken=this.currentTokens[leftParenthesisIndex-1];if(functionToken===undefined){return;}
replaceStart=functionToken.start;}
this.replaceText(ref,replaceStart,this.selectionEnd);}
updateComposerRange(oldZone,newZone){const activeSheetId=this.getters.getActiveSheetId();const tokentAtCursor=this.tokenAtCursor;const tokens=tokentAtCursor?[tokentAtCursor,...this.currentTokens]:this.currentTokens;const previousRefToken=tokens.filter((token)=>token.type==="REFERENCE").find((token)=>{const{xc,sheetName:sheet}=splitReference(token.value);const sheetName=sheet||this.getters.getSheetName(this.sheetId);if(this.getters.getSheetName(activeSheetId)!==sheetName){return false;}
const refRange=this.getters.getRangeFromSheetXC(activeSheetId,xc);return isEqual(this.getters.expandZone(activeSheetId,refRange.zone),oldZone);});if(!previousRefToken){return;}
const previousRange=this.getters.getRangeFromSheetXC(activeSheetId,previousRefToken.value);this.selectionStart=previousRefToken.start;this.selectionEnd=this.selectionStart+previousRefToken.value.length;const newRange=this.getters.getRangeFromZone(activeSheetId,newZone);const newRef=this.getRangeReference(newRange,previousRange.parts);this.replaceSelection(newRef);}
getZoneReference(zone){const inputSheetId=this.sheetId;const sheetId=this.getters.getActiveSheetId();if(zone.top===zone.bottom&&zone.left===zone.right){const position={sheetId,col:zone.left,row:zone.top};const pivotId=this.getters.getPivotIdFromPosition(position);const pivotCell=this.getters.getPivotCellFromPosition(position);const cell=this.getters.getCell(position);if(pivotId&&pivotCell.type!=="EMPTY"&&!cell?.isFormula){const formulaPivotId=this.getters.getPivotFormulaId(pivotId);const formula=createPivotFormula(formulaPivotId,pivotCell);return localizeFormula(formula,this.getters.getLocale()).slice(1);}}
const range=this.getters.getRangeFromZone(sheetId,zone);return this.getters.getSelectionRangeString(range,inputSheetId);}
getRangeReference(range,fixedParts){let _fixedParts=[...fixedParts];const newRange=range.clone({parts:_fixedParts});return this.getters.getSelectionRangeString(newRange,this.sheetId);}
replaceSelection(text){const start=Math.min(this.selectionStart,this.selectionEnd);const end=Math.max(this.selectionStart,this.selectionEnd);this.replaceText(text,start,end);}
replaceText(text,start,end){this._currentContent=this._currentContent.slice(0,start)+
this._currentContent.slice(end,this._currentContent.length);this.insertText(text,start);}
insertText(text,start){const content=this._currentContent.slice(0,start)+text+this._currentContent.slice(start);const end=start+text.length;this.setCurrentContent(content,{start:end,end});}
updateRangeColor(){if(!this._currentContent.startsWith("=")||this.editionMode==="inactive"){return;}
const editionSheetId=this.sheetId;const XCs=this.getReferencedRanges().map((range)=>this.getters.getRangeString(range,editionSheetId));const colorsToKeep={};for(const xc of XCs){if(this.colorIndexByRange[xc]!==undefined){colorsToKeep[xc]=this.colorIndexByRange[xc];}}
const usedIndexes=new Set(Object.values(colorsToKeep));let currentIndex=0;const nextIndex=()=>{while(usedIndexes.has(currentIndex))
currentIndex++;usedIndexes.add(currentIndex);return currentIndex;};for(const xc of XCs){const colorIndex=xc in colorsToKeep?colorsToKeep[xc]:nextIndex();colorsToKeep[xc]=colorIndex;}
this.colorIndexByRange=colorsToKeep;}
get highlights(){if(!this.currentContent.startsWith("=")||this.editionMode==="inactive"){return[];}
const editionSheetId=this.sheetId;const rangeColor=(rangeString)=>{const colorIndex=this.colorIndexByRange[rangeString];return colors$1[colorIndex%colors$1.length];};const highlights=[];for(const range of this.getReferencedRanges()){const rangeString=this.getters.getRangeString(range,editionSheetId);const{numberOfRows,numberOfCols}=zoneToDimension(range.zone);const zone=numberOfRows*numberOfCols===1?this.getters.expandZone(range.sheetId,range.zone):range.zone;highlights.push({zone,color:rangeColor(rangeString),sheetId:range.sheetId,interactive:true,});}
const activeSheetId=this.getters.getActiveSheetId();const selectionZone=this.model.selection.getAnchor().zone;const isSelectionHightlighted=highlights.find((highlight)=>highlight.sheetId===activeSheetId&&isEqual(highlight.zone,selectionZone));if(this.editionMode==="selecting"&&!isSelectionHightlighted){highlights.push({zone:selectionZone,color:"#445566",sheetId:activeSheetId,dashed:true,interactive:false,noFill:true,thinLine:true,});}
return highlights;}
getReferencedRanges(){const editionSheetId=this.sheetId;const referenceRanges=this.currentTokens.filter((token)=>token.type==="REFERENCE").map((token)=>this.getters.getRangeFromSheetXC(editionSheetId,token.value));return referenceRanges.filter((range)=>!range.invalidSheetName&&!range.invalidXc);}
get autocompleteProvider(){const content=this.currentContent;const tokenAtCursor=content.startsWith("=")?this.tokenAtCursor:{type:"STRING",value:content};if(this.editionMode==="inactive"||!tokenAtCursor||["TRUE","FALSE"].includes(tokenAtCursor.value.toUpperCase())||!(this.canStartComposerRangeSelection()||["SYMBOL","STRING","UNKNOWN"].includes(tokenAtCursor.type))){return;}
const thisCtx={composer:this,getters:this.getters};const providersDefinitions=this.getAutoCompleteProviders();const providers=providersDefinitions.sort((a,b)=>(a.sequence??Infinity)-(b.sequence??Infinity)).map((provider)=>({...provider,getProposals:provider.getProposals.bind(thisCtx,tokenAtCursor,content),selectProposal:provider.selectProposal.bind(thisCtx,tokenAtCursor),}));for(const provider of providers){let proposals=provider.getProposals();const exactMatch=proposals?.find((p)=>p.text===tokenAtCursor.value);const searchTerm=tokenAtCursor.value.replace(/[ ,\(\)]/g,"");if(exactMatch&&this._currentContent!==this.initialContent){return;}
if(searchTerm&&proposals&&!["ARG_SEPARATOR","LEFT_PAREN","OPERATOR"].includes(tokenAtCursor.type)){const filteredProposals=fuzzyLookup(searchTerm,proposals,(p)=>p.fuzzySearchKey||p.text);if(!exactMatch||filteredProposals.length>1){proposals=filteredProposals;}}
if(provider.maxDisplayedProposals){proposals=proposals?.slice(0,provider.maxDisplayedProposals);}
if(proposals?.length){return{proposals,selectProposal:provider.selectProposal,autoSelectFirstProposal:provider.autoSelectFirstProposal??false,};}}
return;}
canStartComposerRangeSelection(){if(this._currentContent.startsWith("=")){const tokenAtCursor=this.tokenAtCursor;if(!tokenAtCursor){return false;}
const tokenIdex=this.currentTokens.map((token)=>token.start).indexOf(tokenAtCursor.start);let count=tokenIdex;let currentToken=tokenAtCursor;while(!["ARG_SEPARATOR","LEFT_PAREN","OPERATOR"].includes(currentToken.type)||POSTFIX_UNARY_OPERATORS.includes(currentToken.value)){if(currentToken.type!=="SPACE"||count<1){return false;}
count--;currentToken=this.currentTokens[count];}
count=tokenIdex+1;currentToken=this.currentTokens[count];while(currentToken&&!["ARG_SEPARATOR","RIGHT_PAREN","OPERATOR"].includes(currentToken.type)){if(currentToken.type!=="SPACE"){return false;}
count++;currentToken=this.currentTokens[count];}
return true;}
return false;}}
class StandaloneComposerStore extends AbstractComposerStore{args;constructor(get,args){super(get);this.args=args;this._currentContent=this.getComposerContent();}
getAutoCompleteProviders(){const providersDefinitions=super.getAutoCompleteProviders();const contextualAutocomplete=this.args().contextualAutocomplete;if(contextualAutocomplete){providersDefinitions.push(contextualAutocomplete);}
return providersDefinitions;}
getComposerContent(){if(this.editionMode==="inactive"){const defaultRangeSheetId=this.args().defaultRangeSheetId;return rangeTokenize(this.args().content).map((token)=>{if(token.type==="REFERENCE"){const range=this.getters.getRangeFromSheetXC(defaultRangeSheetId,token.value);return this.getters.getRangeString(range,this.getters.getActiveSheetId());}
return token.value;}).join("");}
return this._currentContent;}
stopEdition(){this._stopEdition();}
confirmEdition(content){this.args().onConfirm(content);}}
css`
  .o-spreadsheet {
    .o-standalone-composer {
      min-height: 24px;
      box-sizing: border-box;

      border-bottom: 1px solid;
      border-color: ${GRAY_300};

      &.active {
        border-color: ${SELECTION_BORDER_COLOR};
      }

      &.o-invalid {
        border-bottom: 2px solid red;
      }

      /* As the standalone composer is potentially very small (eg. in a side panel), we remove the scrollbar display */
      scrollbar-width: none; /* Firefox */
      &::-webkit-scrollbar {
        display: none;
      }
    }
  }
`;class StandaloneComposer extends Component{static template="o-spreadsheet-StandaloneComposer";static props={composerContent:{type:String,optional:true},defaultRangeSheetId:{type:String,optional:true},onConfirm:Function,contextualAutocomplete:{type:Object,optional:true},placeholder:{type:String,optional:true},class:{type:String,optional:true},invalid:{type:Boolean,optional:true},};static components={Composer};static defaultProps={composerContent:"",};composerFocusStore;standaloneComposerStore;composerInterface;spreadsheetRect=useSpreadsheetRect();setup(){this.composerFocusStore=useStore(ComposerFocusStore);const standaloneComposerStore=useLocalStore(StandaloneComposerStore,()=>({onConfirm:this.props.onConfirm,content:this.props.composerContent,contextualAutocomplete:this.props.contextualAutocomplete,defaultRangeSheetId:this.props.defaultRangeSheetId,}));this.standaloneComposerStore=standaloneComposerStore;this.composerInterface={id:"standaloneComposer",get editionMode(){return standaloneComposerStore.editionMode;},startEdition:this.standaloneComposerStore.startEdition,setCurrentContent:this.standaloneComposerStore.setCurrentContent,stopEdition:this.standaloneComposerStore.stopEdition,};}
get focus(){return this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";}
get composerStyle(){return this.props.invalid?cssPropertiesToCss({padding:"1px 0px 0px 0px"}):cssPropertiesToCss({padding:"1px 0px"});}
get containerClass(){const classes=[this.focus==="inactive"?"":"active",this.props.invalid?"o-invalid":"",this.props.class||"",];return classes.join(" ");}
onFocus(selection){this.composerFocusStore.focusComposer(this.composerInterface,{selection});}}
css`
  .o-icon-picker {
    position: absolute;
    z-index: ${ComponentsImportance.IconPicker};
    box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);
    background-color: white;
    padding: 2px 1px;
  }
  .o-cf-icon-line {
    display: flex;
    padding: 0 6px;
  }
  .o-icon-picker-item {
    cursor: pointer;
    &:hover {
      background-color: ${BADGE_SELECTED_COLOR};
      outline: ${ACTION_COLOR} solid 1px;
    }
  }
`;class IconPicker extends Component{static template="o-spreadsheet-IconPicker";static props={onIconPicked:Function,};icons=ICONS;iconSets=ICON_SETS;onIconClick(icon){if(icon){this.props.onIconPicked(icon);}}}
function useDragAndDropListItems(){let dndHelper;const previousCursor=document.body.style.cursor;let cleanupFns=[];const cleanUp=()=>{dndHelper=undefined;document.body.style.cursor=previousCursor;cleanupFns.forEach((fn)=>fn());cleanupFns=[];};const start=(direction,args)=>{const onChange=()=>{document.body.style.cursor="move";if(!dndHelper)
return;Object.assign(state.itemsStyle,dndHelper.getItemStyles());args.onChange?.();};state.cancel=()=>{state.draggedItemId=undefined;state.itemsStyle={};document.body.style.cursor=previousCursor;args.onCancel?.();cleanUp();};const onDragEnd=(itemId,indexAtEnd)=>{state.draggedItemId=undefined;state.itemsStyle={};document.body.style.cursor=previousCursor;args.onDragEnd?.(itemId,indexAtEnd);cleanUp();};document.body.style.cursor="move";state.draggedItemId=args.draggedItemId;const container=direction==="horizontal"?new HorizontalContainer(args.containerEl):new VerticalContainer(args.containerEl);dndHelper=new DOMDndHelper({...args,container,onChange,onDragEnd,onCancel:state.cancel,});const stopListening=startDnd(dndHelper.onMouseMove.bind(dndHelper),dndHelper.onMouseUp.bind(dndHelper));cleanupFns.push(stopListening);const onScroll=dndHelper.onScroll.bind(dndHelper);args.containerEl.addEventListener("scroll",onScroll);cleanupFns.push(()=>args.containerEl.removeEventListener("scroll",onScroll));cleanupFns.push(dndHelper.destroy.bind(dndHelper));};onWillUnmount(()=>{cleanUp();});const state=useState({itemsStyle:{},draggedItemId:undefined,start,cancel:()=>{},});return state;}
class DOMDndHelper{draggedItemId;items;container;initialMousePosition;currentMousePosition;initialScroll;minPosition;maxPosition;edgeScrollIntervalId;onChange;onCancel;onDragEnd;deadZone;constructor(args){this.items=args.items.map((item)=>({...item,positionAtStart:item.position}));this.draggedItemId=args.draggedItemId;this.container=args.container;this.onChange=args.onChange;this.onCancel=args.onCancel;this.onDragEnd=args.onDragEnd;this.initialMousePosition=args.initialMousePosition;this.currentMousePosition=args.initialMousePosition;this.initialScroll=this.container.scroll;this.minPosition=this.items[0].position;this.maxPosition=this.items[this.items.length-1].position+this.items[this.items.length-1].size;}
getItemStyles(){const styles={};for(let item of this.items){styles[item.id]=this.getItemStyle(item.id);}
return styles;}
getItemStyle(itemId){const position=this.container.cssPositionProperty;const style={};style.position="relative";style[position]=(this.getItemsPositions()[itemId]||0)+"px";style.transition=`${position} 0.5s`;style["pointer-events"]="none";if(this.draggedItemId===itemId){style.transition=`${position} 0s`;style["z-index"]="1000";}
return cssPropertiesToCss(style);}
onScroll(){this.moveDraggedItemToPosition(this.currentMousePosition+this.scrollOffset);}
onMouseMove(ev){if(ev.button>1){this.onCancel();return;}
const mousePosition=this.container.getMousePosition(ev);this.currentMousePosition=mousePosition;if(mousePosition<this.container.start||mousePosition>this.container.end){this.startEdgeScroll(mousePosition<this.container.start?-1:1);return;}
else{this.stopEdgeScroll();}
this.moveDraggedItemToPosition(mousePosition+this.scrollOffset);}
moveDraggedItemToPosition(position){const hoveredItemIndex=this.getHoveredItemIndex(position,this.items);const draggedItemIndex=this.items.findIndex((item)=>item.id===this.draggedItemId);const draggedItem=this.items[draggedItemIndex];if(this.deadZone&&this.isInZone(position,this.deadZone)){this.onChange(this.getItemsPositions());return;}
else if(this.isInZone(position,{start:draggedItem.position,end:draggedItem.position+draggedItem.size,})){this.deadZone=undefined;}
if(draggedItemIndex===hoveredItemIndex){this.onChange(this.getItemsPositions());return;}
const startIndex=Math.min(draggedItemIndex,hoveredItemIndex);const endIndex=Math.max(draggedItemIndex,hoveredItemIndex);const direction=Math.sign(hoveredItemIndex-draggedItemIndex);let draggedItemMoveSize=0;for(let i=startIndex;i<=endIndex;i++){if(i===draggedItemIndex){continue;}
this.items[i].position-=direction*draggedItem.size;draggedItemMoveSize+=this.items[i].size;}
draggedItem.position+=direction*draggedItemMoveSize;this.items.sort((item1,item2)=>item1.position-item2.position);this.deadZone=direction>0?{start:position,end:draggedItem.position}:{start:draggedItem.position+draggedItem.size,end:position};this.onChange(this.getItemsPositions());}
onMouseUp(ev){if(ev.button!==0){this.onCancel();}
ev.stopPropagation();ev.preventDefault();const targetItemIndex=this.items.findIndex((item)=>item.id===this.draggedItemId);this.onDragEnd(this.draggedItemId,targetItemIndex);this.stopEdgeScroll();return false;}
startEdgeScroll(direction){if(this.edgeScrollIntervalId)
return;this.edgeScrollIntervalId=window.setInterval(()=>{const offset=direction*3;let newPosition=this.currentMousePosition+offset;if(newPosition<Math.min(this.container.start,this.minPosition)){newPosition=Math.min(this.container.start,this.minPosition);}
else if(newPosition>Math.max(this.container.end,this.maxPosition)){newPosition=Math.max(this.container.end,this.maxPosition);}
this.container.scroll+=offset;},5);}
stopEdgeScroll(){window.clearInterval(this.edgeScrollIntervalId);this.edgeScrollIntervalId=undefined;}
getHoveredItemIndex(mousePosition,items){if(mousePosition<=this.minPosition)
return 0;if(mousePosition>=this.maxPosition)
return items.length-1;return items.findIndex((item)=>item.position+item.size>=mousePosition);}
getItemsPositions(){const positions={};for(let item of this.items){if(item.id!==this.draggedItemId){positions[item.id]=item.position-item.positionAtStart;continue;}
const mouseOffset=this.currentMousePosition-this.initialMousePosition;let start=mouseOffset+this.scrollOffset;start=Math.max(this.minPosition-item.positionAtStart,start);start=Math.min(this.maxPosition-item.positionAtStart-item.size,start);positions[item.id]=start;}
return positions;}
isInZone(position,zone){return position>=zone.start&&position<=zone.end;}
get scrollOffset(){return this.container.scroll-this.initialScroll;}
destroy(){this.stopEdgeScroll();}}
class ContainerWrapper{el;constructor(el){this.el=el;}
get containerRect(){return this.el.getBoundingClientRect();}}
class VerticalContainer extends ContainerWrapper{get start(){return this.containerRect.top;}
get end(){return this.containerRect.bottom;}
get cssPositionProperty(){return"top";}
get scroll(){return this.el.scrollTop;}
set scroll(scroll){this.el.scrollTop=scroll;}
getMousePosition(ev){return ev.clientY;}}
class HorizontalContainer extends ContainerWrapper{get start(){return this.containerRect.left;}
get end(){return this.containerRect.right;}
get cssPositionProperty(){return"left";}
get scroll(){return this.el.scrollLeft;}
set scroll(scroll){this.el.scrollLeft=scroll;}
getMousePosition(ev){return ev.clientX;}}
function useRefListener(ref,...listener){useEffect((el)=>{el?.addEventListener(...listener);return()=>el?.removeEventListener(...listener);},()=>[ref.el]);}
function useHoveredElement(ref){const state=useState({hovered:false});useRefListener(ref,"mouseenter",()=>(state.hovered=true));useRefListener(ref,"mouseleave",()=>(state.hovered=false));return state;}
function useHighlightsOnHover(ref,highlightProvider){const hoverState=useHoveredElement(ref);useHighlights({get highlights(){return hoverState.hovered?highlightProvider.highlights:[];},});}
function useHighlights(highlightProvider){const stores=useStoreProvider();const store=useLocalStore(HighlightStore);onMounted(()=>{store.register(highlightProvider);});let currentHighlights=highlightProvider.highlights;useEffect((highlights)=>{if(!deepEquals(highlights,currentHighlights)){currentHighlights=highlights;stores.trigger("store-updated");}},()=>[highlightProvider.highlights]);}
css`
  .o-cf-preview {
    &.o-cf-cursor-ptr {
      cursor: pointer;
    }

    border-bottom: 1px solid ${GRAY_300};
    height: 60px;
    padding: 10px;
    position: relative;
    cursor: pointer;
    &:hover,
    &.o-cf-dragging {
      background-color: ${GRAY_200};
    }

    &:not(:hover) .o-cf-delete-button {
      display: none;
    }
    .o-cf-preview-icon {
      border: 1px solid ${GRAY_300};
      background-color: #fff;
      position: absolute;
      height: 50px;
      width: 50px;
      .o-icon {
        width: ${CF_ICON_EDGE_LENGTH}px;
        height: ${CF_ICON_EDGE_LENGTH}px;
      }
    }
    .o-cf-preview-description {
      left: 65px;
      margin-bottom: auto;
      margin-right: 8px;
      margin-top: auto;
      position: relative;
      width: 142px;
      .o-cf-preview-description-rule {
        margin-bottom: 4px;
        font-weight: 600;
        max-height: 2.8em;
        line-height: 1.4em;
      }
      .o-cf-preview-range {
        font-size: 12px;
      }
    }
    .o-cf-delete {
      left: 90%;
      top: 39%;
      position: absolute;
    }
    &:not(:hover):not(.o-cf-dragging) .o-cf-drag-handle {
      display: none !important;
    }
    .o-cf-drag-handle {
      left: -8px;
      cursor: move;
      .o-icon {
        width: 6px;
        height: 30px;
      }
    }

    .o-icon.arrow-down {
      color: #e06666;
    }
    .o-icon.arrow-up {
      color: #6aa84f;
    }
  }
`;class ConditionalFormatPreview extends Component{static template="o-spreadsheet-ConditionalFormatPreview";icons=ICONS;ref=useRef("cfPreview");setup(){useHighlightsOnHover(this.ref,this);}
getPreviewImageStyle(){const rule=this.props.conditionalFormat.rule;if(rule.type==="CellIsRule"){return cssPropertiesToCss(cellStyleToCss(rule.style));}
else if(rule.type==="ColorScaleRule"){const minColor=colorNumberString(rule.minimum.color);const midColor=rule.midpoint?colorNumberString(rule.midpoint.color):null;const maxColor=colorNumberString(rule.maximum.color);const baseString="background-image: linear-gradient(to right, ";return midColor?baseString+minColor+", "+midColor+", "+maxColor+")":baseString+minColor+", "+maxColor+")";}
else if(rule.type==="DataBarRule"){const color=colorNumberString(rule.color);return`background-image: linear-gradient(to right, ${color} 50%, white 50%)`;}
return"";}
getDescription(){const cf=this.props.conditionalFormat;switch(cf.rule.type){case"CellIsRule":const description=CellIsOperators[cf.rule.operator];if(cf.rule.values.length===1){return`${description} ${cf.rule.values[0]}`;}
if(cf.rule.values.length===2){return _t("%s %s and %s",description,cf.rule.values[0],cf.rule.values[1]);}
return description;case"ColorScaleRule":return CfTerms.ColorScale;case"IconSetRule":return CfTerms.IconSet;case"DataBarRule":return CfTerms.DataBar;}}
deleteConditionalFormat(){this.env.model.dispatch("REMOVE_CONDITIONAL_FORMAT",{id:this.props.conditionalFormat.id,sheetId:this.env.model.getters.getActiveSheetId(),});}
onMouseDown(event){this.props.onMouseDown(event);}
get highlights(){const sheetId=this.env.model.getters.getActiveSheetId();return this.props.conditionalFormat.ranges.map((range)=>({sheetId,zone:this.env.model.getters.getRangeFromSheetXC(sheetId,range).zone,color:HIGHLIGHT_COLOR,fillAlpha:0.06,}));}}
ConditionalFormatPreview.props={conditionalFormat:Object,onPreviewClick:Function,onMouseDown:Function,class:String,};class ConditionalFormatPreviewList extends Component{static template="o-spreadsheet-ConditionalFormatPreviewList";static props={conditionalFormats:Array,onPreviewClick:Function,onAddConditionalFormat:Function,};static components={ConditionalFormatPreview};icons=ICONS;dragAndDrop=useDragAndDropListItems();cfListRef=useRef("cfList");setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(this.props.conditionalFormats,nextProps.conditionalFormats)){this.dragAndDrop.cancel();}});}
getPreviewDivStyle(cf){return this.dragAndDrop.itemsStyle[cf.id]||"";}
onPreviewMouseDown(cf,event){if(event.button!==0)
return;const previewRects=Array.from(this.cfListRef.el.children).map((previewEl)=>getBoundingRectAsPOJO(previewEl));const items=this.props.conditionalFormats.map((cf,index)=>({id:cf.id,size:previewRects[index].height,position:previewRects[index].y,}));this.dragAndDrop.start("vertical",{draggedItemId:cf.id,initialMousePosition:event.clientY,items:items,containerEl:this.cfListRef.el,onDragEnd:(cfId,finalIndex)=>this.onDragEnd(cfId,finalIndex),});}
onDragEnd(cfId,finalIndex){const originalIndex=this.props.conditionalFormats.findIndex((sheet)=>sheet.id===cfId);const delta=originalIndex-finalIndex;if(delta!==0){this.env.model.dispatch("CHANGE_CONDITIONAL_FORMAT_PRIORITY",{cfId,delta,sheetId:this.env.model.getters.getActiveSheetId(),});}}}
css`
  .o-cf-ruleEditor {
    .o-cf-preview-display {
      border: 1px solid ${GRAY_300};
      padding: 10px;
    }

    .o-cf-cell-is-rule {
      .o-divider {
        border-right: 1px solid ${GRAY_300};
        margin: 4px 6px;
      }
    }
    .o-cf-color-scale-editor {
      .o-threshold {
        .o-select-with-input {
          max-width: 150px;
        }
        .o-threshold-value {
          flex-grow: 1;
          flex-basis: 60%;
          min-width: 0px; // input overflows in Firefox otherwise
        }
        .o-threshold-value input:disabled {
          background-color: #edebed;
        }
      }
    }
    .o-cf-iconset-rule {
      .o-cf-clickable-icon {
        border: 1px solid ${GRAY_200};
        border-radius: 4px;
        cursor: pointer;
        &:hover {
          border-color: ${ACTION_COLOR};
          background-color: ${BADGE_SELECTED_COLOR};
        }
        .o-icon {
          width: ${CF_ICON_EDGE_LENGTH}px;
          height: ${CF_ICON_EDGE_LENGTH}px;
        }
      }
      .o-cf-iconsets {
        gap: 11px;
        .o-cf-iconset {
          padding: 7px 8px;
          width: 95px;
          .o-icon {
            margin: 0 3px;
          }
          svg {
            vertical-align: baseline;
          }
        }
      }
      .o-inflection {
        .o-cf-icon-button {
          padding: 4px 10px;
        }
        table {
          font-size: 13px;
          td {
            padding: 6px 0;
          }

          th.o-cf-iconset-icons {
            width: 25px;
          }
          th.o-cf-iconset-text {
            width: 82px;
          }
          th.o-cf-iconset-operator {
            width: 20px;
          }
          .o-cf-iconset-type {
            min-width: 80px;
          }
        }
      }
    }

    .o-icon.arrow-down {
      color: #e06666;
    }
    .o-icon.arrow-up {
      color: #6aa84f;
    }
  }
`;class ConditionalFormattingEditor extends Component{static template="o-spreadsheet-ConditionalFormattingEditor";static props={editedCf:{type:Object,optional:true},onExitEdition:Function,};static components={SelectionInput,IconPicker,ColorPickerWidget,ConditionalFormatPreviewList,Section,RoundColorPicker,StandaloneComposer:StandaloneComposer,BadgeSelection,ValidationMessages,};icons=ICONS;cellIsOperators=CellIsOperators;iconSets=ICON_SETS;getTextDecoration=getTextDecoration;colorNumberString=colorNumberString;state;setup(){const cf=this.props.editedCf||{id:this.env.model.uuidGenerator.uuidv4(),ranges:this.env.model.getters.getSelectedZones().map((zone)=>this.env.model.getters.zoneToXC(this.env.model.getters.getActiveSheetId(),zone)),};this.state=useState({currentCF:cf,currentCFType:this.props.editedCf?.rule.type||"CellIsRule",errors:[],rules:this.getDefaultRules(),});if(this.props.editedCf){switch(this.props.editedCf.rule.type){case"CellIsRule":this.state.rules.cellIs=this.props.editedCf.rule;break;case"ColorScaleRule":this.state.rules.colorScale=this.props.editedCf.rule;break;case"IconSetRule":this.state.rules.iconSet=this.props.editedCf.rule;break;case"DataBarRule":this.state.rules.dataBar=this.props.editedCf.rule;break;}}
useExternalListener(window,"click",this.closeMenus);}
get isRangeValid(){return this.state.errors.includes("EmptyRange");}
get errorMessages(){return this.state.errors.map((error)=>CfTerms.Errors[error]||CfTerms.Errors.Unexpected);}
get cfTypesValues(){return[{value:"CellIsRule",label:_t("Single color")},{value:"ColorScaleRule",label:_t("Color scale")},{value:"IconSetRule",label:_t("Icon set")},{value:"DataBarRule",label:_t("Data bar")},];}
saveConditionalFormat(){if(this.state.currentCF){const invalidRanges=this.state.currentCF.ranges.some((xc)=>!xc.match(rangeReference));if(invalidRanges){this.state.errors=["InvalidRange"];return;}
const sheetId=this.env.model.getters.getActiveSheetId();const locale=this.env.model.getters.getLocale();const result=this.env.model.dispatch("ADD_CONDITIONAL_FORMAT",{cf:{rule:canonicalizeCFRule(this.getEditorRule(),locale),id:this.state.currentCF.id,},ranges:this.state.currentCF.ranges.map((xc)=>this.env.model.getters.getRangeDataFromXc(sheetId,xc)),sheetId,});if(!result.isSuccessful){this.state.errors=result.reasons;}
else{this.props.onExitEdition();}}}
getEditorRule(){switch(this.state.currentCFType){case"CellIsRule":return this.state.rules.cellIs;case"ColorScaleRule":return this.state.rules.colorScale;case"IconSetRule":return this.state.rules.iconSet;case"DataBarRule":return this.state.rules.dataBar;}}
getDefaultRules(){return{cellIs:{type:"CellIsRule",operator:"IsNotEmpty",values:[],style:{fillColor:"#b6d7a8"},},colorScale:{type:"ColorScaleRule",minimum:{type:"value",color:0xffffff},midpoint:undefined,maximum:{type:"value",color:0x6aa84f},},iconSet:{type:"IconSetRule",icons:{upper:"arrowGood",middle:"arrowNeutral",lower:"arrowBad",},upperInflectionPoint:{type:"percentage",value:"66",operator:"gt",},lowerInflectionPoint:{type:"percentage",value:"33",operator:"gt",},},dataBar:{type:"DataBarRule",color:0xd9ead3,},};}
changeRuleType(ruleType){if(this.state.currentCFType===ruleType||!this.state.rules){return;}
this.state.errors=[];this.state.currentCFType=ruleType;}
onRangesChanged(ranges){if(this.state.currentCF){this.state.currentCF.ranges=ranges;}}
toggleMenu(menu){const isSelected=this.state.openedMenu===menu;this.closeMenus();if(!isSelected){this.state.openedMenu=menu;}}
closeMenus(){this.state.openedMenu=undefined;}
get isValue1Invalid(){return(this.state.errors.includes("FirstArgMissing")||this.state.errors.includes("ValueCellIsInvalidFormula"));}
get isValue2Invalid(){return this.state.errors.includes("SecondArgMissing");}
toggleStyle(tool){const style=this.state.rules.cellIs.style;style[tool]=!style[tool];this.closeMenus();}
onKeydown(event){if(event.key==="F4"){const target=event.target;const update=cycleFixedReference({start:target.selectionStart??0,end:target.selectionEnd??0},target.value,this.env.model.getters.getLocale());if(!update){return;}
target.value=update.content;target.setSelectionRange(update.selection.start,update.selection.end);target.dispatchEvent(new Event("input"));}}
setColor(target,color){this.state.rules.cellIs.style[target]=color;this.closeMenus();}
isValueInvalid(threshold){switch(threshold){case"minimum":return(this.state.errors.includes("MinInvalidFormula")||this.state.errors.includes("MinBiggerThanMid")||this.state.errors.includes("MinBiggerThanMax")||this.state.errors.includes("MinNaN"));case"midpoint":return(this.state.errors.includes("MidInvalidFormula")||this.state.errors.includes("MidNaN")||this.state.errors.includes("MidBiggerThanMax"));case"maximum":return(this.state.errors.includes("MaxInvalidFormula")||this.state.errors.includes("MaxNaN"));default:return false;}}
setColorScaleColor(target,color){const point=this.state.rules.colorScale[target];if(point){point.color=Number.parseInt(color.substr(1),16);}
this.closeMenus();}
getPreviewGradient(){const rule=this.state.rules.colorScale;const minColor=colorNumberString(rule.minimum.color);const midColor=colorNumberString(rule.midpoint?.color||DEFAULT_COLOR_SCALE_MIDPOINT_COLOR);const maxColor=colorNumberString(rule.maximum.color);const baseString="background-image: linear-gradient(to right, ";return rule.midpoint===undefined?baseString+minColor+", "+maxColor+")":baseString+minColor+", "+midColor+", "+maxColor+")";}
getThresholdColor(threshold){return threshold?colorNumberString(threshold.color):colorNumberString(DEFAULT_COLOR_SCALE_MIDPOINT_COLOR);}
onMidpointChange(ev){const type=ev.target.value;const rule=this.state.rules.colorScale;if(type==="none"){rule.midpoint=undefined;}
else{rule.midpoint={color:DEFAULT_COLOR_SCALE_MIDPOINT_COLOR,value:"",...rule.midpoint,type,};}}
isInflectionPointInvalid(inflectionPoint){switch(inflectionPoint){case"lowerInflectionPoint":return(this.state.errors.includes("ValueLowerInflectionNaN")||this.state.errors.includes("ValueLowerInvalidFormula")||this.state.errors.includes("LowerBiggerThanUpper"));case"upperInflectionPoint":return(this.state.errors.includes("ValueUpperInflectionNaN")||this.state.errors.includes("ValueUpperInvalidFormula")||this.state.errors.includes("LowerBiggerThanUpper"));default:return true;}}
reverseIcons(){const icons=this.state.rules.iconSet.icons;const upper=icons.upper;icons.upper=icons.lower;icons.lower=upper;}
setIconSet(iconSet){const icons=this.state.rules.iconSet.icons;icons.upper=this.iconSets[iconSet].good;icons.middle=this.iconSets[iconSet].neutral;icons.lower=this.iconSets[iconSet].bad;}
setIcon(target,icon){this.state.rules.iconSet.icons[target]=icon;}
getCellIsRuleComposerProps(valueIndex){const isInvalid=valueIndex===0?this.isValue1Invalid:this.isValue2Invalid;return{onConfirm:(str)=>(this.state.rules.cellIs.values[valueIndex]=str),composerContent:this.state.rules.cellIs.values[valueIndex],placeholder:_t("Value or formula"),invalid:isInvalid,class:"o-sidePanel-composer",defaultRangeSheetId:this.env.model.getters.getActiveSheetId(),};}
getColorScaleComposerProps(thresholdType){const threshold=this.state.rules.colorScale[thresholdType];if(!threshold){throw new Error("Threshold not found");}
const isInvalid=this.isValueInvalid(thresholdType);return{onConfirm:(str)=>(threshold.value=str),composerContent:threshold.value||"",placeholder:_t("Formula"),invalid:isInvalid,class:"o-sidePanel-composer",defaultRangeSheetId:this.env.model.getters.getActiveSheetId(),};}
getColorIconSetComposerProps(inflectionPoint){const inflection=this.state.rules.iconSet[inflectionPoint];const isInvalid=this.isInflectionPointInvalid(inflectionPoint);return{onConfirm:(str)=>(inflection.value=str),composerContent:inflection.value||"",placeholder:_t("Formula"),invalid:isInvalid,class:"o-sidePanel-composer",defaultRangeSheetId:this.env.model.getters.getActiveSheetId(),};}
getRangeValues(){return[this.state.rules.dataBar.rangeValues||""];}
updateDataBarColor(color){this.state.rules.dataBar.color=Number.parseInt(color.substr(1),16);}
onDataBarRangeUpdate(ranges){this.state.rules.dataBar.rangeValues=ranges[0];}}
class ConditionalFormattingPanel extends Component{static template="o-spreadsheet-ConditionalFormattingPanel";static props={selection:{type:Object,optional:true},onCloseSidePanel:Function,};static components={ConditionalFormatPreviewList,ConditionalFormattingEditor,};activeSheetId;state=useState({mode:"list",});setup(){this.activeSheetId=this.env.model.getters.getActiveSheetId();const sheetId=this.env.model.getters.getActiveSheetId();const rules=this.env.model.getters.getRulesSelection(sheetId,this.props.selection||[]);if(rules.length===1){const cf=this.conditionalFormats.find((c)=>c.id===rules[0]);if(cf){this.editConditionalFormat(cf);}}
onWillUpdateProps((nextProps)=>{const newActiveSheetId=this.env.model.getters.getActiveSheetId();if(newActiveSheetId!==this.activeSheetId){this.activeSheetId=newActiveSheetId;this.switchToList();}
else if(nextProps.selection!==this.props.selection){const sheetId=this.env.model.getters.getActiveSheetId();const rules=this.env.model.getters.getRulesSelection(sheetId,nextProps.selection||[]);if(rules.length===1){const cf=this.conditionalFormats.find((c)=>c.id===rules[0]);if(cf){this.editConditionalFormat(cf);}}
else{this.switchToList();}}});}
get conditionalFormats(){const cfs=this.env.model.getters.getConditionalFormats(this.env.model.getters.getActiveSheetId());return cfs.map((cf)=>({...cf,rule:localizeCFRule(cf.rule,this.env.model.getters.getLocale()),}));}
switchToList(){this.state.mode="list";this.state.editedCf=undefined;}
addConditionalFormat(){this.state.mode="edit";}
editConditionalFormat(cf){this.state.mode="edit";this.state.editedCf=cf;}}
css`
  .o-custom-currency {
    .o-format-proposals {
      color: black;
    }

    .o-format-examples {
      background: #f9fafb;
      padding: 8px;
      border-radius: 4px;
      border: 1px solid #d8dadd;
      color: #374151;
    }
  }
`;class CustomCurrencyPanel extends Component{static template="o-spreadsheet-CustomCurrencyPanel";static components={Section,Checkbox};static props={onCloseSidePanel:Function};availableCurrencies;state;setup(){this.availableCurrencies=[];this.state=useState({selectedCurrencyIndex:0,currencyCode:"",currencySymbol:"",selectedFormatIndex:0,isAccountingFormat:false,});onWillStart(()=>this.updateAvailableCurrencies());}
get formatProposals(){const baseCurrency=this.availableCurrencies[this.state.selectedCurrencyIndex];const position=baseCurrency.position;const opposite=baseCurrency.position==="before"?"after":"before";const symbol=this.state.currencySymbol.trim()?this.state.currencySymbol:"";const code=this.state.currencyCode.trim()?this.state.currencyCode:"";const decimalPlaces=baseCurrency.decimalPlaces;if(!symbol&&!code){return[];}
const simple={symbol,position,decimalPlaces};const rounded={symbol,position,decimalPlaces:0};const simpleWithCode={symbol,position,decimalPlaces,code};const roundedWithCode={symbol,position,decimalPlaces:0,code};const simpleOpposite={symbol,position:opposite,decimalPlaces};const roundedOpposite={symbol,position:opposite,decimalPlaces:0};const simpleOppositeWithCode={symbol,position:opposite,decimalPlaces,code};const roundedOppositeWithCode={symbol,position:opposite,decimalPlaces:0,code};const currencies=[rounded,simple,roundedWithCode,simpleWithCode,roundedOpposite,simpleOpposite,roundedOppositeWithCode,simpleOppositeWithCode,];const usedFormats=new Set();const locale=this.env.model.getters.getLocale();return currencies.map((currency)=>{const format=createCurrencyFormat(currency);if((!currency.symbol&&!currency.code)||usedFormats.has(format)){return undefined;}
usedFormats.add(format);return{format,accountingFormat:createAccountingFormat(currency),example:formatValue(1000.0,{format,locale}),};}).filter(isDefined);}
get isSameFormat(){return this.selectedFormat?this.selectedFormat===this.getCommonFormat():false;}
async updateAvailableCurrencies(){if(currenciesRegistry.getAll().length===0){const currencies=(await this.env.loadCurrencies?.())||[];currencies.forEach((currency,index)=>{currenciesRegistry.add(index.toString(),currency);});}
const emptyCurrency={name:_t(CustomCurrencyTerms.Custom),code:"",symbol:"",decimalPlaces:2,position:"after",};this.availableCurrencies=[emptyCurrency,...currenciesRegistry.getAll()];}
updateSelectCurrency(ev){const target=ev.target;this.state.selectedCurrencyIndex=parseInt(target.value,10);const currency=this.availableCurrencies[this.state.selectedCurrencyIndex];this.state.currencyCode=currency.code;this.state.currencySymbol=currency.symbol;}
updateCode(ev){const target=ev.target;this.state.currencyCode=target.value;this.initAvailableCurrencies();}
updateSymbol(ev){const target=ev.target;this.state.currencySymbol=target.value;this.initAvailableCurrencies();}
updateSelectFormat(ev){const target=ev.target;this.state.selectedFormatIndex=parseInt(target.value,10);}
apply(){this.env.model.dispatch("SET_FORMATTING_WITH_PIVOT",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),format:this.selectedFormat,});}
initAvailableCurrencies(){this.state.selectedCurrencyIndex=0;}
getCommonFormat(){const selectedZones=this.env.model.getters.getSelectedZones();const sheetId=this.env.model.getters.getActiveSheetId();const cells=selectedZones.map((zone)=>this.env.model.getters.getEvaluatedCellsInZone(sheetId,zone)).flat();const firstFormat=cells[0].format;return cells.every((cell)=>cell.format===firstFormat)?firstFormat:undefined;}
currencyDisplayName(currency){return currency.name+(currency.code?` (${currency.code})`:"");}
toggleAccountingFormat(){this.state.isAccountingFormat=!this.state.isAccountingFormat;}
getFormatExamples(){const format=this.selectedFormat;const locale=this.env.model.getters.getLocale();return[{label:_t("positive")+":",value:formatValue(1234.56,{format,locale})},{label:_t("negative")+":",value:formatValue(-1234.56,{format,locale})},{label:_t("zero")+":",value:formatValue(0,{format,locale})},];}
get selectedFormat(){const proposal=this.formatProposals[this.state.selectedFormatIndex];return this.state.isAccountingFormat?proposal?.accountingFormat:proposal?.format;}}
const dataValidationEvaluatorRegistry=new Registry();dataValidationEvaluatorRegistry.add("textContains",{type:"textContains",isValueValid:(value,criterion)=>{const strValue=String(value);return strValue.toLowerCase().includes(criterion.values[0].toLowerCase());},getErrorString:(criterion)=>{return _t('The value must be a text that contains "%s"',criterion.values[0]);},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text contains"),getPreview:(criterion)=>_t('Text contains "%s"',criterion.values[0]),});dataValidationEvaluatorRegistry.add("textNotContains",{type:"textNotContains",isValueValid:(value,criterion)=>{const strValue=String(value);return!strValue.toLowerCase().includes(criterion.values[0].toLowerCase());},getErrorString:(criterion)=>{return _t('The value must be a text that does not contain "%s"',criterion.values[0]);},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text does not contains"),getPreview:(criterion)=>_t('Text does not contain "%s"',criterion.values[0]),});dataValidationEvaluatorRegistry.add("textIs",{type:"textIs",isValueValid:(value,criterion)=>{const strValue=String(value);return strValue.toLowerCase()===criterion.values[0].toLowerCase();},getErrorString:(criterion)=>{return _t('The value must be exactly "%s"',criterion.values[0]);},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text is exactly"),getPreview:(criterion)=>_t('Text is exactly "%s"',criterion.values[0]),});const emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/;dataValidationEvaluatorRegistry.add("textIsEmail",{type:"textIsEmail",isValueValid:(value)=>typeof value==="string"&&emailRegex.test(value),getErrorString:()=>_t("The value must be a valid email address"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Text is valid email"),getPreview:()=>_t("Text is valid email"),});dataValidationEvaluatorRegistry.add("textIsLink",{type:"textIsLink",isValueValid:(value)=>detectLink(value)!==undefined,getErrorString:()=>_t("The value must be a valid link"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Text is valid link"),getPreview:()=>_t("Text is valid link"),});dataValidationEvaluatorRegistry.add("dateIs",{type:"dateIs",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);if(dateValue===undefined||criterionValue===undefined){return false;}
if(["lastWeek","lastMonth","lastYear"].includes(criterion.dateValue)){const today=jsDateToRoundNumber(DateTime.now());return isDateBetween(dateValue,today,criterionValue);}
return areDatesSameDay(dateValue,criterionValue);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be the date %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be %s",DVTerms.DateIs[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is %s",getDateCriterionFormattedValues(criterion,getters)[0]):_t("Date is %s",DVTerms.DateIs[criterion.dateValue]);},});dataValidationEvaluatorRegistry.add("dateIsBefore",{type:"dateIsBefore",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateStrictlyBefore(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date before %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date before %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is before"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is before %s",getDateCriterionFormattedValues(criterion,getters)[0]):_t("Date is before %s",DVTerms.DateIsBefore[criterion.dateValue]);},});dataValidationEvaluatorRegistry.add("dateIsOnOrBefore",{type:"dateIsOnOrBefore",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateBefore(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date on or before %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date on or before %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is on or before"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is on or before %s",getDateCriterionFormattedValues(criterion,getters)[0]):_t("Date is on or before %s",DVTerms.DateIsBefore[criterion.dateValue]);},});dataValidationEvaluatorRegistry.add("dateIsAfter",{type:"dateIsAfter",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateStrictlyAfter(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date after %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date after %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is after"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is after %s",getDateCriterionFormattedValues(criterion,getters)[0]):_t("Date is after %s",DVTerms.DateIsBefore[criterion.dateValue]);},});dataValidationEvaluatorRegistry.add("dateIsOnOrAfter",{type:"dateIsOnOrAfter",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateAfter(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date on or after %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date on or after %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is on or after"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is on or after %s",getDateCriterionFormattedValues(criterion,getters)[0]):_t("Date is on or after %s",DVTerms.DateIsBefore[criterion.dateValue]);},});dataValidationEvaluatorRegistry.add("dateIsBetween",{type:"dateIsBetween",isValueValid:(value,criterion)=>{const criterionValues=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE);const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);if(dateValue===undefined||criterionValues[0]===undefined||criterionValues[1]===undefined){return false;}
return isDateBetween(dateValue,criterionValues[0],criterionValues[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const criterionValues=getDateCriterionLocalizedValues(criterion,locale);return _t("The value must be a date between %s and %s",criterionValues[0],criterionValues[1]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:()=>2,name:_t("Date is between"),getPreview:(criterion,getters)=>{const values=getDateCriterionFormattedValues(criterion,getters);return _t("Date is between %s and %s",values[0],values[1]);},});dataValidationEvaluatorRegistry.add("dateIsNotBetween",{type:"dateIsNotBetween",isValueValid:(value,criterion)=>{const criterionValues=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE);const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);if(dateValue===undefined||criterionValues[0]===undefined||criterionValues[1]===undefined){return false;}
return!isDateBetween(dateValue,criterionValues[0],criterionValues[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const criterionValues=getDateCriterionLocalizedValues(criterion,locale);return _t("The value must be a date not between %s and %s",criterionValues[0],criterionValues[1]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:()=>2,name:_t("Date is not between"),getPreview:(criterion,getters)=>{const values=getDateCriterionFormattedValues(criterion,getters);return _t("Date is not between %s and %s",values[0],values[1]);},});dataValidationEvaluatorRegistry.add("dateIsValid",{type:"dateIsValid",isValueValid:(value)=>{return valueToDateNumber(value,DEFAULT_LOCALE)!==undefined;},getErrorString:()=>_t("The value must be a valid date"),isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Is valid date"),getPreview:()=>_t("Date is valid"),});dataValidationEvaluatorRegistry.add("isEqual",{type:"isEqual",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE)[0];if(criterionValue===undefined){return false;}
return value===criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is equal to"),getPreview:(criterion)=>_t("Value is equal to %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("isNotEqual",{type:"isNotEqual",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE)[0];if(criterionValue===undefined){return false;}
return value!==criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must not be equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is not equal to"),getPreview:(criterion)=>_t("Value is not equal to %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("isGreaterThan",{type:"isGreaterThan",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE)[0];if(criterionValue===undefined){return false;}
return value>criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be greater than %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is greater than"),getPreview:(criterion)=>_t("Value is greater than %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("isGreaterOrEqualTo",{type:"isGreaterOrEqualTo",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE)[0];if(criterionValue===undefined){return false;}
return value>=criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be greater or equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is greater or equal to"),getPreview:(criterion)=>_t("Value is greater or equal to %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("isLessThan",{type:"isLessThan",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE)[0];if(criterionValue===undefined){return false;}
return value<criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be less than %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is less than"),getPreview:(criterion)=>_t("Value is less than %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("isLessOrEqualTo",{type:"isLessOrEqualTo",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE)[0];if(criterionValue===undefined){return false;}
return value<=criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be less or equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is less or equal to"),getPreview:(criterion)=>_t("Value is less or equal to %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("isBetween",{type:"isBetween",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValues=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE);if(criterionValues[0]===undefined||criterionValues[1]===undefined){return false;}
return isNumberBetween(value,criterionValues[0],criterionValues[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be between %s and %s",values[0],values[1]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>2,name:_t("Is between"),getPreview:(criterion)=>_t("Value is between %s and %s",criterion.values[0],criterion.values[1]),});dataValidationEvaluatorRegistry.add("isNotBetween",{type:"isNotBetween",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValues=getCriterionValuesAsNumber(criterion,DEFAULT_LOCALE);if(criterionValues[0]===undefined||criterionValues[1]===undefined){return false;}
return!isNumberBetween(value,criterionValues[0],criterionValues[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must not be between %s and %s",values[0],values[1]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>2,name:_t("Is not between"),getPreview:(criterion)=>_t("Value is not between %s and %s",criterion.values[0],criterion.values[1]),});dataValidationEvaluatorRegistry.add("isBoolean",{type:"isBoolean",isValueValid:(value)=>value===""||typeof value==="boolean",getErrorString:()=>_t("The value must be a boolean"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Checkbox"),getPreview:()=>_t("Checkbox"),});dataValidationEvaluatorRegistry.add("isValueInList",{type:"isValueInList",isValueValid:(value,criterion)=>{if(value===null){return false;}
return criterion.values.map((str)=>str.toLowerCase()).includes(value.toString().toLowerCase());},getErrorString:(criterion)=>_t("The value must be one of: %s",criterion.values.join(", ")),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>undefined,allowedValues:"onlyLiterals",name:_t("Value in list"),getPreview:(criterion)=>_t("Value one of: %s",criterion.values.join(", ")),});dataValidationEvaluatorRegistry.add("isValueInRange",{type:"isValueInList",isValueValid:(value,criterion,getters,sheetId)=>{if(!value){return false;}
const range=getters.getRangeFromSheetXC(sheetId,criterion.values[0]);const criterionValues=getters.getRangeValues(range);return criterionValues.filter(isNotNull).map((value)=>value.toString().toLowerCase()).includes(value.toString().toLowerCase());},getErrorString:(criterion)=>_t("The value must be a value in the range %s",criterion.values[0]),isCriterionValueValid:(value)=>rangeReference.test(value),criterionValueErrorString:DVTerms.CriterionError.validRange,numberOfValues:()=>1,allowedValues:"onlyLiterals",name:_t("Value in range"),getPreview:(criterion)=>_t("Value in range %s",criterion.values[0]),});dataValidationEvaluatorRegistry.add("customFormula",{type:"customFormula",isValueValid:(value,criterion)=>{const parsedValue=parseLiteral(criterion.values[0],DEFAULT_LOCALE);if(typeof parsedValue==="number"||typeof parsedValue==="boolean"){return!!parsedValue;}
return false;},getErrorString:()=>_t("The value does not match the custom formula data validation rule"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>1,allowedValues:"onlyFormulas",name:_t("Custom formula"),getPreview:(criterion)=>_t("Custom formula %s",criterion.values[0]),});function getNumberCriterionlocalizedValues(criterion,locale){return criterion.values.map((value)=>value!==undefined?localizeContent(value,locale):CellErrorType.InvalidReference);}
function getDateCriterionLocalizedValues(criterion,locale){const values=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE);return values.map((value)=>value!==undefined?formatValue(value,{locale,format:locale.dateFormat}):CellErrorType.InvalidReference);}
function checkValueIsDate(value){const valueAsNumber=valueToDateNumber(value,DEFAULT_LOCALE);return valueAsNumber!==undefined;}
function checkValueIsNumber(value){const valueAsNumber=tryToNumber(value,DEFAULT_LOCALE);return valueAsNumber!==undefined;}
function getDateCriterionFormattedValues(criterion,getters){const locale=getters.getLocale();return criterion.values.map((valueStr)=>{if(valueStr.startsWith("=")){return valueStr;}
const value=parseLiteral(valueStr,locale);if(typeof value==="number"){return formatValue(value,{format:locale.dateFormat,locale});}
return"";});}
class SelectMenu extends Component{static template="o-spreadsheet-SelectMenu";static props={menuItems:Array,selectedValue:String,class:{type:String,optional:true},};static components={Menu};menuId=new UuidGenerator().uuidv4();selectRef=useRef("select");selectRect=useAbsoluteBoundingRect(this.selectRef);state=useState({isMenuOpen:false,});onClick(ev){if(ev.closedMenuId===this.menuId){return;}
this.state.isMenuOpen=!this.state.isMenuOpen;}
onMenuClosed(){this.state.isMenuOpen=false;}
get menuPosition(){return{x:this.selectRect.x,y:this.selectRect.y+this.selectRect.height,};}}
class DataValidationCriterionForm extends Component{static props={criterion:Object,onCriterionChanged:Function,};setup(){const composerFocusStore=useStore(ComposerFocusStore);onMounted(()=>{composerFocusStore.activeComposer.stopEdition();});}
updateCriterion(criterion){const filteredCriterion={...this.props.criterion,...criterion,};this.props.onCriterionChanged(filteredCriterion);}}
css`
  .o-dv-input {
    .o-invalid {
      background-color: #ffdddd;
    }
    .error-icon {
      right: 7px;
      top: 7px;
    }
  }
`;class DataValidationInput extends Component{static template="o-spreadsheet-DataValidationInput";static props={value:{type:String,optional:true},criterionType:String,onValueChanged:Function,onKeyDown:{type:Function,optional:true},focused:{type:Boolean,optional:true},onBlur:{type:Function,optional:true},onFocus:{type:Function,optional:true},};static defaultProps={value:"",onKeyDown:()=>{},focused:false,onBlur:()=>{},};inputRef=useRef("input");setup(){useEffect(()=>{if(this.props.focused){this.inputRef.el.focus();}},()=>[this.props.focused,this.inputRef.el]);}
state=useState({shouldDisplayError:!!this.props.value,});onValueChanged(ev){this.state.shouldDisplayError=true;this.props.onValueChanged(ev.target.value);}
get placeholder(){const evaluator=dataValidationEvaluatorRegistry.get(this.props.criterionType);if(evaluator.allowedValues==="onlyFormulas"){return _t("Formula");}
else if(evaluator.allowedValues==="onlyLiterals"){return _t("Value");}
return _t("Value or formula");}
get errorMessage(){if(!this.state.shouldDisplayError){return undefined;}
return this.env.model.getters.getDataValidationInvalidCriterionValueMessage(this.props.criterionType,canonicalizeContent(this.props.value,this.env.model.getters.getLocale()));}}
const DATES_VALUES={today:_t("today"),yesterday:_t("yesterday"),tomorrow:_t("tomorrow"),lastWeek:_t("in the past week"),lastMonth:_t("in the past month"),lastYear:_t("in the past year"),exactDate:_t("exact date"),};class DataValidationDateCriterionForm extends DataValidationCriterionForm{static template="o-spreadsheet-DataValidationDateCriterion";static components={DataValidationInput};setup(){super.setup();const setupDefault=(props)=>{if(props.criterion.dateValue===undefined){this.updateCriterion({dateValue:"exactDate"});}};onWillUpdateProps(setupDefault);onWillStart(()=>setupDefault(this.props));}
onValueChanged(value){this.updateCriterion({values:[value]});}
onDateValueChanged(ev){const dateValue=ev.target.value;this.updateCriterion({dateValue});}
get dateValues(){return Object.keys(DATES_VALUES).map((key)=>({value:key,title:DATES_VALUES[key],}));}}
class DataValidationDoubleInputCriterionForm extends DataValidationCriterionForm{static template="o-spreadsheet-DataValidationDoubleInput";static components={DataValidationInput};onFirstValueChanged(value){const values=this.props.criterion.values;this.updateCriterion({values:[value,values[1]],});}
onSecondValueChanged(value){const values=this.props.criterion.values;this.updateCriterion({values:[values[0],value],});}}
class DataValidationSingleInputCriterionForm extends DataValidationCriterionForm{static template="o-spreadsheet-DataValidationSingleInput";static components={DataValidationInput};onValueChanged(value){const criterion=deepCopy(this.props.criterion);criterion.values[0]=value;this.updateCriterion(criterion);}}
css`
  .o-dv-list-item-delete {
    color: #666666;
    cursor: pointer;
  }
`;class DataValidationListCriterionForm extends DataValidationCriterionForm{static template="o-spreadsheet-DataValidationListCriterionForm";static components={DataValidationInput};state=useState({numberOfValues:Math.max(this.props.criterion.values.length,2),});setup(){super.setup();const setupDefault=(props)=>{if(props.criterion.displayStyle===undefined){this.updateCriterion({displayStyle:"arrow"});}};onWillUpdateProps(setupDefault);onWillStart(()=>setupDefault(this.props));}
onValueChanged(value,index){const values=[...this.displayedValues];values[index]=value;this.updateCriterion({values});}
onAddAnotherValue(){this.state.numberOfValues++;}
removeItem(index){const values=[...this.displayedValues];values.splice(index,1);this.state.numberOfValues--;this.updateCriterion({values});}
onChangedDisplayStyle(ev){const displayStyle=ev.target.value;this.updateCriterion({displayStyle});}
onKeyDown(ev,index){if((ev.key==="Enter"||ev.key==="Tab")&&index===this.state.numberOfValues-1){this.onAddAnotherValue();this.state.focusedValueIndex=index+1;ev.preventDefault();}
else if(ev.key==="Enter"){this.state.focusedValueIndex=index+1;}}
onBlurInput(){this.state.focusedValueIndex=undefined;}
get displayedValues(){const values=[];for(let i=0;i<this.state.numberOfValues;i++){values.push(this.props.criterion.values[i]||"");}
return values;}}
class DataValidationValueInRangeCriterionForm extends DataValidationCriterionForm{static template="o-spreadsheet-DataValidationValueInRangeCriterionForm";static components={SelectionInput};setup(){super.setup();const setupDefault=(props)=>{if(props.criterion.displayStyle===undefined){this.updateCriterion({displayStyle:"arrow"});}};onWillUpdateProps(setupDefault);onWillStart(()=>setupDefault(this.props));}
onRangeChanged(rangeXc){this.updateCriterion({values:[rangeXc]});}
onChangedDisplayStyle(ev){const displayStyle=ev.target.value;this.updateCriterion({displayStyle});}}
const dvCriterionCategoriesSequences={list:10,text:20,date:30,number:40,misc:50,};const dataValidationPanelCriteriaRegistry=new Registry();dataValidationPanelCriteriaRegistry.add("textContains",{type:"textContains",component:DataValidationSingleInputCriterionForm,category:"text",sequence:10,});dataValidationPanelCriteriaRegistry.add("textNotContains",{type:"textNotContains",component:DataValidationSingleInputCriterionForm,category:"text",sequence:20,});dataValidationPanelCriteriaRegistry.add("textIs",{type:"textIs",component:DataValidationSingleInputCriterionForm,category:"text",sequence:30,});dataValidationPanelCriteriaRegistry.add("textIsEmail",{type:"textIsEmail",component:undefined,category:"text",sequence:40,});dataValidationPanelCriteriaRegistry.add("textIsLink",{type:"textIsLink",component:undefined,category:"text",sequence:50,});dataValidationPanelCriteriaRegistry.add("dateIs",{type:"dateIs",component:DataValidationDateCriterionForm,category:"date",sequence:20,});dataValidationPanelCriteriaRegistry.add("dateIsBefore",{type:"dateIsBefore",component:DataValidationDateCriterionForm,category:"date",sequence:30,});dataValidationPanelCriteriaRegistry.add("dateIsOnOrBefore",{type:"dateIsOnOrBefore",component:DataValidationDateCriterionForm,category:"date",sequence:40,});dataValidationPanelCriteriaRegistry.add("dateIsAfter",{type:"dateIsAfter",component:DataValidationDateCriterionForm,category:"date",sequence:50,});dataValidationPanelCriteriaRegistry.add("dateIsOnOrAfter",{type:"dateIsOnOrAfter",component:DataValidationDateCriterionForm,category:"date",sequence:60,});dataValidationPanelCriteriaRegistry.add("dateIsBetween",{type:"dateIsBetween",component:DataValidationDoubleInputCriterionForm,category:"date",sequence:70,});dataValidationPanelCriteriaRegistry.add("dateIsNotBetween",{type:"dateIsNotBetween",component:DataValidationDoubleInputCriterionForm,category:"date",sequence:80,});dataValidationPanelCriteriaRegistry.add("dateIsValid",{type:"dateIsValid",component:undefined,category:"date",sequence:10,});dataValidationPanelCriteriaRegistry.add("isEqual",{type:"isEqual",component:DataValidationSingleInputCriterionForm,category:"number",sequence:10,});dataValidationPanelCriteriaRegistry.add("isNotEqual",{type:"isNotEqual",component:DataValidationSingleInputCriterionForm,category:"number",sequence:20,});dataValidationPanelCriteriaRegistry.add("isGreaterThan",{type:"isGreaterThan",component:DataValidationSingleInputCriterionForm,category:"number",sequence:50,});dataValidationPanelCriteriaRegistry.add("isGreaterOrEqualTo",{type:"isGreaterOrEqualTo",component:DataValidationSingleInputCriterionForm,category:"number",sequence:60,});dataValidationPanelCriteriaRegistry.add("isLessThan",{type:"isLessThan",component:DataValidationSingleInputCriterionForm,category:"number",sequence:30,});dataValidationPanelCriteriaRegistry.add("isLessOrEqualTo",{type:"isLessOrEqualTo",component:DataValidationSingleInputCriterionForm,category:"number",sequence:40,});dataValidationPanelCriteriaRegistry.add("isBetween",{type:"isBetween",component:DataValidationDoubleInputCriterionForm,category:"number",sequence:70,});dataValidationPanelCriteriaRegistry.add("isNotBetween",{type:"isNotBetween",component:DataValidationDoubleInputCriterionForm,category:"number",sequence:80,});dataValidationPanelCriteriaRegistry.add("isBoolean",{type:"isBoolean",component:undefined,category:"misc",sequence:10,});dataValidationPanelCriteriaRegistry.add("isValueInList",{type:"isValueInList",component:DataValidationListCriterionForm,category:"list",sequence:10,});dataValidationPanelCriteriaRegistry.add("isValueInRange",{type:"isValueInRange",component:DataValidationValueInRangeCriterionForm,category:"list",sequence:20,});dataValidationPanelCriteriaRegistry.add("customFormula",{type:"customFormula",component:DataValidationSingleInputCriterionForm,category:"misc",sequence:20,});function getDataValidationCriterionMenuItems(callback){const items=dataValidationPanelCriteriaRegistry.getAll().sort((a,b)=>{if(a.category===b.category){return a.sequence-b.sequence;}
return dvCriterionCategoriesSequences[a.category]-dvCriterionCategoriesSequences[b.category];});const actionSpecs=items.map((item,index)=>{const evaluator=dataValidationEvaluatorRegistry.get(item.type);return{name:evaluator.name,id:item.type,separator:item.category!==items[index+1]?.category,execute:()=>callback(item.type),};});return createActions(actionSpecs);}
class DataValidationEditor extends Component{static template="o-spreadsheet-DataValidationEditor";static components={SelectionInput,SelectMenu,Section};static props={rule:{type:Object,optional:true},onExit:Function,onCloseSidePanel:{type:Function,optional:true},};state=useState({rule:this.defaultDataValidationRule});setup(){if(this.props.rule){const sheetId=this.env.model.getters.getActiveSheetId();this.state.rule={...this.props.rule,ranges:this.props.rule.ranges.map((range)=>this.env.model.getters.getRangeString(range,sheetId)),};this.state.rule.criterion.type=this.props.rule.criterion.type;}}
onCriterionTypeChanged(type){this.state.rule.criterion.type=type;}
onRangesChanged(ranges){this.state.rule.ranges=ranges;}
onCriterionChanged(criterion){this.state.rule.criterion=criterion;}
changeRuleIsBlocking(ev){const isBlocking=ev.target.value;this.state.rule.isBlocking=isBlocking==="true";}
onSave(){if(!this.canSave){return;}
this.env.model.dispatch("ADD_DATA_VALIDATION_RULE",this.dispatchPayload);this.props.onExit();}
get canSave(){return this.env.model.canDispatch("ADD_DATA_VALIDATION_RULE",this.dispatchPayload).isSuccessful;}
get dispatchPayload(){const rule={...this.state.rule,ranges:undefined};const locale=this.env.model.getters.getLocale();const criterion=rule.criterion;const criterionEvaluator=dataValidationEvaluatorRegistry.get(criterion.type);const sheetId=this.env.model.getters.getActiveSheetId();const values=criterion.values.slice(0,criterionEvaluator.numberOfValues(criterion)).map((value)=>value?.trim()).filter((value)=>value!==""&&value!==undefined).map((value)=>canonicalizeContent(value,locale));rule.criterion={...criterion,values};return{sheetId,ranges:this.state.rule.ranges.map((xc)=>this.env.model.getters.getRangeDataFromXc(sheetId,xc)),rule,};}
get dvCriterionMenuItems(){return getDataValidationCriterionMenuItems((type)=>this.onCriterionTypeChanged(type));}
get selectedCriterionName(){const selectedType=this.state.rule.criterion.type;return dataValidationEvaluatorRegistry.get(selectedType).name;}
get defaultDataValidationRule(){const sheetId=this.env.model.getters.getActiveSheetId();const ranges=this.env.model.getters.getSelectedZones().map((zone)=>zoneToXc(this.env.model.getters.getUnboundedZone(sheetId,zone)));return{id:this.env.model.uuidGenerator.uuidv4(),criterion:{type:"textContains",values:[""]},ranges,};}
get criterionComponent(){return dataValidationPanelCriteriaRegistry.get(this.state.rule.criterion.type).component;}}
css`
  .o-sidePanel {
    .o-dv-preview {
      height: 70px;
      box-sizing: border-box;
      cursor: pointer;
      border-bottom: 1px solid ${FIGURE_BORDER_COLOR};

      .o-dv-container {
        min-width: 0; // otherwise flex won't shrink correctly
      }

      .o-dv-preview-description {
        font-size: 13px;
      }

      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }

      &:not(:hover) .o-dv-preview-delete {
        display: none !important;
      }
    }
  }
`;class DataValidationPreview extends Component{static template="o-spreadsheet-DataValidationPreview";static props={onClick:Function,rule:Object,};ref=useRef("dvPreview");setup(){useHighlightsOnHover(this.ref,this);}
deleteDataValidation(){const sheetId=this.env.model.getters.getActiveSheetId();this.env.model.dispatch("REMOVE_DATA_VALIDATION_RULE",{sheetId,id:this.props.rule.id});}
get highlights(){return this.props.rule.ranges.map((range)=>({sheetId:this.env.model.getters.getActiveSheetId(),zone:range.zone,color:HIGHLIGHT_COLOR,fillAlpha:0.06,}));}
get rangesString(){const sheetId=this.env.model.getters.getActiveSheetId();return this.props.rule.ranges.map((range)=>this.env.model.getters.getRangeString(range,sheetId)).join(", ");}
get descriptionString(){return dataValidationEvaluatorRegistry.get(this.props.rule.criterion.type).getPreview(this.props.rule.criterion,this.env.model.getters);}}
class DataValidationPanel extends Component{static template="o-spreadsheet-DataValidationPanel";static props={onCloseSidePanel:Function,};static components={DataValidationPreview,DataValidationEditor};state=useState({mode:"list",activeRule:undefined});onPreviewClick(id){const sheetId=this.env.model.getters.getActiveSheetId();const rule=this.env.model.getters.getDataValidationRule(sheetId,id);if(rule){this.state.mode="edit";this.state.activeRule=rule;}}
addDataValidationRule(){this.state.mode="edit";this.state.activeRule=undefined;}
onExitEditMode(){this.state.mode="list";this.state.activeRule=undefined;}
localizeDVRule(rule){if(!rule)
return rule;const locale=this.env.model.getters.getLocale();return localizeDataValidationRule(rule,locale);}
get validationRules(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getDataValidationRules(sheetId);}}
const FIND_AND_REPLACE_HIGHLIGHT_COLOR="#8B008B";var Direction;(function(Direction){Direction[Direction["previous"]=-1]="previous";Direction[Direction["current"]=0]="current";Direction[Direction["next"]=1]="next";})(Direction||(Direction={}));class FindAndReplaceStore extends SpreadsheetStore{mutators=["updateSearchOptions","updateSearchContent","searchFormulas","selectPreviousMatch","selectNextMatch","replace",];allSheetsMatches=[];activeSheetMatches=[];specificRangeMatches=[];currentSearchRegex=null;isSearchDirty=false;initialShowFormulaState;preserveSelectedMatchIndex=false;irreplaceableMatchCount=0;notificationStore=this.get(NotificationStore);selectedMatchIndex=null;toSearch="";toReplace="";searchOptions={matchCase:false,exactMatch:false,searchFormulas:false,searchScope:"activeSheet",specificRange:undefined,};constructor(get){super(get);this.initialShowFormulaState=this.model.getters.shouldShowFormulas();this.searchOptions.searchFormulas=this.initialShowFormulaState;const highlightStore=get(HighlightStore);highlightStore.register(this);this.onDispose(()=>{this.model.dispatch("SET_FORMULA_VISIBILITY",{show:this.initialShowFormulaState});highlightStore.unRegister(this);});}
get searchMatches(){switch(this.searchOptions.searchScope){case"allSheets":return this.allSheetsMatches;case"activeSheet":return this.activeSheetMatches;case"specificRange":return this.specificRangeMatches;}}
updateSearchContent(toSearch){this._updateSearch(toSearch,this.searchOptions);}
updateSearchOptions(searchOptions){this._updateSearch(this.toSearch,{...this.searchOptions,...searchOptions});}
searchFormulas(showFormula){this.model.dispatch("SET_FORMULA_VISIBILITY",{show:showFormula});this.updateSearchOptions({searchFormulas:showFormula});}
selectPreviousMatch(){this.selectNextCell(Direction.previous);}
selectNextMatch(){this.selectNextCell(Direction.next);}
handle(cmd){switch(cmd.type){case"SET_FORMULA_VISIBILITY":this.updateSearchOptions({searchFormulas:cmd.show});break;case"UNDO":case"REDO":case"REMOVE_TABLE":case"UPDATE_FILTER":case"REMOVE_COLUMNS_ROWS":case"HIDE_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"ADD_COLUMNS_ROWS":case"EVALUATE_CELLS":case"UPDATE_CELL":case"ACTIVATE_SHEET":this.isSearchDirty=true;break;case"REPLACE_SEARCH":for(const match of cmd.matches){this.replaceMatch(match,cmd.searchString,cmd.replaceWith,cmd.searchOptions);}
if(this.irreplaceableMatchCount>0){this.showReplaceWarningMessage(cmd.matches.length,this.irreplaceableMatchCount);}
this.irreplaceableMatchCount=0;break;}}
finalize(){if(this.isSearchDirty){this.refreshSearch(false);this.isSearchDirty=false;}}
get allSheetMatchesCount(){return this.allSheetsMatches.length;}
get activeSheetMatchesCount(){return this.activeSheetMatches.length;}
get specificRangeMatchesCount(){return this.specificRangeMatches.length;}
_updateSearch(toSearch,searchOptions){this.searchOptions=searchOptions;if(toSearch!==this.toSearch){this.selectedMatchIndex=null;}
this.toSearch=toSearch;this.currentSearchRegex=getSearchRegex(this.toSearch,this.searchOptions);this.refreshSearch();}
refreshSearch(jumpToMatchSheet=true){if(!this.preserveSelectedMatchIndex){this.selectedMatchIndex=null;}
this.findMatches();this.selectNextCell(Direction.current,jumpToMatchSheet);}
getSheetsInSearchOrder(){switch(this.searchOptions.searchScope){case"allSheets":const sheetIds=this.getters.getSheetIds();const activeSheetIndex=sheetIds.findIndex((id)=>id===this.getters.getActiveSheetId());return[sheetIds[activeSheetIndex],...sheetIds.slice(activeSheetIndex+1),...sheetIds.slice(0,activeSheetIndex),];case"activeSheet":return[this.getters.getActiveSheetId()];case"specificRange":const specificRange=this.searchOptions.specificRange;if(!specificRange){return[];}
return specificRange?[specificRange.sheetId]:[];}}
findMatches(){const matches=[];if(this.toSearch){for(const sheetId of this.getters.getSheetIds()){matches.push(...this.findMatchesInSheet(sheetId));}}
this.allSheetsMatches=matches;this.activeSheetMatches=matches.filter((match)=>match.sheetId===this.getters.getActiveSheetId());if(this.searchOptions.specificRange){const{sheetId,zone}=this.searchOptions.specificRange;this.specificRangeMatches=matches.filter((match)=>match.sheetId===sheetId&&isInside(match.col,match.row,zone));}
else{this.specificRangeMatches=[];}}
findMatchesInSheet(sheetId){const matches=[];const{left,right,top,bottom}=this.getters.getSheetZone(sheetId);for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){const isColHidden=this.getters.isColHidden(sheetId,col);const isRowHidden=this.getters.isRowHidden(sheetId,row);if(isColHidden||isRowHidden){continue;}
const cellPosition={sheetId,col,row};if(this.currentSearchRegex?.test(this.getSearchableString(cellPosition))){const match={sheetId,col,row};matches.push(match);}}}
return matches;}
selectNextCell(indexChange,jumpToMatchSheet=true){const matches=this.searchMatches;if(!matches.length){this.selectedMatchIndex=null;return;}
let nextIndex;if(this.selectedMatchIndex===null){let nextMatchIndex=-1;for(const sheetId of this.getSheetsInSearchOrder()){nextMatchIndex=matches.findIndex((match)=>match.sheetId===sheetId);if(nextMatchIndex!==-1){break;}}
nextIndex=nextMatchIndex;}
else{nextIndex=this.selectedMatchIndex+indexChange;}
nextIndex=(nextIndex+matches.length)%matches.length;this.selectedMatchIndex=nextIndex;const selectedMatch=matches[nextIndex];if(jumpToMatchSheet&&this.getters.getActiveSheetId()!==selectedMatch.sheetId){this.preserveSelectedMatchIndex=true;this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.getters.getActiveSheetId(),sheetIdTo:selectedMatch.sheetId,});this.preserveSelectedMatchIndex=false;this.isSearchDirty=false;}
this.model.selection.getBackToDefault();this.model.selection.selectCell(selectedMatch.col,selectedMatch.row);}
replace(){if(this.selectedMatchIndex===null){return;}
this.model.dispatch("REPLACE_SEARCH",{searchString:this.toSearch,replaceWith:this.toReplace,matches:[this.searchMatches[this.selectedMatchIndex]],searchOptions:this.searchOptions,});this.selectNextCell(Direction.next);}
replaceAll(){this.model.dispatch("REPLACE_SEARCH",{searchString:this.toSearch,replaceWith:this.toReplace,matches:this.searchMatches,searchOptions:this.searchOptions,});}
showReplaceWarningMessage(totalMatches,irreplaceableMatches){const replaceableMatches=totalMatches-irreplaceableMatches;if(replaceableMatches===0){this.notificationStore.notifyUser({type:"warning",sticky:false,text:_t("Match(es) cannot be replaced as they are part of a formula."),});}
else{this.notificationStore.notifyUser({type:"warning",sticky:false,text:_t("%(replaceable_count)s match(es) replaced. %(irreplaceable_count)s match(es) cannot be replaced as they are part of a formula.",{replaceable_count:replaceableMatches,irreplaceable_count:irreplaceableMatches,}),});}}
replaceMatch(selectedMatch,searchString,replaceWith,searchOptions){const cell=this.getters.getCell(selectedMatch);if(!cell?.content){return;}
if(cell?.isFormula&&!searchOptions.searchFormulas){this.irreplaceableMatchCount++;return;}
const searchRegex=getSearchRegex(searchString,searchOptions);const replaceRegex=new RegExp(searchRegex.source,searchRegex.flags+"g");const toReplace=this.getters.getCellText(selectedMatch,{showFormula:searchOptions.searchFormulas,});const content=toReplace.replace(replaceRegex,replaceWith);const canonicalContent=canonicalizeNumberContent(content,this.getters.getLocale());this.model.dispatch("UPDATE_CELL",{...selectedMatch,content:canonicalContent});}
getSearchableString(position){return this.getters.getCellText(position,{showFormula:this.searchOptions.searchFormulas});}
get highlights(){const highlights=[];const sheetId=this.getters.getActiveSheetId();for(const[index,match]of this.searchMatches.entries()){if(match.sheetId!==sheetId){continue;}
const zone=positionToZone(match);const zoneWithMerge=this.getters.expandZone(sheetId,zone);const{width,height}=this.getters.getVisibleRect(zoneWithMerge);if(width>0&&height>0){highlights.push({sheetId,zone:zoneWithMerge,color:FIND_AND_REPLACE_HIGHLIGHT_COLOR,noBorder:index!==this.selectedMatchIndex,thinLine:true,fillAlpha:0.2,});}}
if(this.searchOptions.searchScope==="specificRange"){const range=this.searchOptions.specificRange;if(range&&range.sheetId===sheetId){highlights.push({sheetId,zone:range.zone,color:FIND_AND_REPLACE_HIGHLIGHT_COLOR,noFill:true,thinLine:true,});}}
return highlights;}}
css`
  .o-find-and-replace {
    outline: none;
    height: 100%;
    .o-input-search-container {
      display: flex;
      .o-input-with-count {
        flex-grow: 1;
        width: auto;
      }
      .o-input-without-count {
        width: 100%;
      }
      .o-input-count {
        width: fit-content;
        padding: 4px 0 4px 4px;
        white-space: nowrap;
      }
    }

    .o-result-buttons {
      .o-button {
        height: 19px;
        width: 19px;
        .o-icon {
          height: 14px;
          width: 14px;
        }
      }
    }
  }
`;class FindAndReplacePanel extends Component{static template="o-spreadsheet-FindAndReplacePanel";static components={SelectionInput,Section,Checkbox,ValidationMessages};static props={onCloseSidePanel:Function,};searchInput=useRef("searchInput");store;state;updateSearchContent;get hasSearchResult(){return this.store.selectedMatchIndex!==null;}
get searchOptions(){return this.store.searchOptions;}
get allSheetsMatchesCount(){return _t("%s matches in all sheets",this.store.allSheetMatchesCount);}
get currentSheetMatchesCount(){return _t("%(matches)s matches in %(sheetName)s",{matches:this.store.activeSheetMatchesCount,sheetName:this.env.model.getters.getSheetName(this.env.model.getters.getActiveSheetId()),});}
get specificRangeMatchesCount(){const range=this.searchOptions.specificRange;if(!range){return"";}
const{sheetId,zone}=range;return _t("%(matches)s matches in range %(range)s of %(sheetName)s",{matches:this.store.specificRangeMatchesCount,range:zoneToXc(zone),sheetName:this.env.model.getters.getSheetName(sheetId),});}
get searchInfo(){if(!this.store.toSearch){return[];}
return[this.specificRangeMatchesCount,this.currentSheetMatchesCount,this.allSheetsMatchesCount,];}
setup(){this.store=useLocalStore(FindAndReplaceStore);this.state=useState({dataRange:""});onMounted(()=>this.searchInput.el?.focus());onWillUnmount(()=>this.updateSearchContent.stopDebounce());this.updateSearchContent=debounce(this.store.updateSearchContent,200);}
onFocusSearch(){this.updateDataRange();}
onSearchInput(ev){this.updateSearchContent(ev.target.value);}
onKeydownSearch(ev){if(ev.key==="Enter"){ev.preventDefault();ev.stopPropagation();ev.shiftKey?this.store.selectPreviousMatch():this.store.selectNextMatch();}}
onKeydownReplace(ev){if(ev.key==="Enter"){ev.preventDefault();ev.stopPropagation();this.store.replace();}}
searchFormulas(searchFormulas){this.store.searchFormulas(searchFormulas);}
searchExactMatch(exactMatch){this.store.updateSearchOptions({exactMatch});}
searchMatchCase(matchCase){this.store.updateSearchOptions({matchCase});}
changeSearchScope(ev){const searchScope=ev.target.value;this.store.updateSearchOptions({searchScope});}
onSearchRangeChanged(ranges){this.state.dataRange=ranges[0];}
updateDataRange(){if(!this.state.dataRange||this.searchOptions.searchScope!=="specificRange"){return;}
const specificRange=this.env.model.getters.getRangeFromSheetXC(this.env.model.getters.getActiveSheetId(),this.state.dataRange);this.store.updateSearchOptions({specificRange});}
get pendingSearch(){return this.updateSearchContent.isDebouncePending();}}
css`
  .o-more-formats-panel {
    .format-preview {
      height: 48px;
      background-color: white;
      cursor: pointer;

      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }
    .check-icon {
      width: 24px;
    }
  }
`;const DATE_FORMAT_ACTIONS=createActions([formatNumberFullDateTime,formatNumberFullWeekDayAndMonth,formatNumberDayAndFullMonth,formatNumberShortWeekDay,formatNumberDayAndShortMonth,formatNumberFullMonth,formatNumberShortMonth,formatNumberDate,formatNumberTime,formatNumberDateTime,formatNumberDuration,formatNumberQuarter,formatNumberFullQuarter,]);class MoreFormatsPanel extends Component{static template="o-spreadsheet-MoreFormatsPanel";static props={onCloseSidePanel:Function,};get dateFormatsActions(){return DATE_FORMAT_ACTIONS;}}
class PivotMeasureDisplayPanelStore extends SpreadsheetStore{pivotId;initialMeasure;mutators=["cancelMeasureDisplayEdition","updateMeasureDisplayType","updateMeasureDisplayField","updateMeasureDisplayValue",];measureDisplay;constructor(get,pivotId,initialMeasure){super(get);this.pivotId=pivotId;this.initialMeasure=initialMeasure;this.measureDisplay=initialMeasure.display||{type:"no_calculations"};}
updateMeasureDisplayType(measureDisplayType){this.updatePivotMeasureDisplay(this.getMeasureDisplay(measureDisplayType,this.measureDisplay.fieldNameWithGranularity,this.measureDisplay.value));}
updateMeasureDisplayField(fieldNameWithGranularity){this.updatePivotMeasureDisplay(this.getMeasureDisplay(this.measureDisplay.type,fieldNameWithGranularity,this.measureDisplay.value));}
updateMeasureDisplayValue(value){this.updatePivotMeasureDisplay(this.getMeasureDisplay(this.measureDisplay.type,this.measureDisplay.fieldNameWithGranularity,value));}
updatePivotMeasureDisplay(newDisplay){const pivotDefinition=deepCopy(this.model.getters.getPivotCoreDefinition(this.pivotId));const measureIndex=this.getMeasureIndex(this.initialMeasure.id,pivotDefinition);const newMeasure={...pivotDefinition.measures[measureIndex],display:newDisplay};pivotDefinition.measures[measureIndex]=newMeasure;const result=this.model.dispatch("UPDATE_PIVOT",{pivot:pivotDefinition,pivotId:this.pivotId,});if(result.isSuccessful){this.measureDisplay=newDisplay;}}
getMeasureDisplay(measureDisplayType,fieldNameWithGranularity,value){switch(measureDisplayType){case"no_calculations":case"%_of_grand_total":case"%_of_col_total":case"%_of_row_total":case"%_of_parent_row_total":case"%_of_parent_col_total":case"index":return{type:measureDisplayType};case"%_of_parent_total":case"running_total":case"%_running_total":case"rank_asc":case"rank_desc":if(!fieldNameWithGranularity){fieldNameWithGranularity=this.fields[0]?.nameWithGranularity;}
return{type:measureDisplayType,fieldNameWithGranularity};case"%_of":case"difference_from":case"%_difference_from":if(!fieldNameWithGranularity){fieldNameWithGranularity=this.fields[0]?.nameWithGranularity;}
const possibleValues=this.getPossibleValues(fieldNameWithGranularity);if(value===undefined||!possibleValues.find((v)=>v.value===value)){value=PREVIOUS_VALUE;}
return{type:measureDisplayType,fieldNameWithGranularity,value:value??PREVIOUS_VALUE,};}}
getMeasureIndex(measureId,pivotDefinition){const measureIndex=pivotDefinition.measures.findIndex((m)=>m.id===measureId);if(measureIndex===-1){throw new Error(`Measure with id ${measureId} not found in pivot.`);}
return measureIndex;}
get doesDisplayNeedsField(){return(["%_of_parent_total","running_total","%_running_total","rank_asc","rank_desc"].includes(this.measureDisplay.type)||this.doesDisplayNeedsValue);}
get fields(){const definition=this.getters.getPivot(this.pivotId).definition;return[...definition.columns,...definition.rows].map((f)=>({...f,displayName:getFieldDisplayName(f),}));}
get doesDisplayNeedsValue(){return this.isDisplayValueDependant(this.measureDisplay);}
isDisplayValueDependant(display){return["%_of","difference_from","%_difference_from"].includes(display.type);}
get values(){const display=this.measureDisplay;if(!this.isDisplayValueDependant(display)){return[];}
return this.getPossibleValues(display.fieldNameWithGranularity);}
getPossibleValues(fieldNameWithGranularity){const baseValues=[{value:PREVIOUS_VALUE,label:_t("(previous)")},{value:NEXT_VALUE,label:_t("(next)")},];const field=this.fields.find((f)=>f.nameWithGranularity===fieldNameWithGranularity);if(!field){return[];}
const values=this.getters.getPivot(this.pivotId).getPossibleFieldValues(field);return[...baseValues,...values];}
cancelMeasureDisplayEdition(){const pivotDefinition=deepCopy(this.model.getters.getPivotCoreDefinition(this.pivotId));const measureIndex=this.getMeasureIndex(this.initialMeasure.id,pivotDefinition);pivotDefinition.measures[measureIndex]={...pivotDefinition.measures[measureIndex],display:this.initialMeasure.display,};this.model.dispatch("UPDATE_PIVOT",{pivot:pivotDefinition,pivotId:this.pivotId,});}}
css`
  .o-sidePanel {
    .o-pivot-measure-display-field,
    .o-pivot-measure-display-value {
      box-sizing: border-box;
      border: solid 1px ${GRAY_300};
      border-radius: 3px;
    }

    .o-pivot-measure-display-description {
      white-space: pre-wrap;
      color: dimgray;
      border-left: 2px solid ${GRAY_300};
    }
  }
`;class PivotMeasureDisplayPanel extends Component{static template="o-spreadsheet-PivotMeasureDisplayPanel";static props={onCloseSidePanel:Function,pivotId:String,measure:Object,};static components={Section,Checkbox,RadioSelection};measureDisplayTypeLabels=measureDisplayTerms.labels;measureDisplayDescription=measureDisplayTerms.documentation;store;setup(){this.store=useLocalStore(PivotMeasureDisplayPanelStore,this.props.pivotId,this.props.measure);}
onSave(){this.env.openSidePanel("PivotSidePanel",{pivotId:this.props.pivotId});}
onCancel(){this.store.cancelMeasureDisplayEdition();this.env.openSidePanel("PivotSidePanel",{pivotId:this.props.pivotId});}
get fieldChoices(){return this.store.fields.map((field)=>({value:field.nameWithGranularity,label:field.displayName,}));}}
css`
  .pivot-defer-update {
    min-height: 35px;
  }
`;class PivotDeferUpdate extends Component{static template="o-spreadsheet-PivotDeferUpdate";static props={deferUpdate:Boolean,isDirty:Boolean,toggleDeferUpdate:Function,discard:Function,apply:Function,};static components={Section,Checkbox,};get deferUpdatesLabel(){return _t("Defer updates");}
get deferUpdatesTooltip(){return _t("Changing the pivot definition requires to reload the data. It may take some time.");}}
function useAutofocus({refName}){const ref=useRef(refName);useEffect((el)=>{el?.focus();},()=>[ref.el]);}
css`
  input.pivot-dimension-search-field:focus {
    outline: none;
  }
  .pivot-dimension-search-field-icon svg {
    width: 13px;
    height: 13px;
  }
  .pivot-dimension-search {
    background-color: white;
  }
  .add-dimension.o-button {
    padding: 2px 7px;
    font-weight: 400;
    font-size: 12px;
    flex-grow: 0;
    height: inherit;
  }
`;class AddDimensionButton extends Component{static template="o-spreadsheet-AddDimensionButton";static components={Popover,TextValueProvider};static props={onFieldPicked:Function,fields:Array,slots:{type:Object,optional:true},};buttonRef=useRef("button");popover=useState({isOpen:false});search=useState({input:""});autoComplete;setup(){this.autoComplete=useLocalStore(AutoCompleteStore);this.autoComplete.useProvider(this.getProvider());useExternalListener(window,"click",(ev)=>{if(ev.target!==this.buttonRef.el){this.popover.isOpen=false;}});useAutofocus({refName:"autofocus"});}
getProvider(){return{proposals:this.proposals,autoSelectFirstProposal:false,selectProposal:(value)=>{const field=this.props.fields.find((field)=>field.string===value);if(field){this.pickField(field);}},};}
get proposals(){let fields;if(this.search.input){fields=fuzzyLookup(this.search.input,this.props.fields,(field)=>field.string);}
else{fields=this.props.fields;}
return fields.map((field)=>{const text=field.string;return{text,fuzzySearchKey:text,htmlContent:getHtmlContentFromPattern(this.search.input,text,COMPOSER_ASSISTANT_COLOR,"o-semi-bold"),};});}
get popoverProps(){const{x,y,width,height}=this.buttonRef.el.getBoundingClientRect();return{anchorRect:{x,y,width,height},positioning:"BottomLeft",};}
updateSearch(searchInput){this.search.input=searchInput;this.autoComplete.useProvider(this.getProvider());}
pickField(field){this.props.onFieldPicked(field.name);this.togglePopover();}
togglePopover(){this.popover.isOpen=!this.popover.isOpen;this.search.input="";this.autoComplete.useProvider(this.getProvider());}
onKeyDown(ev){switch(ev.key){case"Enter":const proposals=this.autoComplete.provider?.proposals;if(proposals?.length===1){this.autoComplete.provider?.selectProposal(proposals[0].text||"");}
const proposal=this.autoComplete.selectedProposal;this.autoComplete.provider?.selectProposal(proposal?.text||"");break;case"ArrowUp":case"ArrowDown":this.autoComplete.moveSelection(ev.key==="ArrowDown"?"next":"previous");break;case"Escape":this.popover.isOpen=false;break;}}}
css`
  .o-spreadsheet {
    .os-input {
      box-sizing: border-box;
      border-width: 0 0 1px 0;
      border-color: transparent;
      outline: none;
      text-overflow: ellipsis;
      color: ${TEXT_BODY};
    }
    .os-input:hover,
    .os-input:focus {
      border-color: ${GRAY_300};
    }
  }
`;class TextInput extends Component{static template="o-spreadsheet-TextInput";static props={value:String,onChange:Function,class:{type:String,optional:true,},id:{type:String,optional:true,},placeholder:{type:String,optional:true,},};inputRef=useRef("input");setup(){useExternalListener(window,"click",(ev)=>{if(ev.target!==this.inputRef.el&&this.inputRef.el?.value!==this.props.value){this.save();}},{capture:true});}
onKeyDown(ev){switch(ev.key){case"Enter":this.save();ev.preventDefault();ev.stopPropagation();break;case"Escape":if(this.inputRef.el){this.inputRef.el.value=this.props.value;this.inputRef.el.blur();}
ev.preventDefault();ev.stopPropagation();break;}}
save(){const currentValue=(this.inputRef.el?.value||"").trim();if(currentValue!==this.props.value){this.props.onChange(currentValue);}
this.inputRef.el?.blur();}
focusInputAndSelectContent(){const inputEl=this.inputRef.el;if(!inputEl)
return;inputEl.focus();inputEl.select();}}
class CogWheelMenu extends Component{static template="o-spreadsheet-CogWheelMenu";static components={Menu};static props={items:Array,};buttonRef=useRef("button");menuState=useState({isOpen:false,position:null,menuItems:[]});menuId=this.env.model.uuidGenerator.uuidv4();toggleMenu(ev){if(ev.closedMenuId===this.menuId){return;}
const{x,y}=this.buttonRef.el.getBoundingClientRect();this.menuState.isOpen=!this.menuState.isOpen;this.menuState.position={x,y};this.menuState.menuItems=createActions(this.props.items);}}
css`
  .pivot-dimension {
    background-color: white;
    border: 1px solid ${GRAY_300};
    border-radius: 4px;

    select.o-input {
      height: inherit;
    }

    select > option {
      background-color: white;
    }

    .pivot-dim-operator-label {
      min-width: 120px;
    }

    &.pivot-dimension-invalid {
      background-color: #ffdddd;
      border-color: red !important;
      select {
        background-color: #ffdddd;
      }
    }
  }
`;class PivotDimension extends Component{static template="o-spreadsheet-PivotDimension";static props={dimension:Object,onRemoved:{type:Function,optional:true},onNameUpdated:{type:Function,optional:true},slots:{type:Object,optional:true},};static components={CogWheelMenu,TextInput};updateName(name){this.props.onNameUpdated?.(this.props.dimension,name===""||name.startsWith("=")?undefined:name);}}
class PivotDimensionGranularity extends Component{static template="o-spreadsheet-PivotDimensionGranularity";static props={dimension:Object,onUpdated:Function,availableGranularities:Set,allGranularities:Array,};periods=ALL_PERIODS;}
class PivotDimensionOrder extends Component{static template="o-spreadsheet-PivotDimensionOrder";static props={dimension:Object,onUpdated:Function,};}
function createMeasureAutoComplete(pivot,forComputedMeasure){return{sequence:0,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const measureProposals=pivot.measures.filter((m)=>m!==forComputedMeasure).map((measure)=>{const text=getCanonicalSymbolName(measure.id);return{text:text,description:measure.displayName,htmlContent:[{value:text,color:tokenColors.FUNCTION}],fuzzySearchKey:measure.displayName+text+measure.fieldName,};});const dimensionsProposals=pivot.rows.concat(pivot.columns).map((dimension)=>{const text=getCanonicalSymbolName(dimension.nameWithGranularity);return{text:text,description:dimension.displayName,htmlContent:[{value:text,color:tokenColors.FUNCTION}],fuzzySearchKey:dimension.displayName+text+dimension.fieldName,};});return measureProposals.concat(dimensionsProposals);},selectProposal(tokenAtCursor,value){let start=tokenAtCursor.end;if(tokenAtCursor.type==="SYMBOL"){start=tokenAtCursor.start;}
const end=tokenAtCursor.end;this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);},};}
class PivotMeasureEditor extends Component{static template="o-spreadsheet-PivotMeasureEditor";static components={PivotDimension,StandaloneComposer,};static props={definition:Object,measure:Object,onMeasureUpdated:Function,onRemoved:Function,generateMeasureId:Function,aggregators:Object,pivotId:String,};getMeasureAutocomplete(){return createMeasureAutoComplete(this.props.definition,this.props.measure);}
updateMeasureFormula(formula){this.props.onMeasureUpdated({...this.props.measure,computedBy:{sheetId:this.env.model.getters.getActiveSheetId(),formula:formula[0]==="="?formula:"="+formula,},});}
updateAggregator(aggregator){this.props.onMeasureUpdated({...this.props.measure,aggregator,id:this.props.generateMeasureId(this.props.measure.fieldName,aggregator),});}
updateName(measure,userDefinedName){if(this.props.measure.computedBy&&userDefinedName){this.props.onMeasureUpdated({...this.props.measure,userDefinedName,id:this.props.generateMeasureId(userDefinedName,this.props.measure.aggregator),fieldName:userDefinedName,});}
else{this.props.onMeasureUpdated({...this.props.measure,userDefinedName,});}}
toggleMeasureVisibility(){this.props.onMeasureUpdated({...this.props.measure,isHidden:!this.props.measure.isHidden,});}
openShowValuesAs(){this.env.openSidePanel("PivotMeasureDisplayPanel",{pivotId:this.props.pivotId,measure:this.props.measure,});}}
css`
  .add-calculated-measure {
    cursor: pointer;
  }
`;class PivotLayoutConfigurator extends Component{static template="o-spreadsheet-PivotLayoutConfigurator";static components={AddDimensionButton,PivotDimension,PivotDimensionOrder,PivotDimensionGranularity,PivotMeasureEditor,};static props={definition:Object,onDimensionsUpdated:Function,unusedGroupableFields:Array,measureFields:Array,unusedGranularities:Object,dateGranularities:Array,datetimeGranularities:Array,pivotId:String,};dimensionsRef=useRef("pivot-dimensions");dragAndDrop=useDragAndDropListItems();AGGREGATORS=AGGREGATORS;composerFocus;isDateOrDatetimeField=isDateOrDatetimeField;setup(){this.composerFocus=useStore(ComposerFocusStore);}
startDragAndDrop(dimension,event){if(event.button!==0||event.target.tagName==="SELECT"){return;}
const rects=this.getDimensionElementsRects();const definition=this.props.definition;const{columns,rows}=definition;const draggableIds=[...columns.map((col)=>col.nameWithGranularity),"__rows_title__",...rows.map((row)=>row.nameWithGranularity),];const allDimensions=columns.concat(rows);const offset=1;const draggableItems=draggableIds.map((id,index)=>({id,size:rects[index+offset].height,position:rects[index+offset].y,}));this.dragAndDrop.start("vertical",{draggedItemId:dimension.nameWithGranularity,initialMousePosition:event.clientY,items:draggableItems,containerEl:this.dimensionsRef.el,onDragEnd:(dimensionName,finalIndex)=>{const originalIndex=draggableIds.findIndex((id)=>id===dimensionName);if(originalIndex===finalIndex){return;}
const draggedItems=[...draggableIds];draggedItems.splice(originalIndex,1);draggedItems.splice(finalIndex,0,dimensionName);const columns=draggedItems.slice(0,draggedItems.indexOf("__rows_title__"));const rows=draggedItems.slice(draggedItems.indexOf("__rows_title__")+1);this.props.onDimensionsUpdated({columns:columns.map((nameWithGranularity)=>allDimensions.find((dimension)=>dimension.nameWithGranularity===nameWithGranularity)).filter(isDefined),rows:rows.map((nameWithGranularity)=>allDimensions.find((dimension)=>dimension.nameWithGranularity===nameWithGranularity)).filter(isDefined),});},});}
getGranularitiesFor(field){if(!isDateOrDatetimeField(field)){return[];}
return field.type==="date"?this.props.dateGranularities:this.props.datetimeGranularities;}
startDragAndDropMeasures(measure,event){if(event.button!==0||event.target.tagName==="SELECT"||event.target.tagName==="INPUT"||this.composerFocus.focusMode!=="inactive"){return;}
const rects=this.getDimensionElementsRects();const definition=this.props.definition;const{measures,columns,rows}=definition;const draggableIds=measures.map((m)=>m.id);const offset=3+columns.length+rows.length;const draggableItems=draggableIds.map((id,index)=>({id,size:rects[index+offset].height,position:rects[index+offset].y,}));this.dragAndDrop.start("vertical",{draggedItemId:measure.id,initialMousePosition:event.clientY,items:draggableItems,containerEl:this.dimensionsRef.el,onDragEnd:(measureName,finalIndex)=>{const originalIndex=draggableIds.findIndex((id)=>id===measureName);if(originalIndex===finalIndex){return;}
const draggedItems=[...draggableIds];draggedItems.splice(originalIndex,1);draggedItems.splice(finalIndex,0,measureName);this.props.onDimensionsUpdated({measures:draggedItems.map((measureId)=>measures.find((measure)=>measure.id===measureId)).filter(isDefined),});},});}
getDimensionElementsRects(){return Array.from(this.dimensionsRef.el.children).map((el)=>{const style=getComputedStyle(el);const rect=el.getBoundingClientRect();return{x:rect.x,y:rect.y,width:rect.width+parseInt(style.marginLeft||"0")+parseInt(style.marginRight||"0"),height:rect.height+parseInt(style.marginTop||"0")+parseInt(style.marginBottom||"0"),};});}
removeDimension(dimension){const{columns,rows}=this.props.definition;this.props.onDimensionsUpdated({columns:columns.filter((col)=>col.nameWithGranularity!==dimension.nameWithGranularity),rows:rows.filter((row)=>row.nameWithGranularity!==dimension.nameWithGranularity),});}
removeMeasureDimension(measure){const{measures}=this.props.definition;this.props.onDimensionsUpdated({measures:measures.filter((m)=>m.id!==measure.id),});}
addColumnDimension(fieldName){const{columns}=this.props.definition;this.props.onDimensionsUpdated({columns:columns.concat([{fieldName:fieldName,order:"asc"}]),});}
addRowDimension(fieldName){const{rows}=this.props.definition;this.props.onDimensionsUpdated({rows:rows.concat([{fieldName:fieldName,order:"asc"}]),});}
addMeasureDimension(fieldName){const{measures}=this.props.definition;const aggregator=this.getDefaultMeasureAggregator(fieldName);this.props.onDimensionsUpdated({measures:measures.concat([{id:this.getMeasureId(fieldName,aggregator),fieldName,aggregator},]),});}
updateMeasure(measure,newMeasure){const{measures}=this.props.definition;this.props.onDimensionsUpdated({measures:measures.map((m)=>(m.id===measure.id?newMeasure:m)),});}
getMeasureId(fieldName,aggregator){const baseId=fieldName+(aggregator?`:${aggregator}`:"");let id=baseId;let i=2;while(this.props.definition.measures.some((m)=>m.id===id)){id=`${baseId}:${i}`;i++;}
return id;}
getDefaultMeasureAggregator(fieldName){const field=this.props.measureFields.find((f)=>f.name===fieldName);return field?.aggregator?field.aggregator:"count";}
addCalculatedMeasure(){const{measures}=this.props.definition;const measureName=this.env.model.getters.generateNewCalculatedMeasureName(measures);this.props.onDimensionsUpdated({measures:measures.concat([{id:this.getMeasureId(measureName),fieldName:measureName,aggregator:"sum",computedBy:{sheetId:this.env.model.getters.getActiveSheetId(),formula:"=0",},},]),});}
updateOrder(updateDimension,order){const{rows,columns}=this.props.definition;this.props.onDimensionsUpdated({rows:rows.map((row)=>{if(row.nameWithGranularity===updateDimension.nameWithGranularity){return{...row,order:order||undefined};}
return row;}),columns:columns.map((col)=>{if(col.nameWithGranularity===updateDimension.nameWithGranularity){return{...col,order:order||undefined};}
return col;}),});}
updateGranularity(dimension,granularity){const{rows,columns}=this.props.definition;this.props.onDimensionsUpdated({rows:rows.map((row)=>{if(row.nameWithGranularity===dimension.nameWithGranularity){return{...row,granularity};}
return row;}),columns:columns.map((col)=>{if(col.nameWithGranularity===dimension.nameWithGranularity){return{...col,granularity};}
return col;}),});}
getMeasureDescription(measure){const measureDisplay=measure.display;if(!measureDisplay||measureDisplay.type==="no_calculations"){return"";}
const pivot=this.env.model.getters.getPivot(this.props.pivotId);const field=[...pivot.definition.columns,...pivot.definition.rows].find((f)=>f.nameWithGranularity===measureDisplay.fieldNameWithGranularity);const fieldName=field?getFieldDisplayName(field):"";return measureDisplayTerms.descriptions[measureDisplay.type](fieldName);}}
class PivotTitleSection extends Component{static template="o-spreadsheet-PivotTitleSection";static components={CogWheelMenu,Section,TextInput};static props={pivotId:String,flipAxis:Function,};get cogWheelMenuItems(){return[{name:_t("Flip axes"),icon:"o-spreadsheet-Icon.EXCHANGE",execute:this.props.flipAxis,},{name:_t("Duplicate"),icon:"o-spreadsheet-Icon.COPY",execute:()=>this.duplicatePivot(),},{name:_t("Delete"),icon:"o-spreadsheet-Icon.TRASH",execute:()=>this.delete(),},];}
get name(){return this.env.model.getters.getPivotName(this.props.pivotId);}
get displayName(){return this.env.model.getters.getPivotDisplayName(this.props.pivotId);}
duplicatePivot(){const newPivotId=this.env.model.uuidGenerator.uuidv4();const newSheetId=this.env.model.uuidGenerator.uuidv4();const result=this.env.model.dispatch("DUPLICATE_PIVOT_IN_NEW_SHEET",{pivotId:this.props.pivotId,newPivotId,newSheetId,});const text=result.isSuccessful?_t("Pivot duplicated."):_t("Pivot duplication failed");const type=result.isSuccessful?"success":"danger";this.env.notifyUser({text,sticky:false,type,});if(result.isSuccessful){this.env.openSidePanel("PivotSidePanel",{pivotId:newPivotId});}}
delete(){this.env.askConfirmation(_t("Are you sure you want to delete this pivot?"),()=>{this.env.model.dispatch("REMOVE_PIVOT",{pivotId:this.props.pivotId});});}
onNameChanged(name){const pivot=this.env.model.getters.getPivotCoreDefinition(this.props.pivotId);this.env.model.dispatch("UPDATE_PIVOT",{pivotId:this.props.pivotId,pivot:{...pivot,name,},});}}
class PivotRuntimeDefinition{measures;columns;rows;constructor(definition,fields){this.measures=definition.measures.map((measure)=>createMeasure(fields,measure));this.columns=definition.columns.map((dimension)=>createPivotDimension(fields,dimension));this.rows=definition.rows.map((dimension)=>createPivotDimension(fields,dimension));}
getDimension(nameWithGranularity){const dimension=this.columns.find((d)=>d.nameWithGranularity===nameWithGranularity)||this.rows.find((d)=>d.nameWithGranularity===nameWithGranularity);if(!dimension){throw new EvaluationError(_t("Dimension %s does not exist",nameWithGranularity));}
return dimension;}
getMeasure(id){const measure=this.measures.find((measure)=>measure.id===id);if(!measure){throw new EvaluationError(_t("Field %s is not a measure",id));}
return measure;}}
function createMeasure(fields,measure){const fieldName=measure.fieldName;const field=fieldName==="__count"?{name:"__count",string:_t("Count"),type:"integer",aggregator:"sum"}:fields[fieldName];const aggregator=measure.aggregator;return{id:measure.id,get displayName(){return measure.userDefinedName??field?.string??measure.fieldName;},userDefinedName:measure.userDefinedName,fieldName,aggregator,type:fieldName==="__count"?"integer":field?.type??"integer",isValid:!!(field||measure.computedBy),isHidden:measure.isHidden,format:measure.format,computedBy:measure.computedBy,display:measure.display,};}
function createPivotDimension(fields,dimension){const field=fields[dimension.fieldName];const type=field?.type??"integer";const granularity=field&&isDateOrDatetimeField(field)?dimension.granularity:undefined;return{displayName:field?.string??dimension.fieldName,nameWithGranularity:dimension.fieldName+(granularity?`:${granularity}`:""),fieldName:dimension.fieldName,granularity,type,order:dimension.order,isValid:!!field,};}
class SpreadsheetPivotRuntimeDefinition extends PivotRuntimeDefinition{range;constructor(definition,fields,getters){super(definition,fields);if(definition.dataSet){const{sheetId,zone}=definition.dataSet;this.range=getters.getRangeFromZone(sheetId,zone);}}}
class SpreadsheetPivotTable{columns;rows;measures;fieldsType;maxIndent;pivotCells={};rowTree;colTree;constructor(columns,rows,measures,fieldsType){this.columns=columns.map((row)=>{let offset=1;return row.map((col)=>{col={...col,offset};offset+=col.width;return col;});});this.rows=rows;this.measures=measures;this.fieldsType=fieldsType;this.maxIndent=Math.max(...this.rows.map((row)=>row.indent));this.rowTree=lazy(()=>this.buildRowsTree());this.colTree=lazy(()=>this.buildColumnsTree());}
getNumberOfDataColumns(){return this.columns.at(-1)?.length||0;}
getPivotCells(includeTotal=true,includeColumnHeaders=true){const key=JSON.stringify({includeTotal,includeColumnHeaders});if(!this.pivotCells[key]){const numberOfDataRows=this.rows.length;const numberOfDataColumns=this.getNumberOfDataColumns();let pivotHeight=this.columns.length+numberOfDataRows;let pivotWidth=1+numberOfDataColumns;if(!includeTotal&&numberOfDataRows!==1){pivotHeight-=1;}
if(!includeTotal&&numberOfDataColumns!==this.measures.length){pivotWidth-=this.measures.length;}
const domainArray=[];const startRow=includeColumnHeaders?0:this.columns.length;for(let col=0;col<pivotWidth;col++){domainArray.push([]);for(let row=startRow;row<pivotHeight;row++){if(!includeTotal&&row===pivotHeight){continue;}
domainArray[col].push(this.getPivotCell(col,row,includeTotal));}}
this.pivotCells[key]=domainArray;}
return this.pivotCells[key];}
getRowTree(){return this.rowTree();}
getColTree(){return this.colTree();}
isTotalRow(index){return this.rows[index].indent!==this.maxIndent;}
getPivotCell(col,row,includeTotal=true){const colHeadersHeight=this.columns.length;if(col>0&&row===colHeadersHeight-1){const domain=this.getColHeaderDomain(col,row);if(!domain){return EMPTY_PIVOT_CELL;}
const measure=domain.at(-1)?.value?.toString()||"";return{type:"MEASURE_HEADER",domain:domain.slice(0,-1),measure};}
else if(row<=colHeadersHeight-1){const domain=this.getColHeaderDomain(col,row);return domain?{type:"HEADER",domain}:EMPTY_PIVOT_CELL;}
else if(col===0){const rowIndex=row-colHeadersHeight;const domain=this.getRowDomain(rowIndex);return{type:"HEADER",domain};}
else{const rowIndex=row-colHeadersHeight;if(!includeTotal&&this.isTotalRow(rowIndex)){return EMPTY_PIVOT_CELL;}
const domain=[...this.getRowDomain(rowIndex),...this.getColDomain(col)];const measure=this.getColMeasure(col);return{type:"VALUE",domain,measure};}}
getColHeaderDomain(col,row){if(col===0){return undefined;}
const domain=[];const pivotCol=this.columns[row].find((pivotCol)=>pivotCol.offset===col);if(!pivotCol){return undefined;}
for(let i=0;i<pivotCol.fields.length;i++){const fieldWithGranularity=pivotCol.fields[i];if(fieldWithGranularity==="measure"){domain.push({type:"char",field:fieldWithGranularity,value:toNormalizedPivotValue({displayName:"measure",type:"char"},pivotCol.values[i]),});}
else{const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]||"char";domain.push({type,field:fieldWithGranularity,value:toNormalizedPivotValue({displayName:fieldName,type,granularity},pivotCol.values[i]),});}}
return domain;}
getColDomain(col){const domain=this.getColHeaderDomain(col,this.columns.length-1);return domain?domain.slice(0,-1):[];}
getColMeasure(col){const domain=this.getColHeaderDomain(col,this.columns.length-1);const measure=domain?.at(-1)?.value;if(measure===undefined||measure===null){throw new Error("Measure is missing");}
return measure.toString();}
getRowDomain(row){const domain=[];for(let i=0;i<this.rows[row].fields.length;i++){const fieldWithGranularity=this.rows[row].fields[i];const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]||"char";domain.push({type,field:fieldWithGranularity,value:toNormalizedPivotValue({displayName:fieldName,type,granularity},this.rows[row].values[i]),});}
return domain;}
buildRowsTree(){const tree=[];let depth=0;const treesAtDepth={};treesAtDepth[0]=tree;for(const row of this.rows){if(row.fields.length===0||row.values.length===0){return tree;}
const rowDepth=row.fields.length-1;const fieldWithGranularity=row.fields[rowDepth];const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]??"char";const value=toNormalizedPivotValue({displayName:fieldName,type,granularity},row.values[rowDepth]);if(rowDepth>depth){depth=rowDepth;treesAtDepth[depth]=[];const parentNode=treesAtDepth[depth-1].at(-1);if(parentNode){parentNode.children=treesAtDepth[depth];}}
depth=rowDepth;const node={value,field:row.fields[rowDepth],children:[],width:0,};treesAtDepth[depth].push(node);}
return tree;}
buildColumnsTree(){const tree=[];const columns=this.columns.at(-2)||[];const treesAtDepth={};treesAtDepth[0]=tree;for(const leaf of columns){for(let depth=0;depth<leaf.fields.length;depth++){const fieldWithGranularity=leaf.fields[depth];const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]??"char";const value=toNormalizedPivotValue({displayName:fieldName,type,granularity},leaf.values[depth]);const node={value,field:leaf.fields[depth],children:[],width:leaf.width,};if(treesAtDepth[depth]?.at(-1)?.value!==value){treesAtDepth[depth+1]=[];node.children=treesAtDepth[depth+1];treesAtDepth[depth].push(node);}}}
return tree;}
export(){return{cols:this.columns,rows:this.rows,measures:this.measures,fieldsType:this.fieldsType,};}}
const EMPTY_PIVOT_CELL={type:"EMPTY"};function dataEntriesToSpreadsheetPivotTable(dataEntries,definition){const measureIds=definition.measures.filter((measure)=>!measure.isHidden).map((m)=>m.id);const columnsTree=dataEntriesToColumnsTree(dataEntries,definition.columns,0);computeWidthOfColumnsNodes(columnsTree,measureIds.length);const cols=columnsTreeToColumns(columnsTree,definition);const rows=dataEntriesToRows(dataEntries,0,definition.rows,[],[]);rows.push({fields:[],values:[],indent:0,});const fieldsType={};for(const columns of definition.columns){fieldsType[columns.fieldName]=columns.type;}
for(const row of definition.rows){fieldsType[row.fieldName]=row.type;}
return new SpreadsheetPivotTable(cols,rows,measureIds,fieldsType);}
function dataEntriesToRows(dataEntries,index,rows,fields,values){if(index>=rows.length){return[];}
const row=rows[index];const rowName=row.nameWithGranularity;const groups=groupPivotDataEntriesBy(dataEntries,row);const orderedKeys=orderDataEntriesKeys(groups,row);const pivotTableRows=[];const _fields=fields.concat(rowName);for(const value of orderedKeys){const _values=values.concat(value);pivotTableRows.push({fields:_fields,values:_values,indent:index,});const record=groups[value];if(record){pivotTableRows.push(...dataEntriesToRows(record,index+1,rows,_fields,_values));}}
return pivotTableRows;}
function dataEntriesToColumnsTree(dataEntries,columns,index){if(index>=columns.length){return[];}
const column=columns[index];const colName=columns[index].nameWithGranularity;const groups=groupPivotDataEntriesBy(dataEntries,column);const orderedKeys=orderDataEntriesKeys(groups,columns[index]);return orderedKeys.map((key)=>{return{value:groups[key]?.[0]?.[column.nameWithGranularity]?.value??null,field:colName,children:dataEntriesToColumnsTree(groups[key]||[],columns,index+1),width:0,};});}
function computeWidthOfColumnsNodes(tree,measureCount){for(const key in tree){const node=tree[key];if(node.children.length===0){node.width=measureCount;}
else{computeWidthOfColumnsNodes(node.children,measureCount);node.width=node.children.reduce((acc,child)=>acc+child.width,0);}}}
function columnsTreeToColumns(mainTree,definition){const columnNames=definition.columns.map((col)=>col.nameWithGranularity);const height=columnNames.length;const measures=definition.measures.filter((measure)=>!measure.isHidden);const measureCount=measures.length;const headers=new Array(height).fill(0).map(()=>[]);function generateTreeHeaders(tree,rowIndex,val){const row=headers[rowIndex];for(const node of tree){const localVal=val.concat([node.value]);const cell={fields:columnNames.slice(0,rowIndex+1),values:localVal,width:node.width,offset:0,};row.push(cell);if(rowIndex<=height-1){generateTreeHeaders(node.children,rowIndex+1,localVal);}}}
generateTreeHeaders(mainTree,0,[]);const hasColGroupBys=columnNames.length>0;const measureRow=[];if(hasColGroupBys){headers[headers.length-1].forEach((cell)=>{measures.forEach((measure)=>{const measureCell={fields:[...cell.fields,"measure"],values:[...cell.values,measure.id],width:1,offset:0,};measureRow.push(measureCell);});});}
measures.forEach((measure)=>{const measureCell={fields:["measure"],values:[measure.id],width:1,offset:0,};measureRow.push(measureCell);});headers.push(measureRow);if(headers.length===1){headers.unshift([]);}
headers[headers.length-2].push({fields:[],values:[],width:measureCount,offset:0,});return headers;}
function groupPivotDataEntriesBy(dataEntries,dimension){return Object.groupBy(dataEntries,keySelector(dimension));}
function keySelector(dimension){const name=dimension.nameWithGranularity;return(item)=>{return`${item[name]?.value ?? null}`;};}
function orderDataEntriesKeys(groups,dimension){const order=dimension.order;if(!order){return Object.keys(groups);}
return Object.keys(groups).sort((a,b)=>compareDimensionValues(dimension,a,b));}
function compareDimensionValues(dimension,a,b){if(a==="null"){return dimension.order==="asc"?1:-1;}
if(b==="null"){return dimension.order==="asc"?-1:1;}
if(dimension.type==="integer"||dimension.type==="datetime"){return dimension.order==="asc"?Number(a)-Number(b):Number(b)-Number(a);}
return dimension.order==="asc"?a.localeCompare(b):b.localeCompare(a);}
const NULL_SYMBOL=Symbol("NULL");function createDate(dimension,value,locale){const granularity=dimension.granularity;if(!granularity||!(granularity in MAP_VALUE_DIMENSION_DATE)){throw new Error(`Unknown date granularity: ${granularity}`);}
const keyInMap=typeof value==="number"||typeof value==="string"?value:NULL_SYMBOL;if(!MAP_VALUE_DIMENSION_DATE[granularity].set.has(value)){MAP_VALUE_DIMENSION_DATE[granularity].set.add(value);let number=null;if(typeof value==="number"||typeof value==="string"){const date=toJsDate(value,locale);switch(granularity){case"year":number=date.getFullYear();break;case"quarter_number":number=Math.floor(date.getMonth()/3)+1;break;case"month_number":number=date.getMonth()+1;break;case"iso_week_number":number=date.getIsoWeek();break;case"day_of_month":number=date.getDate();break;case"day":number=Math.floor(toNumber(value,locale));break;case"day_of_week":number=((date.getDay()+7-locale.weekStart)%7)+1;break;case"hour_number":number=date.getHours();break;case"minute_number":number=date.getMinutes();break;case"second_number":number=date.getSeconds();break;}}
MAP_VALUE_DIMENSION_DATE[granularity].values[keyInMap]=toNormalizedPivotValue(dimension,number);}
return MAP_VALUE_DIMENSION_DATE[granularity].values[keyInMap];}
const MAP_VALUE_DIMENSION_DATE={year:{set:new Set(),values:{},},quarter_number:{set:new Set(),values:{},},month_number:{set:new Set(),values:{},},iso_week_number:{set:new Set(),values:{},},day_of_month:{set:new Set(),values:{},},day:{set:new Set(),values:{},},day_of_week:{set:new Set(),values:{},},hour_number:{set:new Set(),values:{},},minute_number:{set:new Set(),values:{},},second_number:{set:new Set(),values:{},},};function resetMapValueDimensionDate(){for(const key in MAP_VALUE_DIMENSION_DATE){MAP_VALUE_DIMENSION_DATE[key].set.clear();MAP_VALUE_DIMENSION_DATE[key].values={};}}
var ReloadType;(function(ReloadType){ReloadType[ReloadType["NONE"]=0]="NONE";ReloadType[ReloadType["TABLE"]=1]="TABLE";ReloadType[ReloadType["DATA"]=2]="DATA";ReloadType[ReloadType["DEFINITION"]=3]="DEFINITION";ReloadType[ReloadType["ALL"]=4]="ALL";})(ReloadType||(ReloadType={}));class SpreadsheetPivot{type="SPREADSHEET";getters;_definition;coreDefinition;metaData={fields:{},fieldKeys:[]};dataEntries=[];table;invalidRangeError;needsReevaluation=true;constructor(custom,params){this.getters=params.getters;this.coreDefinition=params.definition;}
init(params={}){if(!this._definition||params.reload){this.reload(ReloadType.ALL);this.needsReevaluation=false;}}
reload(type){if(type===ReloadType.ALL){this.metaData=this.loadMetaData();}
if(type>=ReloadType.DEFINITION){this._definition=this.loadRuntimeDefinition();}
if(type>=ReloadType.DATA){this.dataEntries=this.loadData();}
if(type>=ReloadType.TABLE){this.table=undefined;}}
onDefinitionChange(nextDefinition){const actualDefinition=this.coreDefinition;this.coreDefinition=nextDefinition;if(this._definition){const reloadType=Math.max(this.computeShouldReload(actualDefinition,nextDefinition),ReloadType.NONE);this.reload(reloadType);}}
computeShouldReload(actualDefinition,nextDefinition){if(deepEquals(actualDefinition.dataSet,nextDefinition.dataSet)){return ReloadType.DEFINITION;}
return ReloadType.ALL;}
get isInvalidRange(){return!!this.invalidRangeError;}
get invalidRangeMessage(){return this.invalidRangeError?.message;}
get definition(){if(!this._definition){this.init();}
if(!this._definition){throw new Error("Pivot definition should be defined at this point.");}
return this._definition;}
isValid(){if(this.invalidRangeError||!this.definition){return false;}
for(const measure of this.definition.measures){if(!measure.isValid){return false;}}
for(const column of this.definition.columns){if(!column.isValid){return false;}}
for(const row of this.definition.rows){if(!row.isValid){return false;}}
return true;}
assertIsValid({throwOnError}){if(!this.isValid()){if(throwOnError){if(this.invalidRangeError){throw this.invalidRangeError;}
else{throw new EvaluationError(_t("At least one measure and/or dimension is not correct."));}}
return{value:CellErrorType.GenericError,message:this.invalidRangeError?.message??_t("At least one measure and/or dimension is not correct."),};}
return undefined;}
areDomainArgsFieldsValid(args){let dimensions=args.filter((_,index)=>index%2===0).map(toString);if(dimensions.length&&dimensions.at(-1)==="measure"){dimensions=dimensions.slice(0,-1);}
return areDomainArgsFieldsValid(dimensions,this.definition);}
parseArgsToPivotDomain(args){const domain=[];for(let i=0;i<args.length-1;i+=2){const fieldWithGranularity=toString(args[i]);const type=this.getTypeOfDimension(fieldWithGranularity);const normalizedValue=fieldWithGranularity==="measure"?toString(args[i+1]):toNormalizedPivotValue(this.getDimension(fieldWithGranularity),args[i+1]);domain.push({field:fieldWithGranularity,value:normalizedValue,type});}
return domain;}
markAsDirtyForEvaluation(){this.needsReevaluation=true;}
getMeasure(id){return this.definition.getMeasure(id);}
getPivotMeasureValue(id){return{value:this.getMeasure(id).displayName,};}
getPivotHeaderValueAndFormat(domain){const lastNode=domain.at(-1);if(!lastNode){return{value:_t("Total")};}
const dimension=this.getDimension(lastNode.field);const cells=this.filterDataEntriesFromDomain(this.dataEntries,domain);const finalCell=cells[0]?.[dimension.nameWithGranularity];if(dimension.type==="datetime"){const adapter=pivotTimeAdapter(dimension.granularity);return adapter.toValueAndFormat(lastNode.value,this.getters.getLocale());}
if(!finalCell){return{value:""};}
if(finalCell.value===null){return{value:_t("(Undefined)")};}
return{value:finalCell.value,format:finalCell.format,};}
getPivotCellValueAndFormat(measureId,domain){const dataEntries=this.filterDataEntriesFromDomain(this.dataEntries,domain);if(dataEntries.length===0){return{value:""};}
const measure=this.getMeasure(measureId);const allValues=dataEntries.map((value)=>value[measure.fieldName]).filter(isDefined);const values=allValues.filter((cell)=>cell.type!==CellValueType.empty);const aggregator=measure.aggregator;const operator=AGGREGATORS_FN[aggregator];if(!operator){throw new Error(`Aggregator ${aggregator} does not exist`);}
try{const result=operator([allValues],this.getters.getLocale());if(values.length===0){return{...result,value:""};}
return result;}
catch(e){return handleError(e,aggregator.toUpperCase());}}
getPossibleFieldValues(dimension){const values=[];const groups=groupPivotDataEntriesBy(this.dataEntries,dimension);const orderedKeys=orderDataEntriesKeys(groups,dimension);for(const key of orderedKeys){values.push({value:groups[key]?.[0]?.[dimension.nameWithGranularity]?.value??"",label:groups[key]?.[0]?.[dimension.nameWithGranularity]?.formattedValue||"",});}
return values;}
getTableStructure(){if(!this.isValid()){throw new Error("Pivot is not valid !");}
if(!this.table){this.table=dataEntriesToSpreadsheetPivotTable(this.dataEntries,this.definition);}
return this.table;}
getFields(){return this.metaData.fields;}
get fields(){return this.getFields();}
loadMetaData(){this.invalidRangeError=undefined;if(this.coreDefinition.dataSet){const{zone,sheetId}=this.coreDefinition.dataSet;const range=this.getters.getRangeFromZone(sheetId,zone);try{return this.extractFieldsFromRange(range);}
catch(e){this.invalidRangeError=e;return{fields:{},fieldKeys:[]};}}
else{this.invalidRangeError=new EvaluationError(_t("The pivot cannot be created because the dataset is missing."));return{fields:{},fieldKeys:[]};}}
loadRuntimeDefinition(){return new SpreadsheetPivotRuntimeDefinition(this.coreDefinition,this.fields,this.getters);}
loadData(){const range=this._definition?.range;return this.isValid()&&range?this.extractDataEntriesFromRange(range):[];}
getTypeOfDimension(fieldWithGranularity){if(fieldWithGranularity==="measure"){return"char";}
const{fieldName}=parseDimension(fieldWithGranularity);const type=this.fields[fieldName]?.type;if(!type){throw new Error(`Field ${fieldName} does not exist`);}
return type;}
filterDataEntriesFromDomain(dataEntries,domain){return domain.reduce((current,acc)=>this.filterDataEntriesFromDomainNode(current,acc),dataEntries);}
filterDataEntriesFromDomainNode(dataEntries,domain){const{field,value}=domain;const{nameWithGranularity}=this.getDimension(field);return dataEntries.filter((entry)=>entry[nameWithGranularity]?.value===value);}
getDimension(nameWithGranularity){return this.definition.getDimension(nameWithGranularity);}
getTypeFromZone(sheetId,zone){const cells=this.getters.getEvaluatedCellsInZone(sheetId,zone);const nonEmptyCells=cells.filter((cell)=>cell.type!==CellValueType.empty);if(nonEmptyCells.length===0){return"integer";}
if(nonEmptyCells.every((cell)=>cell.format&&isDateTimeFormat(cell.format))){return"datetime";}
if(nonEmptyCells.every((cell)=>cell.type===CellValueType.boolean)){return"boolean";}
if(nonEmptyCells.some((cell)=>cell.type===CellValueType.text)){return"char";}
return"integer";}
assertCellIsValidField(col,row,cell){if(cell.type===CellValueType.error){throw new EvaluationError(_t("The pivot cannot be created because cell %s contains an error",toXC(col,row)));}
if(cell.type===CellValueType.empty||cell.value===""){throw new EvaluationError(_t("The pivot cannot be created because cell %s is empty",toXC(col,row)));}
if(cell.value==="__count"){throw new EvaluationError(_t("The pivot cannot be created because cell %s contains a reserved value",toXC(col,row)));}}
extractFieldsFromRange(range){const fields={};const fieldKeys=[];const sheetId=range.sheetId;const row=range.zone.top;for(let col=range.zone.left;col<=range.zone.right;col++){const cell=this.getters.getEvaluatedCell({sheetId,col,row});this.assertCellIsValidField(col,row,cell);const field=cell.value?.toString();if(field){const type=this.getTypeFromZone(sheetId,{top:range.zone.top+1,left:col,bottom:range.zone.bottom,right:col,});const string=this.findName(field,fields);fields[string]={name:string,type,string,aggregator:type==="integer"?"sum":"count",};fieldKeys.push(string);}}
return{fields,fieldKeys};}
findName(name,fields){let increment=1;const initialName=name;while(name in fields){name=`${initialName}${++increment}`;}
return name;}
extractDataEntriesFromRange(range){const dataEntries=[];for(let row=range.zone.top+1;row<=range.zone.bottom;row++){const zone={top:row,bottom:row,left:range.zone.left,right:range.zone.right};const cells=this.getters.getEvaluatedCellsInZone(range.sheetId,zone);const entry={};for(const index in cells){const cell=cells[index];const field=this.fields[this.metaData.fieldKeys[index]];if(!field){throw new Error(`Field ${this.metaData.fieldKeys[index]} does not exist`);}
if(cell.value===""){entry[field.name]={value:null,type:CellValueType.empty,formattedValue:""};}
else{entry[field.name]=cell;}}
entry["__count"]={value:1,type:CellValueType.number,formattedValue:"1"};dataEntries.push(entry);}
const dateDimensions=this.definition.columns.concat(this.definition.rows).filter((d)=>d.type==="datetime");if(dateDimensions.length){const locale=this.getters.getLocale();for(const entry of dataEntries){for(const dimension of dateDimensions){const value=createDate(dimension,entry[dimension.fieldName]?.value||null,this.getters.getLocale());const adapter=pivotTimeAdapter(dimension.granularity);const{format,value:valueToFormat}=adapter.toValueAndFormat(value,locale);entry[dimension.nameWithGranularity]={value,type:entry[dimension.fieldName]?.type||CellValueType.empty,format:entry[dimension.fieldName]?.format,formattedValue:formatValue(valueToFormat,{locale,format}),};}}}
return dataEntries;}}
const pivotRegistry=new Registry();const dateGranularities=["year","quarter_number","month_number","iso_week_number","day_of_month","day","day_of_week",];pivotRegistry.add("SPREADSHEET",{ui:SpreadsheetPivot,definition:SpreadsheetPivotRuntimeDefinition,externalData:false,onIterationEndEvaluation:(pivot)=>pivot.markAsDirtyForEvaluation(),dateGranularities:[...dateGranularities],datetimeGranularities:[...dateGranularities,"hour_number","minute_number","second_number"],isMeasureCandidate:(field)=>!["datetime","boolean"].includes(field.type),isGroupable:()=>true,});class PivotSidePanelStore extends SpreadsheetStore{pivotId;mutators=["reset","deferUpdates","applyUpdate","discardPendingUpdate","update"];updatesAreDeferred=false;draft=null;notification=this.get(NotificationStore);alreadyNotified=false;constructor(get,pivotId){super(get);this.pivotId=pivotId;}
handle(cmd){switch(cmd.type){case"UPDATE_PIVOT":if(cmd.pivotId===this.pivotId){this.getters.getPivot(this.pivotId).init();}}}
get fields(){return this.pivot.getFields();}
get pivot(){return this.getters.getPivot(this.pivotId);}
get definition(){const Definition=pivotRegistry.get(this.pivot.type).definition;return this.draft?new Definition(this.draft,this.fields,this.getters):this.pivot.definition;}
get isDirty(){return!!this.draft;}
get measureFields(){const measureFields=[{name:"__count",string:_t("Count"),type:"integer",aggregator:"sum",},];const fields=this.fields;for(const fieldName in fields){const field=fields[fieldName];if(!field){continue;}
if(pivotRegistry.get(this.pivot.type).isMeasureCandidate(field)){measureFields.push(field);}}
return measureFields.sort((a,b)=>a.string.localeCompare(b.string));}
get unusedGroupableFields(){const groupableFields=[];const fields=this.fields;for(const fieldName in fields){const field=fields[fieldName];if(!field){continue;}
if(pivotRegistry.get(this.pivot.type).isGroupable(field)){groupableFields.push(field);}}
const{columns,rows,measures}=this.definition;const currentlyUsed=measures.concat(rows).concat(columns).map((field)=>field.fieldName);const unusedGranularities=this.unusedGranularities;return groupableFields.filter((field)=>{if(isDateOrDatetimeField(field)){return!currentlyUsed.includes(field.name)||unusedGranularities[field.name].size>0;}
return!currentlyUsed.includes(field.name);}).sort((a,b)=>a.string.localeCompare(b.string));}
get datetimeGranularities(){return pivotRegistry.get(this.pivot.type).datetimeGranularities;}
get dateGranularities(){return pivotRegistry.get(this.pivot.type).dateGranularities;}
get unusedGranularities(){return this.getUnusedGranularities(this.fields,this.draft??this.getters.getPivotCoreDefinition(this.pivotId));}
reset(pivotId){this.pivotId=pivotId;this.updatesAreDeferred=true;this.draft=null;}
deferUpdates(shouldDefer){this.updatesAreDeferred=shouldDefer;if(shouldDefer===false&&this.draft){this.applyUpdate();}}
applyUpdate(){if(this.draft){this.model.dispatch("UPDATE_PIVOT",{pivotId:this.pivotId,pivot:this.draft,});this.draft=null;if(!this.alreadyNotified&&!this.isDynamicPivotInViewport()){const formulaId=this.getters.getPivotFormulaId(this.pivotId);const pivotExample=`=PIVOT(${formulaId})`;this.alreadyNotified=true;this.notification.notifyUser({type:"info",text:_t("Pivot updates only work with dynamic pivot tables. Use %s or re-insert the static pivot from the Data menu.",pivotExample),sticky:false,});}}}
discardPendingUpdate(){this.draft=null;}
update(definitionUpdate){const coreDefinition=this.getters.getPivotCoreDefinition(this.pivotId);const definition={...coreDefinition,...this.draft,...definitionUpdate,};const cleanedDefinition={...definition,columns:definition.columns.map((col)=>({fieldName:col.fieldName,order:col.order,granularity:col.granularity,})),rows:definition.rows.map((row)=>({fieldName:row.fieldName,order:row.order,granularity:row.granularity,})),measures:definition.measures.map((measure)=>({id:measure.id,fieldName:measure.fieldName,aggregator:measure.aggregator,userDefinedName:measure.userDefinedName,computedBy:measure.computedBy,isHidden:measure.isHidden,format:measure.format,display:measure.display,})),};if(!this.draft&&deepEquals(coreDefinition,cleanedDefinition)){return;}
const cleanedWithGranularity=this.addDefaultDateTimeGranularity(this.fields,cleanedDefinition);this.draft=cleanedWithGranularity;if(!this.updatesAreDeferred){this.applyUpdate();}}
isDynamicPivotInViewport(){const sheetId=this.getters.getActiveSheetId();for(const col of this.getters.getSheetViewVisibleCols()){for(const row of this.getters.getSheetViewVisibleRows()){const isDynamicPivot=this.getters.isSpillPivotFormula({sheetId,col,row});if(isDynamicPivot){return true;}}}
return false;}
addDefaultDateTimeGranularity(fields,definition){const{columns,rows}=definition;const columnsWithGranularity=deepCopy(columns);const rowsWithGranularity=deepCopy(rows);const unusedGranularities=this.getUnusedGranularities(fields,definition);for(const dimension of columnsWithGranularity.concat(rowsWithGranularity)){const fieldType=fields[dimension.fieldName]?.type;if((fieldType==="date"||fieldType==="datetime")&&!dimension.granularity){const granularity=unusedGranularities[dimension.fieldName]?.values().next().value||"year";unusedGranularities[dimension.fieldName]?.delete(granularity);dimension.granularity=granularity;}}
return{...definition,columns:columnsWithGranularity,rows:rowsWithGranularity,};}
getUnusedGranularities(fields,definition){const{columns,rows}=definition;const dateFields=columns.concat(rows).filter((dimension)=>{const fieldType=fields[dimension.fieldName]?.type;return fieldType==="date"||fieldType==="datetime";});const granularitiesPerFields={};for(const field of dateFields){granularitiesPerFields[field.fieldName]=new Set(fields[field.fieldName]?.type==="date"?this.dateGranularities:this.datetimeGranularities);}
for(const field of dateFields){granularitiesPerFields[field.fieldName].delete(field.granularity);}
return granularitiesPerFields;}}
class PivotSpreadsheetSidePanel extends Component{static template="o-spreadsheet-PivotSpreadsheetSidePanel";static props={pivotId:String,onCloseSidePanel:Function,};static components={PivotLayoutConfigurator,Section,SelectionInput,Checkbox,PivotDeferUpdate,PivotTitleSection,};store;state;setup(){this.store=useLocalStore(PivotSidePanelStore,this.props.pivotId);this.state=useState({range:undefined,rangeHasChanged:false,});}
get shouldDisplayInvalidRangeError(){if(this.store.isDirty&&this.state.rangeHasChanged){return false;}
return this.pivot.isInvalidRange;}
get ranges(){if(this.state.range){return[this.state.range];}
if(this.definition.range){return[this.env.model.getters.getRangeString(this.definition.range,"forceSheetReference")];}
return[];}
get pivot(){return this.store.pivot;}
get definition(){return this.store.definition;}
onSelectionChanged(ranges){this.state.rangeHasChanged=true;this.state.range=ranges[0];}
onSelectionConfirmed(){if(this.state.range){const range=this.env.model.getters.getRangeFromSheetXC(this.env.model.getters.getActiveSheetId(),this.state.range);if(range.invalidSheetName||range.invalidXc){return;}
const dataSet={sheetId:range.sheetId,zone:range.zone};this.store.update({dataSet});this.store.applyUpdate();}}
flipAxis(){const{rows,columns}=this.definition;this.onDimensionsUpdated({rows:columns,columns:rows,});}
onDimensionsUpdated(definition){this.store.update(definition);}}
const pivotSidePanelRegistry=new Registry();pivotSidePanelRegistry.add("SPREADSHEET",{editor:PivotSpreadsheetSidePanel,});class PivotSidePanel extends Component{static template="o-spreadsheet-PivotSidePanel";static props={pivotId:String,onCloseSidePanel:Function,};static components={PivotLayoutConfigurator,Section,};get sidePanelEditor(){const pivot=this.env.model.getters.getPivotCoreDefinition(this.props.pivotId);if(!pivot){throw new Error("pivotId does not correspond to a pivot.");}
return pivotSidePanelRegistry.get(pivot.type).editor;}}
css`
  .o-checkbox-selection {
    max-height: 300px;
  }
`;class RemoveDuplicatesPanel extends Component{static template="o-spreadsheet-RemoveDuplicatesPanel";static components={ValidationMessages,Section,Checkbox};static props={onCloseSidePanel:Function};state=useState({hasHeader:false,columns:{},});setup(){onWillUpdateProps(()=>this.updateColumns());}
toggleHasHeader(){this.state.hasHeader=!this.state.hasHeader;}
toggleAllColumns(){const newState=!this.isEveryColumnSelected;for(const index in this.state.columns){this.state.columns[index]=newState;}}
toggleColumn(colIndex){this.state.columns[colIndex]=!this.state.columns[colIndex];}
onRemoveDuplicates(){this.env.model.dispatch("REMOVE_DUPLICATES",{hasHeader:this.state.hasHeader,columns:this.getColsToAnalyze(),});}
getColLabel(colKey){const col=parseInt(colKey);let colLabel=_t("Column %s",numberToLetters(col));if(this.state.hasHeader){const sheetId=this.env.model.getters.getActiveSheetId();const row=this.env.model.getters.getSelectedZone().top;const colHeader=this.env.model.getters.getEvaluatedCell({sheetId,col,row});if(colHeader.type!=="empty"){colLabel+=` - ${colHeader.value}`;}}
return colLabel;}
get isEveryColumnSelected(){return Object.values(this.state.columns).every((value)=>value===true);}
get errorMessages(){const cancelledReasons=this.env.model.canDispatch("REMOVE_DUPLICATES",{hasHeader:this.state.hasHeader,columns:this.getColsToAnalyze(),}).reasons;const errors=new Set();for(const reason of cancelledReasons){errors.add(RemoveDuplicateTerms.Errors[reason]||RemoveDuplicateTerms.Errors.Unexpected);}
return Array.from(errors);}
get selectionStatisticalInformation(){const dimension=zoneToDimension(this.env.model.getters.getSelectedZone());return _t("%(row_count)s rows and %(column_count)s columns selected",{row_count:dimension.numberOfRows,column_count:dimension.numberOfCols,});}
get canConfirm(){return this.errorMessages.length===0;}
updateColumns(){const zone=this.env.model.getters.getSelectedZone();const oldColumns=this.state.columns;const newColumns={};for(let i=zone.left;i<=zone.right;i++){newColumns[i]=i in oldColumns?oldColumns[i]:true;}
this.state.columns=newColumns;}
getColsToAnalyze(){return Object.keys(this.state.columns).filter((colIndex)=>this.state.columns[colIndex]).map((colIndex)=>parseInt(colIndex));}}
css`
  .o-locale-preview {
    border: 1px solid ${GRAY_300};
    background-color: ${GRAY_100};
  }
`;class SettingsPanel extends Component{static template="o-spreadsheet-SettingsPanel";static components={Section,ValidationMessages};static props={onCloseSidePanel:Function};loadedLocales=[];setup(){onWillStart(()=>this.loadLocales());}
onLocaleChange(code){const locale=this.loadedLocales.find((l)=>l.code===code);if(!locale)
return;this.env.model.dispatch("UPDATE_LOCALE",{locale});}
async loadLocales(){this.loadedLocales=(await this.env.loadLocales()).filter((locale)=>{const isValid=isValidLocale(locale);if(!isValid){console.warn(`Invalid locale: ${locale["code"]} ${locale}`);}
return isValid;}).sort((a,b)=>a.name.localeCompare(b.name));}
get numberFormatPreview(){const locale=this.env.model.getters.getLocale();return formatValue(1234567.89,{format:"#,##0.00",locale});}
get dateFormatPreview(){const locale=this.env.model.getters.getLocale();return formatValue(1.6,{format:locale.dateFormat,locale});}
get dateTimeFormatPreview(){const locale=this.env.model.getters.getLocale();const dateTimeFormat=getDateTimeFormat(locale);return formatValue(1.6,{format:dateTimeFormat,locale});}
get firstDayOfWeek(){const locale=this.env.model.getters.getLocale();const weekStart=locale.weekStart;return DAYS$1[weekStart%7];}
get currentLocale(){return this.env.model.getters.getLocale();}
get supportedLocales(){const currentLocale=this.currentLocale;const localeInLoadedLocales=this.loadedLocales.find((l)=>l.code===currentLocale.code);if(!localeInLoadedLocales){const locales=[...this.loadedLocales,currentLocale].sort((a,b)=>a.name.localeCompare(b.name));return locales;}
else if(!deepEquals(currentLocale,localeInLoadedLocales)){const index=this.loadedLocales.indexOf(localeInLoadedLocales);const locales=[...this.loadedLocales];locales[index]=currentLocale;locales.sort((a,b)=>a.name.localeCompare(b.name));return locales;}
return this.loadedLocales;}}
const SplitToColumnsInteractiveContent={SplitIsDestructive:_t("This will overwrite data in the subsequent columns. Split anyway?"),};function interactiveSplitToColumns(env,separator,addNewColumns){let result=env.model.dispatch("SPLIT_TEXT_INTO_COLUMNS",{separator,addNewColumns});if(result.isCancelledBecause("SplitWillOverwriteContent")){env.askConfirmation(SplitToColumnsInteractiveContent.SplitIsDestructive,()=>{result=env.model.dispatch("SPLIT_TEXT_INTO_COLUMNS",{separator,addNewColumns,force:true,});});}
return result;}
const SEPARATORS=[{name:_t("Detect automatically"),value:"auto"},{name:_t("Custom separator"),value:"custom"},{name:_t("Space"),value:" "},{name:_t("Comma"),value:","},{name:_t("Semicolon"),value:";"},{name:_t("Line Break"),value:NEWLINE},];class SplitIntoColumnsPanel extends Component{static template="o-spreadsheet-SplitIntoColumnsPanel";static components={ValidationMessages,Section,Checkbox};static props={onCloseSidePanel:Function};state=useState({separatorValue:"auto",addNewColumns:false,customSeparator:""});setup(){const composerFocusStore=useStore(ComposerFocusStore);useEffect((editionMode)=>{if(editionMode!=="inactive"){this.props.onCloseSidePanel();}},()=>[composerFocusStore.focusMode]);onMounted(()=>{composerFocusStore.activeComposer.stopEdition();});}
onSeparatorChange(value){this.state.separatorValue=value;}
updateCustomSeparator(ev){if(!ev.target)
return;this.state.customSeparator=ev.target.value;}
updateAddNewColumnsCheckbox(addNewColumns){this.state.addNewColumns=addNewColumns;}
confirm(){const result=interactiveSplitToColumns(this.env,this.separatorValue,this.state.addNewColumns);if(result.isSuccessful){this.props.onCloseSidePanel();}}
get errorMessages(){const cancelledReasons=this.env.model.canDispatch("SPLIT_TEXT_INTO_COLUMNS",{separator:this.separatorValue,addNewColumns:this.state.addNewColumns,force:true,}).reasons;const errors=new Set();for(const reason of cancelledReasons){switch(reason){case"SplitWillOverwriteContent":case"EmptySplitSeparator":break;default:errors.add(SplitToColumnsTerms.Errors[reason]||SplitToColumnsTerms.Errors.Unexpected);}}
return Array.from(errors);}
get warningMessages(){const warnings=[];const cancelledReasons=this.env.model.canDispatch("SPLIT_TEXT_INTO_COLUMNS",{separator:this.separatorValue,addNewColumns:this.state.addNewColumns,force:false,}).reasons;if(cancelledReasons.includes("SplitWillOverwriteContent")){warnings.push(SplitToColumnsTerms.Errors["SplitWillOverwriteContent"]);}
return warnings;}
get separatorValue(){if(this.state.separatorValue==="custom"){return this.state.customSeparator;}
else if(this.state.separatorValue==="auto"){return this.env.model.getters.getAutomaticSeparator();}
return this.state.separatorValue;}
get separators(){return SEPARATORS;}
get isConfirmDisabled(){return!this.separatorValue||this.errorMessages.length>0;}}
const TABLE_ELEMENTS_BY_PRIORITY=["wholeTable","firstColumnStripe","secondColumnStripe","firstRowStripe","secondRowStripe","firstColumn","lastColumn","headerRow","totalRow",];function getTableContentZone(tableZone,tableConfig){const numberOfHeaders=tableConfig.numberOfHeaders;const contentZone={...tableZone,top:tableZone.top+numberOfHeaders};return contentZone.top<=contentZone.bottom?contentZone:undefined;}
function getTableTopLeft(table){const range=table.range;return{row:range.zone.top,col:range.zone.left,sheetId:range.sheetId};}
function createFilter(id,range,config,createRange){const zone=range.zone;if(zone.left!==zone.right){throw new Error("Can only define a filter on a single column");}
const filteredZone={...zone,top:zone.top+config.numberOfHeaders};const filteredRange=createRange(range.sheetId,filteredZone);return{id,rangeWithHeaders:range,col:zone.left,filteredRange:filteredZone.top>filteredZone.bottom?undefined:filteredRange,};}
function isStaticTable(table){return table.type==="static"||table.type==="forceStatic";}
function getComputedTableStyle(tableConfig,style,numberOfCols,numberOfRows){return{borders:getAllTableBorders(tableConfig,style,numberOfCols,numberOfRows),styles:getAllTableStyles(tableConfig,style,numberOfCols,numberOfRows),};}
function getAllTableBorders(tableConfig,style,nOfCols,nOfRows){const borders=generateMatrix(nOfCols,nOfRows,()=>({}));for(const tableElement of TABLE_ELEMENTS_BY_PRIORITY){const styleBorder=style[tableElement]?.border;if(!styleBorder)
continue;const zones=getTableElementZones(tableElement,tableConfig,nOfCols,nOfRows);for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const noInsideBorder=tableElement==="wholeTable"&&row<=tableConfig.numberOfHeaders-1;if(row===zone.top&&styleBorder?.top){setBorderDescr(borders,"top",styleBorder.top,col,row,nOfCols,nOfRows);}
else if(row!==zone.top&&!noInsideBorder&&styleBorder?.horizontal){setBorderDescr(borders,"top",styleBorder.horizontal,col,row,nOfCols,nOfRows);}
if(row===zone.bottom&&styleBorder?.bottom){setBorderDescr(borders,"bottom",styleBorder.bottom,col,row,nOfCols,nOfRows);}
if(col===zone.left&&styleBorder?.left){setBorderDescr(borders,"left",styleBorder.left,col,row,nOfCols,nOfRows);}
if(col===zone.right&&styleBorder?.right){setBorderDescr(borders,"right",styleBorder.right,col,row,nOfCols,nOfRows);}
else if(col!==zone.right&&!noInsideBorder&&styleBorder?.vertical){setBorderDescr(borders,"right",styleBorder.vertical,col,row,nOfCols,nOfRows);}}}}}
return borders;}
function setBorderDescr(computedBorders,dir,borderDescr,col,row,numberOfCols,numberOfRows){switch(dir){case"top":computedBorders[col][row].top=borderDescr;if(row!==0){computedBorders[col][row-1].bottom=borderDescr;}
return;case"bottom":computedBorders[col][row].bottom=borderDescr;if(row!==numberOfRows-1){computedBorders[col][row+1].top=borderDescr;}
return;case"left":computedBorders[col][row].left=borderDescr;if(col!==0){computedBorders[col-1][row].right=borderDescr;}
return;case"right":computedBorders[col][row].right=borderDescr;if(col!==numberOfCols-1){computedBorders[col+1][row].left=borderDescr;}
return;}}
function getAllTableStyles(tableConfig,style,numberOfCols,numberOfRows){const styles=generateMatrix(numberOfCols,numberOfRows,()=>({}));for(const tableElement of TABLE_ELEMENTS_BY_PRIORITY){const tableElStyle=style[tableElement];const bold=isTableElementInBold(tableElement);if(!tableElStyle&&!bold){continue;}
const zones=getTableElementZones(tableElement,tableConfig,numberOfCols,numberOfRows);for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){if(!styles[col][row]){styles[col][row]={};}
styles[col][row]={...styles[col][row],...tableElStyle?.style,};if(bold){styles[col][row].bold=true;}}}}}
return styles;}
function isTableElementInBold(tableElement){return(tableElement==="firstColumn"||tableElement==="lastColumn"||tableElement==="headerRow"||tableElement==="totalRow");}
function getTableElementZones(el,tableConfig,numberOfCols,numberOfRows){const zones=[];const headerRows=Math.min(tableConfig.numberOfHeaders,numberOfRows);const totalRows=tableConfig.totalRow?1:0;const lastCol=numberOfCols-1;const lastRow=numberOfRows-1;switch(el){case"wholeTable":zones.push({top:0,left:0,bottom:lastRow,right:lastCol});break;case"firstColumn":if(!tableConfig.firstColumn)
break;zones.push({top:0,left:0,bottom:lastRow,right:0});break;case"lastColumn":if(!tableConfig.lastColumn)
break;zones.push({top:0,left:lastCol,bottom:lastRow,right:lastCol});break;case"headerRow":if(!tableConfig.numberOfHeaders)
break;zones.push({top:0,left:0,bottom:headerRows-1,right:lastCol});break;case"totalRow":if(!tableConfig.totalRow)
break;zones.push({top:lastRow,left:0,bottom:lastRow,right:lastCol});break;case"firstRowStripe":if(!tableConfig.bandedRows)
break;for(let i=headerRows;i<numberOfRows-totalRows;i+=2){zones.push({top:i,left:0,bottom:i,right:lastCol});}
break;case"secondRowStripe":if(!tableConfig.bandedRows)
break;for(let i=headerRows+1;i<numberOfRows-totalRows;i+=2){zones.push({top:i,left:0,bottom:i,right:lastCol});}
break;case"firstColumnStripe":if(!tableConfig.bandedColumns)
break;for(let i=0;i<numberOfCols;i+=2){zones.push({top:headerRows,left:i,bottom:lastRow-totalRows,right:i});}
break;case"secondColumnStripe":if(!tableConfig.bandedColumns)
break;for(let i=1;i<numberOfCols;i+=2){zones.push({top:headerRows,left:i,bottom:lastRow-totalRows,right:i});}
break;}
return zones;}
function createTableStyleContextMenuActions(env,styleId){if(!env.model.getters.isTableStyleEditable(styleId)){return[];}
return createActions([{id:"editTableStyle",name:_t("Edit table style"),execute:(env)=>env.openSidePanel("TableStyleEditorPanel",{styleId}),icon:"o-spreadsheet-Icon.EDIT",},{id:"deleteTableStyle",name:_t("Delete table style"),execute:(env)=>env.model.dispatch("REMOVE_TABLE_STYLE",{tableStyleId:styleId}),icon:"o-spreadsheet-Icon.TRASH",},]);}
function drawPreviewTable(ctx,tableStyle,colWidth,rowHeight){ctx.resetTransform();drawBackgrounds(ctx,tableStyle,colWidth,rowHeight);drawBorders(ctx,tableStyle,colWidth,rowHeight);drawTexts(ctx,tableStyle,colWidth,rowHeight);}
function drawBackgrounds(ctx,tableStyle,colWidth,rowHeight){ctx.save();for(let col=0;col<5;col++){for(let row=0;row<5;row++){ctx.fillStyle=tableStyle.styles[col][row].fillColor||"#fff";ctx.fillRect(col*colWidth,row*rowHeight,colWidth,rowHeight);}}
ctx.restore();}
function drawBorders(ctx,tableStyle,colWidth,rowHeight){ctx.save();ctx.translate(0,0.5);ctx.lineWidth=1;for(let col=0;col<5;col++){for(let row=0;row<5;row++){const borders=tableStyle.borders[col][row];if(borders.top){ctx.strokeStyle=borders.top.color;ctx.beginPath();ctx.moveTo(col*colWidth,row*rowHeight);ctx.lineTo(col*colWidth+colWidth,row*rowHeight);ctx.stroke();}
if(borders.bottom){ctx.strokeStyle=borders.bottom.color;ctx.beginPath();ctx.moveTo(col*colWidth,row*rowHeight+rowHeight);ctx.lineTo(col*colWidth+colWidth,row*rowHeight+rowHeight);ctx.stroke();}}}
ctx.resetTransform();ctx.translate(0.5,0);for(let col=0;col<5;col++){for(let row=0;row<5;row++){const borders=tableStyle.borders[col][row];if(borders.left){ctx.strokeStyle=borders.left.color;ctx.beginPath();ctx.moveTo(col*colWidth,row*rowHeight);ctx.lineTo(col*colWidth,row*rowHeight+rowHeight);ctx.stroke();}
if(borders.right){ctx.strokeStyle=borders.right.color;ctx.beginPath();ctx.moveTo(col*colWidth+colWidth,row*rowHeight);ctx.lineTo(col*colWidth+colWidth,row*rowHeight+rowHeight+1);ctx.stroke();}}}
ctx.restore();}
function drawTexts(ctx,tableStyle,colWidth,rowHeight){ctx.save();ctx.translate(0,0.5);ctx.lineWidth=1;const xPadding=Math.floor(colWidth/4);const yPadding=Math.floor(rowHeight/2);for(let col=0;col<5;col++){for(let row=0;row<5;row++){ctx.strokeStyle=tableStyle.styles[col][row].textColor||"#000";ctx.beginPath();ctx.moveTo(col*colWidth+xPadding+1,row*rowHeight+yPadding);ctx.lineTo(col*colWidth+colWidth-xPadding,row*rowHeight+yPadding);ctx.stroke();}}
ctx.restore();}
css`
  .o-table-style-list-item {
    border: 1px solid transparent;
    border-radius: 4px;
    &.selected {
      border: 1px solid ${ACTION_COLOR};
      background: ${BADGE_SELECTED_COLOR};
    }

    &:hover {
      background: #ddd;
      .o-table-style-edit-button {
        display: block !important;
        right: 0;
        top: 0;
        background: #fff;
        cursor: pointer;
        border: 1px solid #ddd;
        padding: 1px 1px 1px 2px;
        .o-icon {
          font-size: 12px;
          width: 12px;
          height: 12px;
        }
      }
    }
  }
`;class TableStylePreview extends Component{static template="o-spreadsheet-TableStylePreview";static components={Menu};static props={tableConfig:Object,tableStyle:Object,class:String,styleId:{type:String,optional:true},selected:{type:Boolean,optional:true},onClick:{type:Function,optional:true},};canvasRef=useRef("canvas");menu=useState({isOpen:false,position:null,menuItems:[]});setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(this.props.tableConfig,nextProps.tableConfig)||!deepEquals(this.props.tableStyle,nextProps.tableStyle)){this.drawTable(nextProps);}});onMounted(()=>this.drawTable(this.props));}
drawTable(props){const ctx=this.canvasRef.el.getContext("2d");const{width,height}=this.canvasRef.el.getBoundingClientRect();this.canvasRef.el.width=width;this.canvasRef.el.height=height;const computedStyle=getComputedTableStyle(props.tableConfig,props.tableStyle,5,5);drawPreviewTable(ctx,computedStyle,(width-1)/5,(height-1)/5);}
onContextMenu(event){if(!this.props.styleId){return;}
this.menu.menuItems=createTableStyleContextMenuActions(this.env,this.props.styleId);this.menu.isOpen=true;this.menu.position={x:event.clientX,y:event.clientY};}
closeMenu(){this.menu.isOpen=false;this.menu.position=null;this.menu.menuItems=[];}
get styleName(){if(!this.props.styleId){return"";}
return this.env.model.getters.getTableStyle(this.props.styleId).displayName;}
get isStyleEditable(){if(!this.props.styleId){return false;}
return this.env.model.getters.isTableStyleEditable(this.props.styleId);}
editTableStyle(){this.env.openSidePanel("TableStyleEditorPanel",{styleId:this.props.styleId});}}
css`
  .o-table-style-popover {
    /** 7 tables preview + padding by line */
    width: calc((66px + 4px * 2) * 7 + 1.5rem * 2);
    background: #fff;
    font-size: 14px;
    user-select: none;

    .o-notebook {
      border-bottom: 1px solid ${GRAY_300};

      .o-notebook-tab {
        padding: 5px 15px;
        border: 1px solid ${GRAY_300};
        margin-bottom: -1px;
        margin-left: -1px;
        color: ${TEXT_BODY};
        cursor: pointer;
        transition: color 0.2s, border-color 0.2s;

        &.selected {
          border-bottom-color: #fff;
          border-top-color: ${PRIMARY_BUTTON_BG};
          color: ${TEXT_HEADING};
        }
      }
    }

    .o-table-style-list-item {
      padding: 3px;
    }

    .o-table-style-popover-preview {
      width: 66px;
      height: 51px;
    }

    .o-new-table-style {
      font-size: 36px;
      color: #666;
      &:hover {
        background: #f5f5f5;
      }
    }
  }
`;class TableStylesPopover extends Component{static template="o-spreadsheet-TableStylesPopover";static components={Popover,TableStylePreview};static props={tableConfig:Object,popoverProps:{type:Object,optional:true},closePopover:Function,onStylePicked:Function,selectedStyleId:{type:String,optional:true},};categories=TABLE_STYLE_CATEGORIES;tableStyleListRef=useRef("tableStyleList");state=useState({selectedCategory:this.initialSelectedCategory});menu=useState({isOpen:false,position:null,menuItems:[]});setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
onExternalClick(ev){if(this.tableStyleListRef.el&&!isChildEvent(this.tableStyleListRef.el,ev)){this.props.closePopover();ev.hasClosedTableStylesPopover=true;}}
get displayedStyles(){const styles=this.env.model.getters.getTableStyles();return Object.keys(styles).filter((styleId)=>styles[styleId].category===this.state.selectedCategory);}
get initialSelectedCategory(){return this.props.selectedStyleId?this.env.model.getters.getTableStyle(this.props.selectedStyleId).category:"medium";}
newTableStyle(){this.props.closePopover();this.env.openSidePanel("TableStyleEditorPanel",{onStylePicked:this.props.onStylePicked,});}}
css`
  .o-table-style-picker {
    box-sizing: border-box;
    border: 1px solid ${GRAY_300};
    border-radius: 3px;

    .o-table-style-picker-arrow {
      border-left: 1px solid ${GRAY_300};

      &:hover {
        background: #f5f5f5;
        cursor: pointer;
      }
    }

    .o-table-style-list-item {
      padding: 5px 6px;
      margin: 5px 2px;

      .o-table-style-picker-preview {
        width: 51px;
        height: 36px;
      }
    }
  }
`;class TableStylePicker extends Component{static template="o-spreadsheet-TableStylePicker";static components={TableStylesPopover,TableStylePreview};static props={table:Object};state=useState({popoverProps:undefined});getDisplayedTableStyles(){const allStyles=this.env.model.getters.getTableStyles();const selectedStyleCategory=allStyles[this.props.table.config.styleId].category;const styles=Object.keys(allStyles).filter((key)=>allStyles[key].category===selectedStyleCategory);const selectedStyleIndex=styles.indexOf(this.props.table.config.styleId);if(selectedStyleIndex===-1){return selectedStyleIndex;}
const index=Math.floor(selectedStyleIndex/4)*4;return styles.slice(index);}
onStylePicked(styleId){const sheetId=this.env.model.getters.getActiveSheetId();this.env.model.dispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,config:{styleId:styleId},});this.closePopover();}
onArrowButtonClick(ev){if(ev.hasClosedTableStylesPopover||this.state.popoverProps){this.closePopover();return;}
const target=ev.currentTarget;const{bottom,right}=target.getBoundingClientRect();this.state.popoverProps={anchorRect:{x:right,y:bottom,width:0,height:0},positioning:"TopRight",verticalOffset:0,};}
closePopover(){this.state.popoverProps=undefined;}}
css`
  .o-table-panel {
    input.o-table-n-of-headers {
      width: 14px;
      text-align: center;
    }

    .o-info-icon {
      width: 14px;
      height: 14px;
    }
  }
`;class TablePanel extends Component{static template="o-spreadsheet-TablePanel";static components={TableStylePicker,SelectionInput,ValidationMessages,Checkbox,Section};static props={onCloseSidePanel:Function,table:Object};state;setup(){const sheetId=this.env.model.getters.getActiveSheetId();this.state=useState({tableZoneErrors:[],tableXc:this.env.model.getters.getRangeString(this.props.table.range,sheetId),filtersEnabledIfPossible:this.props.table.config.hasFilters,});}
updateHasFilters(hasFilters){this.state.filtersEnabledIfPossible=hasFilters;this.updateTableConfig("hasFilters",hasFilters);}
updateTableConfig(attName,value){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.dispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,config:{[attName]:value},});}
updateHasHeaders(hasHeaders){const numberOfHeaders=hasHeaders?1:0;this.updateNumberOfHeaders(numberOfHeaders);}
updateTableIsDynamic(isDynamic){const newTableType=isDynamic?"dynamic":"forceStatic";if(newTableType===this.props.table.type){return;}
const uiTable=this.env.model.getters.getTable(getTableTopLeft(this.props.table));if(!uiTable){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const result=this.env.model.dispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,newTableRange:uiTable.range.rangeData,tableType:newTableType,});const updatedTable=this.env.model.getters.getCoreTable(getTableTopLeft(this.props.table));if(result.isSuccessful&&updatedTable){const newTableRange=updatedTable.range;this.state.tableXc=this.env.model.getters.getRangeString(newTableRange,sheetId);this.state.tableZoneErrors=[];}}
onChangeNumberOfHeaders(ev){const input=ev.target;const numberOfHeaders=parseInt(input.value);const result=this.updateNumberOfHeaders(numberOfHeaders);if(!result.isSuccessful){input.value=this.props.table.config.numberOfHeaders.toString();}}
updateNumberOfHeaders(numberOfHeaders){const hasFilters=numberOfHeaders>0&&(this.tableConfig.hasFilters||this.state.filtersEnabledIfPossible);return this.env.model.dispatch("UPDATE_TABLE",{sheetId:this.env.model.getters.getActiveSheetId(),zone:this.props.table.range.zone,config:{numberOfHeaders,hasFilters},});}
onRangeChanged(ranges){const sheetId=this.env.model.getters.getActiveSheetId();this.state.tableXc=ranges[0];const newTableRange=this.env.model.getters.getRangeFromSheetXC(sheetId,this.state.tableXc);this.state.tableZoneErrors=this.env.model.canDispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,newTableRange:this.env.model.getters.getRangeDataFromXc(sheetId,this.state.tableXc),tableType:this.getNewTableType(newTableRange.zone),}).reasons;}
onRangeConfirmed(){const sheetId=this.env.model.getters.getActiveSheetId();let newRange=this.env.model.getters.getRangeFromSheetXC(sheetId,this.state.tableXc);if(getZoneArea(newRange.zone)===1){const extendedZone=this.env.model.getters.getContiguousZone(sheetId,newRange.zone);newRange=this.env.model.getters.getRangeFromZone(sheetId,extendedZone);}
const newTableZone=newRange.zone;const oldTableZone=this.props.table.range.zone;const cmdToCall=newTableZone.top===oldTableZone.top&&newTableZone.left===oldTableZone.left?"RESIZE_TABLE":"UPDATE_TABLE";const result=this.env.model.dispatch(cmdToCall,{sheetId,zone:this.props.table.range.zone,newTableRange:newRange.rangeData,tableType:this.getNewTableType(newRange.zone),});const position={sheetId,col:newRange.zone.left,row:newRange.zone.top};const updatedTable=this.env.model.getters.getCoreTable(position);if(result.isSuccessful&&updatedTable){const newTopLeft=getTableTopLeft(updatedTable);this.env.model.selection.selectZone({zone:positionToZone(newTopLeft),cell:newTopLeft,});const newTableRange=updatedTable.range;this.state.tableXc=this.env.model.getters.getRangeString(newTableRange,sheetId);}}
deleteTable(){const sheetId=this.env.model.getters.getActiveSheetId();this.env.model.dispatch("REMOVE_TABLE",{sheetId,target:[this.props.table.range.zone],});}
getNewTableType(newTableZone){if(this.props.table.type==="forceStatic"){return"forceStatic";}
const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.canCreateDynamicTableOnZones(sheetId,[newTableZone])?"dynamic":"static";}
get tableConfig(){return this.props.table.config;}
get errorMessages(){const cancelledReasons=this.state.tableZoneErrors||[];return cancelledReasons.map((error)=>TableTerms.Errors[error]||TableTerms.Errors.Unexpected);}
getCheckboxLabel(attName){return TableTerms.Checkboxes[attName];}
get canHaveFilters(){return this.tableConfig.numberOfHeaders>0;}
get hasFilterCheckboxTooltip(){return this.canHaveFilters?undefined:TableTerms.Tooltips.filterWithoutHeader;}
get canBeDynamic(){const sheetId=this.env.model.getters.getActiveSheetId();return(this.props.table.type==="dynamic"||this.env.model.getters.canCreateDynamicTableOnZones(sheetId,[this.props.table.range.zone]));}
get dynamicTableTooltip(){return TableTerms.Tooltips.isDynamic;}}
css`
  .o-table-style-editor-panel {
    .o-table-style-list-item {
      margin: 2px 7px;
      padding: 6px 9px;

      .o-table-style-edit-template-preview {
        width: 71px;
        height: 51px;
      }
    }
  }
`;class TableStyleEditorPanel extends Component{static template="o-spreadsheet-TableStyleEditorPanel";static components={Section,RoundColorPicker,TableStylePreview};static props={onCloseSidePanel:Function,onStylePicked:{type:Function,optional:true},styleId:{type:String,optional:true},};state=useState(this.getInitialState());setup(){useExternalListener(window,"click",()=>(this.state.pickerOpened=false));}
getInitialState(){const editedStyle=this.props.styleId?this.env.model.getters.getTableStyle(this.props.styleId):null;return{pickerOpened:false,primaryColor:editedStyle?.primaryColor||"#3C78D8",selectedTemplateName:editedStyle?.templateName||"lightColoredText",styleName:editedStyle?.displayName||this.env.model.getters.getNewCustomTableStyleName(),};}
togglePicker(){this.state.pickerOpened=!this.state.pickerOpened;}
onColorPicked(color){this.state.primaryColor=color;this.state.pickerOpened=false;}
onTemplatePicked(templateName){this.state.selectedTemplateName=templateName;}
onConfirm(){const tableStyleId=this.props.styleId||this.env.model.uuidGenerator.uuidv4();this.env.model.dispatch("CREATE_TABLE_STYLE",{tableStyleId,tableStyleName:this.state.styleName,templateName:this.state.selectedTemplateName,primaryColor:this.state.primaryColor,});this.props.onStylePicked?.(tableStyleId);this.props.onCloseSidePanel();}
onCancel(){this.props.onCloseSidePanel();}
onDelete(){if(!this.props.styleId){return;}
this.env.model.dispatch("REMOVE_TABLE_STYLE",{tableStyleId:this.props.styleId});this.props.onCloseSidePanel();}
get colorPreviewStyle(){return cssPropertiesToCss({background:this.state.primaryColor});}
get tableTemplates(){return Object.keys(TABLE_STYLES_TEMPLATES).filter((templateName)=>templateName!=="none");}
get previewTableConfig(){return{bandedColumns:false,bandedRows:true,firstColumn:false,lastColumn:false,numberOfHeaders:1,totalRow:true,hasFilters:true,styleId:"",};}
get selectedStyle(){return this.computeTableStyle(this.state.selectedTemplateName);}
computeTableStyle(templateName){return buildTableStyle(this.state.styleName,templateName,this.state.primaryColor);}}
const sidePanelRegistry=new Registry();sidePanelRegistry.add("ConditionalFormatting",{title:_t("Conditional formatting"),Body:ConditionalFormattingPanel,});sidePanelRegistry.add("ChartPanel",{title:_t("Chart"),Body:ChartPanel,computeState:(getters,initialProps)=>{const figureId=getters.getSelectedFigureId()??initialProps.figureId;if(!getters.isChartDefined(figureId)){return{isOpen:false};}
return{isOpen:true,props:{figureId}};},});sidePanelRegistry.add("FindAndReplace",{title:_t("Find and Replace"),Body:FindAndReplacePanel,});sidePanelRegistry.add("CustomCurrency",{title:_t("Custom currency format"),Body:CustomCurrencyPanel,});sidePanelRegistry.add("SplitToColumns",{title:_t("Split text into columns"),Body:SplitIntoColumnsPanel,});sidePanelRegistry.add("Settings",{title:_t("Spreadsheet settings"),Body:SettingsPanel,});sidePanelRegistry.add("RemoveDuplicates",{title:_t("Remove duplicates"),Body:RemoveDuplicatesPanel,});sidePanelRegistry.add("DataValidation",{title:_t("Data validation"),Body:DataValidationPanel,});sidePanelRegistry.add("DataValidationEditor",{title:_t("Data validation"),Body:DataValidationEditor,});sidePanelRegistry.add("MoreFormats",{title:_t("More date formats"),Body:MoreFormatsPanel,});sidePanelRegistry.add("TableSidePanel",{title:_t("Edit table"),Body:TablePanel,computeState:(getters)=>{const table=getters.getFirstTableInSelection();if(!table){return{isOpen:false};}
const coreTable=getters.getCoreTable(getTableTopLeft(table));return{isOpen:true,props:{table:coreTable},key:table.id};},});sidePanelRegistry.add("TableStyleEditorPanel",{title:_t("Create custom table style"),Body:TableStyleEditorPanel,computeState:(getters,initialProps)=>{return{isOpen:true,props:{...initialProps},key:initialProps.styleId??"new",};},});sidePanelRegistry.add("PivotSidePanel",{title:(env,props)=>{return _t("Pivot #%s",env.model.getters.getPivotFormulaId(props.pivotId));},Body:PivotSidePanel,computeState:(getters,props)=>{return{isOpen:getters.isExistingPivot(props.pivotId),props,key:`pivot_key_${props.pivotId}`,};},});sidePanelRegistry.add("PivotMeasureDisplayPanel",{title:(env,props)=>{const measure=env.model.getters.getPivot(props.pivotId).getMeasure(props.measure.id);return _t('Measure "%s" options',measure.displayName);},Body:PivotMeasureDisplayPanel,computeState:(getters,props)=>{try{getters.getPivot(props.pivotId).getMeasure(props.measure.id);return{isOpen:true,props,key:"pivot_measure_display"};}
catch(e){return{isOpen:false};}},});class TopBarComponentRegistry extends Registry{mapping={};uuidGenerator=new UuidGenerator();add(name,value){const component={...value,id:this.uuidGenerator.uuidv4()};return super.add(name,component);}
getAllOrdered(){return this.getAll().sort((a,b)=>a.sequence-b.sequence);}}
const topbarComponentRegistry=new TopBarComponentRegistry();const ANCHOR_SIZE=8;const BORDER_WIDTH=1;const ACTIVE_BORDER_WIDTH=2;css`
  div.o-figure {
    box-sizing: border-box;
    position: absolute;
    width: 100%;
    height: 100%;
    user-select: none;

    &:focus {
      outline: none;
    }
  }

  div.o-figure-border {
    box-sizing: border-box;
    z-index: 1;
  }

  .o-figure-wrapper {
    position: absolute;
    box-sizing: content-box;

    .o-fig-anchor {
      z-index: ${ComponentsImportance.FigureAnchor};
      position: absolute;
      width: ${ANCHOR_SIZE}px;
      height: ${ANCHOR_SIZE}px;
      background-color: #1a73e8;
      outline: ${BORDER_WIDTH}px solid white;

      &.o-top {
        cursor: n-resize;
      }
      &.o-topRight {
        cursor: ne-resize;
      }
      &.o-right {
        cursor: e-resize;
      }
      &.o-bottomRight {
        cursor: se-resize;
      }
      &.o-bottom {
        cursor: s-resize;
      }
      &.o-bottomLeft {
        cursor: sw-resize;
      }
      &.o-left {
        cursor: w-resize;
      }
      &.o-topLeft {
        cursor: nw-resize;
      }
    }

    .o-figure-menu {
      right: 0px;
      top: 0px;
      display: none;
    }

    .o-figure-menu-item {
      cursor: pointer;
    }

    .o-figure.active:focus,
    .o-figure:hover {
      .o-figure-menu {
        display: flex;
      }
    }
  }
`;class FigureComponent extends Component{static template="o-spreadsheet-FigureComponent";static props={figure:Object,style:{type:String,optional:true},onFigureDeleted:{type:Function,optional:true},onMouseDown:{type:Function,optional:true},onClickAnchor:{type:Function,optional:true},};static components={Menu};static defaultProps={onFigureDeleted:()=>{},onMouseDown:()=>{},onClickAnchor:()=>{},};menuState=useState({isOpen:false,position:null,menuItems:[]});figureRef=useRef("figure");menuButtonRef=useRef("menuButton");menuButtonRect=useAbsoluteBoundingRect(this.menuButtonRef);borderWidth;get isSelected(){return this.env.model.getters.getSelectedFigureId()===this.props.figure.id;}
get figureRegistry(){return figureRegistry;}
getBorderWidth(){if(this.env.isDashboard())
return 0;return this.isSelected?ACTIVE_BORDER_WIDTH:this.borderWidth;}
get borderStyle(){const borderWidth=this.getBorderWidth();const borderColor=this.isSelected?SELECTION_BORDER_COLOR:FIGURE_BORDER_COLOR;return`border: ${borderWidth}px solid ${borderColor};`;}
get wrapperStyle(){const{x,y,width,height}=this.props.figure;return cssPropertiesToCss({left:`${x}px`,top:`${y}px`,width:`${width}px`,height:`${height}px`,"z-index":String(ComponentsImportance.Figure+(this.isSelected?1:0)),});}
getResizerPosition(resizer){const anchorCenteringOffset=(ANCHOR_SIZE-ACTIVE_BORDER_WIDTH)/2;let style={};if(resizer.includes("top")){style.top=`${-anchorCenteringOffset}px`;}
else if(resizer.includes("bottom")){style.bottom=`${-anchorCenteringOffset}px`;}
else{style.bottom=`calc(50% - ${anchorCenteringOffset}px)`;}
if(resizer.includes("left")){style.left=`${-anchorCenteringOffset}px`;}
else if(resizer.includes("right")){style.right=`${-anchorCenteringOffset}px`;}
else{style.right=`calc(50% - ${anchorCenteringOffset}px)`;}
return cssPropertiesToCss(style);}
setup(){const borderWidth=figureRegistry.get(this.props.figure.tag).borderWidth;this.borderWidth=borderWidth!==undefined?borderWidth:BORDER_WIDTH;useEffect((selectedFigureId,thisFigureId,el)=>{if(selectedFigureId===thisFigureId){el?.focus({preventScroll:true});}},()=>[this.env.model.getters.getSelectedFigureId(),this.props.figure.id,this.figureRef.el]);onWillUnmount(()=>{this.props.onFigureDeleted();});}
clickAnchor(dirX,dirY,ev){this.props.onClickAnchor(dirX,dirY,ev);}
onMouseDown(ev){this.props.onMouseDown(ev);}
onKeyDown(ev){const figure=this.props.figure;const keyDownShortcut=keyboardEventToShortcutString(ev);switch(keyDownShortcut){case"Delete":case"Backspace":this.env.model.dispatch("DELETE_FIGURE",{sheetId:this.env.model.getters.getActiveSheetId(),id:figure.id,});this.props.onFigureDeleted();ev.preventDefault();ev.stopPropagation();break;case"ArrowDown":case"ArrowLeft":case"ArrowRight":case"ArrowUp":const deltaMap={ArrowDown:[0,1],ArrowLeft:[-1,0],ArrowRight:[1,0],ArrowUp:[0,-1],};const delta=deltaMap[ev.key];this.env.model.dispatch("UPDATE_FIGURE",{sheetId:this.env.model.getters.getActiveSheetId(),id:figure.id,x:figure.x+delta[0],y:figure.y+delta[1],});ev.preventDefault();ev.stopPropagation();break;case"Ctrl+A":ev.preventDefault();ev.stopPropagation();break;case"Ctrl+Y":case"Ctrl+Z":if(keyDownShortcut==="Ctrl+Y"){this.env.model.dispatch("REQUEST_REDO");}
else if(keyDownShortcut==="Ctrl+Z"){this.env.model.dispatch("REQUEST_UNDO");}
ev.preventDefault();ev.stopPropagation();break;}}
onContextMenu(ev){if(this.env.isDashboard())
return;const position={x:ev.clientX,y:ev.clientY,};this.openContextMenu(position);}
showMenu(){const{x,y,width}=this.menuButtonRect;const menuPosition={x:x>=MENU_WIDTH?x-MENU_WIDTH:x+width,y:y,};this.openContextMenu(menuPosition);}
openContextMenu(position){this.menuState.isOpen=true;this.menuState.position=position;this.menuState.menuItems=figureRegistry.get(this.props.figure.tag).menuBuilder(this.props.figure.id,this.props.onFigureDeleted,this.env);}}
const ToggleGroupInteractiveContent={CannotHideAllRows:_t("Cannot hide all the rows of a sheet."),CannotHideAllColumns:_t("Cannot hide all the columns of a sheet."),};function interactiveToggleGroup(env,sheetId,dimension,start,end){const group=env.model.getters.getHeaderGroup(sheetId,dimension,start,end);if(!group){return;}
const command=group.isFolded?"UNFOLD_HEADER_GROUP":"FOLD_HEADER_GROUP";const result=env.model.dispatch(command,{sheetId,dimension,start:group.start,end:group.end,});if(!result.isSuccessful){if(result.isCancelledBecause("NotEnoughElements")){const errorMessage=dimension==="ROW"?ToggleGroupInteractiveContent.CannotHideAllRows:ToggleGroupInteractiveContent.CannotHideAllColumns;env.raiseError(errorMessage);}}}
function createHeaderGroupContainerContextMenu(sheetId,dimension){return createActions([{id:"unfold_all",name:dimension==="ROW"?_t("Expand all row groups"):_t("Expand all column groups"),execute:(env)=>{env.model.dispatch("UNFOLD_ALL_HEADER_GROUPS",{sheetId,dimension});},},{id:"fold_all",name:dimension==="ROW"?_t("Collapse all row groups"):_t("Collapse all column groups"),execute:(env)=>{env.model.dispatch("FOLD_ALL_HEADER_GROUPS",{sheetId,dimension});},},]);}
function getHeaderGroupContextMenu(sheetId,dimension,start,end){const groupActions=createActions([{id:"toggle_group",name:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const groupIsFolded=env.model.getters.isGroupFolded(sheetId,dimension,start,end);if(groupIsFolded){return dimension==="ROW"?_t("Expand row group"):_t("Expand column group");}
else{return dimension==="ROW"?_t("Collapse row group"):_t("Collapse column group");}},execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();interactiveToggleGroup(env,sheetId,dimension,start,end);},},{id:"remove_group",name:dimension==="ROW"?_t("Remove row group"):_t("Remove column group"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNGROUP_HEADERS",{sheetId,dimension,start,end});},separator:true,},]);return[...groupActions,...createHeaderGroupContainerContextMenu(sheetId,dimension)];}
const groupHeadersMenuRegistry=new MenuItemRegistry();groupHeadersMenuRegistry.add("group_columns",{sequence:10,...groupColumns,isVisible:()=>true,isEnabled:groupColumns.isVisible,}).add("group_rows",{sequence:20,...groupRows,isVisible:()=>true,isEnabled:groupRows.isVisible,});const unGroupHeadersMenuRegistry=new MenuItemRegistry();unGroupHeadersMenuRegistry.add("ungroup_columns",{sequence:10,...ungroupColumns,isEnabled:(env)=>canUngroupHeaders(env,"COL"),}).add("ungroup_rows",{sequence:20,...ungroupRows,isEnabled:(env)=>canUngroupHeaders(env,"ROW"),});class ArrayFormulaHighlight extends SpreadsheetStore{highlightStore=this.get(HighlightStore);constructor(get){super(get);this.highlightStore.register(this);}
get highlights(){let zone;const position=this.model.getters.getActivePosition();const cell=this.getters.getEvaluatedCell(position);const spreader=this.model.getters.getArrayFormulaSpreadingOn(position);zone=spreader?this.model.getters.getSpreadZone(spreader,{ignoreSpillError:true}):this.model.getters.getSpreadZone(position,{ignoreSpillError:true});if(!zone){return[];}
return[{sheetId:position.sheetId,zone,dashed:cell.value===CellErrorType.SpilledBlocked,color:"#17A2B8",noFill:true,thinLine:true,},];}}
css`
  .o-autofill {
    position: absolute;
    height: ${AUTOFILL_EDGE_LENGTH}px;
    width: ${AUTOFILL_EDGE_LENGTH}px;
    border: 1px solid white;
    box-sizing: border-box !important;
    background-color: #1a73e8;
  }

  .o-autofill-handler {
    position: absolute;
    height: ${AUTOFILL_EDGE_LENGTH}px;
    width: ${AUTOFILL_EDGE_LENGTH}px;
    &:hover {
      cursor: crosshair;
    }
  }

  .o-autofill-nextvalue {
    position: absolute;
    background-color: #ffffff;
    border: 1px solid black;
    padding: 5px;
    font-size: 12px;
    pointer-events: none;
    white-space: nowrap;
  }
`;class Autofill extends Component{static template="o-spreadsheet-Autofill";static props={position:Object,isVisible:Boolean,};state=useState({position:{left:0,top:0},handler:false,});get style(){const{left,top}=this.props.position;return cssPropertiesToCss({top:`${top}px`,left:`${left}px`,visibility:this.props.isVisible?"visible":"hidden",});}
get handlerStyle(){const{left,top}=this.state.handler?this.state.position:this.props.position;return cssPropertiesToCss({top:`${top}px`,left:`${left}px`,});}
get styleNextValue(){const{left,top}=this.state.position;return cssPropertiesToCss({top:`${top + 5}px`,left:`${left + 15}px`,});}
getTooltip(){const tooltip=this.env.model.getters.getAutofillTooltip();if(tooltip&&!tooltip.component){tooltip.component=TooltipComponent;}
return tooltip;}
onMouseDown(ev){this.state.handler=true;let lastCol;let lastRow;const start={left:ev.clientX-this.props.position.left,top:ev.clientY-this.props.position.top,};const onMouseUp=()=>{this.state.handler=false;this.state.position={...this.props.position};this.env.model.dispatch("AUTOFILL");};const onMouseMove=(col,row,ev)=>{this.state.position={left:ev.clientX-start.left,top:ev.clientY-start.top,};if(lastCol!==col||lastRow!==row){const activeSheetId=this.env.model.getters.getActiveSheetId();const numberOfCols=this.env.model.getters.getNumberCols(activeSheetId);const numberOfRows=this.env.model.getters.getNumberRows(activeSheetId);lastCol=col===-1?lastCol:clip(col,0,numberOfCols);lastRow=row===-1?lastRow:clip(row,0,numberOfRows);if(lastCol!==undefined&&lastRow!==undefined){this.env.model.dispatch("AUTOFILL_SELECT",{col:lastCol,row:lastRow});}}};dragAndDropBeyondTheViewport(this.env,onMouseMove,onMouseUp);}
onDblClick(){this.env.model.dispatch("AUTOFILL_AUTO");}}
class TooltipComponent extends Component{static props={content:String,};static template=xml`
    <div t-esc="props.content"/>
  `;}
css`
  .o-client-tag {
    position: absolute;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    font-size: ${DEFAULT_FONT_SIZE};
    color: white;
    pointer-events: none;
  }
`;class ClientTag extends Component{static template="o-spreadsheet-ClientTag";static props={active:Boolean,name:String,color:String,col:Number,row:Number,};get tagStyle(){const{col,row,color}=this.props;const{height}=this.env.model.getters.getSheetViewDimensionWithHeaders();const{x,y}=this.env.model.getters.getVisibleRect({left:col,top:row,right:col,bottom:row,});return cssPropertiesToCss({bottom:`${height - y + 15}px`,left:`${x - 1}px`,border:`1px solid ${color}`,"background-color":color,});}}
const CELL_DELETED_MESSAGE=_t("The cell you are trying to edit has been deleted.");class CellComposerStore extends AbstractComposerStore{canStopEdition(){if(this.editionMode==="inactive"){return true;}
return this.checkDataValidation();}
stopEdition(direction){const canStopEdition=this.canStopEdition();if(canStopEdition){this._stopEdition();if(direction){this.model.selection.moveAnchorCell(direction,1);}
return;}
const editedCell=this.currentEditedCell;const cellXc=toXC(editedCell.col,editedCell.row);const rule=this.getters.getValidationRuleForCell(editedCell);if(!rule){return;}
const evaluator=dataValidationEvaluatorRegistry.get(rule.criterion.type);const errorStr=evaluator.getErrorString(rule.criterion,this.getters,editedCell.sheetId);this.notificationStore.raiseError(_t("The data you entered in %s violates the data validation rule set on the cell:\n%s",cellXc,errorStr));this.cancelEdition();}
handle(cmd){super.handle(cmd);switch(cmd.type){case"SET_FORMATTING":this.cancelEdition();break;case"ADD_COLUMNS_ROWS":this.onAddElements(cmd);break;case"REMOVE_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.onColumnsRemoved(cmd);}
else{this.onRowsRemoved(cmd);}
break;case"ACTIVATE_SHEET":if(!this._currentContent.startsWith("=")){this._cancelEdition();this.resetContent();}
if(cmd.sheetIdFrom!==cmd.sheetIdTo){const activePosition=this.getters.getActivePosition();const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:cmd.sheetIdTo,col:activePosition.col,row:activePosition.row,});const zone=this.getters.expandZone(cmd.sheetIdTo,positionToZone({col,row}));this.model.selection.resetAnchor(this,{cell:{col,row},zone});}
break;case"DELETE_SHEET":case"UNDO":case"REDO":const sheetIdExists=!!this.getters.tryGetSheet(this.sheetId);if(!sheetIdExists&&this.editionMode!=="inactive"){this.sheetId=this.getters.getActiveSheetId();this.cancelEditionAndActivateSheet();this.resetContent();this.notificationStore.raiseError(CELL_DELETED_MESSAGE);}
break;}}
get placeholder(){const position=this.getters.getActivePosition();const spreader=this.model.getters.getArrayFormulaSpreadingOn(position);if(!spreader){return undefined;}
const cell=this.getters.getCell(spreader);return cell?.content;}
get currentEditedCell(){return{sheetId:this.sheetId,col:this.col,row:this.row,};}
onColumnsRemoved(cmd){if(cmd.elements.includes(this.col)&&this.editionMode!=="inactive"){this.cancelEdition();this.notificationStore.raiseError(CELL_DELETED_MESSAGE);return;}
const{top,left}=updateSelectionOnDeletion({left:this.col,right:this.col,top:this.row,bottom:this.row},"left",[...cmd.elements]);this.col=left;this.row=top;}
onRowsRemoved(cmd){if(cmd.elements.includes(this.row)&&this.editionMode!=="inactive"){this.cancelEdition();this.notificationStore.raiseError(CELL_DELETED_MESSAGE);return;}
const{top,left}=updateSelectionOnDeletion({left:this.col,right:this.col,top:this.row,bottom:this.row},"top",[...cmd.elements]);this.col=left;this.row=top;}
onAddElements(cmd){const{top,left}=updateSelectionOnInsertion({left:this.col,right:this.col,top:this.row,bottom:this.row},cmd.dimension==="COL"?"left":"top",cmd.base,cmd.position,cmd.quantity);this.col=left;this.row=top;}
confirmEdition(content){if(content){const sheetId=this.getters.getActiveSheetId();const cell=this.getters.getEvaluatedCell({sheetId,col:this.col,row:this.row});if(cell.link&&!content.startsWith("=")){content=markdownLink(content,cell.link.url);}
this.addHeadersForSpreadingFormula(content);this.model.dispatch("UPDATE_CELL",{...this.currentEditedCell,content,});}
else{this.model.dispatch("UPDATE_CELL",{...this.currentEditedCell,content:"",});}
this.model.dispatch("AUTOFILL_TABLE_COLUMN",{...this.currentEditedCell});this.setContent("");}
getComposerContent(position){const locale=this.getters.getLocale();const cell=this.getters.getCell(position);if(cell?.isFormula){return localizeFormula(cell.content,locale);}
const spreader=this.model.getters.getArrayFormulaSpreadingOn(position);if(spreader){return"";}
const{format,value,type,formattedValue}=this.getters.getEvaluatedCell(position);switch(type){case CellValueType.empty:return"";case CellValueType.text:case CellValueType.error:return value;case CellValueType.boolean:return formattedValue;case CellValueType.number:if(format&&isDateTimeFormat(format)){if(parseDateTime(formattedValue,locale)!==null){return formattedValue;}
const timeFormat=Number.isInteger(value)?locale.dateFormat:getDateTimeFormat(locale);return formatValue(value,{locale,format:timeFormat});}
return this.numberComposerContent(value,format,locale);}}
numberComposerContent(value,format,locale){if(format?.includes("%")){return`${numberToString(value * 100, locale.decimalSeparator)}%`;}
return numberToString(value,locale.decimalSeparator);}
addHeadersForSpreadingFormula(content){if(!content.startsWith("=")){return;}
const evaluated=this.getters.evaluateFormula(this.sheetId,content);if(!isMatrix(evaluated)){return;}
const numberOfRows=this.getters.getNumberRows(this.sheetId);const numberOfCols=this.getters.getNumberCols(this.sheetId);const missingRows=this.row+evaluated[0].length-numberOfRows;const missingCols=this.col+evaluated.length-numberOfCols;if(missingCols>0){this.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:this.sheetId,dimension:"COL",base:numberOfCols-1,position:"after",quantity:missingCols+20,});}
if(missingRows>0){this.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:this.sheetId,dimension:"ROW",base:numberOfRows-1,position:"after",quantity:missingRows+50,});}}
checkDataValidation(){const cellPosition={sheetId:this.sheetId,col:this.col,row:this.row};const content=this.getCurrentCanonicalContent();const cellValue=content.startsWith("=")?this.getters.evaluateFormula(this.sheetId,content):parseLiteral(content,this.getters.getLocale());if(isMatrix(cellValue)){return true;}
const validationResult=this.getters.getValidationResultForCellValue(cellValue,cellPosition);if(!validationResult.isValid&&validationResult.rule.isBlocking){return false;}
return true;}}
const COMPOSER_BORDER_WIDTH=3*0.4*window.devicePixelRatio||1;const GRID_CELL_REFERENCE_TOP_OFFSET=28;css`
  div.o-grid-composer {
    z-index: ${ComponentsImportance.GridComposer};
    box-sizing: border-box;
    position: absolute;
    border: ${COMPOSER_BORDER_WIDTH}px solid ${SELECTION_BORDER_COLOR};
    font-family: ${DEFAULT_FONT};

    display: flex;
    align-items: center;
  }

  div.o-cell-reference {
    position: absolute;
    z-index: ${ComponentsImportance.GridComposer};
    background: ${SELECTION_BORDER_COLOR};
    color: white;
    font-size: 12px;
    line-height: 14px;
    padding: 6px 7px;
    border-radius: 4px;
  }
`;class GridComposer extends Component{static template="o-spreadsheet-GridComposer";static props={gridDims:Object,onInputContextMenu:Function,};static components={Composer};rect=this.defaultRect;isEditing=false;isCellReferenceVisible=false;composerStore;composerFocusStore;composerInterface;get defaultRect(){return{x:0,y:0,width:0,height:0};}
setup(){const composerStore=useStore(CellComposerStore);this.composerStore=composerStore;this.composerFocusStore=useStore(ComposerFocusStore);this.composerInterface={id:"gridComposer",get editionMode(){return composerStore.editionMode;},startEdition:this.composerStore.startEdition,setCurrentContent:this.composerStore.setCurrentContent,stopEdition:this.composerStore.stopEdition,};this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"inactive"});onWillUpdateProps(()=>{this.updateComponentPosition();this.updateCellReferenceVisibility();});}
get shouldDisplayCellReference(){return this.isCellReferenceVisible;}
get cellReference(){const{col,row,sheetId}=this.composerStore.currentEditedCell;const prefixSheet=sheetId!==this.env.model.getters.getActiveSheetId();return getFullReference(prefixSheet?this.env.model.getters.getSheetName(sheetId):undefined,toXC(col,row));}
get cellReferenceStyle(){const{x:left,y:top}=this.rect;return cssPropertiesToCss({left:`${left - COMPOSER_BORDER_WIDTH}px`,top:`${top - GRID_CELL_REFERENCE_TOP_OFFSET}px`,});}
get focus(){const focus=this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";return focus;}
get composerProps(){const{width,height}=this.env.model.getters.getSheetViewDimensionWithHeaders();return{rect:{...this.rect},delimitation:{width,height,},focus:this.focus,isDefaultFocus:true,onComposerContentFocused:()=>this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus",}),onComposerCellFocused:(content)=>this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"cellFocus",content,}),onInputContextMenu:this.props.onInputContextMenu,composerStore:this.composerStore,};}
get containerStyle(){if(this.composerStore.editionMode==="inactive"){return`z-index: -1000;`;}
const isFormula=this.composerStore.currentContent.startsWith("=");const cell=this.env.model.getters.getActiveCell();const position=this.env.model.getters.getActivePosition();const style=this.env.model.getters.getCellComputedStyle(position);const{x:left,y:top,width,height}=this.rect;const background=(!isFormula&&style.fillColor)||"#ffffff";const color=(!isFormula&&style.textColor)||"#000000";const fontSize=(!isFormula&&style.fontSize)||10;const fontWeight=!isFormula&&style.bold?"bold":undefined;const fontStyle=!isFormula&&style.italic?"italic":"normal";const textDecoration=!isFormula?getTextDecoration(style):"none";let textAlign="left";if(!isFormula){textAlign=style.align||cell.defaultAlign;}
const maxHeight=this.props.gridDims.height-this.rect.y;const maxWidth=this.props.gridDims.width-this.rect.x;return cssPropertiesToCss({left:`${left - 1}px`,top:`${top}px`,"min-width":`${width + 1}px`,"min-height":`${height + 1}px`,"max-width":`${maxWidth}px`,"max-height":`${maxHeight}px`,background,color,"font-size":`${fontSizeInPixels(fontSize)}px`,"font-weight":fontWeight,"font-style":fontStyle,"text-decoration":textDecoration,"text-align":textAlign,});}
updateComponentPosition(){const isEditing=this.composerFocusStore.activeComposer.editionMode!=="inactive";if(!isEditing&&this.composerFocusStore.activeComposer!==this.composerInterface){this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"inactive"});}
if(this.isEditing!==isEditing){this.isEditing=isEditing;if(!isEditing){this.rect=this.defaultRect;return;}
const position=this.env.model.getters.getActivePosition();const zone=this.env.model.getters.expandZone(position.sheetId,positionToZone(position));this.rect=this.env.model.getters.getVisibleRect(zone);}}
updateCellReferenceVisibility(){if(this.composerStore.editionMode==="inactive"){this.isCellReferenceVisible=false;return;}
if(this.isCellReferenceVisible){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const zone=this.env.model.getters.getSelectedZone();const rect=this.env.model.getters.getVisibleRect(zone);if(!deepEquals(rect,this.rect)||sheetId!==this.composerStore.currentEditedCell.sheetId){this.isCellReferenceVisible=true;}}
onFocus(){this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus"});}}
css`
  .o-grid-cell-icon {
    width: ${GRID_ICON_EDGE_LENGTH}px;
    height: ${GRID_ICON_EDGE_LENGTH}px;
  }
`;class GridCellIcon extends Component{static template="o-spreadsheet-GridCellIcon";static props={cellPosition:Object,horizontalAlign:{type:String,optional:true},verticalAlign:{type:String,optional:true},slots:Object,};get iconStyle(){const cellPosition=this.props.cellPosition;const merge=this.env.model.getters.getMerge(cellPosition);const zone=merge||positionToZone(cellPosition);const rect=this.env.model.getters.getVisibleRectWithoutHeaders(zone);const x=this.getIconHorizontalPosition(rect,cellPosition);const y=this.getIconVerticalPosition(rect,cellPosition);return cssPropertiesToCss({top:`${y}px`,left:`${x}px`,});}
getIconVerticalPosition(rect,cellPosition){const start=rect.y;const end=rect.y+rect.height;const cell=this.env.model.getters.getCell(cellPosition);const align=this.props.verticalAlign||cell?.style?.verticalAlign||DEFAULT_VERTICAL_ALIGN;switch(align){case"bottom":return end-GRID_ICON_MARGIN-GRID_ICON_EDGE_LENGTH;case"top":return start+GRID_ICON_MARGIN;default:const centeringOffset=Math.floor((end-start-GRID_ICON_EDGE_LENGTH)/2);return end-GRID_ICON_EDGE_LENGTH-centeringOffset;}}
getIconHorizontalPosition(rect,cellPosition){const start=rect.x;const end=rect.x+rect.width;const cell=this.env.model.getters.getCell(cellPosition);const evaluatedCell=this.env.model.getters.getEvaluatedCell(cellPosition);const align=this.props.horizontalAlign||cell?.style?.align||evaluatedCell.defaultAlign;switch(align){case"right":return end-GRID_ICON_MARGIN-GRID_ICON_EDGE_LENGTH;case"left":return start+GRID_ICON_MARGIN;default:const centeringOffset=Math.floor((end-start-GRID_ICON_EDGE_LENGTH)/2);return end-GRID_ICON_EDGE_LENGTH-centeringOffset;}}
isPositionVisible(position){const rect=this.env.model.getters.getVisibleRect(positionToZone(position));return!(rect.width===0||rect.height===0);}}
const MARGIN=(GRID_ICON_EDGE_LENGTH-CHECKBOX_WIDTH)/2;css`
  .o-dv-checkbox {
    box-sizing: border-box !important;
    accent-color: #808080;
    margin: ${MARGIN}px;
    /** required to prevent the checkbox position to be sensible to the font-size (affects Firefox) */
    position: absolute;
  }
`;class DataValidationCheckbox extends Component{static template="o-spreadsheet-DataValidationCheckbox";static components={Checkbox,};static props={cellPosition:Object,};onCheckboxChange(value){const{sheetId,col,row}=this.props.cellPosition;const cellContent=value?"TRUE":"FALSE";this.env.model.dispatch("UPDATE_CELL",{sheetId,col,row,content:cellContent});}
get checkBoxValue(){return!!this.env.model.getters.getEvaluatedCell(this.props.cellPosition).value;}
get isDisabled(){const cell=this.env.model.getters.getCell(this.props.cellPosition);return this.env.model.getters.isReadonly()||!!cell?.isFormula;}}
const ICON_WIDTH=13;css`
  .o-dv-list-icon {
    color: ${TEXT_BODY_MUTED};
    border-radius: 1px;
    height: ${GRID_ICON_EDGE_LENGTH}px;
    width: ${GRID_ICON_EDGE_LENGTH}px;

    &:hover {
      color: #ffffff;
      background-color: ${TEXT_BODY_MUTED};
    }

    svg {
      width: ${ICON_WIDTH}px;
      height: ${ICON_WIDTH}px;
    }
  }
`;class DataValidationListIcon extends Component{static template="o-spreadsheet-DataValidationListIcon";static props={cellPosition:Object,};onClick(){const{col,row}=this.props.cellPosition;this.env.model.selection.selectCell(col,row);this.env.startCellEdition();}}
class DataValidationOverlay extends Component{static template="o-spreadsheet-DataValidationOverlay";static props={};static components={GridCellIcon,DataValidationCheckbox,DataValidationListIcon};get checkBoxCellPositions(){return this.env.model.getters.getVisibleCellPositions().filter((position)=>this.env.model.getters.isCellValidCheckbox(position)&&!this.env.model.getters.isFilterHeader(position));}
get listIconsCellPositions(){if(this.env.model.getters.isReadonly()){return[];}
return this.env.model.getters.getVisibleCellPositions().filter((position)=>this.env.model.getters.cellHasListDataValidationIcon(position)&&!this.env.model.getters.isFilterHeader(position));}}
function internalFigureToScreen(getters,fig){return{...fig,...internalToScreenCoordinates(getters,{x:fig.x,y:fig.y})};}
function screenFigureToInternal(getters,fig){return{...fig,...screenCoordinatesToInternal(getters,{x:fig.x,y:fig.y})};}
function internalToScreenCoordinates(getters,{x,y}){const{x:viewportX,y:viewportY}=getters.getMainViewportCoordinates();const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();x=x<viewportX?x:x-scrollX;y=y<viewportY?y:y-scrollY;return{x,y};}
function screenCoordinatesToInternal(getters,{x,y}){const{x:viewportX,y:viewportY}=getters.getMainViewportCoordinates();const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();x=viewportX&&x<viewportX?x:x+scrollX;y=viewportY&&y<viewportY?y:y+scrollY;return{x,y};}
function dragFigureForMove({x:mouseX,y:mouseY},{x:mouseInitialX,y:mouseInitialY},initialFigure,{x:viewportX,y:viewportY},{maxX,maxY},{scrollX,scrollY}){const minX=viewportX?0:-scrollX;const minY=viewportY?0:-scrollY;const deltaX=mouseX-mouseInitialX;const newX=clip(initialFigure.x+deltaX,minX,maxX-initialFigure.width-scrollX);const deltaY=mouseY-mouseInitialY;const newY=clip(initialFigure.y+deltaY,minY,maxY-initialFigure.height-scrollY);return{...initialFigure,x:newX,y:newY};}
function dragFigureForResize(initialFigure,dirX,dirY,{x:mouseX,y:mouseY},{x:mouseInitialX,y:mouseInitialY},keepRatio,minFigSize,{scrollX,scrollY}){let{x,y,width,height}=initialFigure;if(keepRatio&&dirX!=0&&dirY!=0){const deltaX=Math.min(dirX*(mouseInitialX-mouseX),initialFigure.width-minFigSize);const deltaY=Math.min(dirY*(mouseInitialY-mouseY),initialFigure.height-minFigSize);const fraction=Math.min(deltaX/initialFigure.width,deltaY/initialFigure.height);width=initialFigure.width*(1-fraction);height=initialFigure.height*(1-fraction);if(dirX<0){x=initialFigure.x+initialFigure.width*fraction;}
if(dirY<0){y=initialFigure.y+initialFigure.height*fraction;}}
else{const deltaX=Math.max(dirX*(mouseX-mouseInitialX),minFigSize-initialFigure.width);const deltaY=Math.max(dirY*(mouseY-mouseInitialY),minFigSize-initialFigure.height);width=initialFigure.width+deltaX;height=initialFigure.height+deltaY;if(dirX<0){x=initialFigure.x-deltaX;}
if(dirY<0){y=initialFigure.y-deltaY;}}
if(x+scrollX<=0){width=width+x+scrollX;x=-scrollX;}
if(y+scrollY<=0){height=height+y+scrollY;y=-scrollY;}
return{...initialFigure,x,y,width,height};}
const SNAP_MARGIN=5;function snapForMove(getters,figureToSnap,otherFigures){const snappedFigure={...figureToSnap};const verticalSnapLine=getSnapLine(getters,snappedFigure,["hCenter","right","left"],otherFigures,["hCenter","right","left"]);const horizontalSnapLine=getSnapLine(getters,snappedFigure,["vCenter","bottom","top"],otherFigures,["vCenter","bottom","top"]);const{y:viewportY,x:viewportX}=getters.getMainViewportCoordinates();const{scrollY,scrollX}=getters.getActiveSheetScrollInfo();if(horizontalSnapLine){snappedFigure.y-=horizontalSnapLine.snapOffset;const isBaseFigFrozenY=figureToSnap.y<viewportY;const isSnappedFrozenY=snappedFigure.y<viewportY;if(isBaseFigFrozenY&&!isSnappedFrozenY)
snappedFigure.y+=scrollY;else if(!isBaseFigFrozenY&&isSnappedFrozenY)
snappedFigure.y-=scrollY;}
if(verticalSnapLine){snappedFigure.x-=verticalSnapLine.snapOffset;const isBaseFigFrozenX=figureToSnap.x<viewportX;const isSnappedFrozenX=snappedFigure.x<viewportX;if(isBaseFigFrozenX&&!isSnappedFrozenX)
snappedFigure.x+=scrollX;else if(!isBaseFigFrozenX&&isSnappedFrozenX)
snappedFigure.x-=scrollX;}
return{snappedFigure,verticalSnapLine,horizontalSnapLine};}
function snapForResize(getters,resizeDirX,resizeDirY,figureToSnap,otherFigures){const snappedFigure={...figureToSnap};const verticalSnapLine=getSnapLine(getters,snappedFigure,[resizeDirX===-1?"left":"right"],otherFigures,["right","left"]);if(verticalSnapLine){if(resizeDirX===1){snappedFigure.width-=verticalSnapLine.snapOffset;}
else if(resizeDirX===-1){snappedFigure.x-=verticalSnapLine.snapOffset;snappedFigure.width+=verticalSnapLine.snapOffset;}}
const horizontalSnapLine=getSnapLine(getters,snappedFigure,[resizeDirY===-1?"top":"bottom"],otherFigures,["bottom","top"]);if(horizontalSnapLine){if(resizeDirY===1){snappedFigure.height-=horizontalSnapLine.snapOffset;}
else if(resizeDirY===-1){snappedFigure.y-=horizontalSnapLine.snapOffset;snappedFigure.height+=horizontalSnapLine.snapOffset;}}
snappedFigure.x=Math.round(snappedFigure.x);snappedFigure.y=Math.round(snappedFigure.y);snappedFigure.height=Math.round(snappedFigure.height);snappedFigure.width=Math.round(snappedFigure.width);return{snappedFigure,verticalSnapLine,horizontalSnapLine};}
function getVisibleAxes(getters,figure,axesTypes){const axes=axesTypes.map((axisType)=>getAxis(figure,axisType));return axes.filter((axis)=>isAxisVisible(getters,figure,axis)).map((axis)=>getAxisScreenPosition(getters,figure,axis));}
function getAxisScreenPosition(getters,figure,figureAxis){const screenFigure=internalFigureToScreen(getters,figure);return getAxis(screenFigure,figureAxis.axisType);}
function isAxisVisible(getters,figure,axis){const{x:mainViewportX,y:mainViewportY}=getters.getMainViewportCoordinates();const axisStartEndPositions=[];switch(axis.axisType){case"top":case"bottom":case"vCenter":if(figure.y<mainViewportY)
return true;axisStartEndPositions.push({x:figure.x,y:axis.position});axisStartEndPositions.push({x:figure.x+figure.width,y:axis.position});break;case"left":case"right":case"hCenter":if(figure.x<mainViewportX)
return true;axisStartEndPositions.push({x:axis.position,y:figure.y});axisStartEndPositions.push({x:axis.position,y:figure.y+figure.height});break;}
return axisStartEndPositions.some(getters.isPositionVisible);}
function getSnapLine(getters,figureToSnap,figAxesTypes,otherFigures,otherAxesTypes){const axesOfFigure=getVisibleAxes(getters,figureToSnap,figAxesTypes);let closestMatch=undefined;for(const otherFigure of otherFigures){const axesOfOtherFig=getVisibleAxes(getters,otherFigure,otherAxesTypes);for(const axisOfFigure of axesOfFigure){for(const axisOfOtherFig of axesOfOtherFig){if(!canSnap(axisOfFigure.position,axisOfOtherFig.position))
continue;const snapOffset=axisOfFigure.position-axisOfOtherFig.position;if(closestMatch&&snapOffset===closestMatch.snapOffset){closestMatch.matchedFigIds.push(otherFigure.id);}
else if(!closestMatch||Math.abs(snapOffset)<=Math.abs(closestMatch.snapOffset)){closestMatch={matchedFigIds:[otherFigure.id],snapOffset,snappedAxisType:axisOfFigure.axisType,position:axisOfOtherFig.position,};}}}}
return closestMatch;}
function canSnap(axisPosition1,axisPosition2){return Math.abs(axisPosition1-axisPosition2)<=SNAP_MARGIN;}
function getAxis(fig,axisType){let position=0;switch(axisType){case"top":position=fig.y;break;case"bottom":position=fig.y+fig.height-FIGURE_BORDER_WIDTH;break;case"vCenter":position=fig.y+Math.floor(fig.height/2)-FIGURE_BORDER_WIDTH;break;case"left":position=fig.x;break;case"right":position=fig.x+fig.width-FIGURE_BORDER_WIDTH;break;case"hCenter":position=fig.x+Math.floor(fig.width/2)-FIGURE_BORDER_WIDTH;break;}
return{position,axisType:axisType};}
css`
  .o-figure-snap-line {
    position: relative;
    z-index: ${ComponentsImportance.FigureSnapLine};
    &.vertical {
      width: 0px;
      border-left: 1px dashed black;
    }
    &.horizontal {
      border-top: 1px dashed black;
      height: 0px;
    }
  }
  .o-figure-container {
    -webkit-user-select: none; // safari
    user-select: none;
  }
`;class FiguresContainer extends Component{static template="o-spreadsheet-FiguresContainer";static props={onFigureDeleted:Function,};static components={FigureComponent};dnd=useState({draggedFigure:undefined,horizontalSnap:undefined,verticalSnap:undefined,});setup(){onMounted(()=>{this.render();});}
getVisibleFigures(){const visibleFigures=this.env.model.getters.getVisibleFigures();if(this.dnd.draggedFigure&&!visibleFigures.some((figure)=>figure.id===this.dnd.draggedFigure?.id)){visibleFigures.push(this.env.model.getters.getFigure(this.env.model.getters.getActiveSheetId(),this.dnd.draggedFigure?.id));}
return visibleFigures;}
get containers(){const visibleFigures=this.getVisibleFigures();const containers=[];for(const containerType of["topLeft","topRight","bottomLeft","bottomRight",]){const containerFigures=visibleFigures.filter((figure)=>this.getFigureContainer(figure)===containerType);if(containerFigures.length>0){containers.push({type:containerType,figures:containerFigures,style:this.getContainerStyle(containerType),inverseViewportStyle:this.getInverseViewportPositionStyle(containerType),});}}
if(this.dnd.draggedFigure){containers.push({type:"dnd",figures:[this.getDndFigure()],style:this.getContainerStyle("dnd"),inverseViewportStyle:this.getInverseViewportPositionStyle("dnd"),});}
return containers;}
getContainerStyle(container){return this.rectToCss(this.getContainerRect(container));}
rectToCss(rect){return cssPropertiesToCss({left:`${rect.x}px`,top:`${rect.y}px`,width:`${rect.width}px`,height:`${rect.height}px`,});}
getContainerRect(container){const{width:viewWidth,height:viewHeight}=this.env.model.getters.getSheetViewDimension();const{x:viewportX,y:viewportY}=this.env.model.getters.getMainViewportCoordinates();const x=["bottomRight","topRight"].includes(container)?viewportX:0;const width=viewWidth-x;const y=["bottomRight","bottomLeft"].includes(container)?viewportY:0;const height=viewHeight-y;return{x,y,width,height};}
getInverseViewportPositionStyle(container){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const{x:viewportX,y:viewportY}=this.env.model.getters.getMainViewportCoordinates();const left=["bottomRight","topRight"].includes(container)?-(viewportX+scrollX):0;const top=["bottomRight","bottomLeft"].includes(container)?-(viewportY+scrollY):0;return cssPropertiesToCss({left:`${left}px`,top:`${top}px`,});}
getFigureContainer(figure){const{x:viewportX,y:viewportY}=this.env.model.getters.getMainViewportCoordinates();if(figure.id===this.dnd.draggedFigure?.id){return"dnd";}
else if(figure.x<viewportX&&figure.y<viewportY){return"topLeft";}
else if(figure.x<viewportX){return"bottomLeft";}
else if(figure.y<viewportY){return"topRight";}
else{return"bottomRight";}}
startDraggingFigure(figure,ev){if(ev.button>0||this.env.model.getters.isReadonly()){return;}
const selectResult=this.env.model.dispatch("SELECT_FIGURE",{id:figure.id});if(!selectResult.isSuccessful){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const initialMousePosition={x:ev.clientX,y:ev.clientY};const maxDimensions={maxX:this.env.model.getters.getColDimensions(sheetId,this.env.model.getters.getNumberCols(sheetId)-1).end,maxY:this.env.model.getters.getRowDimensions(sheetId,this.env.model.getters.getNumberRows(sheetId)-1).end,};const{x,y}=internalFigureToScreen(this.env.model.getters,figure);const initialFig={...figure,x,y};const onMouseMove=(ev)=>{const getters=this.env.model.getters;const currentMousePosition={x:ev.clientX,y:ev.clientY};const draggedFigure=dragFigureForMove(currentMousePosition,initialMousePosition,initialFig,this.env.model.getters.getMainViewportCoordinates(),maxDimensions,getters.getActiveSheetScrollInfo());const otherFigures=this.getOtherFigures(figure.id);const internalDragged=screenFigureToInternal(getters,draggedFigure);const snapResult=snapForMove(getters,internalDragged,otherFigures);this.dnd.draggedFigure=internalFigureToScreen(getters,snapResult.snappedFigure);this.dnd.horizontalSnap=this.getSnap(snapResult.horizontalSnapLine);this.dnd.verticalSnap=this.getSnap(snapResult.verticalSnapLine);};const onMouseUp=(ev)=>{if(!this.dnd.draggedFigure){return;}
let{x,y}=screenFigureToInternal(this.env.model.getters,this.dnd.draggedFigure);this.dnd.draggedFigure=undefined;this.dnd.horizontalSnap=undefined;this.dnd.verticalSnap=undefined;this.env.model.dispatch("UPDATE_FIGURE",{sheetId,id:figure.id,x,y});};startDnd(onMouseMove,onMouseUp);}
startResize(figure,dirX,dirY,ev){ev.stopPropagation();const initialMousePosition={x:ev.clientX,y:ev.clientY};const{x,y}=internalFigureToScreen(this.env.model.getters,figure);const initialFig={...figure,x,y};const keepRatio=figureRegistry.get(figure.tag).keepRatio||false;const minFigSize=figureRegistry.get(figure.tag).minFigSize||MIN_FIG_SIZE;const onMouseMove=(ev)=>{const currentMousePosition={x:ev.clientX,y:ev.clientY};const draggedFigure=dragFigureForResize(initialFig,dirX,dirY,currentMousePosition,initialMousePosition,keepRatio,minFigSize,this.env.model.getters.getActiveSheetScrollInfo());const otherFigures=this.getOtherFigures(figure.id);const snapResult=snapForResize(this.env.model.getters,dirX,dirY,draggedFigure,otherFigures);this.dnd.draggedFigure=snapResult.snappedFigure;this.dnd.horizontalSnap=this.getSnap(snapResult.horizontalSnapLine);this.dnd.verticalSnap=this.getSnap(snapResult.verticalSnapLine);};const onMouseUp=(ev)=>{if(!this.dnd.draggedFigure){return;}
let{x,y}=screenFigureToInternal(this.env.model.getters,this.dnd.draggedFigure);const update={x,y};if(dirX){update.width=this.dnd.draggedFigure.width;}
if(dirY){update.height=this.dnd.draggedFigure.height;}
this.env.model.dispatch("UPDATE_FIGURE",{sheetId:this.env.model.getters.getActiveSheetId(),id:figure.id,...update,});this.dnd.draggedFigure=undefined;this.dnd.horizontalSnap=undefined;this.dnd.verticalSnap=undefined;};startDnd(onMouseMove,onMouseUp);}
getOtherFigures(figId){return this.getVisibleFigures().filter((f)=>f.id!==figId);}
getDndFigure(){const figure=this.getVisibleFigures().find((fig)=>fig.id===this.dnd.draggedFigure?.id);if(!figure)
throw new Error("Dnd figure not found");return{...figure,...this.dnd.draggedFigure,};}
getFigureStyle(figure){if(figure.id!==this.dnd.draggedFigure?.id)
return"";return cssPropertiesToCss({opacity:"0.9",cursor:"grabbing",});}
getSnap(snapLine){if(!snapLine||!this.dnd.draggedFigure)
return undefined;const figureVisibleRects=snapLine.matchedFigIds.map((id)=>this.getVisibleFigures().find((fig)=>fig.id===id)).filter(isDefined).map((fig)=>{const figOnSCreen=internalFigureToScreen(this.env.model.getters,fig);const container=this.getFigureContainer(fig);return rectIntersection(figOnSCreen,this.getContainerRect(container));}).filter(isDefined);const containerRect=rectUnion(this.dnd.draggedFigure,...figureVisibleRects);return{line:snapLine,containerStyle:this.rectToCss(containerRect),lineStyle:this.getSnapLineStyle(snapLine,containerRect),};}
getSnapLineStyle(snapLine,containerRect){if(!snapLine)
return"";if(["top","vCenter","bottom"].includes(snapLine.snappedAxisType)){return cssPropertiesToCss({top:`${snapLine.position - containerRect.y}px`,left:`0px`,width:`100%`,});}
else{return cssPropertiesToCss({top:`0px`,left:`${snapLine.position - containerRect.x}px`,height:`100%`,});}}}
css`
  .o-filter-icon {
    color: ${FILTERS_COLOR};
    display: flex;
    align-items: center;
    justify-content: center;
    width: ${GRID_ICON_EDGE_LENGTH}px;
    height: ${GRID_ICON_EDGE_LENGTH}px;

    &:hover {
      background: ${FILTERS_COLOR};
      color: #fff;
    }

    &.o-high-contrast {
      color: #defade;
    }
    &.o-high-contrast:hover {
      color: ${FILTERS_COLOR};
      background: #fff;
    }
  }
  .o-filter-icon:hover {
    background: ${FILTERS_COLOR};
    color: #fff;
  }
`;class FilterIcon extends Component{static template="o-spreadsheet-FilterIcon";static props={cellPosition:Object,};cellPopovers;setup(){this.cellPopovers=useStore(CellPopoverStore);}
onClick(){const position=this.props.cellPosition;const activePopover=this.cellPopovers.persistentCellPopover;const{col,row}=position;if(activePopover.isOpen&&activePopover.col===col&&activePopover.row===row&&activePopover.type==="FilterMenu"){this.cellPopovers.close();return;}
this.cellPopovers.open({col,row},"FilterMenu");}
get isFilterActive(){return this.env.model.getters.isFilterActive(this.props.cellPosition);}
get iconClass(){const cellStyle=this.env.model.getters.getCellComputedStyle(this.props.cellPosition);const luminance=relativeLuminance(cellStyle.fillColor||"#fff");return luminance<0.45?"o-high-contrast":"";}}
class FilterIconsOverlay extends Component{static template="o-spreadsheet-FilterIconsOverlay";static props={};static components={GridCellIcon,FilterIcon,};getFilterHeadersPositions(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getFilterHeaders(sheetId);}}
css`
  .o-grid-add-rows {
    input.o-input {
      box-sizing: border-box;
      width: 60px;
      height: 30px;
    }

    .o-validation-error {
      display: inline-block !important;
      margin-top: 0;
      margin-left: 8px;
    }
  }
`;class GridAddRowsFooter extends Component{static template="o-spreadsheet-GridAddRowsFooter";static props={focusGrid:Function,};static components={ValidationMessages};inputRef=useRef("inputRef");state=useState({inputValue:"100",errorFlag:false,});setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
get addRowsPosition(){const activeSheetId=this.env.model.getters.getActiveSheetId();const{numberOfRows}=this.env.model.getters.getSheetSize(activeSheetId);const{scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const rowDimensions=this.env.model.getters.getRowDimensions(activeSheetId,numberOfRows-1);const top=rowDimensions.end-scrollY;return cssPropertiesToCss({top:`${top}px`,});}
get errorMessages(){return[_t("Please enter a number between 0 and 10000.")];}
onKeydown(ev){if(ev.key.toUpperCase()==="ESCAPE"){this.props.focusGrid();}
else if(ev.key.toUpperCase()==="ENTER"){this.onConfirm();}}
onInput(ev){const value=ev.target.value;this.state.inputValue=value;const quantity=Number(value);this.state.errorFlag=Number.isNaN(quantity)||quantity<=0||quantity>10000;}
onConfirm(){if(this.state.errorFlag){return;}
const quantity=Number(this.state.inputValue);const activeSheetId=this.env.model.getters.getActiveSheetId();const rowNumber=this.env.model.getters.getNumberRows(activeSheetId);this.env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:activeSheetId,position:"after",base:rowNumber-1,quantity,dimension:"ROW",});this.props.focusGrid();const{scrollX}=this.env.model.getters.getActiveSheetDOMScrollInfo();const{end}=this.env.model.getters.getRowDimensions(activeSheetId,rowNumber+quantity-1);this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX,offsetY:end,});}
onExternalClick(ev){if(this.inputRef.el!==document.activeElement||ev.target===this.inputRef.el){return;}
this.props.focusGrid();}}
class PaintFormatStore extends SpreadsheetStore{mutators=["activate","cancel","pasteFormat"];highlightStore=this.get(HighlightStore);clipboardHandlers=[new CellClipboardHandler(this.getters,this.model.dispatch),new BorderClipboardHandler(this.getters,this.model.dispatch),new TableClipboardHandler(this.getters,this.model.dispatch),];status="inactive";copiedData;constructor(get){super(get);this.highlightStore.register(this);this.onDispose(()=>{this.highlightStore.unRegister(this);});}
activate(args){this.copiedData=this.copyFormats();this.status=args.persistent?"persistent":"oneOff";}
cancel(){this.status="inactive";this.copiedData=undefined;}
pasteFormat(target){if(this.copiedData){const sheetId=this.getters.getActiveSheetId();for(const handler of this.clipboardHandlers){handler.paste({zones:target,sheetId},this.copiedData,{isCutOperation:false,pasteOption:"onlyFormat",});}}
if(this.status==="oneOff"){this.cancel();}}
get isActive(){return this.status!=="inactive";}
copyFormats(){const sheetId=this.getters.getActiveSheetId();const zones=this.getters.getSelectedZones();const copiedData={};for(const handler of this.clipboardHandlers){Object.assign(copiedData,handler.copy(getClipboardDataPositions(sheetId,zones)));}
return copiedData;}
get highlights(){const data=this.copiedData;if(!data){return[];}
return data.zones.map((zone)=>({zone,color:SELECTION_BORDER_COLOR,dashed:true,sheetId:data.sheetId,noFill:true,thinLine:true,interactive:false,}));}}
const CURSOR_SVG=`
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="14" height="16"><path d="M6.5.4c1.3-.8 2.9-.1 3.8 1.4l2.9 5.1c.2.4.9 1.6-.4 2.3l-1.6.9 1.8 3.1c.2.4.1 1-.2 1.2l-1.6 1c-.3.1-.9 0-1.1-.4l-1.8-3.1-1.6 1c-.6.4-1.7 0-2.2-.8L0 4.3"/><path fill="#fff" d="M9.1 2a1.4 1.1 60 0 0-1.7-.6L5.5 2.5l.9 1.6-1 .6-.9-1.6-.6.4 1.8 3.1-1.3.7-1.8-3.1-1 .6 3.8 6.6 6.8-3.98M3.9 8.8 10.82 5l.795 1.4-6.81 3.96"/></svg>
`;css`
  .o-paint-format-cursor {
    cursor: url("data:image/svg+xml,${encodeURIComponent(CURSOR_SVG)}"), auto;
  }
`;function useCellHovered(env,gridRef,callback){let hoveredPosition={col:undefined,row:undefined,};const{Date}=window;let x=undefined;let y=undefined;let lastMoved=0;function getPosition(){if(x===undefined||y===undefined){return{col:-1,row:-1};}
const col=env.model.getters.getColIndex(x);const row=env.model.getters.getRowIndex(y);return{col,row};}
const{pause,resume}=useInterval(checkTiming,200);function checkTiming(){const{col,row}=getPosition();const delta=Date.now()-lastMoved;if(delta>300&&(col!==hoveredPosition.col||row!==hoveredPosition.row)){setPosition(undefined,undefined);}
if(delta>300){if(col<0||row<0){return;}
setPosition(col,row);}}
function updateMousePosition(e){if(gridRef.el===e.target){x=e.offsetX;y=e.offsetY;lastMoved=Date.now();}}
function recompute(){const{col,row}=getPosition();if(col!==hoveredPosition.col||row!==hoveredPosition.row){setPosition(undefined,undefined);}}
function onMouseLeave(e){const x=e.offsetX;const y=e.offsetY;const gridRect=getBoundingRectAsPOJO(gridRef.el);if(y<0||y>gridRect.height||x<0||x>gridRect.width){return updateMousePosition(e);}
else{return pause();}}
useRefListener(gridRef,"pointermove",updateMousePosition);useRefListener(gridRef,"mouseleave",onMouseLeave);useRefListener(gridRef,"mouseenter",resume);useRefListener(gridRef,"pointerdown",recompute);useExternalListener(window,"click",handleGlobalClick);function handleGlobalClick(e){const target=e.target;const grid=gridRef.el;if(!grid.contains(target)){setPosition(undefined,undefined);}}
function setPosition(col,row){if(col!==hoveredPosition.col||row!==hoveredPosition.row){hoveredPosition.col=col;hoveredPosition.row=row;callback({col,row});}}
return hoveredPosition;}
function useTouchMove(gridRef,handler,canMoveUp){let x=null;let y=null;function onTouchStart(ev){if(ev.touches.length!==1)
return;x=ev.touches[0].clientX;y=ev.touches[0].clientY;}
function onTouchEnd(){x=null;y=null;}
function onTouchMove(ev){if(ev.touches.length!==1)
return;if(canMoveUp()){ev.preventDefault();ev.stopPropagation();}
const currentX=ev.touches[0].clientX;const currentY=ev.touches[0].clientY;handler(x-currentX,y-currentY);x=currentX;y=currentY;}
useRefListener(gridRef,"touchstart",onTouchStart);useRefListener(gridRef,"touchend",onTouchEnd);useRefListener(gridRef,"touchmove",onTouchMove);}
class GridOverlay extends Component{static template="o-spreadsheet-GridOverlay";static props={onCellHovered:{type:Function,optional:true},onCellDoubleClicked:{type:Function,optional:true},onCellClicked:{type:Function,optional:true},onCellRightClicked:{type:Function,optional:true},onGridResized:{type:Function,optional:true},onFigureDeleted:{type:Function,optional:true},onGridMoved:Function,gridOverlayDimensions:String,};static components={FiguresContainer,DataValidationOverlay,GridAddRowsFooter,FilterIconsOverlay,};static defaultProps={onCellHovered:()=>{},onCellDoubleClicked:()=>{},onCellClicked:()=>{},onCellRightClicked:()=>{},onGridResized:()=>{},onFigureDeleted:()=>{},};gridOverlay=useRef("gridOverlay");gridOverlayRect=useAbsoluteBoundingRect(this.gridOverlay);cellPopovers;paintFormatStore;setup(){useCellHovered(this.env,this.gridOverlay,this.props.onCellHovered);const resizeObserver=new ResizeObserver(()=>{const boundingRect=this.gridOverlayEl.getBoundingClientRect();this.props.onGridResized({x:boundingRect.left,y:boundingRect.top,height:this.gridOverlayEl.clientHeight,width:this.gridOverlayEl.clientWidth,});});onMounted(()=>{resizeObserver.observe(this.gridOverlayEl);});onWillUnmount(()=>{resizeObserver.disconnect();});useTouchMove(this.gridOverlay,this.props.onGridMoved,()=>{const{scrollY}=this.env.model.getters.getActiveSheetDOMScrollInfo();return scrollY>0;});this.cellPopovers=useStore(CellPopoverStore);this.paintFormatStore=useStore(PaintFormatStore);}
get gridOverlayEl(){if(!this.gridOverlay.el){throw new Error("GridOverlay el is not defined.");}
return this.gridOverlay.el;}
get style(){return this.props.gridOverlayDimensions;}
get isPaintingFormat(){return this.paintFormatStore.isActive;}
onMouseDown(ev){if(ev.button>0){return;}
if(ev.target===this.gridOverlay.el&&this.cellPopovers.isOpen){this.cellPopovers.close();}
const[col,row]=this.getCartesianCoordinates(ev);this.props.onCellClicked(col,row,{expandZone:ev.shiftKey,addZone:isCtrlKey(ev),});}
onDoubleClick(ev){const[col,row]=this.getCartesianCoordinates(ev);this.props.onCellDoubleClicked(col,row);}
onContextMenu(ev){const[col,row]=this.getCartesianCoordinates(ev);this.props.onCellRightClicked(col,row,{x:ev.clientX,y:ev.clientY});}
getCartesianCoordinates(ev){const x=ev.clientX-this.gridOverlayRect.x;const y=ev.clientY-this.gridOverlayRect.y;const colIndex=this.env.model.getters.getColIndex(x);const rowIndex=this.env.model.getters.getRowIndex(y);return[colIndex,rowIndex];}}
class GridPopover extends Component{static template="o-spreadsheet-GridPopover";static props={onClosePopover:Function,onMouseWheel:Function,gridRect:Object,};static components={Popover};cellPopovers;zIndex=ComponentsImportance.GridPopover;setup(){this.cellPopovers=useStore(CellPopoverStore);}
get cellPopover(){const popover=this.cellPopovers.cellPopover;if(!popover.isOpen){return{isOpen:false};}
const anchorRect=popover.anchorRect;return{...popover,anchorRect:{...anchorRect,x:anchorRect.x+this.props.gridRect.x,y:anchorRect.y+this.props.gridRect.y,},};}}
class AbstractResizer extends Component{static props={onOpenContextMenu:Function,};composerFocusStore;PADDING=0;MAX_SIZE_MARGIN=0;MIN_ELEMENT_SIZE=0;lastSelectedElementIndex=null;state=useState({resizerIsActive:false,isResizing:false,isMoving:false,isSelecting:false,waitingForMove:false,activeElement:0,draggerLinePosition:0,draggerShadowPosition:0,draggerShadowThickness:0,delta:0,base:0,position:"before",});setup(){this.composerFocusStore=useStore(ComposerFocusStore);}
_computeHandleDisplay(ev){const position=this._getEvOffset(ev);const elementIndex=this._getElementIndex(position);if(elementIndex<0){return;}
const dimensions=this._getDimensionsInViewport(elementIndex);if(position-dimensions.start<this.PADDING&&elementIndex!==this._getViewportOffset()){this.state.resizerIsActive=true;this.state.draggerLinePosition=dimensions.start;this.state.activeElement=this._getPreviousVisibleElement(elementIndex);}
else if(dimensions.end-position<this.PADDING){this.state.resizerIsActive=true;this.state.draggerLinePosition=dimensions.end;this.state.activeElement=elementIndex;}
else{this.state.resizerIsActive=false;}}
_computeGrabDisplay(ev){const index=this._getElementIndex(this._getEvOffset(ev));const activeElements=this._getActiveElements();const selectedZoneStart=this._getSelectedZoneStart();const selectedZoneEnd=this._getSelectedZoneEnd();if(activeElements.has(selectedZoneStart)){if(selectedZoneStart<=index&&index<=selectedZoneEnd){this.state.waitingForMove=true;return;}}
this.state.waitingForMove=false;}
onMouseMove(ev){if(this.state.isResizing||this.state.isMoving||this.state.isSelecting){return;}
this._computeHandleDisplay(ev);this._computeGrabDisplay(ev);}
onMouseLeave(){this.state.resizerIsActive=this.state.isResizing;this.state.waitingForMove=false;}
onDblClick(ev){this._fitElementSize(this.state.activeElement);this.state.isResizing=false;this._computeHandleDisplay(ev);this._computeGrabDisplay(ev);}
onMouseDown(ev){this.state.isResizing=true;this.state.delta=0;const initialPosition=this._getClientPosition(ev);const styleValue=this.state.draggerLinePosition;const size=this._getElementSize(this.state.activeElement);const minSize=styleValue-size+this.MIN_ELEMENT_SIZE;const maxSize=this._getMaxSize();const onMouseUp=(ev)=>{this.state.isResizing=false;if(this.state.delta!==0){this._updateSize();}};const onMouseMove=(ev)=>{this.state.delta=this._getClientPosition(ev)-initialPosition;this.state.draggerLinePosition=styleValue+this.state.delta;if(this.state.draggerLinePosition<minSize){this.state.draggerLinePosition=minSize;this.state.delta=this.MIN_ELEMENT_SIZE-size;}
if(this.state.draggerLinePosition>maxSize){this.state.draggerLinePosition=maxSize;this.state.delta=maxSize-styleValue;}};startDnd(onMouseMove,onMouseUp);}
select(ev){if(ev.button>0){return;}
const index=this._getElementIndex(this._getEvOffset(ev));if(index<0){return;}
if(this.state.waitingForMove===true){if(!this.env.model.getters.isGridSelectionActive()){this._selectElement(index,false);}
else{this.startMovement(ev);}
return;}
if(this.composerFocusStore.activeComposer.editionMode==="editing"){this.env.model.selection.getBackToDefault();}
this.startSelection(ev,index);}
startMovement(ev){this.state.waitingForMove=false;this.state.isMoving=true;const startDimensions=this._getDimensionsInViewport(this._getSelectedZoneStart());const endDimensions=this._getDimensionsInViewport(this._getSelectedZoneEnd());const defaultPosition=startDimensions.start;this.state.draggerLinePosition=defaultPosition;this.state.base=this._getSelectedZoneStart();this.state.draggerShadowPosition=defaultPosition;this.state.draggerShadowThickness=endDimensions.end-startDimensions.start;const mouseMoveMovement=(col,row)=>{let elementIndex=this._getType()==="COL"?col:row;if(elementIndex>=0){const dimensions=this._getDimensionsInViewport(elementIndex);if(elementIndex<=this._getSelectedZoneStart()){this.state.draggerLinePosition=dimensions.start;this.state.draggerShadowPosition=dimensions.start;this.state.base=elementIndex;this.state.position="before";}
else if(this._getSelectedZoneEnd()<elementIndex){this.state.draggerLinePosition=dimensions.end;this.state.draggerShadowPosition=dimensions.end-this.state.draggerShadowThickness;this.state.base=elementIndex;this.state.position="after";}
else{this.state.draggerLinePosition=startDimensions.start;this.state.draggerShadowPosition=startDimensions.start;this.state.base=this._getSelectedZoneStart();}}};const mouseUpMovement=()=>{this.state.isMoving=false;if(this.state.base!==this._getSelectedZoneStart()){this._moveElements();}
this._computeGrabDisplay(ev);};dragAndDropBeyondTheViewport(this.env,mouseMoveMovement,mouseUpMovement);}
startSelection(ev,index){this.state.isSelecting=true;if(ev.shiftKey){this._increaseSelection(index);}
else{this._selectElement(index,isCtrlKey(ev));}
this.lastSelectedElementIndex=index;const mouseMoveSelect=(col,row)=>{let newIndex=this._getType()==="COL"?col:row;if(newIndex!==this.lastSelectedElementIndex&&newIndex!==-1){this._increaseSelection(newIndex);this.lastSelectedElementIndex=newIndex;}};const mouseUpSelect=()=>{this.state.isSelecting=false;this.lastSelectedElementIndex=null;this._computeGrabDisplay(ev);};dragAndDropBeyondTheViewport(this.env,mouseMoveSelect,mouseUpSelect);}
onMouseUp(ev){this.lastSelectedElementIndex=null;}
onContextMenu(ev){ev.preventDefault();const index=this._getElementIndex(this._getEvOffset(ev));if(index<0)
return;if(!this._getActiveElements().has(index)){this._selectElement(index,false);}
const type=this._getType();this.props.onOpenContextMenu(type,ev.clientX,ev.clientY);}}
css`
  .o-col-resizer {
    position: absolute;
    top: 0;
    left: ${HEADER_WIDTH}px;
    right: 0;
    height: ${HEADER_HEIGHT}px;
    &.o-dragging {
      cursor: grabbing;
    }
    &.o-grab {
      cursor: grab;
    }
    .dragging-col-line {
      top: ${HEADER_HEIGHT}px;
      position: absolute;
      width: 2px;
      height: 10000px;
      background-color: black;
    }
    .dragging-col-shadow {
      top: ${HEADER_HEIGHT}px;
      position: absolute;
      height: 10000px;
      background-color: black;
      opacity: 0.1;
    }
    .o-handle {
      position: absolute;
      height: ${HEADER_HEIGHT}px;
      width: 4px;
      cursor: e-resize;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .dragging-resizer {
      top: ${HEADER_HEIGHT}px;
      position: absolute;
      margin-left: 2px;
      width: 1px;
      height: 10000px;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .o-unhide {
      color: ${ICONS_COLOR};
    }
    .o-unhide:hover {
      z-index: ${ComponentsImportance.Grid + 1};
      background-color: lightgrey;
    }
  }
`;class ColResizer extends AbstractResizer{static props={onOpenContextMenu:Function,};static template="o-spreadsheet-ColResizer";colResizerRef;setup(){super.setup();this.colResizerRef=useRef("colResizer");this.PADDING=15;this.MAX_SIZE_MARGIN=90;this.MIN_ELEMENT_SIZE=MIN_COL_WIDTH;}
_getEvOffset(ev){return ev.offsetX;}
_getViewportOffset(){return this.env.model.getters.getActiveMainViewport().left;}
_getClientPosition(ev){return ev.clientX;}
_getElementIndex(position){return this.env.model.getters.getColIndex(position);}
_getSelectedZoneStart(){return this.env.model.getters.getSelectedZone().left;}
_getSelectedZoneEnd(){return this.env.model.getters.getSelectedZone().right;}
_getEdgeScroll(position){return this.env.model.getters.getEdgeScrollCol(position,position,position);}
_getDimensionsInViewport(index){return this.env.model.getters.getColDimensionsInViewport(this.env.model.getters.getActiveSheetId(),index);}
_getElementSize(index){return this.env.model.getters.getColSize(this.env.model.getters.getActiveSheetId(),index);}
_getMaxSize(){return this.colResizerRef.el.clientWidth;}
_updateSize(){const index=this.state.activeElement;const size=this.state.delta+this._getElementSize(index);const cols=this.env.model.getters.getActiveCols();this.env.model.dispatch("RESIZE_COLUMNS_ROWS",{dimension:"COL",sheetId:this.env.model.getters.getActiveSheetId(),elements:cols.has(index)?[...cols]:[index],size,});}
_moveElements(){const elements=[];const start=this._getSelectedZoneStart();const end=this._getSelectedZoneEnd();for(let colIndex=start;colIndex<=end;colIndex++){elements.push(colIndex);}
const result=this.env.model.dispatch("MOVE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),dimension:"COL",base:this.state.base,elements,position:this.state.position,});if(!result.isSuccessful&&result.reasons.includes("WillRemoveExistingMerge")){this.env.raiseError(MergeErrorMessage);}}
_selectElement(index,addDistinctHeader){this.env.model.selection.selectColumn(index,addDistinctHeader?"newAnchor":"overrideSelection");}
_increaseSelection(index){this.env.model.selection.selectColumn(index,"updateAnchor");}
_fitElementSize(index){const cols=this.env.model.getters.getActiveCols();this.env.model.dispatch("AUTORESIZE_COLUMNS",{sheetId:this.env.model.getters.getActiveSheetId(),cols:cols.has(index)?[...cols]:[index],});}
_getType(){return"COL";}
_getActiveElements(){return this.env.model.getters.getActiveCols();}
_getPreviousVisibleElement(index){const sheetId=this.env.model.getters.getActiveSheetId();let row;for(row=index-1;row>=0;row--){if(!this.env.model.getters.isColHidden(sheetId,row)){break;}}
return row;}
unhide(hiddenElements){this.env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),elements:hiddenElements,dimension:"COL",});}
getUnhideButtonStyle(hiddenIndex){return cssPropertiesToCss({left:this._getDimensionsInViewport(hiddenIndex).start+"px"});}}
css`
  .o-row-resizer {
    position: absolute;
    top: ${HEADER_HEIGHT}px;
    left: 0;
    right: 0;
    width: ${HEADER_WIDTH}px;
    height: 100%;
    &.o-dragging {
      cursor: grabbing;
    }
    &.o-grab {
      cursor: grab;
    }
    .dragging-row-line {
      left: ${HEADER_WIDTH}px;
      position: absolute;
      width: 10000px;
      height: 2px;
      background-color: black;
    }
    .dragging-row-shadow {
      left: ${HEADER_WIDTH}px;
      position: absolute;
      width: 10000px;
      background-color: black;
      opacity: 0.1;
    }
    .o-handle {
      position: absolute;
      height: 4px;
      width: ${HEADER_WIDTH}px;
      cursor: n-resize;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .dragging-resizer {
      left: ${HEADER_WIDTH}px;
      position: absolute;
      margin-top: 2px;
      width: 10000px;
      height: 1px;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .o-unhide {
      color: ${ICONS_COLOR};
    }
    .o-unhide:hover {
      z-index: ${ComponentsImportance.Grid + 1};
      background-color: lightgrey;
    }
  }
`;class RowResizer extends AbstractResizer{static props={onOpenContextMenu:Function,};static template="o-spreadsheet-RowResizer";setup(){super.setup();this.rowResizerRef=useRef("rowResizer");this.PADDING=5;this.MAX_SIZE_MARGIN=60;this.MIN_ELEMENT_SIZE=MIN_ROW_HEIGHT;}
rowResizerRef;_getEvOffset(ev){return ev.offsetY;}
_getViewportOffset(){return this.env.model.getters.getActiveMainViewport().top;}
_getClientPosition(ev){return ev.clientY;}
_getElementIndex(position){return this.env.model.getters.getRowIndex(position);}
_getSelectedZoneStart(){return this.env.model.getters.getSelectedZone().top;}
_getSelectedZoneEnd(){return this.env.model.getters.getSelectedZone().bottom;}
_getEdgeScroll(position){return this.env.model.getters.getEdgeScrollRow(position,position,position);}
_getDimensionsInViewport(index){return this.env.model.getters.getRowDimensionsInViewport(this.env.model.getters.getActiveSheetId(),index);}
_getElementSize(index){return this.env.model.getters.getRowSize(this.env.model.getters.getActiveSheetId(),index);}
_getMaxSize(){return this.rowResizerRef.el.clientHeight;}
_updateSize(){const index=this.state.activeElement;const size=this.state.delta+this._getElementSize(index);const rows=this.env.model.getters.getActiveRows();this.env.model.dispatch("RESIZE_COLUMNS_ROWS",{dimension:"ROW",sheetId:this.env.model.getters.getActiveSheetId(),elements:rows.has(index)?[...rows]:[index],size,});}
_moveElements(){const elements=[];const start=this._getSelectedZoneStart();const end=this._getSelectedZoneEnd();for(let rowIndex=start;rowIndex<=end;rowIndex++){elements.push(rowIndex);}
const result=this.env.model.dispatch("MOVE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),dimension:"ROW",base:this.state.base,elements,position:this.state.position,});if(!result.isSuccessful&&result.reasons.includes("WillRemoveExistingMerge")){this.env.raiseError(MergeErrorMessage);}}
_selectElement(index,addDistinctHeader){this.env.model.selection.selectRow(index,addDistinctHeader?"newAnchor":"overrideSelection");}
_increaseSelection(index){this.env.model.selection.selectRow(index,"updateAnchor");}
_fitElementSize(index){const rows=this.env.model.getters.getActiveRows();this.env.model.dispatch("AUTORESIZE_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),rows:rows.has(index)?[...rows]:[index],});}
_getType(){return"ROW";}
_getActiveElements(){return this.env.model.getters.getActiveRows();}
_getPreviousVisibleElement(index){const sheetId=this.env.model.getters.getActiveSheetId();let row;for(row=index-1;row>=0;row--){if(!this.env.model.getters.isRowHidden(sheetId,row)){break;}}
return row;}
unhide(hiddenElements){this.env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),dimension:"ROW",elements:hiddenElements,});}
getUnhideButtonStyle(hiddenIndex){return cssPropertiesToCss({top:this._getDimensionsInViewport(hiddenIndex).start+"px"});}}
css`
  .o-overlay {
    .all {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      width: ${HEADER_WIDTH}px;
      height: ${HEADER_HEIGHT}px;
    }
  }
`;class HeadersOverlay extends Component{static props={onOpenContextMenu:Function,};static template="o-spreadsheet-HeadersOverlay";static components={ColResizer,RowResizer};selectAll(){this.env.model.selection.selectAll();}}
class GridRenderer{getters;renderer;constructor(get){this.getters=get(ModelStore).getters;this.renderer=get(RendererStore);this.renderer.register(this);}
get renderingLayers(){return["Background","Headers"];}
getHeaderOffset(dimension,start,index){let size=this.getters.getColRowOffsetInViewport(dimension,start,index);if(!this.getters.isDashboard()){size+=dimension==="ROW"?HEADER_HEIGHT:HEADER_WIDTH;}
return size;}
drawLayer(renderingContext,layer){switch(layer){case"Background":const boxes=this.getGridBoxes();this.drawBackground(renderingContext,boxes);this.drawOverflowingCellBackground(renderingContext,boxes);this.drawCellBackground(renderingContext,boxes);this.drawBorders(renderingContext,boxes);this.drawTexts(renderingContext,boxes);this.drawIcon(renderingContext,boxes);this.drawFrozenPanes(renderingContext);break;case"Headers":if(!this.getters.isDashboard()){this.drawHeaders(renderingContext);this.drawFrozenPanesHeaders(renderingContext);}
break;}}
drawBackground(renderingContext,boxes){const{ctx,thinLineWidth}=renderingContext;const{width,height}=this.getters.getSheetViewDimensionWithHeaders();ctx.fillStyle="#ffffff";ctx.fillRect(0,0,width+CANVAS_SHIFT,height+CANVAS_SHIFT);const areGridLinesVisible=!this.getters.isDashboard()&&this.getters.getGridLinesVisibility(this.getters.getActiveSheetId());const inset=areGridLinesVisible?0.1*thinLineWidth:0;if(areGridLinesVisible){for(const box of boxes){ctx.strokeStyle=CELL_BORDER_COLOR;ctx.lineWidth=thinLineWidth;ctx.strokeRect(box.x+inset,box.y+inset,box.width-2*inset,box.height-2*inset);}}}
drawCellBackground(renderingContext,boxes){const{ctx}=renderingContext;for(const box of boxes){let style=box.style;if(style.fillColor&&style.fillColor!=="#ffffff"){ctx.fillStyle=style.fillColor||"#ffffff";ctx.fillRect(box.x,box.y,box.width,box.height);}
if(box.dataBarFill){ctx.fillStyle=box.dataBarFill.color;const percentage=box.dataBarFill.percentage;const width=box.width*(percentage/100);ctx.fillRect(box.x,box.y,width,box.height);}
if(box.isError){ctx.fillStyle="red";ctx.beginPath();ctx.moveTo(box.x+box.width-5,box.y);ctx.lineTo(box.x+box.width,box.y);ctx.lineTo(box.x+box.width,box.y+5);ctx.fill();}}}
drawOverflowingCellBackground(renderingContext,boxes){const{ctx,thinLineWidth}=renderingContext;for(const box of boxes){if(box.content&&box.isOverflow){const align=box.content.align||"left";let x;let width;const y=box.y+thinLineWidth/2;const height=box.height-thinLineWidth;const clipWidth=Math.min(box.clipRect?.width||Infinity,box.content.width);if(align==="left"){x=box.x+thinLineWidth/2;width=clipWidth-2*thinLineWidth;}
else if(align==="right"){x=box.x+box.width-thinLineWidth/2;width=-clipWidth+2*thinLineWidth;}
else{x=(box.clipRect?.x||box.x+box.width/2-box.content.width/2)+thinLineWidth/2;width=clipWidth-2*thinLineWidth;}
ctx.fillStyle="#ffffff";ctx.fillRect(x,y,width,height);}}}
drawBorders(renderingContext,boxes){const{ctx}=renderingContext;for(let box of boxes){const border=box.border;if(border){const{x,y,width,height}=box;if(border.left){drawBorder(border.left,x,y,x,y+height);}
if(border.top){drawBorder(border.top,x,y,x+width,y);}
if(border.right){drawBorder(border.right,x+width,y,x+width,y+height);}
if(border.bottom){drawBorder(border.bottom,x,y+height,x+width,y+height);}}}
function drawBorder({style,color},x1,y1,x2,y2){ctx.strokeStyle=color;switch(style){case"medium":ctx.lineWidth=2;x1+=y1===y2?-0.5:0.5;x2+=y1===y2?1.5:0.5;y1+=x1===x2?-0.5:0.5;y2+=x1===x2?1.5:0.5;break;case"thick":ctx.lineWidth=3;if(y1===y2){x1--;x2++;}
if(x1===x2){y1--;y2++;}
break;case"dashed":ctx.lineWidth=1;ctx.setLineDash([1,3]);break;case"dotted":ctx.lineWidth=1;if(y1===y2){x1+=0.5;x2+=0.5;}
if(x1===x2){y1+=0.5;y2+=0.5;}
ctx.setLineDash([1,1]);break;case"thin":default:ctx.lineWidth=1;break;}
ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();ctx.lineWidth=1;ctx.setLineDash([]);}}
drawTexts(renderingContext,boxes){const{ctx}=renderingContext;ctx.textBaseline="top";let currentFont;for(let box of boxes){if(box.content){const style=box.style||{};const align=box.content.align||"left";const font=computeTextFont(style);if(font!==currentFont){currentFont=font;ctx.font=font;}
ctx.fillStyle=style.textColor||"#000";let x=box.x;if(align==="left"){x+=MIN_CELL_TEXT_MARGIN+(box.image?box.image.size+MIN_CF_ICON_MARGIN:0);}
else if(align==="right"){x+=box.width-
MIN_CELL_TEXT_MARGIN-
(box.hasIcon?GRID_ICON_EDGE_LENGTH+GRID_ICON_MARGIN:0);}
else{x+=box.width/2;}
ctx.textAlign=align;if(box.clipRect){ctx.save();ctx.beginPath();const{x,y,width,height}=box.clipRect;ctx.rect(x,y,width,height);ctx.clip();}
const textLineHeight=computeTextFontSizeInPixels(style);const numberOfLines=box.content.textLines.length;let y=this.computeTextYCoordinate(box,textLineHeight,numberOfLines);for(let brokenLine of box.content.textLines){drawDecoratedText(ctx,brokenLine,{x:Math.round(x),y:Math.round(y)},style.underline,style.strikethrough);y+=MIN_CELL_TEXT_MARGIN+textLineHeight;}
if(box.clipRect){ctx.restore();}}}}
drawIcon(renderingContext,boxes){const{ctx}=renderingContext;for(const box of boxes){if(box.image){const icon=box.image.image;if(box.image.clipIcon){ctx.save();ctx.beginPath();const{x,y,width,height}=box.image.clipIcon;ctx.rect(x,y,width,height);ctx.clip();}
const iconSize=box.image.size;const y=this.computeTextYCoordinate(box,iconSize);ctx.drawImage(icon,box.x+MIN_CF_ICON_MARGIN,y,iconSize,iconSize);if(box.image.clipIcon){ctx.restore();}}}}
computeTextYCoordinate(box,textLineHeight,numberOfLines=1){const y=box.y+1;const textHeight=computeTextLinesHeight(textLineHeight,numberOfLines);const hasEnoughSpaces=box.height>textHeight+MIN_CELL_TEXT_MARGIN*2;const verticalAlign=box.verticalAlign||DEFAULT_VERTICAL_ALIGN;if(hasEnoughSpaces){if(verticalAlign==="middle"){return y+(box.height-textHeight)/2;}
if(verticalAlign==="bottom"){return y+box.height-textHeight-MIN_CELL_TEXT_MARGIN;}}
return y+MIN_CELL_TEXT_MARGIN;}
drawHeaders(renderingContext){const{ctx,thinLineWidth}=renderingContext;const visibleCols=this.getters.getSheetViewVisibleCols();const left=visibleCols[0];const right=visibleCols[visibleCols.length-1];const visibleRows=this.getters.getSheetViewVisibleRows();const top=visibleRows[0];const bottom=visibleRows[visibleRows.length-1];const{width,height}=this.getters.getSheetViewDimensionWithHeaders();const selection=this.getters.getSelectedZones();const selectedCols=getZonesCols(selection);const selectedRows=getZonesRows(selection);const sheetId=this.getters.getActiveSheetId();const numberOfCols=this.getters.getNumberCols(sheetId);const numberOfRows=this.getters.getNumberRows(sheetId);const activeCols=this.getters.getActiveCols();const activeRows=this.getters.getActiveRows();ctx.font=`400 ${HEADER_FONT_SIZE}px ${DEFAULT_FONT}`;ctx.textAlign="center";ctx.textBaseline="middle";ctx.lineWidth=thinLineWidth;ctx.strokeStyle="#333";for(let col=left;col<=right;col++){const colZone={left:col,right:col,top:0,bottom:numberOfRows-1};const{x,width}=this.getters.getVisibleRect(colZone);const isColActive=activeCols.has(col);const isColSelected=selectedCols.has(col);if(isColActive){ctx.fillStyle=BACKGROUND_HEADER_ACTIVE_COLOR;}
else if(isColSelected){ctx.fillStyle=BACKGROUND_HEADER_SELECTED_COLOR;}
else{ctx.fillStyle=BACKGROUND_HEADER_COLOR;}
ctx.fillRect(x,0,width,HEADER_HEIGHT);}
for(let row=top;row<=bottom;row++){const rowZone={top:row,bottom:row,left:0,right:numberOfCols-1};const{y,height}=this.getters.getVisibleRect(rowZone);const isRowActive=activeRows.has(row);const isRowSelected=selectedRows.has(row);if(isRowActive){ctx.fillStyle=BACKGROUND_HEADER_ACTIVE_COLOR;}
else if(isRowSelected){ctx.fillStyle=BACKGROUND_HEADER_SELECTED_COLOR;}
else{ctx.fillStyle=BACKGROUND_HEADER_COLOR;}
ctx.fillRect(0,y,HEADER_WIDTH,height);}
ctx.beginPath();ctx.moveTo(HEADER_WIDTH,0);ctx.lineTo(HEADER_WIDTH,height);ctx.moveTo(0,HEADER_HEIGHT);ctx.lineTo(width,HEADER_HEIGHT);ctx.strokeStyle=HEADER_BORDER_COLOR;ctx.stroke();ctx.beginPath();for(const i of visibleCols){const colSize=this.getters.getColSize(sheetId,i);const colName=numberToLetters(i);ctx.fillStyle=activeCols.has(i)?"#fff":TEXT_HEADER_COLOR;let colStart=this.getHeaderOffset("COL",left,i);ctx.fillText(colName,colStart+colSize/2,HEADER_HEIGHT/2);ctx.moveTo(colStart+colSize,0);ctx.lineTo(colStart+colSize,HEADER_HEIGHT);}
for(const i of visibleRows){const rowSize=this.getters.getRowSize(sheetId,i);ctx.fillStyle=activeRows.has(i)?"#fff":TEXT_HEADER_COLOR;let rowStart=this.getHeaderOffset("ROW",top,i);ctx.fillText(String(i+1),HEADER_WIDTH/2,rowStart+rowSize/2);ctx.moveTo(0,rowStart+rowSize);ctx.lineTo(HEADER_WIDTH,rowStart+rowSize);}
ctx.stroke();}
drawFrozenPanesHeaders(renderingContext){const{ctx,thinLineWidth}=renderingContext;const{x:offsetCorrectionX,y:offsetCorrectionY}=this.getters.getMainViewportCoordinates();const widthCorrection=this.getters.isDashboard()?0:HEADER_WIDTH;const heightCorrection=this.getters.isDashboard()?0:HEADER_HEIGHT;ctx.lineWidth=6*thinLineWidth;ctx.strokeStyle=FROZEN_PANE_HEADER_BORDER_COLOR;ctx.beginPath();if(offsetCorrectionX){ctx.moveTo(widthCorrection+offsetCorrectionX,0);ctx.lineTo(widthCorrection+offsetCorrectionX,heightCorrection);}
if(offsetCorrectionY){ctx.moveTo(0,heightCorrection+offsetCorrectionY);ctx.lineTo(widthCorrection,heightCorrection+offsetCorrectionY);}
ctx.stroke();}
drawFrozenPanes(renderingContext){const{ctx,thinLineWidth}=renderingContext;const{x:offsetCorrectionX,y:offsetCorrectionY}=this.getters.getMainViewportCoordinates();const visibleCols=this.getters.getSheetViewVisibleCols();const left=visibleCols[0];const right=visibleCols[visibleCols.length-1];const visibleRows=this.getters.getSheetViewVisibleRows();const top=visibleRows[0];const bottom=visibleRows[visibleRows.length-1];const viewport={left,right,top,bottom};const rect=this.getters.getVisibleRect(viewport);const widthCorrection=this.getters.isDashboard()?0:HEADER_WIDTH;const heightCorrection=this.getters.isDashboard()?0:HEADER_HEIGHT;ctx.lineWidth=6*thinLineWidth;ctx.strokeStyle=FROZEN_PANE_BORDER_COLOR;ctx.beginPath();if(offsetCorrectionX){ctx.moveTo(widthCorrection+offsetCorrectionX,heightCorrection);ctx.lineTo(widthCorrection+offsetCorrectionX,rect.height+heightCorrection);}
if(offsetCorrectionY){ctx.moveTo(widthCorrection,heightCorrection+offsetCorrectionY);ctx.lineTo(rect.width+widthCorrection,heightCorrection+offsetCorrectionY);}
ctx.stroke();}
findNextEmptyCol(base,max,row){const sheetId=this.getters.getActiveSheetId();let col=base;while(col<max){const position={sheetId,col:col+1,row};const nextCell=this.getters.getEvaluatedCell(position);const nextCellBorder=this.getters.getCellComputedBorder(position);const cellHasIcon=this.getters.doesCellHaveGridIcon(position);const cellHasCheckbox=this.getters.isCellValidCheckbox(position);if(nextCell.type!==CellValueType.empty||this.getters.isInMerge(position)||nextCellBorder?.left||cellHasIcon||cellHasCheckbox){return col;}
col++;}
return col;}
findPreviousEmptyCol(base,min,row){const sheetId=this.getters.getActiveSheetId();let col=base;while(col>min){const position={sheetId,col:col-1,row};const previousCell=this.getters.getEvaluatedCell(position);const previousCellBorder=this.getters.getCellComputedBorder(position);const cellHasIcon=this.getters.doesCellHaveGridIcon(position);const cellHasCheckbox=this.getters.isCellValidCheckbox(position);if(previousCell.type!==CellValueType.empty||this.getters.isInMerge(position)||previousCellBorder?.right||cellHasIcon||cellHasCheckbox){return col;}
col--;}
return col;}
computeCellAlignment(position,isOverflowing){const cell=this.getters.getCell(position);if(cell?.isFormula&&this.getters.shouldShowFormulas()){return"left";}
const{align}=this.getters.getCellStyle(position);const evaluatedCell=this.getters.getEvaluatedCell(position);if(isOverflowing&&evaluatedCell.type===CellValueType.number){return align!=="center"?"left":align;}
return align||evaluatedCell.defaultAlign;}
createZoneBox(sheetId,zone,viewport){const{left,right}=viewport;const col=zone.left;const row=zone.top;const position={sheetId,col,row};const cell=this.getters.getEvaluatedCell(position);const showFormula=this.getters.shouldShowFormulas();const{x,y,width,height}=this.getters.getVisibleRect(zone);const{verticalAlign}=this.getters.getCellStyle(position);const box={x,y,width,height,border:this.getters.getCellComputedBorder(position)||undefined,style:this.getters.getCellComputedStyle(position),dataBarFill:this.getters.getConditionalDataBar(position),verticalAlign,isError:(cell.type===CellValueType.error&&!!cell.message)||this.getters.isDataValidationInvalid(position),};const iconSrc=this.getters.getCellIconSrc(position);const fontSizePX=computeTextFontSizeInPixels(box.style);const iconBoxWidth=iconSrc?MIN_CF_ICON_MARGIN+fontSizePX:0;if(iconSrc){const imageHtmlElement=loadIconImage(iconSrc);box.image={type:"icon",size:fontSizePX,clipIcon:{x:box.x,y:box.y,width:Math.min(iconBoxWidth,width),height},image:imageHtmlElement,};}
if(cell.type===CellValueType.empty||this.getters.isCellValidCheckbox(position)){return box;}
box.hasIcon=this.getters.doesCellHaveGridIcon(position);const headerIconWidth=box.hasIcon?GRID_ICON_EDGE_LENGTH+GRID_ICON_MARGIN:0;const style=this.getters.getCellComputedStyle(position);const wrapping=style.wrapping||"overflow";const wrapText=wrapping==="wrap"&&!showFormula;const maxWidth=width-2*MIN_CELL_TEXT_MARGIN;const multiLineText=this.getters.getCellMultiLineText(position,{maxWidth,wrapText});const textWidth=Math.max(...multiLineText.map((line)=>this.getters.getTextWidth(line,style)+MIN_CELL_TEXT_MARGIN));const contentWidth=iconBoxWidth+textWidth+headerIconWidth;const align=this.computeCellAlignment(position,contentWidth>width);box.content={textLines:multiLineText,width:wrapping==="overflow"?textWidth:width,align,};const isOverflowing=contentWidth>width||fontSizePX>height;if(iconSrc||box.hasIcon){box.clipRect={x:box.x+iconBoxWidth,y:box.y,width:Math.max(0,width-iconBoxWidth-headerIconWidth),height,};}
else if(isOverflowing&&wrapping==="overflow"){let nextColIndex,previousColIndex;const isCellInMerge=this.getters.isInMerge(position);if(isCellInMerge){nextColIndex=this.getters.getMerge(position).right;previousColIndex=col;}
else{nextColIndex=this.findNextEmptyCol(col,right,row);previousColIndex=this.findPreviousEmptyCol(col,left,row);box.isOverflow=true;}
switch(align){case"left":{const emptyZoneOnTheLeft=positionToZone({col:nextColIndex,row});const{x,y,width,height}=this.getters.getVisibleRect(union(zone,emptyZoneOnTheLeft));if(width<contentWidth||fontSizePX>height||multiLineText.length>1){box.clipRect={x,y,width,height};}
break;}
case"right":{const emptyZoneOnTheRight=positionToZone({col:previousColIndex,row});const{x,y,width,height}=this.getters.getVisibleRect(union(zone,emptyZoneOnTheRight));if(width<contentWidth||fontSizePX>height||multiLineText.length>1){box.clipRect={x,y,width,height};}
break;}
case"center":{const emptyZone={...zone,left:previousColIndex,right:nextColIndex,};const{x,y,height,width}=this.getters.getVisibleRect(emptyZone);const halfContentWidth=contentWidth/2;const boxMiddle=box.x+box.width/2;if(x+width<boxMiddle+halfContentWidth||x>boxMiddle-halfContentWidth||fontSizePX>height||multiLineText.length>1){const clipX=x>boxMiddle-halfContentWidth?x:boxMiddle-halfContentWidth;const clipWidth=x+width-clipX;box.clipRect={x:clipX,y,width:clipWidth,height};}
break;}}}
else if(wrapping==="clip"||wrapping==="wrap"||multiLineText.length>1){box.clipRect={x:box.x,y:box.y,width,height,};}
return box;}
getGridBoxes(){const boxes=[];const visibleCols=this.getters.getSheetViewVisibleCols();const left=visibleCols[0];const right=visibleCols[visibleCols.length-1];const visibleRows=this.getters.getSheetViewVisibleRows();const top=visibleRows[0];const bottom=visibleRows[visibleRows.length-1];const viewport={left,right,top,bottom};const sheetId=this.getters.getActiveSheetId();for(const row of visibleRows){for(const col of visibleCols){const position={sheetId,col,row};if(this.getters.isInMerge(position)){continue;}
boxes.push(this.createZoneBox(sheetId,positionToZone(position),viewport));}}
for(const merge of this.getters.getMerges(sheetId)){if(this.getters.isMergeHidden(sheetId,merge)){continue;}
if(overlap(merge,viewport)){const box=this.createZoneBox(sheetId,merge,viewport);const borderBottomRight=this.getters.getCellComputedBorder({sheetId,col:merge.right,row:merge.bottom,});box.border={...box.border,bottom:borderBottomRight?borderBottomRight.bottom:undefined,right:borderBottomRight?borderBottomRight.right:undefined,};box.isMerge=true;boxes.push(box);}}
return boxes;}}
const loadIconImage=memoize(function loadIconImage(src){const image=new Image();image.src=src;return image;});function useGridDrawing(refName,model,canvasSize){const canvasRef=useRef(refName);useEffect(drawGrid);const rendererStore=useStore(RendererStore);useStore(GridRenderer);function drawGrid(){const canvas=canvasRef.el;const dpr=window.devicePixelRatio||1;const ctx=canvas.getContext("2d",{alpha:false});const thinLineWidth=0.4*dpr;const renderingContext={ctx,dpr,thinLineWidth,};const{width,height}=canvasSize();canvas.style.width=`${width}px`;canvas.style.height=`${height}px`;canvas.width=width*dpr;canvas.height=height*dpr;canvas.setAttribute("style",`width:${width}px;height:${height}px;`);ctx.translate(-CANVAS_SHIFT,-CANVAS_SHIFT);ctx.scale(dpr,dpr);for(const layer of OrderedLayers()){model.drawLayer(renderingContext,layer);rendererStore.drawLayer(renderingContext,layer);}}}
function useWheelHandler(handler){function normalize(val,deltaMode){return val*(deltaMode===0?1:DEFAULT_CELL_HEIGHT);}
const onMouseWheel=(ev)=>{const deltaX=normalize(ev.shiftKey&&!isMacOS()?ev.deltaY:ev.deltaX,ev.deltaMode);const deltaY=normalize(ev.shiftKey&&!isMacOS()?ev.deltaX:ev.deltaY,ev.deltaMode);handler(deltaX,deltaY);};return onMouseWheel;}
css`
  .o-border {
    position: absolute;
    &:hover {
      cursor: grab;
    }
  }
  .o-moving {
    cursor: grabbing;
  }
`;class Border extends Component{static template="o-spreadsheet-Border";static props={zone:Object,orientation:String,isMoving:Boolean,onMoveHighlight:Function,};get style(){const isTop=["n","w","e"].includes(this.props.orientation);const isLeft=["n","w","s"].includes(this.props.orientation);const isHorizontal=["n","s"].includes(this.props.orientation);const isVertical=["w","e"].includes(this.props.orientation);const z=this.props.zone;const margin=2;const rect=this.env.model.getters.getVisibleRect(z);const left=rect.x;const right=rect.x+rect.width-2*margin;const top=rect.y;const bottom=rect.y+rect.height-2*margin;const lineWidth=4;const leftValue=isLeft?left:right;const topValue=isTop?top:bottom;const widthValue=isHorizontal?right-left:lineWidth;const heightValue=isVertical?bottom-top:lineWidth;return cssPropertiesToCss({left:`${leftValue}px`,top:`${topValue}px`,width:`${widthValue}px`,height:`${heightValue}px`,});}
onMouseDown(ev){this.props.onMoveHighlight(ev.clientX,ev.clientY);}}
css`
  .o-corner {
    position: absolute;
    height: 6px;
    width: 6px;
    border: 1px solid white;
  }
  .o-corner-nw,
  .o-corner-se {
    &:hover {
      cursor: nwse-resize;
    }
  }
  .o-corner-ne,
  .o-corner-sw {
    &:hover {
      cursor: nesw-resize;
    }
  }
  .o-resizing {
    cursor: grabbing;
  }
`;class Corner extends Component{static template="o-spreadsheet-Corner";static props={zone:Object,color:String,orientation:String,isResizing:Boolean,onResizeHighlight:Function,};isTop=this.props.orientation[0]==="n";isLeft=this.props.orientation[1]==="w";get style(){const z=this.props.zone;const col=this.isLeft?z.left:z.right;const row=this.isTop?z.top:z.bottom;const rect=this.env.model.getters.getVisibleRect({left:col,right:col,top:row,bottom:row,});if(rect.width*rect.height===0){return`display:none`;}
const leftValue=this.isLeft?rect.x:rect.x+rect.width;const topValue=this.isTop?rect.y:rect.y+rect.height;return cssPropertiesToCss({left:`${leftValue - AUTOFILL_EDGE_LENGTH / 2}px`,top:`${topValue - AUTOFILL_EDGE_LENGTH / 2}px`,"background-color":this.props.color,});}
onMouseDown(ev){this.props.onResizeHighlight(this.isLeft,this.isTop);}}
css`
  .o-highlight {
    z-index: ${ComponentsImportance.Highlight};
  }
`;class Highlight extends Component{static template="o-spreadsheet-Highlight";static props={zone:Object,color:String,};static components={Corner,Border,};highlightState=useState({shiftingMode:"none",});onResizeHighlight(isLeft,isTop){const activeSheetId=this.env.model.getters.getActiveSheetId();this.highlightState.shiftingMode="isResizing";const z=this.props.zone;const pivotCol=isLeft?z.right:z.left;const pivotRow=isTop?z.bottom:z.top;let lastCol=isLeft?z.left:z.right;let lastRow=isTop?z.top:z.bottom;let currentZone=z;this.env.model.dispatch("START_CHANGE_HIGHLIGHT",{zone:currentZone});const mouseMove=(col,row)=>{if(lastCol!==col||lastRow!==row){lastCol=clip(col===-1?lastCol:col,0,this.env.model.getters.getNumberCols(activeSheetId)-1);lastRow=clip(row===-1?lastRow:row,0,this.env.model.getters.getNumberRows(activeSheetId)-1);let newZone={left:Math.min(pivotCol,lastCol),top:Math.min(pivotRow,lastRow),right:Math.max(pivotCol,lastCol),bottom:Math.max(pivotRow,lastRow),};if(!isEqual(newZone,currentZone)){this.env.model.selection.selectZone({cell:{col:newZone.left,row:newZone.top},zone:newZone,},{unbounded:true});currentZone=newZone;}}};const mouseUp=()=>{this.highlightState.shiftingMode="none";};dragAndDropBeyondTheViewport(this.env,mouseMove,mouseUp);}
onMoveHighlight(clientX,clientY){this.highlightState.shiftingMode="isMoving";const z=this.props.zone;const position=gridOverlayPosition();const activeSheetId=this.env.model.getters.getActiveSheetId();const initCol=this.env.model.getters.getColIndex(clientX-position.left);const initRow=this.env.model.getters.getRowIndex(clientY-position.top);const deltaColMin=-z.left;const deltaColMax=this.env.model.getters.getNumberCols(activeSheetId)-z.right-1;const deltaRowMin=-z.top;const deltaRowMax=this.env.model.getters.getNumberRows(activeSheetId)-z.bottom-1;let currentZone=z;this.env.model.dispatch("START_CHANGE_HIGHLIGHT",{zone:currentZone});let lastCol=initCol;let lastRow=initRow;const mouseMove=(col,row)=>{if(lastCol!==col||lastRow!==row){lastCol=col===-1?lastCol:col;lastRow=row===-1?lastRow:row;const deltaCol=clip(lastCol-initCol,deltaColMin,deltaColMax);const deltaRow=clip(lastRow-initRow,deltaRowMin,deltaRowMax);let newZone={left:z.left+deltaCol,top:z.top+deltaRow,right:z.right+deltaCol,bottom:z.bottom+deltaRow,};if(!isEqual(newZone,currentZone)){this.env.model.selection.selectZone({cell:{col:newZone.left,row:newZone.top},zone:newZone,},{unbounded:true});currentZone=newZone;}}};const mouseUp=()=>{this.highlightState.shiftingMode="none";};dragAndDropBeyondTheViewport(this.env,mouseMove,mouseUp);}}
let ScrollBar$1=class ScrollBar{direction;el;constructor(el,direction){this.el=el;this.direction=direction;}
get scroll(){return this.direction==="horizontal"?this.el.scrollLeft:this.el.scrollTop;}
set scroll(value){if(this.direction==="horizontal"){this.el.scrollLeft=value;}
else{this.el.scrollTop=value;}}};css`
  .o-scrollbar {
    position: absolute;
    overflow: auto;
    z-index: ${ComponentsImportance.ScrollBar};
    background-color: ${BACKGROUND_GRAY_COLOR};

    &.corner {
      right: 0px;
      bottom: 0px;
      height: ${SCROLLBAR_WIDTH}px;
      width: ${SCROLLBAR_WIDTH}px;
      border-top: 1px solid #e2e3e3;
      border-left: 1px solid #e2e3e3;
    }
  }
`;class ScrollBar extends Component{static props={width:{type:Number,optional:true},height:{type:Number,optional:true},direction:String,position:Object,offset:Number,onScroll:Function,};static template=xml`
    <div
        t-attf-class="o-scrollbar {{props.direction}}"
        t-on-scroll="onScroll"
        t-ref="scrollbar"
        t-att-style="positionCss">
      <div t-att-style="sizeCss"/>
    </div>
  `;static defaultProps={width:1,height:1,};scrollbarRef;scrollbar;setup(){this.scrollbarRef=useRef("scrollbar");this.scrollbar=new ScrollBar$1(this.scrollbarRef.el,this.props.direction);onMounted(()=>{this.scrollbar.el=this.scrollbarRef.el;});useEffect(()=>{if(this.scrollbar.scroll!==this.props.offset){this.scrollbar.scroll=this.props.offset;}},()=>[this.scrollbar.scroll,this.props.offset]);}
get sizeCss(){return cssPropertiesToCss({width:`${this.props.width}px`,height:`${this.props.height}px`,});}
get positionCss(){return cssPropertiesToCss(this.props.position);}
onScroll(ev){if(this.props.offset!==this.scrollbar.scroll){this.props.onScroll(this.scrollbar.scroll);}}}
class HorizontalScrollBar extends Component{static props={leftOffset:{type:Number,optional:true},};static components={ScrollBar};static template=xml`
      <ScrollBar
        t-if="isDisplayed"
        width="width"
        position="position"
        offset="offset"
        direction="'horizontal'"
        onScroll.bind="onScroll"
      />`;static defaultProps={leftOffset:0,};get offset(){return this.env.model.getters.getActiveSheetDOMScrollInfo().scrollX;}
get width(){return this.env.model.getters.getMainViewportRect().width;}
get isDisplayed(){const{xRatio}=this.env.model.getters.getFrozenSheetViewRatio(this.env.model.getters.getActiveSheetId());return xRatio<1;}
get position(){const{x}=this.env.model.getters.getMainViewportRect();return{left:`${this.props.leftOffset + x}px`,bottom:"0px",height:`${SCROLLBAR_WIDTH}px`,right:`0px`,};}
onScroll(offset){const{scrollY}=this.env.model.getters.getActiveSheetDOMScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:offset,offsetY:scrollY,});}}
class VerticalScrollBar extends Component{static props={topOffset:{type:Number,optional:true},};static components={ScrollBar};static template=xml`
    <ScrollBar
      t-if="isDisplayed"
      height="height"
      position="position"
      offset="offset"
      direction="'vertical'"
      onScroll.bind="onScroll"
    />`;static defaultProps={topOffset:0,};get offset(){return this.env.model.getters.getActiveSheetDOMScrollInfo().scrollY;}
get height(){return this.env.model.getters.getMainViewportRect().height;}
get isDisplayed(){const{yRatio}=this.env.model.getters.getFrozenSheetViewRatio(this.env.model.getters.getActiveSheetId());return yRatio<1;}
get position(){const{y}=this.env.model.getters.getMainViewportRect();return{top:`${this.props.topOffset + y}px`,right:"0px",width:`${SCROLLBAR_WIDTH}px`,bottom:`0px`,};}
onScroll(offset){const{scrollX}=this.env.model.getters.getActiveSheetDOMScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX,offsetY:offset,});}}
const DEFAULT_SIDE_PANEL_SIZE=350;const MIN_SHEET_VIEW_WIDTH=150;class SidePanelStore extends SpreadsheetStore{mutators=["open","toggle","close","changePanelSize","resetPanelSize"];initialPanelProps={};componentTag="";panelSize=DEFAULT_SIDE_PANEL_SIZE;get isOpen(){if(!this.componentTag){return false;}
return this.computeState(this.componentTag,this.initialPanelProps).isOpen;}
get panelProps(){const state=this.computeState(this.componentTag,this.initialPanelProps);if(state.isOpen){return state.props??{};}
return{};}
get panelKey(){const state=this.computeState(this.componentTag,this.initialPanelProps);if(state.isOpen){return state.key;}
return undefined;}
open(componentTag,panelProps={}){const state=this.computeState(componentTag,panelProps);if(state.isOpen===false){return;}
if(this.isOpen&&componentTag!==this.componentTag){this.initialPanelProps?.onCloseSidePanel?.();}
this.componentTag=componentTag;this.initialPanelProps=state.props??{};}
toggle(componentTag,panelProps){if(this.isOpen&&componentTag===this.componentTag){this.close();}
else{this.open(componentTag,panelProps);}}
close(){this.initialPanelProps.onCloseSidePanel?.();this.initialPanelProps={};this.componentTag="";}
changePanelSize(size,spreadsheetElWidth){if(size<DEFAULT_SIDE_PANEL_SIZE){this.panelSize=DEFAULT_SIDE_PANEL_SIZE;}
else if(size>spreadsheetElWidth-MIN_SHEET_VIEW_WIDTH){this.panelSize=Math.max(spreadsheetElWidth-MIN_SHEET_VIEW_WIDTH,DEFAULT_SIDE_PANEL_SIZE);}
else{this.panelSize=size;}}
resetPanelSize(){this.panelSize=DEFAULT_SIDE_PANEL_SIZE;}
computeState(componentTag,panelProps){const customComputeState=sidePanelRegistry.get(componentTag).computeState;if(!customComputeState){return{isOpen:true,props:panelProps,};}
else{return customComputeState(this.getters,panelProps);}}}
const SIZE=3;const COLOR="#777";css`
  .o-table-resizer {
    width: ${SIZE}px;
    height: ${SIZE}px;
    border-bottom: ${SIZE}px solid ${COLOR};
    border-right: ${SIZE}px solid ${COLOR};
    cursor: nwse-resize;
  }
`;class TableResizer extends Component{static template="o-spreadsheet-TableResizer";static props={table:Object};state=useState({highlightZone:undefined});setup(){useHighlights(this);}
get containerStyle(){const tableZone=this.props.table.range.zone;const bottomRight={...tableZone,left:tableZone.right,top:tableZone.bottom};const rect=this.env.model.getters.getVisibleRect(bottomRight);if(rect.height===0||rect.width===0){return cssPropertiesToCss({display:"none"});}
return cssPropertiesToCss({top:`${rect.y + rect.height - SIZE * 2}px`,left:`${rect.x + rect.width - SIZE * 2}px`,});}
onMouseDown(ev){const tableZone=this.props.table.range.zone;const topLeft={col:tableZone.left,row:tableZone.top};document.body.style.cursor="nwse-resize";const onMouseUp=()=>{document.body.style.cursor="";const newTableZone=this.state.highlightZone;if(!newTableZone)
return;const sheetId=this.props.table.range.sheetId;this.env.model.dispatch("RESIZE_TABLE",{sheetId,zone:this.props.table.range.zone,newTableRange:this.env.model.getters.getRangeDataFromZone(sheetId,newTableZone),});this.state.highlightZone=undefined;};const onMouseMove=(col,row,ev)=>{this.state.highlightZone={left:topLeft.col,top:topLeft.row,right:Math.max(col,topLeft.col),bottom:Math.max(row,topLeft.row),};};dragAndDropBeyondTheViewport(this.env,onMouseMove,onMouseUp);}
get highlights(){if(!this.state.highlightZone)
return[];return[{zone:this.state.highlightZone,sheetId:this.props.table.range.sheetId,color:COLOR,noFill:true,},];}}
const registries$1={ROW:rowMenuRegistry,COL:colMenuRegistry,CELL:cellMenuRegistry,GROUP_HEADERS:groupHeadersMenuRegistry,UNGROUP_HEADERS:unGroupHeadersMenuRegistry,};class Grid extends Component{static template="o-spreadsheet-Grid";static props={exposeFocus:Function,};static components={GridComposer,GridOverlay,GridPopover,HeadersOverlay,Menu,Autofill,ClientTag,Highlight,Popover,VerticalScrollBar,HorizontalScrollBar,TableResizer,};HEADER_HEIGHT=HEADER_HEIGHT;HEADER_WIDTH=HEADER_WIDTH;menuState;gridRef;highlightStore;cellPopovers;composerFocusStore;DOMFocusableElementStore;paintFormatStore;onMouseWheel;canvasPosition;hoveredCell;sidePanel;setup(){this.highlightStore=useStore(HighlightStore);this.menuState=useState({isOpen:false,position:null,menuItems:[],});this.gridRef=useRef("grid");this.canvasPosition=useAbsoluteBoundingRect(this.gridRef);this.hoveredCell=useStore(HoveredCellStore);this.composerFocusStore=useStore(ComposerFocusStore);this.DOMFocusableElementStore=useStore(DOMFocusableElementStore);this.sidePanel=useStore(SidePanelStore);this.paintFormatStore=useStore(PaintFormatStore);useStore(ArrayFormulaHighlight);useChildSubEnv({getPopoverContainerRect:()=>this.getGridRect()});useExternalListener(document.body,"cut",this.copy.bind(this,true));useExternalListener(document.body,"copy",this.copy.bind(this,false));useExternalListener(document.body,"paste",this.paste);onMounted(()=>this.focusDefaultElement());this.props.exposeFocus(()=>this.focusDefaultElement());useGridDrawing("canvas",this.env.model,()=>this.env.model.getters.getSheetViewDimensionWithHeaders());this.onMouseWheel=useWheelHandler((deltaX,deltaY)=>{this.moveCanvas(deltaX,deltaY);this.hoveredCell.clear();});this.cellPopovers=useStore(CellPopoverStore);useEffect(()=>{if(!this.sidePanel.isOpen){this.DOMFocusableElementStore.focus();}},()=>[this.sidePanel.isOpen]);}
onCellHovered({col,row}){this.hoveredCell.hover({col,row});}
get highlights(){return this.highlightStore.highlights;}
get gridOverlayDimensions(){return cssPropertiesToCss({top:`${HEADER_HEIGHT}px`,left:`${HEADER_WIDTH}px`,height:`calc(100% - ${HEADER_HEIGHT + SCROLLBAR_WIDTH}px)`,width:`calc(100% - ${HEADER_WIDTH + SCROLLBAR_WIDTH}px)`,});}
onClosePopover(){if(this.cellPopovers.isOpen){this.cellPopovers.close();}
this.focusDefaultElement();}
keyDownMapping={Enter:()=>{const cell=this.env.model.getters.getActiveCell();cell.type===CellValueType.empty?this.onComposerCellFocused():this.onComposerContentFocused();},Tab:()=>this.env.model.selection.moveAnchorCell("right",1),"Shift+Tab":()=>this.env.model.selection.moveAnchorCell("left",1),F2:()=>{const cell=this.env.model.getters.getActiveCell();cell.type===CellValueType.empty?this.onComposerCellFocused():this.onComposerContentFocused();},Delete:()=>{this.env.model.dispatch("DELETE_CONTENT",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});},Backspace:()=>{this.env.model.dispatch("DELETE_CONTENT",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});},Escape:()=>{if(this.cellPopovers.isOpen){this.cellPopovers.close();}
else if(this.menuState.isOpen){this.closeMenu();}
else if(this.paintFormatStore.isActive){this.paintFormatStore.cancel();}
else{this.env.model.dispatch("CLEAN_CLIPBOARD_HIGHLIGHT");}},"Ctrl+A":()=>this.env.model.selection.loopSelection(),"Ctrl+Z":()=>this.env.model.dispatch("REQUEST_UNDO"),"Ctrl+Y":()=>this.env.model.dispatch("REQUEST_REDO"),F4:()=>this.env.model.dispatch("REQUEST_REDO"),"Ctrl+B":()=>this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{bold:!this.env.model.getters.getCurrentStyle().bold},}),"Ctrl+I":()=>this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{italic:!this.env.model.getters.getCurrentStyle().italic},}),"Ctrl+U":()=>this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{underline:!this.env.model.getters.getCurrentStyle().underline},}),"Ctrl+O":()=>CREATE_IMAGE(this.env),"Alt+=":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const mainSelectedZone=this.env.model.getters.getSelectedZone();const{anchor}=this.env.model.getters.getSelection();const sums=this.env.model.getters.getAutomaticSums(sheetId,mainSelectedZone,anchor.cell);if(this.env.model.getters.isSingleCellOrMerge(sheetId,mainSelectedZone)||(this.env.model.getters.isEmpty(sheetId,mainSelectedZone)&&sums.length<=1)){const zone=sums[0]?.zone;const zoneXc=zone?this.env.model.getters.zoneToXC(sheetId,sums[0].zone):"";const formula=`=SUM(${zoneXc})`;this.onComposerCellFocused(formula,{start:5,end:5+zoneXc.length});}
else{this.env.model.dispatch("SUM_SELECTION");}},"Alt+Enter":()=>{const cell=this.env.model.getters.getActiveCell();if(cell.link){openLink(cell.link,this.env);}},"Ctrl+Home":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const{col,row}=this.env.model.getters.getNextVisibleCellPosition({sheetId,col:0,row:0,});this.env.model.selection.selectCell(col,row);},"Ctrl+End":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const col=this.env.model.getters.findVisibleHeader(sheetId,"COL",this.env.model.getters.getNumberCols(sheetId)-1,0);const row=this.env.model.getters.findVisibleHeader(sheetId,"ROW",this.env.model.getters.getNumberRows(sheetId)-1,0);this.env.model.selection.selectCell(col,row);},"Shift+ ":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const newZone={...this.env.model.getters.getSelectedZone(),left:0,right:this.env.model.getters.getNumberCols(sheetId)-1,};const position=this.env.model.getters.getActivePosition();this.env.model.selection.selectZone({cell:position,zone:newZone});},"Ctrl+ ":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const newZone={...this.env.model.getters.getSelectedZone(),top:0,bottom:this.env.model.getters.getNumberRows(sheetId)-1,};const position=this.env.model.getters.getActivePosition();this.env.model.selection.selectZone({cell:position,zone:newZone});},"Ctrl+D":async()=>this.env.model.dispatch("COPY_PASTE_CELLS_ABOVE"),"Ctrl+R":async()=>this.env.model.dispatch("COPY_PASTE_CELLS_ON_LEFT"),"Ctrl+Shift+E":()=>this.setHorizontalAlign("center"),"Ctrl+Shift+L":()=>this.setHorizontalAlign("left"),"Ctrl+Shift+R":()=>this.setHorizontalAlign("right"),"Ctrl+Shift+V":()=>PASTE_AS_VALUE_ACTION(this.env),"Ctrl+Shift+<":()=>this.clearFormatting(),"Ctrl+<":()=>this.clearFormatting(),"Ctrl+Shift+ ":()=>{this.env.model.selection.selectAll();},"Ctrl+Alt+=":()=>{const activeCols=this.env.model.getters.getActiveCols();const activeRows=this.env.model.getters.getActiveRows();const isSingleSelection=this.env.model.getters.getSelectedZones().length===1;const areFullCols=activeCols.size>0&&isSingleSelection;const areFullRows=activeRows.size>0&&isSingleSelection;if(areFullCols&&!areFullRows){INSERT_COLUMNS_BEFORE_ACTION(this.env);}
else if(areFullRows&&!areFullCols){INSERT_ROWS_BEFORE_ACTION(this.env);}},"Ctrl+Alt+-":()=>{const columns=[...this.env.model.getters.getActiveCols()];const rows=[...this.env.model.getters.getActiveRows()];if(columns.length>0&&rows.length===0){this.env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),dimension:"COL",elements:columns,});}
else if(rows.length>0&&columns.length===0){this.env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),dimension:"ROW",elements:rows,});}},"Shift+PageDown":()=>{this.env.model.dispatch("ACTIVATE_NEXT_SHEET");},"Shift+PageUp":()=>{this.env.model.dispatch("ACTIVATE_PREVIOUS_SHEET");},PageDown:()=>this.env.model.dispatch("SHIFT_VIEWPORT_DOWN"),PageUp:()=>this.env.model.dispatch("SHIFT_VIEWPORT_UP"),"Ctrl+K":()=>INSERT_LINK(this.env),"Alt+Shift+ArrowRight":()=>this.processHeaderGroupingKey("right"),"Alt+Shift+ArrowLeft":()=>this.processHeaderGroupingKey("left"),"Alt+Shift+ArrowUp":()=>this.processHeaderGroupingKey("up"),"Alt+Shift+ArrowDown":()=>this.processHeaderGroupingKey("down"),};focusDefaultElement(){if(!this.env.model.getters.getSelectedFigureId()&&this.composerFocusStore.activeComposer.editionMode==="inactive"){this.DOMFocusableElementStore.focus();}}
get gridEl(){if(!this.gridRef.el){throw new Error("Grid el is not defined.");}
return this.gridRef.el;}
getAutofillPosition(){const zone=this.env.model.getters.getSelectedZone();const rect=this.env.model.getters.getVisibleRect(zone);return{left:rect.x+rect.width-AUTOFILL_EDGE_LENGTH/2,top:rect.y+rect.height-AUTOFILL_EDGE_LENGTH/2,};}
get isAutofillVisible(){const zone=this.env.model.getters.getSelectedZone();const rect=this.env.model.getters.getVisibleRect({left:zone.right,right:zone.right,top:zone.bottom,bottom:zone.bottom,});return!(rect.width===0||rect.height===0);}
onGridResized({height,width}){this.env.model.dispatch("RESIZE_SHEETVIEW",{width:width,height:height,gridOffsetX:HEADER_WIDTH,gridOffsetY:HEADER_HEIGHT,});}
moveCanvas(deltaX,deltaY){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetDOMScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX+deltaX,offsetY:scrollY+deltaY,});}
getClientPositionKey(client){return`${client.id}-${client.position?.sheetId}-${client.position?.col}-${client.position?.row}`;}
isCellHovered(col,row){return this.hoveredCell.col===col&&this.hoveredCell.row===row;}
getGridRect(){return{...this.canvasPosition,...this.env.model.getters.getSheetViewDimensionWithHeaders()};}
onCellClicked(col,row,modifiers){if(this.composerFocusStore.activeComposer.editionMode==="editing"){this.composerFocusStore.activeComposer.stopEdition();}
if(modifiers.expandZone){this.env.model.selection.setAnchorCorner(col,row);}
else if(modifiers.addZone){this.env.model.selection.addCellToSelection(col,row);}
else{this.env.model.selection.selectCell(col,row);}
let prevCol=col;let prevRow=row;const onMouseMove=(col,row,ev)=>{ev.preventDefault();if((col!==prevCol&&col!=-1)||(row!==prevRow&&row!=-1)){prevCol=col===-1?prevCol:col;prevRow=row===-1?prevRow:row;this.env.model.selection.setAnchorCorner(prevCol,prevRow);}};const onMouseUp=()=>{if(this.paintFormatStore.isActive){this.paintFormatStore.pasteFormat(this.env.model.getters.getSelectedZones());}};dragAndDropBeyondTheViewport(this.env,onMouseMove,onMouseUp);}
onCellDoubleClicked(col,row){const sheetId=this.env.model.getters.getActiveSheetId();({col,row}=this.env.model.getters.getMainCellPosition({sheetId,col,row}));const cell=this.env.model.getters.getEvaluatedCell({sheetId,col,row});if(cell.type===CellValueType.empty){this.onComposerCellFocused();}
else{this.onComposerContentFocused();}}
processArrows(ev){ev.preventDefault();ev.stopPropagation();if(this.cellPopovers.isOpen){this.cellPopovers.close();}
updateSelectionWithArrowKeys(ev,this.env.model.selection);if(this.paintFormatStore.isActive){this.paintFormatStore.pasteFormat(this.env.model.getters.getSelectedZones());}}
onKeydown(ev){const keyDownString=keyboardEventToShortcutString(ev);const handler=this.keyDownMapping[keyDownString];if(handler){ev.preventDefault();ev.stopPropagation();handler();return;}
if(ev.key.startsWith("Arrow")){this.processArrows(ev);return;}}
onInputContextMenu(ev){ev.preventDefault();const lastZone=this.env.model.getters.getSelectedZone();const{left:col,top:row}=lastZone;let type="CELL";this.composerFocusStore.activeComposer.stopEdition();if(this.env.model.getters.getActiveCols().has(col)){type="COL";}
else if(this.env.model.getters.getActiveRows().has(row)){type="ROW";}
const{x,y,width}=this.env.model.getters.getVisibleRect(lastZone);const gridRect=this.getGridRect();this.toggleContextMenu(type,gridRect.x+x+width,gridRect.y+y);}
onCellRightClicked(col,row,{x,y}){const zones=this.env.model.getters.getSelectedZones();const lastZone=zones[zones.length-1];let type="CELL";if(!isInside(col,row,lastZone)){this.env.model.selection.getBackToDefault();this.env.model.selection.selectCell(col,row);}
else{if(this.env.model.getters.getActiveCols().has(col)){type="COL";}
else if(this.env.model.getters.getActiveRows().has(row)){type="ROW";}}
this.toggleContextMenu(type,x,y);}
toggleContextMenu(type,x,y){if(this.cellPopovers.isOpen){this.cellPopovers.close();}
this.menuState.isOpen=true;this.menuState.position={x,y};this.menuState.menuItems=registries$1[type].getMenuItems();}
async copy(cut,ev){if(!this.gridEl.contains(document.activeElement)){return;}
if(this.composerFocusStore.activeComposer.editionMode!=="inactive"){return;}
if(cut){interactiveCut(this.env);}
else{this.env.model.dispatch("COPY");}
const content=this.env.model.getters.getClipboardContent();const clipboardData=ev.clipboardData;for(const type in content){clipboardData?.setData(type,content[type]);}
ev.preventDefault();}
async paste(ev){if(!this.gridEl.contains(document.activeElement)){return;}
ev.preventDefault();const clipboardData=ev.clipboardData;if(!clipboardData){return;}
const clipboardDataTextContent=clipboardData?.getData(ClipboardMIMEType.PlainText);const clipboardDataHtmlContent=clipboardData?.getData(ClipboardMIMEType.Html);const htmlDocument=new DOMParser().parseFromString(clipboardDataHtmlContent??"<div></div>","text/html");const osClipboardSpreadsheetContent=clipboardData.getData(ClipboardMIMEType.OSpreadsheet)||"{}";const target=this.env.model.getters.getSelectedZones();const isCutOperation=this.env.model.getters.isCutOperation();const clipboardId=JSON.parse(osClipboardSpreadsheetContent).clipboardId??htmlDocument.querySelector("div")?.getAttribute("data-clipboard-id");if(this.env.model.getters.getClipboardId()===clipboardId){interactivePaste(this.env,target);}
else{const clipboardContent={[ClipboardMIMEType.PlainText]:clipboardDataTextContent,[ClipboardMIMEType.Html]:clipboardDataHtmlContent,};if(osClipboardSpreadsheetContent!=="{}"){clipboardContent[ClipboardMIMEType.OSpreadsheet]=osClipboardSpreadsheetContent;}
interactivePasteFromOS(this.env,target,clipboardContent);}
if(isCutOperation){await this.env.clipboard.write({[ClipboardMIMEType.PlainText]:""});}}
clearFormatting(){this.env.model.dispatch("CLEAR_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});}
setHorizontalAlign(align){this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{align},});}
closeMenu(){this.menuState.isOpen=false;this.focusDefaultElement();}
processHeaderGroupingKey(direction){if(this.env.model.getters.getSelectedZones().length!==1){return;}
const selectingRows=this.env.model.getters.getActiveRows().size>0;const selectingCols=this.env.model.getters.getActiveCols().size>0;if(selectingCols&&selectingRows){this.processHeaderGroupingEventOnWholeSheet(direction);}
else if(selectingCols){this.processHeaderGroupingEventOnHeaders(direction,"COL");}
else if(selectingRows){this.processHeaderGroupingEventOnHeaders(direction,"ROW");}
else{this.processHeaderGroupingEventOnGrid(direction);}}
processHeaderGroupingEventOnHeaders(direction,dimension){const sheetId=this.env.model.getters.getActiveSheetId();const zone=this.env.model.getters.getSelectedZone();const start=dimension==="COL"?zone.left:zone.top;const end=dimension==="COL"?zone.right:zone.bottom;switch(direction){case"right":this.env.model.dispatch("GROUP_HEADERS",{sheetId,dimension:dimension,start,end});break;case"left":this.env.model.dispatch("UNGROUP_HEADERS",{sheetId,dimension:dimension,start,end});break;case"down":this.env.model.dispatch("UNFOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension,zone});break;case"up":this.env.model.dispatch("FOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension,zone});break;}}
processHeaderGroupingEventOnWholeSheet(direction){const sheetId=this.env.model.getters.getActiveSheetId();if(direction==="up"){this.env.model.dispatch("FOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"ROW"});this.env.model.dispatch("FOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"COL"});}
else if(direction==="down"){this.env.model.dispatch("UNFOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"ROW"});this.env.model.dispatch("UNFOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"COL"});}}
processHeaderGroupingEventOnGrid(direction){const sheetId=this.env.model.getters.getActiveSheetId();const zone=this.env.model.getters.getSelectedZone();switch(direction){case"down":this.env.model.dispatch("UNFOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"ROW",zone:zone,});this.env.model.dispatch("UNFOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"COL",zone:zone,});break;case"up":this.env.model.dispatch("FOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"ROW",zone:zone,});this.env.model.dispatch("FOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"COL",zone:zone,});break;case"right":{const{x,y,width}=this.env.model.getters.getVisibleRect(zone);const gridRect=this.getGridRect();this.toggleContextMenu("GROUP_HEADERS",x+width+gridRect.x,y+gridRect.y);break;}
case"left":{if(!canUngroupHeaders(this.env,"COL")&&!canUngroupHeaders(this.env,"ROW")){return;}
const{x,y,width}=this.env.model.getters.getVisibleRect(zone);const gridRect=this.getGridRect();this.toggleContextMenu("UNGROUP_HEADERS",x+width+gridRect.x,y+gridRect.y);break;}}}
onComposerCellFocused(content,selection){this.composerFocusStore.focusActiveComposer({content,selection,focusMode:"cellFocus"});}
onComposerContentFocused(){this.composerFocusStore.focusActiveComposer({focusMode:"contentFocus"});}
get staticTables(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getCoreTables(sheetId).filter(isStaticTable);}}
class EditableName extends Component{static template="o-spreadsheet-EditableName";static props={name:String,displayName:String,onChanged:Function,};state;setup(){this.state=useState({isEditing:false,name:"",});}
rename(){this.state.isEditing=true;this.state.name=this.props.name;}
save(){this.props.onChanged(this.state.name.trim());this.state.isEditing=false;}}
class BasePlugin{static getters=[];history;dispatch;canDispatch;constructor(stateObserver,dispatch,canDispatch){this.history=Object.assign(Object.create(stateObserver),{update:stateObserver.addChange.bind(stateObserver,this),selectCell:()=>{},});this.dispatch=dispatch;this.canDispatch=canDispatch;}
exportForExcel(data){}
allowDispatch(command){return"Success";}
beforeHandle(command){}
handle(command){}
finalize(){}
batchValidations(...validations){return(toValidate)=>validations.map((validation)=>validation.call(this,toValidate)).flat();}
chainValidations(...validations){return(toValidate)=>{for(const validation of validations){let results=validation.call(this,toValidate);if(!Array.isArray(results)){results=[results];}
const cancelledReasons=results.filter((result)=>result!=="Success");if(cancelledReasons.length){return cancelledReasons;}}
return"Success";};}
checkValidations(command,...validations){return this.batchValidations(...validations)(command);}}
class CorePlugin extends BasePlugin{getters;uuidGenerator;constructor({getters,stateObserver,range,dispatch,canDispatch,uuidGenerator,}){super(stateObserver,dispatch,canDispatch);range.addRangeProvider(this.adaptRanges.bind(this));this.getters=getters;this.uuidGenerator=uuidGenerator;}
import(data){}
export(data){}
adaptRanges(applyChange,sheetId){}
garbageCollectExternalResources(){}}
class BordersPlugin extends CorePlugin{static getters=["getCellBorder","getBordersColors"];borders={};allowDispatch(cmd){switch(cmd.type){case"SET_BORDER":return this.checkBordersUnchanged(cmd);default:return"Success";}}
handle(cmd){switch(cmd.type){case"ADD_MERGE":for(const zone of cmd.target){this.addBordersToMerge(cmd.sheetId,zone);}
break;case"DUPLICATE_SHEET":const borders=this.borders[cmd.sheetId];if(borders){const bordersCopy=borders.slice().map((col)=>col?.slice().map((border)=>({...border})));this.history.update("borders",cmd.sheetIdTo,bordersCopy);}
break;case"DELETE_SHEET":const allBorders={...this.borders};delete allBorders[cmd.sheetId];this.history.update("borders",allBorders);break;case"SET_BORDER":this.setBorder(cmd.sheetId,cmd.col,cmd.row,cmd.border);break;case"SET_ZONE_BORDERS":if(cmd.border){const target=cmd.target.map((zone)=>this.getters.expandZone(cmd.sheetId,zone));this.setBorders(cmd.sheetId,target,cmd.border.position,cmd.border.color===""?undefined:{style:cmd.border.style||DEFAULT_BORDER_DESC.style,color:cmd.border.color||DEFAULT_BORDER_DESC.color,});}
break;case"CLEAR_FORMATTING":this.clearBorders(cmd.sheetId,cmd.target);break;case"REMOVE_COLUMNS_ROWS":const elements=[...cmd.elements].sort((a,b)=>b-a);for(const group of groupConsecutive(elements)){if(cmd.dimension==="COL"){this.shiftBordersHorizontally(cmd.sheetId,group[group.length-1]+1,-group.length);}
else{this.shiftBordersVertically(cmd.sheetId,group[group.length-1]+1,-group.length);}}
break;case"ADD_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.handleAddColumns(cmd);}
else{this.handleAddRows(cmd);}
break;}}
handleAddColumns(cmd){let colLeftOfInsertion;let colRightOfInsertion;if(cmd.position==="before"){this.shiftBordersHorizontally(cmd.sheetId,cmd.base,cmd.quantity,{moveFirstLeftBorder:true,});colLeftOfInsertion=cmd.base-1;colRightOfInsertion=cmd.base+cmd.quantity;}
else{this.shiftBordersHorizontally(cmd.sheetId,cmd.base+1,cmd.quantity,{moveFirstLeftBorder:false,});colLeftOfInsertion=cmd.base;colRightOfInsertion=cmd.base+cmd.quantity+1;}
this.ensureColumnBorderContinuity(cmd.sheetId,colLeftOfInsertion,colRightOfInsertion);}
handleAddRows(cmd){let rowAboveInsertion;let rowBelowInsertion;if(cmd.position==="before"){this.shiftBordersVertically(cmd.sheetId,cmd.base,cmd.quantity,{moveFirstTopBorder:true,});rowAboveInsertion=cmd.base-1;rowBelowInsertion=cmd.base+cmd.quantity;}
else{this.shiftBordersVertically(cmd.sheetId,cmd.base+1,cmd.quantity,{moveFirstTopBorder:false,});rowAboveInsertion=cmd.base;rowBelowInsertion=cmd.base+cmd.quantity+1;}
this.ensureRowBorderContinuity(cmd.sheetId,rowAboveInsertion,rowBelowInsertion);}
getCellBorder({sheetId,col,row}){const border={top:this.borders[sheetId]?.[col]?.[row]?.horizontal,bottom:this.borders[sheetId]?.[col]?.[row+1]?.horizontal,left:this.borders[sheetId]?.[col]?.[row]?.vertical,right:this.borders[sheetId]?.[col+1]?.[row]?.vertical,};if(!border.bottom&&!border.left&&!border.right&&!border.top){return null;}
return border;}
getBordersColors(sheetId){const colors=[];const sheetBorders=this.borders[sheetId];if(sheetBorders){for(const borders of sheetBorders.filter(isDefined)){for(const cellBorder of borders){if(cellBorder?.horizontal){colors.push(cellBorder.horizontal.color);}
if(cellBorder?.vertical){colors.push(cellBorder.vertical.color);}}}}
return colors;}
ensureColumnBorderContinuity(sheetId,leftColumn,rightColumn){const targetCols=range(leftColumn+1,rightColumn);for(let row=0;row<this.getters.getNumberRows(sheetId);row++){const leftBorder=this.getCellBorder({sheetId,col:leftColumn,row});const rightBorder=this.getCellBorder({sheetId,col:rightColumn,row});if(leftBorder&&rightBorder){const commonSides=this.getCommonSides(leftBorder,rightBorder);for(let col of targetCols){this.addBorder(sheetId,col,row,commonSides);}}}}
ensureRowBorderContinuity(sheetId,topRow,bottomRow){const targetRows=range(topRow+1,bottomRow);for(let col=0;col<this.getters.getNumberCols(sheetId);col++){const aboveBorder=this.getCellBorder({sheetId,col,row:topRow});const belowBorder=this.getCellBorder({sheetId,col,row:bottomRow});if(aboveBorder&&belowBorder){const commonSides=this.getCommonSides(aboveBorder,belowBorder);for(let row of targetRows){this.addBorder(sheetId,col,row,commonSides);}}}}
getCommonSides(border1,border2){const commonBorder={};for(let side of["top","bottom","left","right"]){if(border1[side]&&border1[side]===border2[side]){commonBorder[side]=border1[side];}}
return commonBorder;}
getColumnsWithBorders(sheetId){const sheetBorders=this.borders[sheetId];if(!sheetBorders)
return[];return Object.keys(sheetBorders).map((index)=>parseInt(index,10));}
getRowsWithBorders(sheetId){const sheetBorders=this.borders[sheetId]?.filter(isDefined);if(!sheetBorders)
return[];const rowsWithBorders=new Set();for(const rowBorders of sheetBorders){for(const rowBorder in rowBorders){rowsWithBorders.add(parseInt(rowBorder,10));}}
return Array.from(rowsWithBorders);}
getRowsRange(sheetId){const sheetBorders=this.borders[sheetId];if(!sheetBorders)
return[];return range(0,this.getters.getNumberRows(sheetId)+1);}
shiftBordersHorizontally(sheetId,start,delta,{moveFirstLeftBorder}={}){const borders=this.borders[sheetId];if(!borders)
return;if(delta<0){this.moveBordersOfColumn(sheetId,start,delta,"vertical",{destructive:false,});}
this.getColumnsWithBorders(sheetId).filter((col)=>col>=start).sort((a,b)=>(delta<0?a-b:b-a)).forEach((col)=>{if((col===start&&moveFirstLeftBorder)||col!==start){this.moveBordersOfColumn(sheetId,col,delta,"vertical");}
this.moveBordersOfColumn(sheetId,col,delta,"horizontal");});}
shiftBordersVertically(sheetId,start,delta,{moveFirstTopBorder}={}){const borders=this.borders[sheetId];if(!borders)
return;if(delta<0){this.moveBordersOfRow(sheetId,start,delta,"horizontal",{destructive:false,});}
this.getRowsWithBorders(sheetId).filter((row)=>row>=start).sort((a,b)=>(delta<0?a-b:b-a)).forEach((row)=>{if((row===start&&moveFirstTopBorder)||row!==start){this.moveBordersOfRow(sheetId,row,delta,"horizontal");}
this.moveBordersOfRow(sheetId,row,delta,"vertical");});}
moveBordersOfRow(sheetId,row,delta,borderDirection,{destructive}={destructive:true}){const borders=this.borders[sheetId];if(!borders)
return;this.getColumnsWithBorders(sheetId).forEach((col)=>{const targetBorder=borders[col]?.[row+delta]?.[borderDirection];const movedBorder=borders[col]?.[row]?.[borderDirection];this.history.update("borders",sheetId,col,row+delta,borderDirection,destructive?movedBorder:movedBorder||targetBorder);this.history.update("borders",sheetId,col,row,borderDirection,undefined);});}
moveBordersOfColumn(sheetId,col,delta,borderDirection,{destructive}={destructive:true}){const borders=this.borders[sheetId];if(!borders)
return;this.getRowsRange(sheetId).forEach((row)=>{const targetBorder=borders[col+delta]?.[row]?.[borderDirection];const movedBorder=borders[col]?.[row]?.[borderDirection];this.history.update("borders",sheetId,col+delta,row,borderDirection,destructive?movedBorder:movedBorder||targetBorder);this.history.update("borders",sheetId,col,row,borderDirection,undefined);});}
setBorder(sheetId,col,row,border,override=true){if(override||!this.borders?.[sheetId]?.[col]?.[row]?.vertical){this.history.update("borders",sheetId,col,row,"vertical",border?.left);}
if(override||!this.borders?.[sheetId]?.[col]?.[row]?.horizontal){this.history.update("borders",sheetId,col,row,"horizontal",border?.top);}
if(override||!this.borders?.[sheetId]?.[col+1]?.[row]?.vertical){this.history.update("borders",sheetId,col+1,row,"vertical",border?.right);}
if(override||!this.borders?.[sheetId]?.[col]?.[row+1]?.horizontal){this.history.update("borders",sheetId,col,row+1,"horizontal",border?.bottom);}}
clearBorders(sheetId,zones){for(let zone of recomputeZones(zones)){for(let row=zone.top;row<=zone.bottom;row++){this.history.update("borders",sheetId,zone.right+1,row,"vertical",undefined);for(let col=zone.left;col<=zone.right;col++){this.history.update("borders",sheetId,col,row,undefined);}}
for(let col=zone.left;col<=zone.right;col++){this.history.update("borders",sheetId,col,zone.bottom+1,"horizontal",undefined);}}}
addBorder(sheetId,col,row,border){this.setBorder(sheetId,col,row,{...this.getCellBorder({sheetId,col,row}),...border,});}
setBorders(sheetId,zones,position,border){if(position==="clear"){return this.clearBorders(sheetId,zones);}
for(let zone of recomputeZones(zones)){if(position==="h"||position==="hv"||position==="all"){for(let row=zone.top+1;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,row,{top:border});}}}
if(position==="v"||position==="hv"||position==="all"){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left+1;col<=zone.right;col++){this.addBorder(sheetId,col,row,{left:border});}}}
if(position==="left"||position==="all"||position==="external"){for(let row=zone.top;row<=zone.bottom;row++){this.addBorder(sheetId,zone.left,row,{left:border});}}
if(position==="right"||position==="all"||position==="external"){for(let row=zone.top;row<=zone.bottom;row++){this.addBorder(sheetId,zone.right+1,row,{left:border});}}
if(position==="top"||position==="all"||position==="external"){for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,zone.top,{top:border});}}
if(position==="bottom"||position==="all"||position==="external"){for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,zone.bottom+1,{top:border});}}}}
addBordersToMerge(sheetId,zone){const{left,right,top,bottom}=zone;const bordersTopLeft=this.getCellBorder({sheetId,col:left,row:top});const bordersBottomRight=this.getCellBorder({sheetId,col:right,row:bottom});this.clearBorders(sheetId,[zone]);if(bordersTopLeft?.top){this.setBorders(sheetId,[{...zone,bottom:top}],"top",bordersTopLeft.top);}
if(bordersTopLeft?.left){this.setBorders(sheetId,[{...zone,right:left}],"left",bordersTopLeft.left);}
if(bordersBottomRight?.bottom){this.setBorders(sheetId,[{...zone,top:bottom}],"bottom",bordersBottomRight.bottom);}
else if(bordersTopLeft?.bottom){this.setBorders(sheetId,[{...zone,top:bottom}],"bottom",bordersTopLeft.bottom);}
if(bordersBottomRight?.right){this.setBorders(sheetId,[{...zone,left:right}],"right",bordersBottomRight.right);}
else if(bordersTopLeft?.right){this.setBorders(sheetId,[{...zone,left:right}],"right",bordersTopLeft.right);}}
checkBordersUnchanged(cmd){const currentBorder=this.getCellBorder(cmd);const areAllNewBordersUndefined=!cmd.border?.bottom&&!cmd.border?.left&&!cmd.border?.right&&!cmd.border?.top;if((!currentBorder&&areAllNewBordersUndefined)||deepEquals(currentBorder,cmd.border)){return"NoChanges";}
return"Success";}
import(data){if(Object.keys(data.borders||{}).length){for(let sheet of data.sheets){for(const zoneXc in sheet.borders){const borderId=sheet.borders[zoneXc];const border=data.borders[borderId];const zone=toZone(zoneXc);for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.setBorder(sheet.id,col,row,border,false);}}}}}
for(let sheetData of data.sheets){if(sheetData.merges){for(let merge of sheetData.merges){this.addBordersToMerge(sheetData.id,toZone(merge));}}}}
export(data){const borders={};for(let sheet of data.sheets){const positionsByBorder={};for(let col=0;col<sheet.colNumber;col++){for(let row=0;row<sheet.rowNumber;row++){const border=this.getCellBorder({sheetId:sheet.id,col,row});if(border){const borderId=getItemId(border,borders);const position={sheetId:sheet.id,col,row};positionsByBorder[borderId]??=[];positionsByBorder[borderId].push(position);}}}
sheet.borders=groupItemIdsByZones(positionsByBorder);}
data.borders=borders;}
exportForExcel(data){for(const sheet of data.sheets){for(let col=0;col<sheet.colNumber;col++){for(let row=0;row<sheet.rowNumber;row++){const border=this.getCellBorder({sheetId:sheet.id,col,row});if(border){const xc=toXC(col,row);sheet.cells[xc]??={};sheet.cells[xc].border=getItemId(border,data.borders);}}}}}}
class PositionMap{map={};set({sheetId,col,row},value){const map=this.map;if(!map[sheetId]){map[sheetId]={};}
if(!map[sheetId][col]){map[sheetId][col]={};}
map[sheetId][col][row]=value;}
get({sheetId,col,row}){return this.map[sheetId]?.[col]?.[row];}
getSheet(sheetId){return this.map[sheetId];}
has({sheetId,col,row}){return this.map[sheetId]?.[col]?.[row]!==undefined;}
delete({sheetId,col,row}){delete this.map[sheetId]?.[col]?.[row];}
keys(){const map=this.map;const keys=[];for(const sheetId in map){for(const col in map[sheetId]){for(const row in map[sheetId][col]){keys.push({sheetId,col:parseInt(col),row:parseInt(row)});}}}
return keys;}
keysForSheet(sheetId){const map=this.map[sheetId];if(!map){return[];}
const keys=[];for(const col in map){for(const row in map[col]){keys.push({sheetId,col:parseInt(col),row:parseInt(row)});}}
return keys;}}
class CellPlugin extends CorePlugin{static getters=["zoneToXC","getCells","getTranslatedCellFormula","getCellStyle","getCellById","getFormulaString","getFormulaMovedInSheet",];nextId=1;cells={};adaptRanges(applyChange,sheetId){for(const sheet of Object.keys(this.cells)){for(const cell of Object.values(this.cells[sheet]||{})){if(cell.isFormula){for(const range of cell.compiledFormula.dependencies){if(!sheetId||range.sheetId===sheetId){const change=applyChange(range);if(change.changeType!=="NONE"){this.history.update("cells",sheet,cell.id,"compiledFormula","dependencies",cell.compiledFormula.dependencies.indexOf(range),change.range);}}}}}}}
allowDispatch(cmd){switch(cmd.type){case"UPDATE_CELL":return this.checkValidations(cmd,this.checkCellOutOfSheet,this.checkUselessUpdateCell);case"CLEAR_CELL":return this.checkValidations(cmd,this.checkCellOutOfSheet,this.checkUselessClearCell);default:return"Success";}}
handle(cmd){switch(cmd.type){case"SET_FORMATTING":if("style"in cmd){this.setStyle(cmd.sheetId,cmd.target,cmd.style);}
if("format"in cmd&&cmd.format!==undefined){this.setFormatter(cmd.sheetId,cmd.target,cmd.format);}
break;case"CLEAR_FORMATTING":this.clearFormatting(cmd.sheetId,cmd.target);break;case"ADD_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.handleAddColumnsRows(cmd,this.copyColumnStyle.bind(this));}
else{this.handleAddColumnsRows(cmd,this.copyRowStyle.bind(this));}
break;case"UPDATE_CELL":this.updateCell(cmd.sheetId,cmd.col,cmd.row,cmd);break;case"CLEAR_CELL":this.dispatch("UPDATE_CELL",{sheetId:cmd.sheetId,col:cmd.col,row:cmd.row,content:"",style:null,format:"",});break;case"CLEAR_CELLS":this.clearCells(cmd.sheetId,cmd.target);break;case"DELETE_CONTENT":this.clearZones(cmd.sheetId,cmd.target);break;}}
clearZones(sheetId,zones){for(let zone of recomputeZones(zones)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const cell=this.getters.getCell({sheetId,col,row});if(cell){this.dispatch("UPDATE_CELL",{sheetId:sheetId,content:"",col,row,});}}}}}
setFormatter(sheetId,zones,format){for(let zone of recomputeZones(zones)){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.dispatch("UPDATE_CELL",{sheetId,col,row,format,});}}}}
clearFormatting(sheetId,zones){for(let zone of recomputeZones(zones)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){this.dispatch("UPDATE_CELL",{sheetId,col,row,style:null,format:"",});}}}}
clearCells(sheetId,zones){for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){this.dispatch("UPDATE_CELL",{sheetId:sheetId,col,row,content:"",style:null,format:"",});}}}}
handleAddColumnsRows(cmd,fn){let insertedElements;let styleReference;if(cmd.position==="before"){insertedElements=range(cmd.base,cmd.base+cmd.quantity);styleReference=cmd.base+cmd.quantity;}
else{insertedElements=range(cmd.base+1,cmd.base+cmd.quantity+1);styleReference=cmd.base;}
fn(cmd.sheetId,styleReference,insertedElements);}
import(data){for(let sheet of data.sheets){const sheetId=sheet.id;const cellsData=new PositionMap();for(const xc in sheet.cells){if(sheet.cells[xc]?.content){const{col,row}=toCartesian(xc);const position={sheetId:sheet.id,col,row};cellsData.set(position,{content:sheet.cells[xc]?.content});}}
for(const[cellProperty,valuesByZones]of[["style",sheet.styles],["format",sheet.formats],]){for(const zoneXc in valuesByZones){const itemId=valuesByZones[zoneXc];const zone=toZone(zoneXc);for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const position={sheetId,col,row};const cellData=cellsData.get(position);if(cellData){cellData[cellProperty]=itemId;}
else{cellsData.set(position,{[cellProperty]:itemId});}}}}}
for(const position of cellsData.keysForSheet(sheetId)){const cellData=cellsData.get(position);if(cellData?.content||cellData?.format||cellData?.style){const cell=this.importCell(sheet.id,cellData?.content,cellData?.style?data.styles[cellData?.style]:undefined,cellData?.format?data.formats[cellData?.format]:undefined);this.history.update("cells",sheet.id,cell.id,cell);this.dispatch("UPDATE_CELL_POSITION",{cellId:cell.id,...position,});}}}}
export(data){const styles={};const formats={};for(let _sheet of data.sheets){const positionsByStyle=[];const positionsByFormat=[];const cells={};const positions=Object.keys(this.cells[_sheet.id]||{}).map((cellId)=>this.getters.getCellPosition(cellId)).sort((a,b)=>(a.col===b.col?a.row-b.row:a.col-b.col));for(const position of positions){const cell=this.getters.getCell(position);const xc=toXC(position.col,position.row);const style=this.removeDefaultStyleValues(cell.style);if(Object.keys(style).length){const styleId=getItemId(style,styles);positionsByStyle[styleId]??=[];positionsByStyle[styleId].push(position);}
if(cell.format){const formatId=getItemId(cell.format,formats);positionsByFormat[formatId]??=[];positionsByFormat[formatId].push(position);}
if(cell.content){cells[xc]={content:cell.content,};}}
_sheet.styles=groupItemIdsByZones(positionsByStyle);_sheet.formats=groupItemIdsByZones(positionsByFormat);_sheet.cells=cells;}
data.styles=styles;data.formats=formats;}
importCell(sheetId,content,style,format){const cellId=this.getNextUid();return this.createCell(cellId,content||"",format,style,sheetId);}
exportForExcel(data){this.export(data);for(const sheet of data.sheets){for(const cellId in this.getters.getCells(sheet.id)){const{col,row}=this.getters.getCellPosition(cellId);const xc=toXC(col,row);const cell=this.getCellById(cellId);sheet.cells[xc]??={};if(cell?.format){sheet.cells[xc].format=getItemId(cell.format,data.formats);}
if(cell?.style){sheet.cells[xc]??={};sheet.cells[xc].style=getItemId(this.removeDefaultStyleValues(cell.style),data.styles);}}}
const incompatible=[];for(const formatId in data.formats||[]){if(!isExcelCompatible(data.formats[formatId])){incompatible.push(formatId);delete data.formats[formatId];}}
if(incompatible.length){for(const sheet of data.sheets){for(const xc in sheet.cells){const cell=sheet.cells[xc];const format=cell?.format;if(format&&incompatible.includes(format.toString())){delete cell.format;}}}}}
removeDefaultStyleValues(style){const cleanedStyle={...style};for(const property in DEFAULT_STYLE){if(cleanedStyle[property]===DEFAULT_STYLE[property]){delete cleanedStyle[property];}}
return cleanedStyle;}
getCells(sheetId){return this.cells[sheetId]||{};}
getCellById(cellId){const position=this.getters.getCellPosition(cellId);const sheet=this.cells[position.sheetId];return sheet[cellId];}
getFormulaString(sheetId,tokens,dependencies,useFixedReference=false){if(!dependencies.length){return concat(tokens.map((token)=>token.value));}
let rangeIndex=0;return concat(tokens.map((token)=>{if(token.type==="REFERENCE"){const range=dependencies[rangeIndex++];return this.getters.getRangeString(range,sheetId,{useFixedReference});}
return token.value;}));}
getTranslatedCellFormula(sheetId,offsetX,offsetY,tokens){const adaptedDependencies=this.getters.createAdaptedRanges(compileTokens(tokens).dependencies.map((d)=>this.getters.getRangeFromSheetXC(sheetId,d)),offsetX,offsetY,sheetId);return this.getFormulaString(sheetId,tokens,adaptedDependencies);}
getFormulaMovedInSheet(originSheetId,targetSheetId,tokens){const dependencies=compileTokens(tokens).dependencies.map((d)=>this.getters.getRangeFromSheetXC(originSheetId,d));const adaptedDependencies=this.getters.removeRangesSheetPrefix(targetSheetId,dependencies);return this.getFormulaString(targetSheetId,tokens,adaptedDependencies);}
getCellStyle(position){return this.getters.getCell(position)?.style||{};}
zoneToXC(sheetId,zone,fixedParts=[{colFixed:false,rowFixed:false}]){zone=this.getters.expandZone(sheetId,zone);const topLeft=toXC(zone.left,zone.top,fixedParts[0]);const botRight=toXC(zone.right,zone.bottom,fixedParts.length>1?fixedParts[1]:fixedParts[0]);const cellTopLeft=this.getters.getMainCellPosition({sheetId,col:zone.left,row:zone.top,});const cellBotRight=this.getters.getMainCellPosition({sheetId,col:zone.right,row:zone.bottom,});const sameCell=cellTopLeft.col===cellBotRight.col&&cellTopLeft.row===cellBotRight.row;if(topLeft!=botRight&&!sameCell){return topLeft+":"+botRight;}
return topLeft;}
setStyle(sheetId,target,style){for(let zone of recomputeZones(target)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const cell=this.getters.getCell({sheetId,col,row});this.dispatch("UPDATE_CELL",{sheetId,col,row,style:style?{...cell?.style,...style}:undefined,});}}}}
copyColumnStyle(sheetId,refColumn,targetCols){for(let row=0;row<this.getters.getNumberRows(sheetId);row++){const format=this.getFormat(sheetId,refColumn,row);if(format.style||format.format){for(let col of targetCols){this.dispatch("UPDATE_CELL",{sheetId,col,row,...format});}}}}
copyRowStyle(sheetId,refRow,targetRows){for(let col=0;col<this.getters.getNumberCols(sheetId);col++){const format=this.getFormat(sheetId,col,refRow);if(format.style||format.format){for(let row of targetRows){this.dispatch("UPDATE_CELL",{sheetId,col,row,...format});}}}}
getFormat(sheetId,col,row){const format={};const position=this.getters.getMainCellPosition({sheetId,col,row});const cell=this.getters.getCell(position);if(cell){if(cell.style){format["style"]=cell.style;}
if(cell.format){format["format"]=cell.format;}}
return format;}
getNextUid(){const id=this.nextId.toString();this.history.update("nextId",this.nextId+1);return id;}
updateCell(sheetId,col,row,after){const before=this.getters.getCell({sheetId,col,row});const hasContent="content"in after||"formula"in after;const afterContent=hasContent?replaceSpecialSpaces(after?.content):before?.content||"";let style;if(after.style!==undefined){style=after.style||undefined;}
else{style=before?before.style:undefined;}
const format="format"in after?after.format:before&&before.format;if(((hasContent&&!afterContent&&!after.formula)||(!hasContent&&(!before||before.content==="")))&&!style&&!format){if(before){this.history.update("cells",sheetId,before.id,undefined);this.dispatch("UPDATE_CELL_POSITION",{cellId:undefined,col,row,sheetId,});}
return;}
const cellId=before?.id||this.getNextUid();const cell=this.createCell(cellId,afterContent,format,style,sheetId);this.history.update("cells",sheetId,cell.id,cell);this.dispatch("UPDATE_CELL_POSITION",{cellId:cell.id,col,row,sheetId});}
createCell(id,content,format,style,sheetId){if(!content.startsWith("=")){return this.createLiteralCell(id,content,format,style);}
return this.createFormulaCell(id,content,format,style,sheetId);}
createLiteralCell(id,content,format,style){const locale=this.getters.getLocale();const parsedValue=parseLiteral(content,locale);format=format||(typeof parsedValue==="number"?detectDateFormat(content,locale)||detectNumberFormat(content):undefined);if(!isTextFormat(format)&&!isEvaluationError(content)){content=toString(parsedValue);}
return{id,content,style,format,isFormula:false,parsedValue,};}
createFormulaCell(id,content,format,style,sheetId){const compiledFormula=compile(content);if(compiledFormula.dependencies.length){return this.createFormulaCellWithDependencies(id,compiledFormula,format,style,sheetId);}
return{id,content,style,format,isFormula:true,compiledFormula:{...compiledFormula,dependencies:[],},};}
createFormulaCellWithDependencies(id,compiledFormula,format,style,sheetId){const dependencies=[];for(const xc of compiledFormula.dependencies){dependencies.push(this.getters.getRangeFromSheetXC(sheetId,xc));}
return new FormulaCellWithDependencies(id,compiledFormula,format,style,dependencies,sheetId,this.getters.getRangeString);}
checkCellOutOfSheet(cmd){const{sheetId,col,row}=cmd;const sheet=this.getters.tryGetSheet(sheetId);if(!sheet)
return"InvalidSheetId";const sheetZone=this.getters.getSheetZone(sheetId);return isInside(col,row,sheetZone)?"Success":"TargetOutOfSheet";}
checkUselessClearCell(cmd){const cell=this.getters.getCell(cmd);if(!cell)
return"NoChanges";if(!cell.content&&!cell.style&&!cell.format){return"NoChanges";}
return"Success";}
checkUselessUpdateCell(cmd){const cell=this.getters.getCell(cmd);const hasContent="content"in cmd||"formula"in cmd;const hasStyle="style"in cmd;const hasFormat="format"in cmd;if((!hasContent||cell?.content===cmd.content)&&(!hasStyle||deepEquals(cell?.style,cmd.style))&&(!hasFormat||cell?.format===cmd.format)){return"NoChanges";}
return"Success";}}
class FormulaCellWithDependencies{id;format;style;sheetId;getRangeString;isFormula=true;compiledFormula;constructor(id,compiledFormula,format,style,dependencies,sheetId,getRangeString){this.id=id;this.format=format;this.style=style;this.sheetId=sheetId;this.getRangeString=getRangeString;let rangeIndex=0;const tokens=compiledFormula.tokens.map((token)=>{if(token.type==="REFERENCE"){const index=rangeIndex++;return new RangeReferenceToken(dependencies,index,this.sheetId,this.getRangeString);}
return token;});this.compiledFormula={...compiledFormula,dependencies,tokens,};}
get content(){return concat(this.compiledFormula.tokens.map((token)=>token.value));}
get contentWithFixedReferences(){let rangeIndex=0;return concat(this.compiledFormula.tokens.map((token)=>{if(token.type==="REFERENCE"){const index=rangeIndex++;return this.getRangeString(this.compiledFormula.dependencies[index],this.sheetId,{useFixedReference:true,});}
return token.value;}));}}
class RangeReferenceToken{ranges;rangeIndex;sheetId;getRangeString;type="REFERENCE";constructor(ranges,rangeIndex,sheetId,getRangeString){this.ranges=ranges;this.rangeIndex=rangeIndex;this.sheetId=sheetId;this.getRangeString=getRangeString;}
get value(){const range=this.ranges[this.rangeIndex];return this.getRangeString(range,this.sheetId);}}
class ChartPlugin extends CorePlugin{static getters=["isChartDefined","getChartDefinition","getChartType","getChartIds","getChart","getContextCreationChart",];charts={};createChart=chartFactory(this.getters);validateChartDefinition=(cmd)=>validateChartDefinition(this,cmd.definition);adaptRanges(applyChange){for(const[chartId,chart]of Object.entries(this.charts)){this.history.update("charts",chartId,chart?.updateRanges(applyChange));}}
allowDispatch(cmd){switch(cmd.type){case"CREATE_CHART":return this.checkValidations(cmd,this.chainValidations(this.validateChartDefinition,this.checkChartDuplicate));case"UPDATE_CHART":return this.checkValidations(cmd,this.chainValidations(this.validateChartDefinition,this.checkChartExists));default:return"Success";}}
handle(cmd){switch(cmd.type){case"CREATE_CHART":this.addFigure(cmd.id,cmd.sheetId,cmd.position,cmd.size);this.addChart(cmd.id,cmd.definition);break;case"UPDATE_CHART":{this.addChart(cmd.id,cmd.definition);break;}
case"DUPLICATE_SHEET":{const sheetFiguresFrom=this.getters.getFigures(cmd.sheetId);for(const fig of sheetFiguresFrom){if(fig.tag==="chart"){const figureIdBase=fig.id.split(FIGURE_ID_SPLITTER).pop();const duplicatedFigureId=`${cmd.sheetIdTo}${FIGURE_ID_SPLITTER}${figureIdBase}`;const chart=this.charts[fig.id]?.copyForSheetId(cmd.sheetIdTo);if(chart){this.dispatch("CREATE_CHART",{id:duplicatedFigureId,position:{x:fig.x,y:fig.y},size:{width:fig.width,height:fig.height},definition:chart.getDefinition(),sheetId:cmd.sheetIdTo,});}}}
break;}
case"DELETE_FIGURE":this.history.update("charts",cmd.id,undefined);break;case"DELETE_SHEET":for(let id of this.getChartIds(cmd.sheetId)){this.history.update("charts",id,undefined);}
break;}}
getContextCreationChart(figureId){return this.charts[figureId]?.getContextCreation();}
getChart(figureId){return this.charts[figureId];}
getChartType(figureId){const type=this.charts[figureId]?.type;if(!type){throw new Error("Chart not defined.");}
return type;}
isChartDefined(figureId){return figureId in this.charts&&this.charts!==undefined;}
getChartIds(sheetId){return Object.entries(this.charts).filter(([,chart])=>chart?.sheetId===sheetId).map(([id])=>id);}
getChartDefinition(figureId){const definition=this.charts[figureId]?.getDefinition();if(!definition){throw new Error(`There is no chart with the given figureId: ${figureId}`);}
return definition;}
import(data){for(let sheet of data.sheets){if(sheet.figures){for(let figure of sheet.figures){if(figure.tag==="chart"){this.charts[figure.id]=this.createChart(figure.id,figure.data,sheet.id);}}}}}
export(data){if(data.sheets){for(let sheet of data.sheets){const sheetFigures=this.getters.getFigures(sheet.id);const figures=[];for(let sheetFigure of sheetFigures){const figure=sheetFigure;if(figure&&figure.tag==="chart"){const data=this.charts[figure.id]?.getDefinition();if(data){figure.data=data;figures.push(figure);}}
else{figures.push(figure);}}
sheet.figures=figures;}}}
addFigure(id,sheetId,position={x:0,y:0},size={width:DEFAULT_FIGURE_WIDTH,height:DEFAULT_FIGURE_HEIGHT,}){if(this.getters.getFigure(sheetId,id)){return;}
const figure={id,x:position.x,y:position.y,width:size.width,height:size.height,tag:"chart",};this.dispatch("CREATE_FIGURE",{sheetId,figure});}
addChart(id,definition){const sheetId=this.getters.getFigureSheetId(id);if(sheetId){this.history.update("charts",id,this.createChart(id,definition,sheetId));}}
checkChartDuplicate(cmd){return this.getters.getFigureSheetId(cmd.id)?"DuplicatedChartId":"Success";}
checkChartExists(cmd){return this.getters.getFigureSheetId(cmd.id)?"Success":"ChartDoesNotExist";}}
function stringToNumber(value){return value===""?NaN:Number(value);}
class ConditionalFormatPlugin extends CorePlugin{static getters=["getConditionalFormats","getRulesSelection","getRulesByCell","getAdaptedCfRanges",];cfRules={};loopThroughRangesOfSheet(sheetId,applyChange){for(const rule of this.cfRules[sheetId]){if(rule.rule.type==="DataBarRule"&&rule.rule.rangeValues){const change=applyChange(rule.rule.rangeValues);switch(change.changeType){case"REMOVE":this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule","rangeValues",undefined);break;case"RESIZE":case"MOVE":case"CHANGE":this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule","rangeValues",change.range);break;}}
for(const range of rule.ranges){const change=applyChange(range);switch(change.changeType){case"REMOVE":let copy=rule.ranges.slice();copy.splice(rule.ranges.indexOf(range),1);if(copy.length>=1){this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"ranges",copy);}
else{this.removeConditionalFormatting(rule.id,sheetId);}
break;case"RESIZE":case"MOVE":case"CHANGE":this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"ranges",rule.ranges.indexOf(range),change.range);break;}}}}
adaptRanges(applyChange,sheetId){if(sheetId){this.loopThroughRangesOfSheet(sheetId,applyChange);}
else{for(const sheetId of Object.keys(this.cfRules)){this.loopThroughRangesOfSheet(sheetId,applyChange);}}}
allowDispatch(cmd){switch(cmd.type){case"ADD_CONDITIONAL_FORMAT":return this.checkValidations(cmd,this.checkCFRule,this.checkEmptyRange);case"CHANGE_CONDITIONAL_FORMAT_PRIORITY":return this.checkValidPriorityChange(cmd.cfId,cmd.delta,cmd.sheetId);}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.cfRules[cmd.sheetId]=[];break;case"DUPLICATE_SHEET":this.history.update("cfRules",cmd.sheetIdTo,[]);for(const cf of this.getConditionalFormats(cmd.sheetId)){this.addConditionalFormatting(cf,cmd.sheetIdTo);}
break;case"DELETE_SHEET":const cfRules=Object.assign({},this.cfRules);delete cfRules[cmd.sheetId];this.history.update("cfRules",cfRules);break;case"ADD_CONDITIONAL_FORMAT":const cf={...cmd.cf,ranges:cmd.ranges.map((rangeData)=>this.getters.getRangeString(this.getters.getRangeFromRangeData(rangeData),cmd.sheetId)),};this.addConditionalFormatting(cf,cmd.sheetId);break;case"REMOVE_CONDITIONAL_FORMAT":this.removeConditionalFormatting(cmd.id,cmd.sheetId);break;case"CHANGE_CONDITIONAL_FORMAT_PRIORITY":this.changeCFPriority(cmd.cfId,cmd.delta,cmd.sheetId);break;}}
import(data){for(let sheet of data.sheets){this.cfRules[sheet.id]=sheet.conditionalFormats.map((rule)=>this.mapToConditionalFormatInternal(sheet.id,rule));}}
export(data){if(data.sheets){for(let sheet of data.sheets){if(this.cfRules[sheet.id]){sheet.conditionalFormats=this.cfRules[sheet.id].map((rule)=>this.mapToConditionalFormat(sheet.id,rule));}}}}
exportForExcel(data){if(data.sheets){for(let sheet of data.sheets){if(this.cfRules[sheet.id]){sheet.conditionalFormats=this.cfRules[sheet.id].map((rule)=>this.mapToConditionalFormat(sheet.id,rule,{useFixedReference:true}));}}}}
getConditionalFormats(sheetId){return this.cfRules[sheetId]?.map((cf)=>this.mapToConditionalFormat(sheetId,cf))||[];}
getRulesSelection(sheetId,selection){const ruleIds=new Set();selection.forEach((zone)=>{const zoneRuleId=this.getRulesByZone(sheetId,zone);zoneRuleId.forEach((ruleId)=>{ruleIds.add(ruleId);});});return Array.from(ruleIds);}
getRulesByZone(sheetId,zone){const ruleIds=new Set();for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cellRules=this.getRulesByCell(sheetId,col,row);cellRules.forEach((rule)=>{ruleIds.add(rule.id);});}}
return ruleIds;}
getRulesByCell(sheetId,cellCol,cellRow){const rules=[];for(let cf of this.cfRules[sheetId]){for(let range of cf.ranges){if(isInside(cellCol,cellRow,range.zone)){rules.push(cf);}}}
return new Set(rules.map((rule)=>{return this.mapToConditionalFormat(sheetId,rule);}));}
getAdaptedCfRanges(sheetId,cf,toAdd,toRemove){if(toAdd.length===0&&toRemove.length===0){return;}
const rules=this.getters.getConditionalFormats(sheetId);const replaceIndex=rules.findIndex((c)=>c.id===cf.id);let currentRanges=[];if(replaceIndex>-1){currentRanges=rules[replaceIndex].ranges.map(toUnboundedZone);}
currentRanges=currentRanges.concat(toAdd);return recomputeZones(currentRanges,toRemove).map((zone)=>this.getters.getRangeDataFromZone(sheetId,zone));}
mapToConditionalFormat(sheetId,cf,{useFixedReference}={useFixedReference:false}){const ranges=cf.ranges.map((range)=>{return this.getters.getRangeString(range,sheetId,{useFixedReference});});if(cf.rule.type!=="DataBarRule"){return{...cf,rule:{...cf.rule},ranges,};}
return{...cf,rule:{...cf.rule,rangeValues:cf.rule.rangeValues&&this.getters.getRangeString(cf.rule.rangeValues,sheetId,{useFixedReference,}),},ranges,};}
mapToConditionalFormatInternal(sheet,cf){const ranges=cf.ranges.map((range)=>{return this.getters.getRangeFromSheetXC(sheet,range);});if(cf.rule.type!=="DataBarRule"){return{...cf,rule:{...cf.rule},ranges,};}
return{...cf,rule:{...cf.rule,rangeValues:cf.rule.rangeValues?this.getters.getRangeFromSheetXC(sheet,cf.rule.rangeValues):undefined,},ranges,};}
addConditionalFormatting(cf,sheet){const currentCF=this.cfRules[sheet].slice();const replaceIndex=currentCF.findIndex((c)=>c.id===cf.id);const newCF=this.mapToConditionalFormatInternal(sheet,cf);if(replaceIndex>-1){currentCF.splice(replaceIndex,1,newCF);}
else{currentCF.push(newCF);}
this.history.update("cfRules",sheet,currentCF);}
checkValidPriorityChange(cfId,delta,sheetId){if(!this.cfRules[sheetId])
return"InvalidSheetId";const ruleIndex=this.cfRules[sheetId].findIndex((cf)=>cf.id===cfId);if(ruleIndex===-1)
return"InvalidConditionalFormatId";const cfIndex2=ruleIndex-delta;if(cfIndex2<0||cfIndex2>=this.cfRules[sheetId].length){return"InvalidConditionalFormatId";}
return"Success";}
checkEmptyRange(cmd){return cmd.ranges.length?"Success":"EmptyRange";}
checkCFRule(cmd){const rule=cmd.cf.rule;switch(rule.type){case"CellIsRule":return this.checkValidations(rule,this.checkOperatorArgsNumber(2,["Between","NotBetween"]),this.checkOperatorArgsNumber(1,["BeginsWith","ContainsText","EndsWith","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","NotContains","Equal","NotEqual",]),this.checkOperatorArgsNumber(0,["IsEmpty","IsNotEmpty"]),this.checkCFValues);case"ColorScaleRule":{return this.checkValidations(rule,this.chainValidations(this.checkThresholds(this.checkFormulaCompilation)),this.chainValidations(this.checkThresholds(this.checkNaN),this.batchValidations(this.checkMinBiggerThanMax,this.checkMinBiggerThanMid,this.checkMidBiggerThanMax)));}
case"IconSetRule":{return this.checkValidations(rule,this.chainValidations(this.checkInflectionPoints(this.checkNaN),this.checkLowerBiggerThanUpper),this.chainValidations(this.checkInflectionPoints(this.checkFormulaCompilation)));}
case"DataBarRule":return this.checkDataBarRangeValues(rule,cmd.ranges,cmd.sheetId);}
return"Success";}
checkOperatorArgsNumber(expectedNumber,operators){if(expectedNumber>2){throw new Error("Checking more than 2 arguments is currently not supported. Add the appropriate CommandResult if you want to.");}
return(rule)=>{if(operators.includes(rule.operator)){const errors=[];const isEmpty=(value)=>value===undefined||value==="";if(expectedNumber>=1&&isEmpty(rule.values[0])){errors.push("FirstArgMissing");}
if(expectedNumber>=2&&isEmpty(rule.values[1])){errors.push("SecondArgMissing");}
return errors.length?errors:"Success";}
return"Success";};}
checkNaN(threshold,thresholdName){if(["number","percentage","percentile"].includes(threshold.type)&&(threshold.value===""||isNaN(threshold.value))){switch(thresholdName){case"min":return"MinNaN";case"max":return"MaxNaN";case"mid":return"MidNaN";case"upperInflectionPoint":return"ValueUpperInflectionNaN";case"lowerInflectionPoint":return"ValueLowerInflectionNaN";}}
return"Success";}
checkFormulaCompilation(threshold,thresholdName){if(threshold.type!=="formula")
return"Success";const compiledFormula=compile(threshold.value||"");if(compiledFormula.isBadExpression){switch(thresholdName){case"min":return"MinInvalidFormula";case"max":return"MaxInvalidFormula";case"mid":return"MidInvalidFormula";case"upperInflectionPoint":return"ValueUpperInvalidFormula";case"lowerInflectionPoint":return"ValueLowerInvalidFormula";}}
return"Success";}
checkThresholds(check){return this.batchValidations((rule)=>check(rule.minimum,"min"),(rule)=>check(rule.maximum,"max"),(rule)=>(rule.midpoint?check(rule.midpoint,"mid"):"Success"));}
checkInflectionPoints(check){return this.batchValidations((rule)=>check(rule.lowerInflectionPoint,"lowerInflectionPoint"),(rule)=>check(rule.upperInflectionPoint,"upperInflectionPoint"));}
checkLowerBiggerThanUpper(rule){const minValue=rule.lowerInflectionPoint.value;const maxValue=rule.upperInflectionPoint.value;if(["number","percentage","percentile"].includes(rule.lowerInflectionPoint.type)&&rule.lowerInflectionPoint.type===rule.upperInflectionPoint.type&&Number(minValue)>Number(maxValue)){return"LowerBiggerThanUpper";}
return"Success";}
checkMinBiggerThanMax(rule){const minValue=rule.minimum.value;const maxValue=rule.maximum.value;if(["number","percentage","percentile"].includes(rule.minimum.type)&&rule.minimum.type===rule.maximum.type&&stringToNumber(minValue)>=stringToNumber(maxValue)){return"MinBiggerThanMax";}
return"Success";}
checkMidBiggerThanMax(rule){const midValue=rule.midpoint?.value;const maxValue=rule.maximum.value;if(rule.midpoint&&["number","percentage","percentile"].includes(rule.midpoint.type)&&rule.midpoint.type===rule.maximum.type&&stringToNumber(midValue)>=stringToNumber(maxValue)){return"MidBiggerThanMax";}
return"Success";}
checkMinBiggerThanMid(rule){const minValue=rule.minimum.value;const midValue=rule.midpoint?.value;if(rule.midpoint&&["number","percentage","percentile"].includes(rule.midpoint.type)&&rule.minimum.type===rule.midpoint.type&&stringToNumber(minValue)>=stringToNumber(midValue)){return"MinBiggerThanMid";}
return"Success";}
checkCFValues(rule){for(const value of rule.values){if(!value.startsWith("="))
continue;const compiledFormula=compile(value||"");if(compiledFormula.isBadExpression){return"ValueCellIsInvalidFormula";}}
return"Success";}
checkDataBarRangeValues(rule,ranges,sheetId){if(rule.rangeValues){const{numberOfCols,numberOfRows}=zoneToDimension(this.getters.getRangeFromSheetXC(sheetId,rule.rangeValues).zone);for(const range of ranges){const dimensions=zoneToDimension(this.getters.getRangeFromRangeData(range).zone);if(numberOfCols!==dimensions.numberOfCols||numberOfRows!==dimensions.numberOfRows){return"DataBarRangeValuesMismatch";}}}
return"Success";}
removeConditionalFormatting(id,sheet){const cfIndex=this.cfRules[sheet].findIndex((s)=>s.id===id);if(cfIndex!==-1){const currentCF=this.cfRules[sheet].slice();currentCF.splice(cfIndex,1);this.history.update("cfRules",sheet,currentCF);}}
changeCFPriority(cfId,delta,sheetId){const currentIndex=this.cfRules[sheetId].findIndex((s)=>s.id===cfId);const cf=this.cfRules[sheetId][currentIndex];const targetIndex=currentIndex-delta;const cfRules=[...this.cfRules[sheetId]];cfRules.splice(currentIndex,1);cfRules.splice(targetIndex,0,cf);this.history.update("cfRules",sheetId,cfRules);}}
class DataValidationPlugin extends CorePlugin{static getters=["cellHasListDataValidationIcon","getDataValidationRule","getDataValidationRules","getValidationRuleForCell",];rules={};adaptRanges(applyChange,sheetId){const sheetIds=sheetId?[sheetId]:Object.keys(this.rules);for(const sheetId of sheetIds){this.loopThroughRangesOfSheet(sheetId,applyChange);}}
loopThroughRangesOfSheet(sheetId,applyChange){const rules=this.rules[sheetId];for(let ruleIndex=rules.length-1;ruleIndex>=0;ruleIndex--){const rule=this.rules[sheetId][ruleIndex];for(let rangeIndex=rule.ranges.length-1;rangeIndex>=0;rangeIndex--){const range=rule.ranges[rangeIndex];const change=applyChange(range);switch(change.changeType){case"REMOVE":if(rule.ranges.length===1){this.removeDataValidationRule(sheetId,rule.id);}
else{const copy=rule.ranges.slice();copy.splice(rangeIndex,1);this.history.update("rules",sheetId,ruleIndex,"ranges",copy);}
break;case"RESIZE":case"MOVE":case"CHANGE":this.history.update("rules",sheetId,ruleIndex,"ranges",rangeIndex,change.range);break;}}}}
allowDispatch(cmd){switch(cmd.type){case"ADD_DATA_VALIDATION_RULE":return this.checkValidations(cmd,this.chainValidations(this.checkEmptyRange,this.checkCriterionTypeIsValid,this.checkCriterionHasValidNumberOfValues,this.checkCriterionValuesAreValid));case"REMOVE_DATA_VALIDATION_RULE":if(!this.rules[cmd.sheetId].find((rule)=>rule.id===cmd.id)){return"UnknownDataValidationRule";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("rules",cmd.sheetId,[]);break;case"DUPLICATE_SHEET":{const rules=deepCopy(this.rules[cmd.sheetId]).map((rule)=>({...rule,ranges:rule.ranges.map((range)=>copyRangeWithNewSheetId(cmd.sheetId,cmd.sheetIdTo,range)),}));this.history.update("rules",cmd.sheetIdTo,rules);break;}
case"DELETE_SHEET":{const rules={...this.rules};delete rules[cmd.sheetId];this.history.update("rules",rules);break;}
case"REMOVE_DATA_VALIDATION_RULE":{this.removeDataValidationRule(cmd.sheetId,cmd.id);break;}
case"ADD_DATA_VALIDATION_RULE":{const ranges=cmd.ranges.map((range)=>this.getters.getRangeFromRangeData(range));this.addDataValidationRule(cmd.sheetId,{...cmd.rule,ranges});break;}
case"DELETE_CONTENT":{const zones=recomputeZones(cmd.target);const sheetId=cmd.sheetId;for(const zone of zones){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const dataValidation=this.getValidationRuleForCell({sheetId,col,row});if(!dataValidation){continue;}
if(dataValidation.criterion.type==="isBoolean"||(dataValidation.criterion.type==="isValueInList"&&!this.getters.getCell({sheetId,col,row})?.content)){const rules=this.rules[sheetId];const ranges=[this.getters.getRangeFromSheetXC(sheetId,toXC(col,row))];const adaptedRules=this.removeRangesFromRules(sheetId,ranges,rules);this.history.update("rules",sheetId,adaptedRules);}}}}}}}
getDataValidationRules(sheetId){return this.rules[sheetId];}
getDataValidationRule(sheetId,id){return this.rules[sheetId].find((rule)=>rule.id===id);}
getValidationRuleForCell({sheetId,col,row}){if(!this.rules[sheetId]){return undefined;}
for(const rule of this.rules[sheetId]){for(const range of rule.ranges){if(isInside(col,row,range.zone)){return rule;}}}
return undefined;}
cellHasListDataValidationIcon(cellPosition){const rule=this.getValidationRuleForCell(cellPosition);if(!rule)
return false;return((rule.criterion.type==="isValueInList"||rule.criterion.type==="isValueInRange")&&rule.criterion.displayStyle==="arrow");}
addDataValidationRule(sheetId,newRule){const rules=this.rules[sheetId];if(newRule.criterion.type==="isBoolean"){this.setCenterStyleToBooleanCells(newRule);}
else if(newRule.criterion.type==="isValueInList"){newRule.criterion.values=Array.from(new Set(newRule.criterion.values));}
const adaptedRules=this.removeRangesFromRules(sheetId,newRule.ranges,rules);const ruleIndex=adaptedRules.findIndex((rule)=>rule.id===newRule.id);if(ruleIndex!==-1){adaptedRules[ruleIndex]=newRule;this.history.update("rules",sheetId,adaptedRules);}
else{this.history.update("rules",sheetId,[...adaptedRules,newRule]);}}
removeRangesFromRules(sheetId,ranges,rules){rules=deepCopy(rules);for(const rule of rules){rule.ranges=this.getters.recomputeRanges(rule.ranges,ranges);}
return rules.filter((rule)=>rule.ranges.length>0);}
removeDataValidationRule(sheetId,ruleId){const rules=this.rules[sheetId];const newRules=rules.filter((rule)=>rule.id!==ruleId);this.history.update("rules",sheetId,newRules);}
setCenterStyleToBooleanCells(rule){for(const position of getCellPositionsInRanges(rule.ranges)){const cell=this.getters.getCell(position);const style={...cell?.style,align:cell?.style?.align??"center",verticalAlign:cell?.style?.verticalAlign??"middle",};this.dispatch("UPDATE_CELL",{...position,style});}}
checkEmptyRange(cmd){return cmd.ranges.length?"Success":"EmptyRange";}
import(data){for(const sheet of data.sheets){this.rules[sheet.id]=[];if(!sheet.dataValidationRules){continue;}
for(const rule of sheet.dataValidationRules){this.rules[sheet.id].push({...rule,ranges:rule.ranges.map((range)=>this.getters.getRangeFromSheetXC(sheet.id,range)),});}}}
export(data){if(!data.sheets){return;}
for(const sheet of data.sheets){sheet.dataValidationRules=[];for(const rule of this.rules[sheet.id]){sheet.dataValidationRules.push({...rule,ranges:rule.ranges.map((range)=>this.getters.getRangeString(range,sheet.id)),});}}}
checkCriterionTypeIsValid(cmd){return dataValidationEvaluatorRegistry.contains(cmd.rule.criterion.type)?"Success":"UnknownDataValidationCriterionType";}
checkCriterionHasValidNumberOfValues(cmd){const criterion=cmd.rule.criterion;const evaluator=dataValidationEvaluatorRegistry.get(criterion.type);const expectedNumberOfValues=evaluator.numberOfValues(criterion);if(expectedNumberOfValues!==undefined&&criterion.values.length!==expectedNumberOfValues){return"InvalidNumberOfCriterionValues";}
return"Success";}
checkCriterionValuesAreValid(cmd){const criterion=cmd.rule.criterion;const evaluator=dataValidationEvaluatorRegistry.get(criterion.type);if(criterion.values.some((value)=>{if(value.startsWith("=")){return evaluator.allowedValues==="onlyLiterals";}
else if(evaluator.allowedValues==="onlyFormulas"){return true;}
else{return!evaluator.isCriterionValueValid(value);}})){return"InvalidDataValidationCriterionValue";}
return"Success";}}
class FigurePlugin extends CorePlugin{static getters=["getFigures","getFigure","getFigureSheetId"];figures={};allowDispatch(cmd){switch(cmd.type){case"CREATE_FIGURE":return this.checkFigureDuplicate(cmd.figure.id);case"UPDATE_FIGURE":case"DELETE_FIGURE":return this.checkFigureExists(cmd.sheetId,cmd.id);default:return"Success";}}
beforeHandle(cmd){switch(cmd.type){case"DELETE_SHEET":this.getters.getFigures(cmd.sheetId).forEach((figure)=>{this.dispatch("DELETE_FIGURE",{id:figure.id,sheetId:cmd.sheetId});});break;}}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.figures[cmd.sheetId]={};break;case"DELETE_SHEET":this.deleteSheet(cmd.sheetId);break;case"CREATE_FIGURE":this.addFigure(cmd.figure,cmd.sheetId);break;case"UPDATE_FIGURE":const{type,sheetId,...update}=cmd;const figure=update;this.updateFigure(sheetId,figure);break;case"DELETE_FIGURE":this.removeFigure(cmd.id,cmd.sheetId);break;case"REMOVE_COLUMNS_ROWS":this.onRowColDelete(cmd.sheetId,cmd.dimension);}}
onRowColDelete(sheetId,dimension){dimension==="ROW"?this.onRowDeletion(sheetId):this.onColDeletion(sheetId);}
onRowDeletion(sheetId){const numHeader=this.getters.getNumberRows(sheetId);let gridHeight=0;for(let i=0;i<numHeader;i++){gridHeight+=this.getters.getUserRowSize(sheetId,i)||DEFAULT_CELL_HEIGHT;}
const figures=this.getters.getFigures(sheetId);for(const figure of figures){const newY=Math.min(figure.y,gridHeight-figure.height);if(newY!==figure.y){this.dispatch("UPDATE_FIGURE",{sheetId,id:figure.id,y:newY});}}}
onColDeletion(sheetId){const numHeader=this.getters.getNumberCols(sheetId);let gridWidth=0;for(let i=0;i<numHeader;i++){gridWidth+=this.getters.getColSize(sheetId,i);}
const figures=this.getters.getFigures(sheetId);for(const figure of figures){const newX=Math.min(figure.x,gridWidth-figure.width);if(newX!==figure.x){this.dispatch("UPDATE_FIGURE",{sheetId,id:figure.id,x:newX});}}}
updateFigure(sheetId,figure){if(!("id"in figure)){return;}
for(const[key,value]of Object.entries(figure)){switch(key){case"x":case"y":if(value!==undefined){this.history.update("figures",sheetId,figure.id,key,Math.max(value,0));}
break;case"width":case"height":if(value!==undefined){this.history.update("figures",sheetId,figure.id,key,value);}
break;}}}
addFigure(figure,sheetId){this.history.update("figures",sheetId,figure.id,figure);}
deleteSheet(sheetId){this.history.update("figures",sheetId,undefined);}
removeFigure(id,sheetId){this.history.update("figures",sheetId,id,undefined);}
checkFigureExists(sheetId,figureId){if(this.figures[sheetId]?.[figureId]===undefined){return"FigureDoesNotExist";}
return"Success";}
checkFigureDuplicate(figureId){if(Object.values(this.figures).find((sheet)=>sheet?.[figureId])){return"DuplicatedFigureId";}
return"Success";}
getFigures(sheetId){return Object.values(this.figures[sheetId]||{}).filter(isDefined);}
getFigure(sheetId,figureId){return this.figures[sheetId]?.[figureId];}
getFigureSheetId(figureId){return Object.keys(this.figures).find((sheetId)=>this.figures[sheetId]?.[figureId]!==undefined);}
import(data){for(let sheet of data.sheets){const figures={};sheet.figures.forEach((figure)=>{figures[figure.id]=figure;});this.figures[sheet.id]=figures;}}
export(data){for(const sheet of data.sheets){for(const figure of this.getFigures(sheet.id)){const data=undefined;sheet.figures.push({...figure,data});}}}
exportForExcel(data){this.export(data);}}
class HeaderSizePlugin extends CorePlugin{static getters=["getUserRowSize","getColSize"];sizes={};handle(cmd){switch(cmd.type){case"CREATE_SHEET":{this.history.update("sizes",cmd.sheetId,{COL:Array(this.getters.getNumberCols(cmd.sheetId)).fill(undefined),ROW:Array(this.getters.getNumberRows(cmd.sheetId)).fill(undefined),});break;}
case"DUPLICATE_SHEET":this.history.update("sizes",cmd.sheetIdTo,deepCopy(this.sizes[cmd.sheetId]));break;case"DELETE_SHEET":const sizes={...this.sizes};delete sizes[cmd.sheetId];this.history.update("sizes",sizes);break;case"REMOVE_COLUMNS_ROWS":{const arr=this.sizes[cmd.sheetId][cmd.dimension];const sizes=removeIndexesFromArray(arr,cmd.elements);this.history.update("sizes",cmd.sheetId,cmd.dimension,sizes);break;}
case"ADD_COLUMNS_ROWS":{let sizes=[...this.sizes[cmd.sheetId][cmd.dimension]];const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);const baseSize=sizes[cmd.base];sizes.splice(addIndex,0,...Array(cmd.quantity).fill(baseSize));this.history.update("sizes",cmd.sheetId,cmd.dimension,sizes);break;}
case"RESIZE_COLUMNS_ROWS":if(cmd.dimension==="ROW"){for(const el of cmd.elements){this.history.update("sizes",cmd.sheetId,cmd.dimension,el,cmd.size||undefined);}}
else{for(const el of cmd.elements){this.history.update("sizes",cmd.sheetId,cmd.dimension,el,cmd.size||undefined);}}
break;}
return;}
getColSize(sheetId,index){return Math.round(this.sizes[sheetId]?.["COL"][index]||DEFAULT_CELL_WIDTH);}
getUserRowSize(sheetId,index){const rowSize=this.sizes[sheetId]?.["ROW"][index];return rowSize?Math.round(rowSize):undefined;}
import(data){for(let sheet of data.sheets){const sizes={COL:Array(sheet.colNumber).fill(undefined),ROW:Array(sheet.rowNumber).fill(undefined),};for(let[rowIndex,row]of Object.entries(sheet.rows)){if(row.size){sizes["ROW"][rowIndex]=row.size;}}
for(let[colIndex,col]of Object.entries(sheet.cols)){if(col.size){sizes["COL"][colIndex]=col.size;}}
this.sizes[sheet.id]=sizes;}
return;}
exportForExcel(data){this.exportData(data,true);}
export(data){this.exportData(data);}
exportData(data,exportDefaults=false){for(let sheet of data.sheets){if(sheet.rows===undefined){sheet.rows={};}
for(const row of range(0,this.getters.getNumberRows(sheet.id))){if(exportDefaults||this.sizes[sheet.id]["ROW"][row]){sheet.rows[row]={...sheet.rows[row],size:this.getUserRowSize(sheet.id,row)??DEFAULT_CELL_HEIGHT,};}}
if(sheet.cols===undefined){sheet.cols={};}
for(let col of range(0,this.getters.getNumberCols(sheet.id))){if(exportDefaults||this.sizes[sheet.id]["COL"][col]){sheet.cols[col]={...sheet.cols[col],size:this.getColSize(sheet.id,col)};}}}}}
class HeaderVisibilityPlugin extends CorePlugin{static getters=["checkElementsIncludeAllVisibleHeaders","getHiddenColsGroups","getHiddenRowsGroups","isHeaderHiddenByUser","isRowHiddenByUser","isColHiddenByUser",];hiddenHeaders={};allowDispatch(cmd){switch(cmd.type){case"HIDE_COLUMNS_ROWS":{if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
const hiddenGroup=cmd.dimension==="COL"?this.getHiddenColsGroups(cmd.sheetId):this.getHiddenRowsGroups(cmd.sheetId);const elements=cmd.dimension==="COL"?this.getters.getNumberCols(cmd.sheetId):this.getters.getNumberRows(cmd.sheetId);const hiddenElements=new Set((hiddenGroup||[]).flat().concat(cmd.elements));if(hiddenElements.size>=elements){return"TooManyHiddenElements";}
else if(largeMin(cmd.elements)<0||largeMax(cmd.elements)>elements){return"InvalidHeaderIndex";}
else{return"Success";}}
case"REMOVE_COLUMNS_ROWS":if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
if(this.checkElementsIncludeAllVisibleHeaders(cmd.sheetId,cmd.dimension,cmd.elements)){return"NotEnoughElements";}
return"Success";}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":const hiddenHeaders={COL:Array(this.getters.getNumberCols(cmd.sheetId)).fill(false),ROW:Array(this.getters.getNumberRows(cmd.sheetId)).fill(false),};this.history.update("hiddenHeaders",cmd.sheetId,hiddenHeaders);break;case"DUPLICATE_SHEET":this.history.update("hiddenHeaders",cmd.sheetIdTo,deepCopy(this.hiddenHeaders[cmd.sheetId]));break;case"DELETE_SHEET":this.history.update("hiddenHeaders",cmd.sheetId,undefined);break;case"REMOVE_COLUMNS_ROWS":{const hiddenHeaders=[...this.hiddenHeaders[cmd.sheetId][cmd.dimension]];for(let el of[...cmd.elements].sort((a,b)=>b-a)){hiddenHeaders.splice(el,1);}
this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,hiddenHeaders);break;}
case"ADD_COLUMNS_ROWS":{const hiddenHeaders=[...this.hiddenHeaders[cmd.sheetId][cmd.dimension]];const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);hiddenHeaders.splice(addIndex,0,...Array(cmd.quantity).fill(false));this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,hiddenHeaders);break;}
case"HIDE_COLUMNS_ROWS":for(let el of cmd.elements){this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,el,true);}
break;case"UNHIDE_COLUMNS_ROWS":for(let el of cmd.elements){this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,el,false);}
break;}
return;}
checkElementsIncludeAllVisibleHeaders(sheetId,dimension,elements){const visibleHeaders=this.getAllVisibleHeaders(sheetId,dimension);return includesAll(elements,visibleHeaders);}
isHeaderHiddenByUser(sheetId,dimension,index){return dimension==="COL"?this.isColHiddenByUser(sheetId,index):this.isRowHiddenByUser(sheetId,index);}
isRowHiddenByUser(sheetId,index){return this.hiddenHeaders[sheetId].ROW[index]||this.getters.isRowFolded(sheetId,index);}
isColHiddenByUser(sheetId,index){return this.hiddenHeaders[sheetId].COL[index]||this.getters.isColFolded(sheetId,index);}
getHiddenColsGroups(sheetId){const consecutiveIndexes=[[]];const hiddenCols=this.hiddenHeaders[sheetId].COL;for(let col=0;col<hiddenCols.length;col++){const isColHidden=hiddenCols[col];if(isColHidden){consecutiveIndexes[consecutiveIndexes.length-1].push(col);}
else{if(consecutiveIndexes[consecutiveIndexes.length-1].length!==0){consecutiveIndexes.push([]);}}}
if(consecutiveIndexes[consecutiveIndexes.length-1].length===0){consecutiveIndexes.pop();}
return consecutiveIndexes;}
getHiddenRowsGroups(sheetId){const consecutiveIndexes=[[]];const hiddenCols=this.hiddenHeaders[sheetId].ROW;for(let row=0;row<hiddenCols.length;row++){const isRowHidden=hiddenCols[row];if(isRowHidden){consecutiveIndexes[consecutiveIndexes.length-1].push(row);}
else{if(consecutiveIndexes[consecutiveIndexes.length-1].length!==0){consecutiveIndexes.push([]);}}}
if(consecutiveIndexes[consecutiveIndexes.length-1].length===0){consecutiveIndexes.pop();}
return consecutiveIndexes;}
getAllVisibleHeaders(sheetId,dimension){const headers=range(0,this.getters.getNumberHeaders(sheetId,dimension));const foldedHeaders=[];this.getters.getHeaderGroups(sheetId,dimension).forEach((group)=>{if(group.isFolded){foldedHeaders.push(...range(group.start,group.end+1));}});return headers.filter((i)=>{return!this.hiddenHeaders[sheetId][dimension][i]&&!foldedHeaders.includes(i);});}
import(data){for(let sheet of data.sheets){this.hiddenHeaders[sheet.id]={COL:[],ROW:[]};for(let row=0;row<sheet.rowNumber;row++){this.hiddenHeaders[sheet.id].ROW[row]=Boolean(sheet.rows[row]?.isHidden);}
for(let col=0;col<sheet.colNumber;col++){this.hiddenHeaders[sheet.id].COL[col]=Boolean(sheet.cols[col]?.isHidden);}}
return;}
exportForExcel(data){this.exportData(data,true);}
export(data){this.exportData(data);}
exportData(data,exportDefaults=false){for(let sheet of data.sheets){if(sheet.rows===undefined){sheet.rows={};}
for(let row=0;row<this.getters.getNumberRows(sheet.id);row++){if(exportDefaults||this.hiddenHeaders[sheet.id]["ROW"][row]){if(sheet.rows[row]===undefined){sheet.rows[row]={};}
sheet.rows[row].isHidden||=this.hiddenHeaders[sheet.id]["ROW"][row];}}
if(sheet.cols===undefined){sheet.cols={};}
for(let col=0;col<this.getters.getNumberCols(sheet.id);col++){if(exportDefaults||this.hiddenHeaders[sheet.id]["COL"][col]){if(sheet.cols[col]===undefined){sheet.cols[col]={};}
sheet.cols[col].isHidden||=this.hiddenHeaders[sheet.id]["COL"][col];}}}}}
class ImagePlugin extends CorePlugin{static getters=["getImage","getImagePath","getImageSize"];fileStore;images={};syncedImages=new Set();constructor(config){super(config);this.fileStore=config.external.fileStore;}
allowDispatch(cmd){switch(cmd.type){case"CREATE_IMAGE":if(this.getters.getFigure(cmd.sheetId,cmd.figureId)){return"InvalidFigureId";}
return"Success";default:return"Success";}}
handle(cmd){switch(cmd.type){case"CREATE_IMAGE":this.addImage(cmd.figureId,cmd.sheetId,cmd.position,cmd.size);this.history.update("images",cmd.sheetId,cmd.figureId,cmd.definition);this.syncedImages.add(cmd.definition.path);break;case"DUPLICATE_SHEET":{const sheetFiguresFrom=this.getters.getFigures(cmd.sheetId);for(const fig of sheetFiguresFrom){if(fig.tag==="image"){const figureIdBase=fig.id.split(FIGURE_ID_SPLITTER).pop();const duplicatedFigureId=`${cmd.sheetIdTo}${FIGURE_ID_SPLITTER}${figureIdBase}`;const image=this.getImage(fig.id);if(image){const size={width:fig.width,height:fig.height};this.dispatch("CREATE_IMAGE",{sheetId:cmd.sheetIdTo,figureId:duplicatedFigureId,position:{x:fig.x,y:fig.y},size,definition:deepCopy(image),});}}}
break;}
case"DELETE_FIGURE":this.history.update("images",cmd.sheetId,cmd.id,undefined);break;case"DELETE_SHEET":this.history.update("images",cmd.sheetId,undefined);break;}}
garbageCollectExternalResources(){const images=new Set(this.getAllImages().map((image)=>image.path));for(const path of this.syncedImages){if(!images.has(path)){this.fileStore?.delete(path);}}}
getImage(figureId){for(const sheet of Object.values(this.images)){if(sheet&&sheet[figureId]){return sheet[figureId];}}
throw new Error(`There is no image with the given figureId: ${figureId}`);}
getImagePath(figureId){return this.getImage(figureId).path;}
getImageSize(figureId){return this.getImage(figureId).size;}
addImage(id,sheetId,position,size){const figure={id,x:position.x,y:position.y,width:size.width,height:size.height,tag:"image",};this.dispatch("CREATE_FIGURE",{sheetId,figure});}
import(data){for(const sheet of data.sheets){const images=(sheet.figures||[]).filter((figure)=>figure.tag==="image");for(const image of images){this.history.update("images",sheet.id,image.id,image.data);this.syncedImages.add(image.data.path);}}}
export(data){for(const sheet of data.sheets){const images=sheet.figures.filter((figure)=>figure.tag==="image");for(const image of images){image.data=this.images[sheet.id]?.[image.id];}}}
exportForExcel(data){for(const sheet of data.sheets){if(!sheet.images){sheet.images=[];}
const figures=this.getters.getFigures(sheet.id);const images=[];for(const figure of figures){if(figure?.tag==="image"){const image=this.getImage(figure.id);if(image){images.push({...figure,data:deepCopy(image),});}}}
sheet.images=[...sheet.images,...images];}}
getAllImages(){const images=[];for(const sheetId in this.images){images.push(...Object.values(this.images[sheetId]||{}).filter(isDefined));}
return images;}}
class MergePlugin extends CorePlugin{static getters=["isInMerge","isInSameMerge","isMergeHidden","getMainCellPosition","expandZone","doesIntersectMerge","doesColumnsHaveCommonMerges","doesRowsHaveCommonMerges","getMerges","getMerge","getMergesInZone","isSingleCellOrMerge","getSelectionRangeString","isMainCellPosition",];nextId=1;merges={};mergeCellMap={};allowDispatch(cmd){const force="force"in cmd?!!cmd.force:false;switch(cmd.type){case"ADD_MERGE":if(force){return this.checkValidations(cmd,this.checkFrozenPanes);}
return this.checkValidations(cmd,this.checkDestructiveMerge,this.checkOverlap,this.checkFrozenPanes);case"UPDATE_CELL":return this.checkMergedContentUpdate(cmd);case"REMOVE_MERGE":return this.checkMergeExists(cmd);default:return"Success";}}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("merges",cmd.sheetId,{});this.history.update("mergeCellMap",cmd.sheetId,{});break;case"DELETE_SHEET":this.history.update("merges",cmd.sheetId,{});this.history.update("mergeCellMap",cmd.sheetId,{});break;case"DUPLICATE_SHEET":const merges=this.merges[cmd.sheetId];if(!merges)
break;for(const range of Object.values(merges).filter(isDefined)){this.addMerge(cmd.sheetIdTo,range.zone);}
break;case"ADD_MERGE":for(const zone of cmd.target){this.addMerge(cmd.sheetId,zone);}
break;case"REMOVE_MERGE":for(const zone of cmd.target){this.removeMerge(cmd.sheetId,zone);}
break;}}
adaptRanges(applyChange,sheetId){const sheetIds=sheetId?[sheetId]:Object.keys(this.merges);for(const sheetId of sheetIds){this.applyRangeChangeOnSheet(sheetId,applyChange);}}
getMerges(sheetId){return Object.keys(this.merges[sheetId]||{}).map((mergeId)=>this.getMergeById(sheetId,parseInt(mergeId,10))).filter(isDefined);}
getMerge({sheetId,col,row}){const sheetMap=this.mergeCellMap[sheetId];const mergeId=sheetMap?col in sheetMap&&sheetMap[col]?.[row]:undefined;return mergeId?this.getMergeById(sheetId,mergeId):undefined;}
getMergesInZone(sheetId,zone){const sheetMap=this.mergeCellMap[sheetId];if(!sheetMap)
return[];const mergeIds=new Set();for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const mergeId=sheetMap[col]?.[row];if(mergeId){mergeIds.add(mergeId);}}}
return Array.from(mergeIds).map((mergeId)=>this.getMergeById(sheetId,mergeId)).filter(isDefined);}
getSelectionRangeString(range,forSheetId){const rangeImpl=RangeImpl.fromRange(range,this.getters);const expandedZone=this.getters.expandZone(rangeImpl.sheetId,rangeImpl.zone);const expandedRange=rangeImpl.clone({zone:{...expandedZone,bottom:rangeImpl.isFullCol?undefined:expandedZone.bottom,right:rangeImpl.isFullRow?undefined:expandedZone.right,},});const rangeString=this.getters.getRangeString(expandedRange,forSheetId);if(this.isSingleCellOrMerge(rangeImpl.sheetId,rangeImpl.zone)){const{sheetName,xc}=splitReference(rangeString);return getFullReference(sheetName,xc.split(":")[0]);}
return rangeString;}
doesIntersectMerge(sheetId,zone){for(const merge of this.getMerges(sheetId)){if(overlap(zone,merge)){return true;}}
return false;}
doesColumnsHaveCommonMerges(sheetId,colA,colB){const sheet=this.getters.getSheet(sheetId);for(let row=0;row<this.getters.getNumberRows(sheetId);row++){if(this.isInSameMerge(sheet.id,colA,row,colB,row)){return true;}}
return false;}
doesRowsHaveCommonMerges(sheetId,rowA,rowB){const sheet=this.getters.getSheet(sheetId);for(let col=0;col<=this.getters.getNumberCols(sheetId);col++){if(this.isInSameMerge(sheet.id,col,rowA,col,rowB)){return true;}}
return false;}
expandZone(sheetId,zone){let{left,right,top,bottom}=zone;let result={left,right,top,bottom};for(let id in this.merges[sheetId]){const merge=this.getMergeById(sheetId,parseInt(id));if(merge&&overlap(merge,result)){result=union(merge,result);}}
return isEqual(result,zone)?result:this.expandZone(sheetId,result);}
isInSameMerge(sheetId,colA,rowA,colB,rowB){const mergeA=this.getMerge({sheetId,col:colA,row:rowA});const mergeB=this.getMerge({sheetId,col:colB,row:rowB});if(!mergeA||!mergeB){return false;}
return isEqual(mergeA,mergeB);}
isInMerge({sheetId,col,row}){const sheetMap=this.mergeCellMap[sheetId];return sheetMap?col in sheetMap&&Boolean(sheetMap[col]?.[row]):false;}
getMainCellPosition(position){const mergeZone=this.getMerge(position);return mergeZone?{sheetId:position.sheetId,col:mergeZone.left,row:mergeZone.top,}:position;}
isMergeHidden(sheetId,merge){const hiddenColsGroups=this.getters.getHiddenColsGroups(sheetId);const hiddenRowsGroups=this.getters.getHiddenRowsGroups(sheetId);for(let group of hiddenColsGroups){if(merge.left>=group[0]&&merge.right<=group[group.length-1]){return true;}}
for(let group of hiddenRowsGroups){if(merge.top>=group[0]&&merge.bottom<=group[group.length-1]){return true;}}
return false;}
isSingleCellOrMerge(sheetId,zone){const merge=this.getMerge({sheetId,col:zone.left,row:zone.top});if(merge){return isEqual(zone,merge);}
const{numberOfCols,numberOfRows}=zoneToDimension(zone);return numberOfCols===1&&numberOfRows===1;}
isMainCellPosition(position){return deepEquals(this.getMainCellPosition(position),position);}
isMergeDestructive(sheetId,zone){let{left,right,top,bottom}=zone;right=clip(right,0,this.getters.getNumberCols(sheetId)-1);bottom=clip(bottom,0,this.getters.getNumberRows(sheetId)-1);for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){if(col!==left||row!==top){const cell=this.getters.getCell({sheetId,col,row});if(cell&&cell.content!==""){return true;}}}}
return false;}
getMergeById(sheetId,mergeId){const range=this.merges[sheetId]?.[mergeId];return range!==undefined?rangeToMerge(mergeId,range):undefined;}
checkDestructiveMerge({sheetId,target}){const sheet=this.getters.tryGetSheet(sheetId);if(!sheet)
return"Success";const isDestructive=target.some((zone)=>this.isMergeDestructive(sheetId,zone));return isDestructive?"MergeIsDestructive":"Success";}
checkOverlap({target}){for(const zone of target){for(const zone2 of target){if(zone!==zone2&&overlap(zone,zone2)){return"MergeOverlap";}}}
return"Success";}
checkFrozenPanes({sheetId,target}){const sheet=this.getters.tryGetSheet(sheetId);if(!sheet)
return"Success";const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);for(const zone of target){if((zone.left<xSplit&&zone.right>=xSplit)||(zone.top<ySplit&&zone.bottom>=ySplit)){return"FrozenPaneOverlap";}}
return"Success";}
checkMergedContentUpdate(cmd){const{col,row,content}=cmd;if(content===undefined){return"Success";}
const{col:mainCol,row:mainRow}=this.getMainCellPosition(cmd);if(mainCol===col&&mainRow===row){return"Success";}
return"CellIsMerged";}
checkMergeExists(cmd){const{sheetId,target}=cmd;for(const zone of target){const{left,top}=zone;const merge=this.getMerge({sheetId,col:left,row:top});if(merge===undefined||!isEqual(zone,merge)){return"InvalidTarget";}}
return"Success";}
addMerge(sheetId,zone){let{left,right,top,bottom}=zone;right=clip(right,0,this.getters.getNumberCols(sheetId)-1);bottom=clip(bottom,0,this.getters.getNumberRows(sheetId)-1);const tl=toXC(left,top);const br=toXC(right,bottom);if(tl===br){return;}
const topLeft=this.getters.getCell({sheetId,col:left,row:top});let id=this.nextId++;this.history.update("merges",sheetId,id,this.getters.getRangeFromSheetXC(sheetId,zoneToXc({left,top,right,bottom})));let previousMerges=new Set();for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){if(col!==left||row!==top){this.dispatch("UPDATE_CELL",{sheetId,col,row,style:topLeft?topLeft.style:null,content:"",});}
const merge=this.getMerge({sheetId,col,row});if(merge){previousMerges.add(merge.id);}
this.history.update("mergeCellMap",sheetId,col,row,id);}}
for(let mergeId of previousMerges){const{top,bottom,left,right}=this.getMergeById(sheetId,mergeId);for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){const position={sheetId,col,row};const merge=this.getMerge(position);if(!merge||merge.id!==id){this.history.update("mergeCellMap",sheetId,col,row,undefined);this.dispatch("CLEAR_CELL",position);}}}
this.history.update("merges",sheetId,mergeId,undefined);}}
removeMerge(sheetId,zone){const{left,top,bottom,right}=zone;const merge=this.getMerge({sheetId,col:left,row:top});if(merge===undefined||!isEqual(zone,merge)){return;}
this.history.update("merges",sheetId,merge.id,undefined);for(let r=top;r<=bottom;r++){for(let c=left;c<=right;c++){this.history.update("mergeCellMap",sheetId,c,r,undefined);}}}
applyRangeChangeOnSheet(sheetId,applyChange){const merges=Object.entries(this.merges[sheetId]||{});for(const[mergeId,range]of merges){if(range){const currentZone=range.zone;const result=applyChange(range);switch(result.changeType){case"NONE":break;case"REMOVE":this.removeMerge(sheetId,currentZone);break;default:const{numberOfCols,numberOfRows}=zoneToDimension(result.range.zone);if(numberOfCols===1&&numberOfRows===1){this.removeMerge(sheetId,currentZone);}
else{this.history.update("merges",sheetId,parseInt(mergeId,10),result.range);}
break;}}}
this.history.update("mergeCellMap",sheetId,{});for(const merge of this.getMerges(sheetId)){for(const{col,row}of positions(merge)){this.history.update("mergeCellMap",sheetId,col,row,merge.id);}}}
import(data){const sheets=data.sheets||[];for(let sheetData of sheets){this.history.update("merges",sheetData.id,{});this.history.update("mergeCellMap",sheetData.id,{});if(sheetData.merges){this.importMerges(sheetData.id,sheetData.merges);}}}
importMerges(sheetId,merges){for(let merge of merges){this.addMerge(sheetId,toZone(merge));}}
export(data){for(let sheetData of data.sheets){const merges=this.merges[sheetData.id];if(merges){sheetData.merges.push(...exportMerges(merges));}}}
exportForExcel(data){this.export(data);}}
function exportMerges(merges){return Object.entries(merges).map(([mergeId,range])=>(range?rangeToMerge(parseInt(mergeId,10),range):undefined)).filter(isDefined).map((merge)=>toXC(merge.left,merge.top)+":"+toXC(merge.right,merge.bottom));}
function rangeToMerge(mergeId,range){return{...range.zone,id:mergeId,};}
class RangeAdapter{getters;providers=[];constructor(getters){this.getters=getters;}
static getters=["extendRange","getRangeString","getRangeFromSheetXC","createAdaptedRanges","getRangeDataFromXc","getRangeDataFromZone","getRangeFromRangeData","getRangeFromZone","getRangesUnion","recomputeRanges","isRangeValid","removeRangesSheetPrefix",];allowDispatch(cmd){if(cmd.type==="MOVE_RANGES"){return cmd.target.length===1?"Success":"InvalidZones";}
return"Success";}
beforeHandle(command){}
handle(cmd){switch(cmd.type){case"REMOVE_COLUMNS_ROWS":{let start=cmd.dimension==="COL"?"left":"top";let end=cmd.dimension==="COL"?"right":"bottom";let dimension=cmd.dimension==="COL"?"columns":"rows";const elements=[...cmd.elements];elements.sort((a,b)=>b-a);const groups=groupConsecutive(elements);this.executeOnAllRanges((range)=>{if(range.sheetId!==cmd.sheetId){return{changeType:"NONE"};}
let newRange=range;let changeType="NONE";for(let group of groups){const min=largeMin(group);const max=largeMax(group);if(range.zone[start]<=min&&min<=range.zone[end]){const toRemove=Math.min(range.zone[end],max)-min+1;changeType="RESIZE";newRange=this.createAdaptedRange(newRange,dimension,changeType,-toRemove);}
else if(range.zone[start]>=min&&range.zone[end]<=max){changeType="REMOVE";newRange=range.clone({...this.getInvalidRange()});}
else if(range.zone[start]<=max&&range.zone[end]>=max){const toRemove=max-range.zone[start]+1;changeType="RESIZE";newRange=this.createAdaptedRange(newRange,dimension,changeType,-toRemove);newRange=this.createAdaptedRange(newRange,dimension,"MOVE",-(range.zone[start]-min));}
else if(min<range.zone[start]){changeType="MOVE";newRange=this.createAdaptedRange(newRange,dimension,changeType,-(max-min+1));}}
if(changeType!=="NONE"){return{changeType,range:newRange};}
return{changeType:"NONE"};},cmd.sheetId);break;}
case"ADD_COLUMNS_ROWS":{let start=cmd.dimension==="COL"?"left":"top";let end=cmd.dimension==="COL"?"right":"bottom";let dimension=cmd.dimension==="COL"?"columns":"rows";this.executeOnAllRanges((range)=>{if(range.sheetId!==cmd.sheetId){return{changeType:"NONE"};}
if(cmd.position==="after"){if(range.zone[start]<=cmd.base&&cmd.base<range.zone[end]){return{changeType:"RESIZE",range:this.createAdaptedRange(range,dimension,"RESIZE",cmd.quantity),};}
if(cmd.base<range.zone[start]){return{changeType:"MOVE",range:this.createAdaptedRange(range,dimension,"MOVE",cmd.quantity),};}}
else{if(range.zone[start]<cmd.base&&cmd.base<=range.zone[end]){return{changeType:"RESIZE",range:this.createAdaptedRange(range,dimension,"RESIZE",cmd.quantity),};}
if(cmd.base<=range.zone[start]){return{changeType:"MOVE",range:this.createAdaptedRange(range,dimension,"MOVE",cmd.quantity),};}}
return{changeType:"NONE"};},cmd.sheetId);break;}
case"DELETE_SHEET":{this.executeOnAllRanges((range)=>{if(range.sheetId!==cmd.sheetId){return{changeType:"NONE"};}
const invalidSheetName=this.getters.getSheetName(cmd.sheetId);range=range.clone({...this.getInvalidRange(),invalidSheetName,});return{changeType:"REMOVE",range};},cmd.sheetId);break;}
case"RENAME_SHEET":{this.executeOnAllRanges((range)=>{if(range.sheetId===cmd.sheetId){return{changeType:"CHANGE",range};}
if(cmd.name&&range.invalidSheetName===cmd.name){const invalidSheetName=undefined;const sheetId=cmd.sheetId;const newRange=range.clone({sheetId,invalidSheetName});return{changeType:"CHANGE",range:newRange};}
return{changeType:"NONE"};});break;}
case"MOVE_RANGES":{const originZone=cmd.target[0];this.executeOnAllRanges((range)=>{if(range.sheetId!==cmd.sheetId||!isZoneInside(range.zone,originZone)){return{changeType:"NONE"};}
const targetSheetId=cmd.targetSheetId;const offsetX=cmd.col-originZone.left;const offsetY=cmd.row-originZone.top;const adaptedRange=this.createAdaptedRange(range,"both","MOVE",[offsetX,offsetY]);const prefixSheet=cmd.sheetId===targetSheetId?adaptedRange.prefixSheet:true;return{changeType:"MOVE",range:adaptedRange.clone({sheetId:targetSheetId,prefixSheet}),};});break;}}}
finalize(){}
verifyRangeRemoved(adaptRange){return(range)=>{const result=adaptRange(range);if(result.changeType!=="NONE"&&!isZoneValid(result.range.zone)){return{range:result.range,changeType:"REMOVE"};}
return result;};}
createAdaptedRange(range,dimension,operation,by){const zone=createAdaptedZone(range.unboundedZone,dimension,operation,by);const adaptedRange=range.clone({zone});return adaptedRange;}
executeOnAllRanges(adaptRange,sheetId){const func=this.verifyRangeRemoved(adaptRange);for(const provider of this.providers){provider(func,sheetId);}}
addRangeProvider(provider){this.providers.push(provider);}
createAdaptedRanges(ranges,offsetX,offsetY,sheetId){const rangesImpl=ranges.map((range)=>RangeImpl.fromRange(range,this.getters));return rangesImpl.map((range)=>{if(!isZoneValid(range.zone)){return range;}
const copySheetId=range.prefixSheet?range.sheetId:sheetId;const unboundZone={...range.unboundedZone,left:range.isFullRow&&!range.unboundedZone.hasHeader?range.unboundedZone.left:range.unboundedZone.left+(range.parts[0].colFixed?0:offsetX),right:range.isFullRow?range.unboundedZone.right:range.unboundedZone.right+
((range.parts[1]||range.parts[0]).colFixed?0:offsetX),top:range.isFullCol&&!range.unboundedZone.hasHeader?range.unboundedZone.top:range.unboundedZone.top+(range.parts[0].rowFixed?0:offsetY),bottom:range.isFullCol?range.unboundedZone.bottom:range.unboundedZone.bottom+
((range.parts[1]||range.parts[0]).rowFixed?0:offsetY),};return range.clone({sheetId:copySheetId,zone:unboundZone}).orderZone();});}
removeRangesSheetPrefix(sheetId,ranges){return ranges.map((range)=>{const rangeImpl=RangeImpl.fromRange(range,this.getters);if(rangeImpl.prefixSheet&&rangeImpl.sheetId===sheetId){return rangeImpl.clone({prefixSheet:false});}
return rangeImpl;});}
extendRange(range,dimension,quantity){const rangeImpl=RangeImpl.fromRange(range,this.getters);const right=dimension==="COL"?rangeImpl.zone.right+quantity:rangeImpl.zone.right;const bottom=dimension==="ROW"?rangeImpl.zone.bottom+quantity:rangeImpl.zone.bottom;const zone={left:rangeImpl.zone.left,top:rangeImpl.zone.top,right:rangeImpl.isFullRow?undefined:right,bottom:rangeImpl.isFullCol?undefined:bottom,};return new RangeImpl({...rangeImpl,zone},this.getters.getSheetSize).orderZone();}
getRangeFromSheetXC(defaultSheetId,sheetXC){if(!rangeReference.test(sheetXC)||!this.getters.tryGetSheet(defaultSheetId)){return new RangeImpl({sheetId:"",zone:{left:-1,top:-1,right:-1,bottom:-1},parts:[],invalidXc:sheetXC,prefixSheet:false,},this.getters.getSheetSize);}
let sheetName;let xc=sheetXC;let prefixSheet=false;if(sheetXC.includes("!")){({xc,sheetName}=splitReference(sheetXC));if(sheetName){prefixSheet=true;}}
const zone=toUnboundedZone(xc);const parts=RangeImpl.getRangeParts(xc,zone);const invalidSheetName=sheetName&&!this.getters.getSheetIdByName(sheetName)?sheetName:undefined;const sheetId=this.getters.getSheetIdByName(sheetName)||defaultSheetId;const rangeInterface={prefixSheet,zone,sheetId,invalidSheetName,parts};return new RangeImpl(rangeInterface,this.getters.getSheetSize).orderZone();}
getRangeString(range,forSheetId,options={useFixedReference:false}){if(!range){return CellErrorType.InvalidReference;}
if(range.invalidXc){return range.invalidXc;}
if(!this.getters.tryGetSheet(range.sheetId)){return CellErrorType.InvalidReference;}
if(range.zone.bottom-range.zone.top<0||range.zone.right-range.zone.left<0){return CellErrorType.InvalidReference;}
if(range.zone.left<0||range.zone.top<0){return CellErrorType.InvalidReference;}
const rangeImpl=RangeImpl.fromRange(range,this.getters);let prefixSheet=rangeImpl.sheetId!==forSheetId||rangeImpl.invalidSheetName||rangeImpl.prefixSheet;let sheetName="";if(prefixSheet){if(rangeImpl.invalidSheetName){sheetName=rangeImpl.invalidSheetName;}
else{sheetName=getCanonicalSymbolName(this.getters.getSheetName(rangeImpl.sheetId));}}
if(prefixSheet&&!sheetName){return CellErrorType.InvalidReference;}
let rangeString=this.getRangePartString(rangeImpl,0,options);if(rangeImpl.parts&&rangeImpl.parts.length===2){if(rangeImpl.zone.top!==rangeImpl.zone.bottom||rangeImpl.zone.left!==rangeImpl.zone.right||rangeImpl.parts[0].rowFixed||rangeImpl.parts[0].colFixed||rangeImpl.parts[1].rowFixed||rangeImpl.parts[1].colFixed){rangeString+=":";rangeString+=this.getRangePartString(rangeImpl,1,options);}}
return`${prefixSheet ? sheetName + "!" : ""}${rangeString}`;}
getRangeDataFromXc(sheetId,xc){return this.getters.getRangeFromSheetXC(sheetId,xc).rangeData;}
getRangeDataFromZone(sheetId,zone){zone=this.getters.getUnboundedZone(sheetId,zone);return{_sheetId:sheetId,_zone:zone};}
getRangeFromZone(sheetId,zone){return new RangeImpl({sheetId,zone,parts:[{colFixed:false,rowFixed:false},{colFixed:false,rowFixed:false},],prefixSheet:false,},this.getters.getSheetSize);}
recomputeRanges(ranges,rangesToRemove){const zones=ranges.map((range)=>RangeImpl.fromRange(range,this.getters).unboundedZone);const zonesToRemove=rangesToRemove.map((range)=>RangeImpl.fromRange(range,this.getters).unboundedZone);return recomputeZones(zones,zonesToRemove).map((zone)=>this.getRangeFromZone(ranges[0].sheetId,zone));}
getRangeFromRangeData(data){const rangeInterface={prefixSheet:false,zone:data._zone,sheetId:data._sheetId,invalidSheetName:undefined,parts:[{colFixed:false,rowFixed:false},{colFixed:false,rowFixed:false},],};return new RangeImpl(rangeInterface,this.getters.getSheetSize);}
isRangeValid(rangeStr){if(!rangeStr){return false;}
const{xc,sheetName}=splitReference(rangeStr);return(xc.match(rangeReference)!==null&&(!sheetName||this.getters.getSheetIdByName(sheetName)!==undefined));}
getRangesUnion(ranges){const zones=ranges.map((range)=>RangeImpl.fromRange(range,this.getters).unboundedZone);const unionOfZones=unionUnboundedZones(...zones);return this.getRangeFromZone(ranges[0].sheetId,unionOfZones);}
getRangePartString(range,part,options={useFixedReference:false}){const colFixed=range.parts&&range.parts[part]?.colFixed?"$":"";const col=part===0?numberToLetters(range.zone.left):numberToLetters(range.zone.right);const rowFixed=range.parts&&range.parts[part]?.rowFixed?"$":"";const row=part===0?String(range.zone.top+1):String(range.zone.bottom+1);let str="";if(range.isFullCol&&!options.useFixedReference){if(part===0&&range.unboundedZone.hasHeader){str=colFixed+col+rowFixed+row;}
else{str=colFixed+col;}}
else if(range.isFullRow&&!options.useFixedReference){if(part===0&&range.unboundedZone.hasHeader){str=colFixed+col+rowFixed+row;}
else{str=rowFixed+row;}}
else{str=colFixed+col+rowFixed+row;}
return str;}
getInvalidRange(){return{parts:[],prefixSheet:false,zone:{left:-1,top:-1,right:-1,bottom:-1},sheetId:"",invalidXc:CellErrorType.InvalidReference,};}}
class SheetPlugin extends CorePlugin{static getters=["getSheetName","tryGetSheetName","getSheet","tryGetSheet","getSheetIdByName","getSheetIds","getVisibleSheetIds","isSheetVisible","doesHeaderExist","doesHeadersExist","getCell","getCellPosition","getColsZone","getRowCells","getRowsZone","getNumberCols","getNumberRows","getNumberHeaders","getGridLinesVisibility","getNextSheetName","getSheetSize","getSheetZone","getPaneDivisions","checkZonesExistInSheet","getCommandZones","getUnboundedZone","checkElementsIncludeAllNonFrozenHeaders",];sheetIdsMapName={};orderedSheetIds=[];sheets={};cellPosition={};allowDispatch(cmd){const genericChecks=this.chainValidations(this.checkSheetExists,this.checkZonesAreInSheet)(cmd);if(genericChecks!=="Success"){return genericChecks;}
switch(cmd.type){case"HIDE_SHEET":{if(this.getVisibleSheetIds().length===1){return"NotEnoughSheets";}
return"Success";}
case"CREATE_SHEET":{return this.checkValidations(cmd,this.checkSheetName,this.checkSheetPosition);}
case"MOVE_SHEET":try{const currentIndex=this.orderedSheetIds.findIndex((id)=>id===cmd.sheetId);this.findIndexOfTargetSheet(currentIndex,cmd.delta);return"Success";}
catch(e){return"WrongSheetMove";}
case"RENAME_SHEET":return this.isRenameAllowed(cmd);case"COLOR_SHEET":return!cmd.color||isColorValid(cmd.color)?"Success":"InvalidColor";case"DELETE_SHEET":return this.orderedSheetIds.length>1?"Success":"NotEnoughSheets";case"ADD_COLUMNS_ROWS":if(!this.doesHeaderExist(cmd.sheetId,cmd.dimension,cmd.base)){return"InvalidHeaderIndex";}
else if(cmd.quantity<=0){return"InvalidQuantity";}
return"Success";case"REMOVE_COLUMNS_ROWS":{const min=largeMin(cmd.elements);const max=largeMax(cmd.elements);if(min<0||!this.doesHeaderExist(cmd.sheetId,cmd.dimension,max)){return"InvalidHeaderIndex";}
else if(this.checkElementsIncludeAllNonFrozenHeaders(cmd.sheetId,cmd.dimension,cmd.elements)){return"NotEnoughElements";}
else{return"Success";}}
case"FREEZE_ROWS":{return this.checkValidations(cmd,this.checkRowFreezeQuantity,this.checkRowFreezeOverlapMerge);}
case"FREEZE_COLUMNS":{return this.checkValidations(cmd,this.checkColFreezeQuantity,this.checkColFreezeOverlapMerge);}
default:return"Success";}}
handle(cmd){switch(cmd.type){case"SET_GRID_LINES_VISIBILITY":this.setGridLinesVisibility(cmd.sheetId,cmd.areGridLinesVisible);break;case"CREATE_SHEET":const sheet=this.createSheet(cmd.sheetId,cmd.name||this.getNextSheetName(),cmd.cols||26,cmd.rows||100,cmd.position);this.history.update("sheetIdsMapName",sheet.name,sheet.id);break;case"MOVE_SHEET":this.moveSheet(cmd.sheetId,cmd.delta);break;case"RENAME_SHEET":this.renameSheet(this.sheets[cmd.sheetId],cmd.name);break;case"COLOR_SHEET":this.history.update("sheets",cmd.sheetId,"color",cmd.color);break;case"HIDE_SHEET":this.hideSheet(cmd.sheetId);break;case"SHOW_SHEET":this.showSheet(cmd.sheetId);break;case"DUPLICATE_SHEET":this.duplicateSheet(cmd.sheetId,cmd.sheetIdTo);break;case"DELETE_SHEET":this.deleteSheet(this.sheets[cmd.sheetId]);break;case"REMOVE_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.removeColumns(this.sheets[cmd.sheetId],[...cmd.elements]);}
else{this.removeRows(this.sheets[cmd.sheetId],[...cmd.elements]);}
break;case"ADD_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.addColumns(this.sheets[cmd.sheetId],cmd.base,cmd.position,cmd.quantity);}
else{this.addRows(this.sheets[cmd.sheetId],cmd.base,cmd.position,cmd.quantity);}
break;case"UPDATE_CELL_POSITION":this.updateCellPosition(cmd);break;case"FREEZE_COLUMNS":this.setPaneDivisions(cmd.sheetId,cmd.quantity,"COL");break;case"FREEZE_ROWS":this.setPaneDivisions(cmd.sheetId,cmd.quantity,"ROW");break;case"UNFREEZE_ROWS":this.setPaneDivisions(cmd.sheetId,0,"ROW");break;case"UNFREEZE_COLUMNS":this.setPaneDivisions(cmd.sheetId,0,"COL");break;case"UNFREEZE_COLUMNS_ROWS":this.setPaneDivisions(cmd.sheetId,0,"COL");this.setPaneDivisions(cmd.sheetId,0,"ROW");}}
import(data){for(let sheet of data.sheets){this.sheetIdsMapName[sheet.name]=sheet.id;}
for(let sheetData of data.sheets){const name=sheetData.name||_t("Sheet")+(Object.keys(this.sheets).length+1);const{colNumber,rowNumber}=this.getImportedSheetSize(sheetData);const sheet={id:sheetData.id,name:name,numberOfCols:colNumber,rows:createDefaultRows(rowNumber),areGridLinesVisible:sheetData.areGridLinesVisible===undefined?true:sheetData.areGridLinesVisible,isVisible:sheetData.isVisible,panes:{xSplit:sheetData.panes?.xSplit||0,ySplit:sheetData.panes?.ySplit||0,},color:sheetData.color,};this.orderedSheetIds.push(sheet.id);this.sheets[sheet.id]=sheet;}}
exportSheets(data){data.sheets=this.orderedSheetIds.filter(isDefined).map((id)=>{const sheet=this.sheets[id];const sheetData={id:sheet.id,name:sheet.name,colNumber:sheet.numberOfCols,rowNumber:this.getters.getNumberRows(sheet.id),rows:{},cols:{},merges:[],cells:{},styles:{},formats:{},borders:{},conditionalFormats:[],figures:[],tables:[],areGridLinesVisible:sheet.areGridLinesVisible===undefined?true:sheet.areGridLinesVisible,isVisible:sheet.isVisible,color:sheet.color,};if(sheet.panes.xSplit||sheet.panes.ySplit){sheetData.panes=sheet.panes;}
return sheetData;});}
export(data){this.exportSheets(data);}
exportForExcel(data){this.exportSheets(data);}
getGridLinesVisibility(sheetId){return this.getSheet(sheetId).areGridLinesVisible;}
tryGetSheet(sheetId){return this.sheets[sheetId];}
getSheet(sheetId){const sheet=this.sheets[sheetId];if(!sheet){throw new Error(`Sheet ${sheetId} not found.`);}
return sheet;}
isSheetVisible(sheetId){return this.getSheet(sheetId).isVisible;}
getSheetName(sheetId){return this.getSheet(sheetId).name;}
tryGetSheetName(sheetId){return this.tryGetSheet(sheetId)?.name;}
getSheetIdByName(name){if(name){const unquotedName=getUnquotedSheetName(name);for(const key in this.sheetIdsMapName){if(key.toUpperCase()===unquotedName.toUpperCase()){return this.sheetIdsMapName[key];}}}
return undefined;}
getSheetIds(){return this.orderedSheetIds;}
getVisibleSheetIds(){return this.orderedSheetIds.filter(this.isSheetVisible.bind(this));}
doesHeaderExist(sheetId,dimension,index){return dimension==="COL"?index>=0&&index<this.getNumberCols(sheetId):index>=0&&index<this.getNumberRows(sheetId);}
doesHeadersExist(sheetId,dimension,headerIndexes){return headerIndexes.every((index)=>this.doesHeaderExist(sheetId,dimension,index));}
getCell({sheetId,col,row}){const sheet=this.tryGetSheet(sheetId);const cellId=sheet?.rows[row]?.cells[col];if(cellId===undefined){return undefined;}
return this.getters.getCellById(cellId);}
getColsZone(sheetId,start,end){return{top:0,bottom:this.getNumberRows(sheetId)-1,left:start,right:end,};}
getRowCells(sheetId,row){return Object.values(this.getSheet(sheetId).rows[row]?.cells).filter(isDefined);}
getRowsZone(sheetId,start,end){return{top:start,bottom:end,left:0,right:this.getSheet(sheetId).numberOfCols-1,};}
getCellPosition(cellId){const cell=this.cellPosition[cellId];if(!cell){throw new Error(`asking for a cell position that doesn't exist, cell id: ${cellId}`);}
return cell;}
getNumberCols(sheetId){return this.getSheet(sheetId).numberOfCols;}
getNumberRows(sheetId){return this.getSheet(sheetId).rows.length;}
getNumberHeaders(sheetId,dimension){return dimension==="COL"?this.getNumberCols(sheetId):this.getNumberRows(sheetId);}
getNextSheetName(baseName="Sheet"){let i=1;const names=this.orderedSheetIds.map(this.getSheetName.bind(this));let name=`${baseName}${i}`;while(names.includes(name)){name=`${baseName}${i}`;i++;}
return name;}
getSheetSize(sheetId){return{numberOfRows:this.getNumberRows(sheetId),numberOfCols:this.getNumberCols(sheetId),};}
getSheetZone(sheetId){return{top:0,left:0,bottom:this.getNumberRows(sheetId)-1,right:this.getNumberCols(sheetId)-1,};}
getUnboundedZone(sheetId,zone){const isFullRow=zone.left===0&&zone.right===this.getNumberCols(sheetId)-1;const isFullCol=zone.top===0&&zone.bottom===this.getNumberRows(sheetId)-1;return{...zone,bottom:isFullCol?undefined:zone.bottom,right:isFullRow&&!isFullCol?undefined:zone.right,};}
getPaneDivisions(sheetId){return this.getSheet(sheetId).panes;}
setPaneDivisions(sheetId,base,dimension){const panes={...this.getPaneDivisions(sheetId)};if(dimension==="COL"){panes.xSplit=base;}
else if(dimension==="ROW"){panes.ySplit=base;}
this.history.update("sheets",sheetId,"panes",panes);}
checkElementsIncludeAllNonFrozenHeaders(sheetId,dimension,elements){const paneDivisions=this.getters.getPaneDivisions(sheetId);const startIndex=dimension==="ROW"?paneDivisions.ySplit:paneDivisions.xSplit;const endIndex=this.getters.getNumberHeaders(sheetId,dimension);if(!startIndex){return false;}
const indicesToCheck=range(startIndex,endIndex);return includesAll(elements,indicesToCheck);}
getCommandZones(cmd){const zones=[];if("zone"in cmd){zones.push(cmd.zone);}
if("target"in cmd){zones.push(...cmd.target);}
if("ranges"in cmd){zones.push(...cmd.ranges.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData).zone));}
if("col"in cmd&&"row"in cmd){zones.push({top:cmd.row,left:cmd.col,bottom:cmd.row,right:cmd.col});}
return zones;}
checkZonesExistInSheet(sheetId,zones){if(!zones.every(isZoneValid))
return"InvalidRange";if(zones.length){const sheetZone=this.getSheetZone(sheetId);return zones.every((zone)=>isZoneInside(zone,sheetZone))?"Success":"TargetOutOfSheet";}
return"Success";}
updateCellPosition(cmd){const{sheetId,cellId,col,row}=cmd;if(cellId){this.setNewPosition(cellId,sheetId,col,row);}
else{this.clearPosition(sheetId,col,row);}}
setNewPosition(cellId,sheetId,col,row){const currentPosition=this.cellPosition[cellId];if(currentPosition){this.clearPosition(sheetId,currentPosition.col,currentPosition.row);}
this.history.update("cellPosition",cellId,{row:row,col:col,sheetId:sheetId,});this.history.update("sheets",sheetId,"rows",row,"cells",col,cellId);}
clearPosition(sheetId,col,row){const cellId=this.sheets[sheetId]?.rows[row].cells[col];if(cellId){this.history.update("cellPosition",cellId,undefined);this.history.update("sheets",sheetId,"rows",row,"cells",col,undefined);}}
setGridLinesVisibility(sheetId,areGridLinesVisible){this.history.update("sheets",sheetId,"areGridLinesVisible",areGridLinesVisible);}
createSheet(id,name,colNumber,rowNumber,position){const sheet={id,name,numberOfCols:colNumber,rows:createDefaultRows(rowNumber),areGridLinesVisible:true,isVisible:true,panes:{xSplit:0,ySplit:0,},};const orderedSheetIds=this.orderedSheetIds.slice();orderedSheetIds.splice(position,0,sheet.id);const sheets=this.sheets;this.history.update("orderedSheetIds",orderedSheetIds);this.history.update("sheets",Object.assign({},sheets,{[sheet.id]:sheet}));return sheet;}
moveSheet(sheetId,delta){const orderedSheetIds=this.orderedSheetIds.slice();const currentIndex=orderedSheetIds.findIndex((id)=>id===sheetId);const sheet=orderedSheetIds.splice(currentIndex,1);let index=this.findIndexOfTargetSheet(currentIndex,delta);orderedSheetIds.splice(index,0,sheet[0]);this.history.update("orderedSheetIds",orderedSheetIds);}
findIndexOfTargetSheet(currentIndex,deltaIndex){while(deltaIndex!=0&&0<=currentIndex&&currentIndex<=this.orderedSheetIds.length){if(deltaIndex>0){currentIndex++;if(this.isSheetVisible(this.orderedSheetIds[currentIndex])){deltaIndex--;}}
else if(deltaIndex<0){currentIndex--;if(this.isSheetVisible(this.orderedSheetIds[currentIndex])){deltaIndex++;}}}
if(deltaIndex===0){return currentIndex;}
throw new Error(_t("There is not enough visible sheets"));}
checkSheetName(cmd){const originalSheetName=this.getters.tryGetSheetName(cmd.sheetId);if(originalSheetName!==undefined&&cmd.name===originalSheetName){return"UnchangedSheetName";}
const{orderedSheetIds,sheets}=this;const name=cmd.name&&cmd.name.trim().toLowerCase();if(orderedSheetIds.find((id)=>sheets[id]?.name.toLowerCase()===name&&id!==cmd.sheetId)){return"DuplicatedSheetName";}
if(FORBIDDEN_IN_EXCEL_REGEX.test(name)){return"ForbiddenCharactersInSheetName";}
return"Success";}
checkSheetPosition(cmd){const{orderedSheetIds}=this;if(cmd.position>orderedSheetIds.length||cmd.position<0){return"WrongSheetPosition";}
return"Success";}
checkRowFreezeQuantity(cmd){return cmd.quantity>=1&&cmd.quantity<this.getNumberRows(cmd.sheetId)?"Success":"InvalidFreezeQuantity";}
checkColFreezeQuantity(cmd){return cmd.quantity>=1&&cmd.quantity<this.getNumberCols(cmd.sheetId)?"Success":"InvalidFreezeQuantity";}
checkRowFreezeOverlapMerge(cmd){const merges=this.getters.getMerges(cmd.sheetId);for(let merge of merges){if(merge.top<cmd.quantity&&cmd.quantity<=merge.bottom){return"MergeOverlap";}}
return"Success";}
checkColFreezeOverlapMerge(cmd){const merges=this.getters.getMerges(cmd.sheetId);for(let merge of merges){if(merge.left<cmd.quantity&&cmd.quantity<=merge.right){return"MergeOverlap";}}
return"Success";}
isRenameAllowed(cmd){const name=cmd.name&&cmd.name.trim().toLowerCase();if(!name){return"MissingSheetName";}
return this.checkSheetName(cmd);}
renameSheet(sheet,name){const oldName=sheet.name;this.history.update("sheets",sheet.id,"name",name.trim());const sheetIdsMapName=Object.assign({},this.sheetIdsMapName);delete sheetIdsMapName[oldName];sheetIdsMapName[name]=sheet.id;this.history.update("sheetIdsMapName",sheetIdsMapName);}
hideSheet(sheetId){this.history.update("sheets",sheetId,"isVisible",false);}
showSheet(sheetId){this.history.update("sheets",sheetId,"isVisible",true);}
duplicateSheet(fromId,toId){const sheet=this.getSheet(fromId);const toName=this.getDuplicateSheetName(sheet.name);const newSheet=deepCopy(sheet);newSheet.id=toId;newSheet.name=toName;for(let col=0;col<=newSheet.numberOfCols;col++){for(let row=0;row<=newSheet.rows.length;row++){if(newSheet.rows[row]){newSheet.rows[row].cells[col]=undefined;}}}
const orderedSheetIds=this.orderedSheetIds.slice();const currentIndex=orderedSheetIds.indexOf(fromId);orderedSheetIds.splice(currentIndex+1,0,newSheet.id);this.history.update("orderedSheetIds",orderedSheetIds);this.history.update("sheets",Object.assign({},this.sheets,{[newSheet.id]:newSheet}));for(const cell of Object.values(this.getters.getCells(fromId))){const{col,row}=this.getCellPosition(cell.id);this.dispatch("UPDATE_CELL",{sheetId:newSheet.id,col,row,content:cell.content,format:cell.format,style:cell.style,});}
const sheetIdsMapName=Object.assign({},this.sheetIdsMapName);sheetIdsMapName[newSheet.name]=newSheet.id;this.history.update("sheetIdsMapName",sheetIdsMapName);}
getDuplicateSheetName(sheetName){let i=1;const names=this.orderedSheetIds.map(this.getSheetName.bind(this));const baseName=_t("Copy of %s",sheetName);let name=baseName.toString();while(names.includes(name)){name=`${baseName} (${i})`;i++;}
return name;}
deleteSheet(sheet){const name=sheet.name;const sheets=Object.assign({},this.sheets);delete sheets[sheet.id];this.history.update("sheets",sheets);const orderedSheetIds=this.orderedSheetIds.slice();const currentIndex=orderedSheetIds.indexOf(sheet.id);orderedSheetIds.splice(currentIndex,1);this.history.update("orderedSheetIds",orderedSheetIds);const sheetIdsMapName=Object.assign({},this.sheetIdsMapName);delete sheetIdsMapName[name];this.history.update("sheetIdsMapName",sheetIdsMapName);}
removeColumns(sheet,columns){columns.sort((a,b)=>b-a);for(let column of columns){this.moveCellOnColumnsDeletion(sheet,column);}
const numberOfCols=this.sheets[sheet.id].numberOfCols;this.history.update("sheets",sheet.id,"numberOfCols",numberOfCols-columns.length);const count=columns.filter((col)=>col<sheet.panes.xSplit).length;if(count){this.setPaneDivisions(sheet.id,sheet.panes.xSplit-count,"COL");}}
removeRows(sheet,rows){rows.sort((a,b)=>b-a);for(let group of groupConsecutive(rows)){const from=group[group.length-1];const to=group[0];this.moveCellOnRowsDeletion(sheet,from,to);this.updateRowsStructureOnDeletion(sheet,from,to);}
const count=rows.filter((row)=>row<sheet.panes.ySplit).length;if(count){this.setPaneDivisions(sheet.id,sheet.panes.ySplit-count,"ROW");}}
addColumns(sheet,column,position,quantity){const index=position==="before"?column:column+1;this.moveCellsOnAddition(sheet,index,quantity,"columns");const numberOfCols=this.sheets[sheet.id].numberOfCols;this.history.update("sheets",sheet.id,"numberOfCols",numberOfCols+quantity);if(index<sheet.panes.xSplit){this.setPaneDivisions(sheet.id,sheet.panes.xSplit+quantity,"COL");}}
addRows(sheet,row,position,quantity){const index=position==="before"?row:row+1;this.addEmptyRows(sheet,quantity);this.moveCellsOnAddition(sheet,index,quantity,"rows");if(index<sheet.panes.ySplit){this.setPaneDivisions(sheet.id,sheet.panes.ySplit+quantity,"ROW");}}
moveCellOnColumnsDeletion(sheet,deletedColumn){this.dispatch("CLEAR_CELLS",{sheetId:sheet.id,target:[{left:deletedColumn,top:0,right:deletedColumn,bottom:sheet.rows.length-1,},],});for(let rowIndex=0;rowIndex<sheet.rows.length;rowIndex++){const row=sheet.rows[rowIndex];for(let i in row.cells){const colIndex=Number(i);const cellId=row.cells[i];if(cellId){if(colIndex>deletedColumn){this.setNewPosition(cellId,sheet.id,colIndex-1,rowIndex);}}}}}
moveCellsOnAddition(sheet,addedElement,quantity,dimension){const updates=[];for(let rowIndex=0;rowIndex<sheet.rows.length;rowIndex++){const row=sheet.rows[rowIndex];if(dimension!=="rows"||rowIndex>=addedElement){for(let i in row.cells){const colIndex=Number(i);const cellId=row.cells[i];if(cellId){if(dimension==="rows"||colIndex>=addedElement){updates.push({sheetId:sheet.id,cellId:cellId,col:colIndex+(dimension==="columns"?quantity:0),row:rowIndex+(dimension==="rows"?quantity:0),type:"UPDATE_CELL_POSITION",});}}}}}
for(let update of updates.reverse()){this.updateCellPosition(update);}}
moveCellOnRowsDeletion(sheet,deleteFromRow,deleteToRow){this.dispatch("CLEAR_CELLS",{sheetId:sheet.id,target:[{left:0,top:deleteFromRow,right:this.getters.getNumberCols(sheet.id),bottom:deleteToRow,},],});const numberRows=deleteToRow-deleteFromRow+1;for(let rowIndex=0;rowIndex<sheet.rows.length;rowIndex++){const row=sheet.rows[rowIndex];if(rowIndex>deleteToRow){for(let i in row.cells){const colIndex=Number(i);const cellId=row.cells[i];if(cellId){this.setNewPosition(cellId,sheet.id,colIndex,rowIndex-numberRows);}}}}}
updateRowsStructureOnDeletion(sheet,deleteFromRow,deleteToRow){const rows=[];const cellsQueue=sheet.rows.map((row)=>row.cells).reverse();for(let i in sheet.rows){const row=Number(i);if(row>=deleteFromRow&&row<=deleteToRow){continue;}
rows.push({cells:cellsQueue.pop(),});}
this.history.update("sheets",sheet.id,"rows",rows);}
addEmptyRows(sheet,quantity){const rows=sheet.rows.slice();for(let i=0;i<quantity;i++){rows.push({cells:{},});}
this.history.update("sheets",sheet.id,"rows",rows);}
getImportedSheetSize(data){const positions=Object.keys(data.cells).map(toCartesian);let rowNumber=data.rowNumber;let colNumber=data.colNumber;for(let{col,row}of positions){rowNumber=Math.max(rowNumber,row+1);colNumber=Math.max(colNumber,col+1);}
return{rowNumber,colNumber};}
checkSheetExists(cmd){if(cmd.type!=="CREATE_SHEET"&&"sheetId"in cmd&&this.sheets[cmd.sheetId]===undefined){return"InvalidSheetId";}
else if(cmd.type==="CREATE_SHEET"&&this.sheets[cmd.sheetId]!==undefined){return"DuplicatedSheetId";}
return"Success";}
checkZonesAreInSheet(cmd){if(!("sheetId"in cmd))
return"Success";return this.checkZonesExistInSheet(cmd.sheetId,this.getCommandZones(cmd));}}
class TablePlugin extends CorePlugin{static getters=["getCoreTable","getCoreTables","getCoreTableMatchingTopLeft"];tables={};adaptRanges(applyChange,sheetId){const sheetIds=sheetId?[sheetId]:this.getters.getSheetIds();for(const sheetId of sheetIds){for(const table of this.getCoreTables(sheetId)){this.applyRangeChangeOnTable(sheetId,table,applyChange);}}}
allowDispatch(cmd){switch(cmd.type){case"CREATE_TABLE":const zones=cmd.ranges.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData).zone);if(!areZonesContinuous(zones)){return"NonContinuousTargets";}
return this.checkValidations(cmd,(cmd)=>this.getTablesOverlappingZones(cmd.sheetId,zones).length?"TableOverlap":"Success",(cmd)=>this.checkTableConfigUpdateIsValid(cmd.config));case"UPDATE_TABLE":const updatedTable=this.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!updatedTable){return"TableNotFound";}
return this.checkValidations(cmd,this.checkUpdatedTableZoneIsValid,(cmd)=>this.checkTableConfigUpdateIsValid(cmd.config));case"ADD_MERGE":for(const table of this.getCoreTables(cmd.sheetId)){const tableZone=table.range.zone;for(const merge of cmd.target){if(overlap(tableZone,merge)){return"MergeInTable";}}}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("tables",cmd.sheetId,{});break;case"DELETE_SHEET":{const tables={...this.tables};delete tables[cmd.sheetId];this.history.update("tables",tables);break;}
case"DUPLICATE_SHEET":{const newTables={};for(const table of this.getCoreTables(cmd.sheetId)){newTables[table.id]=table.type==="dynamic"?this.copyDynamicTableForSheet(cmd.sheetIdTo,table):this.copyStaticTableForSheet(cmd.sheetIdTo,table);}
this.history.update("tables",cmd.sheetIdTo,newTables);break;}
case"CREATE_TABLE":{const ranges=cmd.ranges.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData));const union=this.getters.getRangesUnion(ranges);const mergesInTarget=this.getters.getMergesInZone(cmd.sheetId,union.zone);this.dispatch("REMOVE_MERGE",{sheetId:cmd.sheetId,target:mergesInTarget});const id=this.uuidGenerator.uuidv4();const config=cmd.config||DEFAULT_TABLE_CONFIG;const newTable=cmd.tableType==="dynamic"?this.createDynamicTable(id,union,config):this.createStaticTable(id,cmd.tableType,union,config);this.history.update("tables",cmd.sheetId,newTable.id,newTable);break;}
case"REMOVE_TABLE":{const tables={};for(const table of this.getCoreTables(cmd.sheetId)){if(cmd.target.every((zone)=>!intersection(table.range.zone,zone))){tables[table.id]=table;}}
this.history.update("tables",cmd.sheetId,tables);break;}
case"UPDATE_TABLE":{this.updateTable(cmd);break;}
case"UPDATE_CELL":{const sheetId=cmd.sheetId;for(const table of this.getCoreTables(sheetId)){if(table.type==="dynamic"){continue;}
const direction=this.canUpdateCellCmdExtendTable(cmd,table);if(direction==="down"){this.extendTableDown(sheetId,table);}
else if(direction==="right"){this.extendTableRight(sheetId,table);}}
break;}
case"DELETE_CONTENT":{const tables={...this.tables[cmd.sheetId]};for(const tableId in tables){const table=tables[tableId];if(table&&cmd.target.some((zone)=>isZoneInside(table.range.zone,zone))){this.dispatch("REMOVE_TABLE",{sheetId:cmd.sheetId,target:[table.range.zone]});}}
break;}}}
getCoreTables(sheetId){return this.tables[sheetId]?Object.values(this.tables[sheetId]).filter(isDefined):[];}
getCoreTable({sheetId,col,row}){return this.getCoreTables(sheetId).find((table)=>isInside(col,row,table.range.zone));}
getTablesOverlappingZones(sheetId,zones){return this.getCoreTables(sheetId).filter((table)=>zones.some((zone)=>overlap(table.range.zone,zone)));}
extendTableDown(sheetId,table){const newRange=this.getters.extendRange(table.range,"ROW",1);this.history.update("tables",sheetId,table.id,this.updateStaticTable(table,newRange));}
extendTableRight(sheetId,table){const newRange=this.getters.extendRange(table.range,"COL",1);this.history.update("tables",sheetId,table.id,this.updateStaticTable(table,newRange));}
canUpdateCellCmdExtendTable({content:newCellContent,sheetId,col,row},table){if(!newCellContent){return"none";}
const zone=table.range.zone;let direction="none";if(zone.bottom+1===row&&col>=zone.left&&col<=zone.right){direction="down";}
else if(zone.right+1===col&&row>=zone.top&&row<=zone.bottom){direction="right";}
if(direction==="none"){return"none";}
const zoneToCheckIfEmpty=direction==="down"?{...zone,bottom:zone.bottom+1,top:zone.bottom+1}:{...zone,right:zone.right+1,left:zone.right+1};for(const position of positions(zoneToCheckIfEmpty)){const cellPosition={sheetId,...position};const cellContent=this.getters.getCell(cellPosition)?.content;if(cellContent||this.getters.isInMerge(cellPosition)||this.getTablesOverlappingZones(sheetId,[positionToZone(position)]).length){return"none";}}
return direction;}
getCoreTableMatchingTopLeft(sheetId,zone){for(const table of this.getCoreTables(sheetId)){const tableZone=table.range.zone;if(tableZone.left===zone.left&&tableZone.top===zone.top){return table;}}
return undefined;}
checkUpdatedTableZoneIsValid(cmd){if(!cmd.newTableRange){return"Success";}
const newTableZone=this.getters.getRangeFromRangeData(cmd.newTableRange).zone;const zoneIsInSheet=this.getters.checkZonesExistInSheet(cmd.sheetId,[newTableZone]);if(zoneIsInSheet!=="Success"){return zoneIsInSheet;}
const updatedTable=this.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!updatedTable){return"TableNotFound";}
const overlappingTables=this.getTablesOverlappingZones(cmd.sheetId,[newTableZone]).filter((table)=>table.id!==updatedTable.id);return overlappingTables.length?"TableOverlap":"Success";}
checkTableConfigUpdateIsValid(config){if(!config){return"Success";}
if(config.numberOfHeaders!==undefined&&config.numberOfHeaders<0){return"InvalidTableConfig";}
if(config.hasFilters&&config.numberOfHeaders===0){return"InvalidTableConfig";}
return"Success";}
createStaticTable(id,type,tableRange,config,filters){const zone=tableRange.zone;if(!filters){filters=[];for(const i of range(zone.left,zone.right+1)){const filterZone={...zone,left:i,right:i};const uid=this.uuidGenerator.uuidv4();filters.push(this.createFilterFromZone(uid,tableRange.sheetId,filterZone,config));}}
return{id,range:tableRange,filters,config,type,};}
createDynamicTable(id,tableRange,config){const zone=zoneToTopLeft(tableRange.zone);return{id,range:this.getters.getRangeFromZone(tableRange.sheetId,zone),config,type:"dynamic",};}
updateTable(cmd){const table=this.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!table){return;}
const newTableRange=cmd.newTableRange?this.getters.getRangeFromRangeData(cmd.newTableRange):undefined;if(newTableRange){const mergesInTarget=this.getters.getMergesInZone(cmd.sheetId,newTableRange.zone);this.dispatch("REMOVE_MERGE",{sheetId:cmd.sheetId,target:mergesInTarget});}
const range=newTableRange||table.range;const newConfig=this.updateTableConfig(cmd.config,table.config);const newTableType=cmd.tableType??table.type;if((newTableType==="dynamic"&&table.type!=="dynamic")||(newTableType!=="dynamic"&&table.type==="dynamic")){const newTable=newTableType==="dynamic"?this.createDynamicTable(table.id,range,newConfig):this.createStaticTable(table.id,newTableType,range,newConfig);this.history.update("tables",cmd.sheetId,table.id,newTable);}
else{const updatedTable=table.type==="dynamic"?this.updateDynamicTable(table,range,newConfig):this.updateStaticTable(table,range,newConfig,newTableType);this.history.update("tables",cmd.sheetId,table.id,updatedTable);}}
updateStaticTable(table,newRange,configUpdate,newTableType=table.type){if(newTableType==="dynamic"){throw new Error("Cannot use updateStaticTable to update a dynamic table");}
const tableRange=newRange?newRange:table.range;const tableZone=tableRange.zone;const newConfig=this.updateTableConfig(configUpdate,table.config);const config=newConfig?newConfig:table.config;const filters=[];if(newRange||(newConfig&&"numberOfHeaders"in newConfig)){for(const i of range(tableZone.left,tableZone.right+1)){const oldFilter=tableZone.top===table.range.zone.top?table.filters.find((f)=>f.col===i):undefined;const filterZone={...tableZone,left:i,right:i};const filterId=oldFilter?.id||this.uuidGenerator.uuidv4();filters.push(this.createFilterFromZone(filterId,tableRange.sheetId,filterZone,config));}}
return{...table,range:tableRange,config,filters:filters.length?filters:table.filters,type:newTableType,};}
updateDynamicTable(table,newRange,newConfig){const range=newRange?this.getters.getRangeFromZone(newRange.sheetId,zoneToTopLeft(newRange.zone)):table.range;const config=newConfig?newConfig:table.config;return{...table,range,config};}
updateTableConfig(update,oldConfig){if(!update){return oldConfig;}
const saneConfig={...oldConfig,...update};if(update.numberOfHeaders===0){saneConfig.hasFilters=false;}
else if(update.hasFilters===true){saneConfig.numberOfHeaders||=1;}
return saneConfig;}
createFilterFromZone(id,sheetId,zone,config){const range=this.getters.getRangeFromZone(sheetId,zone);return createFilter(id,range,config,this.getters.getRangeFromZone);}
copyStaticTableForSheet(sheetId,table){const newRange=this.getters.getRangeFromZone(sheetId,table.range.zone);const newFilters=table.filters.map((filter)=>{const newFilterRange=this.getters.getRangeFromZone(sheetId,filter.rangeWithHeaders.zone);return createFilter(filter.id,newFilterRange,table.config,this.getters.getRangeFromZone);});return{id:table.id,range:newRange,filters:newFilters,config:deepCopy(table.config),type:table.type,};}
copyDynamicTableForSheet(sheetId,table){const newRange=this.getters.getRangeFromZone(sheetId,table.range.zone);return{id:table.id,range:newRange,config:deepCopy(table.config),type:"dynamic",};}
applyRangeChangeOnTable(sheetId,table,applyChange){const tableRangeChange=applyChange(table.range);let newTableRange;switch(tableRangeChange.changeType){case"REMOVE":this.history.update("tables",sheetId,table.id,undefined);return;case"NONE":return;default:newTableRange=tableRangeChange.range;}
if(table.type==="dynamic"){const newTable=this.updateDynamicTable(table,newTableRange);this.history.update("tables",sheetId,table.id,newTable);return;}
const filters=[];for(const filter of table.filters){const filterRangeChange=applyChange(filter.rangeWithHeaders);switch(filterRangeChange.changeType){case"REMOVE":continue;case"NONE":filters.push(filter);break;default:const newFilterRange=filterRangeChange.range;const newFilter=createFilter(filter.id,newFilterRange,table.config,this.getters.getRangeFromZone);filters.push(newFilter);}}
const tableZone=newTableRange.zone;if(filters.length<zoneToDimension(tableZone).numberOfCols){for(let col=tableZone.left;col<=tableZone.right;col++){if(!filters.find((filter)=>filter.col===col)){const uid=this.uuidGenerator.uuidv4();const filterZone={...tableZone,left:col,right:col};filters.push(this.createFilterFromZone(uid,sheetId,filterZone,table.config));}}
filters.sort((f1,f2)=>f1.col-f2.col);}
const newTable=this.createStaticTable(table.id,table.type,newTableRange,table.config,filters);this.history.update("tables",sheetId,table.id,newTable);}
import(data){for(const sheet of data.sheets){for(const tableData of sheet.tables||[]){const uuid=this.uuidGenerator.uuidv4();const tableConfig=tableData.config||DEFAULT_TABLE_CONFIG;const range=this.getters.getRangeFromSheetXC(sheet.id,tableData.range);const tableType=tableData.type||"static";const table=tableType==="dynamic"?this.createDynamicTable(uuid,range,tableConfig):this.createStaticTable(uuid,tableType,range,tableConfig);this.history.update("tables",sheet.id,table.id,table);}}}
export(data){for(const sheet of data.sheets){for(const table of this.getCoreTables(sheet.id)){const range=zoneToXc(table.range.zone);const tableData={range,type:table.type};if(!deepEquals(table.config,DEFAULT_TABLE_CONFIG)){tableData.config=table.config;}
sheet.tables.push(tableData);}}}
exportForExcel(data){for(const sheet of data.sheets){for(const table of this.getCoreTables(sheet.id)){const range=zoneToXc(table.range.zone);sheet.tables.push({range,filters:[],config:table.config});}}}}
class HeaderGroupingPlugin extends CorePlugin{static getters=["getHeaderGroups","getGroupsLayers","getVisibleGroupLayers","getHeaderGroup","getHeaderGroupsInZone","isGroupFolded","isRowFolded","isColFolded",];groups={};allowDispatch(cmd){switch(cmd.type){case"GROUP_HEADERS":{const{start,end}=cmd;if(!this.getters.doesHeadersExist(cmd.sheetId,cmd.dimension,[start,end])){return"InvalidHeaderGroupStartEnd";}
if(start>end){return"InvalidHeaderGroupStartEnd";}
if(this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,start,end)){return"HeaderGroupAlreadyExists";}
break;}
case"UNGROUP_HEADERS":{const{start,end}=cmd;if(!this.getters.doesHeadersExist(cmd.sheetId,cmd.dimension,[start,end])){return"InvalidHeaderGroupStartEnd";}
if(start>end){return"InvalidHeaderGroupStartEnd";}
break;}
case"UNFOLD_HEADER_GROUP":case"FOLD_HEADER_GROUP":const group=this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);if(!group){return"UnknownHeaderGroup";}
const numberOfHeaders=this.getters.getNumberHeaders(cmd.sheetId,cmd.dimension);const willHideAllHeaders=range(0,numberOfHeaders).every((i)=>(i>=group.start&&i<=group.end)||this.getters.isHeaderHiddenByUser(cmd.sheetId,cmd.dimension,i));if(willHideAllHeaders){return"NotEnoughElements";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("groups",cmd.sheetId,{ROW:[],COL:[]});break;case"GROUP_HEADERS":this.groupHeaders(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);break;case"UNGROUP_HEADERS":{this.unGroupHeaders(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);break;}
case"DUPLICATE_SHEET":{const groups=deepCopy(this.groups[cmd.sheetId]);this.history.update("groups",cmd.sheetIdTo,groups);break;}
case"DELETE_SHEET":{const groups={...this.groups};delete groups[cmd.sheetId];this.history.update("groups",groups);break;}
case"ADD_COLUMNS_ROWS":const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);this.moveGroupsOnHeaderInsertion(cmd.sheetId,cmd.dimension,addIndex,cmd.quantity);break;case"REMOVE_COLUMNS_ROWS":this.moveGroupsOnHeaderDeletion(cmd.sheetId,cmd.dimension,cmd.elements);break;case"UNFOLD_HEADER_GROUP":{const group=this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);if(group){this.unfoldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"FOLD_HEADER_GROUP":{const group=this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);if(group){this.foldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"UNFOLD_ALL_HEADER_GROUPS":{const groups=this.getters.getHeaderGroups(cmd.sheetId,cmd.dimension);for(const group of groups){this.unfoldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"FOLD_ALL_HEADER_GROUPS":{const groups=this.getters.getHeaderGroups(cmd.sheetId,cmd.dimension);for(const group of groups){this.foldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":{const action=cmd.type==="UNFOLD_HEADER_GROUPS_IN_ZONE"?"unfold":"fold";const layers=this.getGroupsLayers(cmd.sheetId,cmd.dimension);if(action==="fold"){layers.reverse();}
const groups=layers.flat();const start=cmd.dimension==="ROW"?cmd.zone.top:cmd.zone.left;const end=cmd.dimension==="ROW"?cmd.zone.bottom:cmd.zone.right;const groupsToToggle=new Set();for(let header=start;header<=end;header++){const matchedGroups=groups.filter((g)=>g.start-1<=header&&header<=g.end);for(const group of matchedGroups){if((action==="fold"&&group.isFolded)||(action==="unfold"&&!group.isFolded)){continue;}
groupsToToggle.add(group);break;}}
for(const group of groupsToToggle){if(action==="unfold"){this.unfoldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
else{this.foldHeaderGroup(cmd.sheetId,cmd.dimension,group);}}
break;}}}
getHeaderGroups(sheetId,dim){return this.groups[sheetId][dim];}
getHeaderGroup(sheetId,dim,start,end){return this.getHeaderGroups(sheetId,dim).find((group)=>group.start===start&&group.end===end);}
getHeaderGroupsInZone(sheetId,dim,zone){return this.getHeaderGroups(sheetId,dim).filter((group)=>{const start=dim==="ROW"?zone.top:zone.left;const end=dim==="ROW"?zone.bottom:zone.right;return this.doGroupOverlap(group,start,end);});}
getGroupsLayers(sheetId,dimension){const groups=this.getHeaderGroups(sheetId,dimension);return this.bricksFallingAlgorithm(groups,0,0);}
getVisibleGroupLayers(sheetId,dimension){const layers=this.getGroupsLayers(sheetId,dimension);for(const layer of layers){for(let k=layer.length-1;k>=0;k--){const group=layer[k];if(group.start===0){continue;}
const headersInGroup=range(group.start-1,group.end+1);if(headersInGroup.every((i)=>this.getters.isHeaderHiddenByUser(sheetId,dimension,i))){layer.splice(k,1);}}}
return layers.filter((layer)=>layer.length>0);}
isGroupFolded(sheetId,dimension,start,end){return this.getHeaderGroup(sheetId,dimension,start,end)?.isFolded||false;}
isRowFolded(sheetId,row){const groups=this.getters.getHeaderGroups(sheetId,"ROW");return groups.some((group)=>group.start<=row&&row<=group.end&&group.isFolded);}
isColFolded(sheetId,col){const groups=this.getters.getHeaderGroups(sheetId,"COL");return groups.some((group)=>group.start<=col&&col<=group.end&&group.isFolded);}
getGroupId(group){return`${group.start}-${group.end}}`;}
bricksFallingAlgorithm(groups,start,end,delta=0){const isGroupFolded={};for(const group of groups){isGroupFolded[this.getGroupId(group)]=group.isFolded;}
const brickPileSize={};for(const group of groups){for(let i=group.start;i<=group.end;i++){brickPileSize[i]=brickPileSize[i]?brickPileSize[i]+1:1;}}
for(let i=start;i<=end;i++){brickPileSize[i]=brickPileSize[i]?brickPileSize[i]+delta:delta;}
const numberOfLayers=Math.max(...Object.values(brickPileSize),0);const groupLayers=Array.from({length:numberOfLayers},()=>[]);const maxHeader=Math.max(end,...groups.map((group)=>group.end));const minHeader=Math.min(start,...groups.map((group)=>group.start));for(let header=minHeader;header<=maxHeader;header++){const pileSize=brickPileSize[header]||0;for(let layer=0;layer<pileSize;layer++){const currentGroup=groupLayers[layer].at(-1);if(currentGroup&&isConsecutive([currentGroup.end,header])){currentGroup.end++;}
else{const newGroup={start:header,end:header};groupLayers[layer].push(newGroup);}}}
for(const layer of groupLayers){for(const group of layer){group.isFolded=isGroupFolded[this.getGroupId(group)];}}
return groupLayers;}
groupHeaders(sheetId,dimension,start,end){const groups=this.getHeaderGroups(sheetId,dimension);const newGroups=this.bricksFallingAlgorithm(groups,start,end,+1).flat();this.history.update("groups",sheetId,dimension,this.removeDuplicateGroups(newGroups));}
unGroupHeaders(sheetId,dimension,start,end){const groups=this.getHeaderGroups(sheetId,dimension);const newGroups=this.bricksFallingAlgorithm(groups,start,end,-1).flat();this.history.update("groups",sheetId,dimension,this.removeDuplicateGroups(newGroups));}
moveGroupsOnHeaderInsertion(sheetId,dim,index,count){const groups=this.groups[sheetId][dim];for(let i=0;i<groups.length;i++){const group=groups[i];const[start,end]=moveHeaderIndexesOnHeaderAddition(index,count,[group.start,group.end,]);if(start!==group.start||end!==group.end){this.history.update("groups",sheetId,dim,i,{...group,start,end});}}}
moveGroupsOnHeaderDeletion(sheetId,dimension,deletedElements){const groups=this.getHeaderGroups(sheetId,dimension);const newGroups=[];for(const group of groups){const headersInGroup=range(group.start,group.end+1);const headersAfterDeletion=moveHeaderIndexesOnHeaderDeletion(deletedElements,headersInGroup);if(headersAfterDeletion.length===0){continue;}
newGroups.push({...group,start:Math.min(...headersAfterDeletion),end:Math.max(...headersAfterDeletion),});}
this.history.update("groups",sheetId,dimension,this.bricksFallingAlgorithm(newGroups,0,0).flat());}
doGroupOverlap(group,start,end){return group.start<=end&&group.end>=start;}
removeDuplicateGroups(groups){const newGroups={};for(const group of groups){newGroups[this.getGroupId(group)]=group;}
return Object.values(newGroups);}
findGroupWithStartEnd(sheetId,dimension,start,end){return this.getHeaderGroups(sheetId,dimension).find((group)=>group.start===start&&group.end===end);}
foldHeaderGroup(sheetId,dim,groupToFold){const index=this.getGroupIndex(sheetId,dim,groupToFold.start,groupToFold.end);if(index===undefined){return;}
this.history.update("groups",sheetId,dim,index,"isFolded",true);const groups=this.getters.getHeaderGroups(sheetId,dim);for(let i=0;i<groups.length;i++){const group=groups[i];if(group.start===groupToFold.start&&group.end<=groupToFold.end){this.history.update("groups",sheetId,dim,i,"isFolded",true);}}}
unfoldHeaderGroup(sheetId,dim,groupToUnfold){const index=this.getGroupIndex(sheetId,dim,groupToUnfold.start,groupToUnfold.end);if(index===undefined){return;}
this.history.update("groups",sheetId,dim,index,"isFolded",false);const groups=this.getters.getHeaderGroups(sheetId,dim);for(let i=0;i<groups.length;i++){const group=groups[i];if(group.start===groupToUnfold.start&&group.end>=groupToUnfold.end){this.history.update("groups",sheetId,dim,i,"isFolded",false);}}}
getGroupIndex(sheetId,dimension,start,end){const index=this.groups[sheetId][dimension].findIndex((group)=>group.start===start&&group.end===end);return index===-1?undefined:index;}
import(data){for(const sheet of data.sheets){this.groups[sheet.id]={ROW:[],COL:[]};if(!sheet.headerGroups){continue;}
for(const dim of["ROW","COL"]){for(const groupData of sheet.headerGroups[dim]||[]){this.groups[sheet.id][dim].push({...groupData});}}}}
export(data){for(const sheet of data.sheets){sheet.headerGroups=this.groups[sheet.id];}}
exportForExcel(data){for(const sheet of data.sheets){for(const dim of["ROW","COL"]){const layers=this.getGroupsLayers(sheet.id,dim);for(let layerIndex=0;layerIndex<layers.length;layerIndex++){const layer=layers[layerIndex];for(const group of layer){for(let headerIndex=group.start;headerIndex<=group.end;headerIndex++){const header=getSheetDataHeader(sheet,dim,headerIndex);header.outlineLevel=layerIndex+1;if(group.isFolded){header.isHidden=true;}}
if(group.isFolded){const header=getSheetDataHeader(sheet,dim,group.end+1);header.collapsed=true;}}}}}}}
class PivotCorePlugin extends CorePlugin{static getters=["getPivotCoreDefinition","getPivotDisplayName","getPivotId","getPivotFormulaId","getPivotIds","getMeasureCompiledFormula","getPivotName","isExistingPivot",];nextFormulaId=1;pivots={};formulaIds={};compiledMeasureFormulas={};allowDispatch(cmd){switch(cmd.type){case"ADD_PIVOT":{return this.checkDuplicatedMeasureIds(cmd.pivot);}
case"UPDATE_PIVOT":{if(deepEquals(cmd.pivot,this.pivots[cmd.pivotId]?.definition)){return"NoChanges";}
if(cmd.pivot.name===""){return"EmptyName";}
return this.checkDuplicatedMeasureIds(cmd.pivot);}
case"RENAME_PIVOT":if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}
if(cmd.name===""){return"EmptyName";}
break;case"INSERT_PIVOT":{if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}
break;}
case"DUPLICATE_PIVOT":if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}}
return"Success";}
handle(cmd){switch(cmd.type){case"ADD_PIVOT":{const{pivotId,pivot}=cmd;this.addPivot(pivotId,pivot);break;}
case"INSERT_PIVOT":{const{sheetId,col,row,pivotId,table}=cmd;const position={sheetId,col,row};const{cols,rows,measures,fieldsType}=table;const spTable=new SpreadsheetPivotTable(cols,rows,measures,fieldsType||{});const formulaId=this.getPivotFormulaId(pivotId);this.insertPivot(position,formulaId,spTable);break;}
case"RENAME_PIVOT":{this.history.update("pivots",cmd.pivotId,"definition","name",cmd.name);break;}
case"REMOVE_PIVOT":{const pivots={...this.pivots};delete pivots[cmd.pivotId];const formulaId=this.getPivotFormulaId(cmd.pivotId);this.history.update("formulaIds",formulaId,undefined);this.history.update("pivots",pivots);break;}
case"DUPLICATE_PIVOT":{const{pivotId,newPivotId}=cmd;const pivot=deepCopy(this.getPivotCore(pivotId).definition);pivot.name=_t("%s (copy)",pivot.name);this.addPivot(newPivotId,pivot);break;}
case"UPDATE_PIVOT":{this.history.update("pivots",cmd.pivotId,"definition",cmd.pivot);this.compileCalculatedMeasures(cmd.pivot.measures);break;}}}
adaptRanges(applyChange){for(const sheetId in this.compiledMeasureFormulas){for(const formulaString in this.compiledMeasureFormulas[sheetId]){const compiledFormula=this.compiledMeasureFormulas[sheetId][formulaString];const newDependencies=[];for(const range of compiledFormula.dependencies){const change=applyChange(range);if(change.changeType==="NONE"){newDependencies.push(range);}
else{newDependencies.push(change.range);}}
const newFormulaString=this.getters.getFormulaString(sheetId,compiledFormula.tokens,newDependencies);if(newFormulaString!==formulaString){this.replaceMeasureFormula(sheetId,formulaString,newFormulaString);}}}}
getPivotDisplayName(pivotId){const formulaId=this.getPivotFormulaId(pivotId);return`(#${formulaId}) ${this.getPivotName(pivotId)}`;}
getPivotName(pivotId){return _t(this.getPivotCore(pivotId).definition.name);}
getPivotCoreDefinition(pivotId){return this.getPivotCore(pivotId).definition;}
getPivotId(formulaId){return this.formulaIds[formulaId];}
getPivotFormulaId(pivotId){return this.getPivotCore(pivotId).formulaId;}
getPivotIds(){return Object.keys(this.pivots);}
isExistingPivot(pivotId){return pivotId in this.pivots;}
getMeasureCompiledFormula(measure){if(!measure.computedBy){throw new Error(`Measure ${measure.fieldName} is not computed by formula`);}
const sheetId=measure.computedBy.sheetId;return this.compiledMeasureFormulas[sheetId][measure.computedBy.formula];}
addPivot(pivotId,pivot,formulaId=this.nextFormulaId.toString()){this.history.update("pivots",pivotId,{definition:pivot,formulaId});this.compileCalculatedMeasures(pivot.measures);this.history.update("formulaIds",formulaId,pivotId);this.history.update("nextFormulaId",this.nextFormulaId+1);}
compileCalculatedMeasures(measures){for(const measure of measures){if(measure.computedBy){const sheetId=measure.computedBy.sheetId;const compiledFormula=this.compileMeasureFormula(measure.computedBy.sheetId,measure.computedBy.formula);this.history.update("compiledMeasureFormulas",sheetId,measure.computedBy.formula,compiledFormula);}}}
insertPivot(position,formulaId,table){this.resizeSheet(position.sheetId,position,table);const pivotCells=table.getPivotCells();for(let col=0;col<pivotCells.length;col++){for(let row=0;row<pivotCells[col].length;row++){const pivotCell=pivotCells[col][row];this.dispatch("UPDATE_CELL",{sheetId:position.sheetId,col:position.col+col,row:position.row+row,content:createPivotFormula(formulaId,pivotCell),});}}}
resizeSheet(sheetId,{col,row},table){const colLimit=table.getNumberOfDataColumns()+1;const numberCols=this.getters.getNumberCols(sheetId);const deltaCol=numberCols-col;if(deltaCol<colLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:numberCols-1,sheetId:sheetId,quantity:colLimit-deltaCol,position:"after",});}
const rowLimit=table.columns.length+table.rows.length;const numberRows=this.getters.getNumberRows(sheetId);const deltaRow=numberRows-row;if(deltaRow<rowLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:numberRows-1,sheetId:sheetId,quantity:rowLimit-deltaRow,position:"after",});}}
getPivotCore(pivotId){const pivot=this.pivots[pivotId];if(!pivot){throw new Error(`Pivot with id ${pivotId} not found`);}
return pivot;}
compileMeasureFormula(sheetId,formulaString){const compiledFormula=compile(formulaString);const rangeDependencies=compiledFormula.dependencies.map((xc)=>this.getters.getRangeFromSheetXC(sheetId,xc));return{...compiledFormula,dependencies:rangeDependencies,};}
replaceMeasureFormula(sheetId,formulaString,newFormulaString){this.history.update("compiledMeasureFormulas",sheetId,formulaString,undefined);this.history.update("compiledMeasureFormulas",sheetId,newFormulaString,this.compileMeasureFormula(sheetId,newFormulaString));for(const pivotId in this.pivots){const pivot=this.pivots[pivotId];if(!pivot){continue;}
for(const measure of pivot.definition.measures){if(measure.computedBy?.formula===formulaString){const measureIndex=pivot.definition.measures.indexOf(measure);this.history.update("pivots",pivotId,"definition","measures",measureIndex,"computedBy",{formula:newFormulaString,sheetId});}}}}
checkDuplicatedMeasureIds(definition){const uniqueIds=new Set(definition.measures.map((m)=>m.id));if(definition.measures.length!==uniqueIds.size){return"InvalidDefinition";}
return"Success";}
import(data){if(data.pivots){for(const[id,pivot]of Object.entries(data.pivots)){this.addPivot(id,pivot,pivot.formulaId);}}
this.history.update("nextFormulaId",data.pivotNextId||getMaxObjectId(this.pivots)+1);}
export(data){data.pivots={};for(const pivotId in this.pivots){data.pivots[pivotId]={...this.getPivotCoreDefinition(pivotId),formulaId:this.getPivotFormulaId(pivotId),};}
data.pivotNextId=this.nextFormulaId;}}
class SettingsPlugin extends CorePlugin{static getters=["getLocale"];locale=DEFAULT_LOCALE;allowDispatch(cmd){switch(cmd.type){case"UPDATE_LOCALE":return isValidLocale(cmd.locale)?"Success":"InvalidLocale";}
return"Success";}
handle(cmd){switch(cmd.type){case"UPDATE_LOCALE":const oldLocale=this.locale;const newLocale=cmd.locale;this.history.update("locale",newLocale);this.changeCellsDateFormatWithLocale(oldLocale,newLocale);break;}}
getLocale(){return this.locale;}
changeCellsDateFormatWithLocale(oldLocale,newLocale){for(const sheetId of this.getters.getSheetIds()){for(const[cellId,cell]of Object.entries(this.getters.getCells(sheetId))){let formatToApply;if(cell.format===oldLocale.dateFormat){formatToApply=newLocale.dateFormat;}
if(cell.format===oldLocale.timeFormat){formatToApply=newLocale.timeFormat;}
if(cell.format===getDateTimeFormat(oldLocale)){formatToApply=getDateTimeFormat(newLocale);}
if(formatToApply){const{col,row,sheetId}=this.getters.getCellPosition(cellId);this.dispatch("UPDATE_CELL",{col,row,sheetId,format:formatToApply,});}}}}
import(data){this.locale=data.settings?.locale??DEFAULT_LOCALE;}
export(data){data.settings={locale:this.locale,};}}
function adaptPivotRange(range,applyChange){if(!range){return undefined;}
const change=applyChange(range);switch(change.changeType){case"NONE":return range;case"REMOVE":return undefined;default:return change.range;}}
class SpreadsheetPivotCorePlugin extends CorePlugin{adaptRanges(applyChange){for(const pivotId of this.getters.getPivotIds()){const definition=this.getters.getPivotCoreDefinition(pivotId);if(definition.type!=="SPREADSHEET"){continue;}
if(definition.dataSet){const{sheetId,zone}=definition.dataSet;const range=this.getters.getRangeFromZone(sheetId,zone);const adaptedRange=adaptPivotRange(range,applyChange);const dataSet=adaptedRange&&{sheetId:adaptedRange.sheetId,zone:adaptedRange.zone,};this.dispatch("UPDATE_PIVOT",{pivotId,pivot:{...definition,dataSet}});}}}}
class TableStylePlugin extends CorePlugin{static getters=["getNewCustomTableStyleName","getTableStyle","getTableStyles","isTableStyleEditable",];styles={};allowDispatch(cmd){switch(cmd.type){case"CREATE_TABLE":case"UPDATE_TABLE":if(cmd.config?.styleId&&!this.styles[cmd.config.styleId]){return"InvalidTableConfig";}
break;case"CREATE_TABLE_STYLE":if(!TABLE_STYLES_TEMPLATES[cmd.templateName]){return"InvalidTableStyle";}
try{toHex(cmd.primaryColor);}
catch(e){return"InvalidTableStyle";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_TABLE_STYLE":const style=buildTableStyle(cmd.tableStyleName,cmd.templateName,cmd.primaryColor);this.history.update("styles",cmd.tableStyleId,style);break;case"REMOVE_TABLE_STYLE":const styles={...this.styles};delete styles[cmd.tableStyleId];this.history.update("styles",styles);for(const sheetId of this.getters.getSheetIds()){for(const table of this.getters.getCoreTables(sheetId)){if(table.config.styleId===cmd.tableStyleId){this.dispatch("UPDATE_TABLE",{sheetId,zone:table.range.zone,config:{styleId:DEFAULT_TABLE_CONFIG.styleId},});}}}
break;}}
getTableStyle(styleId){if(!this.styles[styleId]){throw new Error(`Table style ${styleId} does not exist`);}
return this.styles[styleId];}
getTableStyles(){return this.styles;}
getNewCustomTableStyleName(){let name=_t("Custom Table Style");const styleNames=new Set(Object.values(this.styles).map((style)=>style.displayName));if(!styleNames.has(name)){return name;}
let i=2;while(styleNames.has(`${name} ${i}`)){i++;}
return`${name} ${i}`;}
isTableStyleEditable(styleId){return!TABLE_PRESETS[styleId];}
import(data){for(const presetStyleId in TABLE_PRESETS){this.styles[presetStyleId]=TABLE_PRESETS[presetStyleId];}
for(const styleId in data.customTableStyles){const styleData=data.customTableStyles[styleId];this.styles[styleId]=buildTableStyle(styleData.displayName,styleData.templateName,styleData.primaryColor);}}
export(data){const exportedStyles={};for(const styleId in this.styles){if(!TABLE_PRESETS[styleId]){exportedStyles[styleId]={displayName:this.styles[styleId].displayName,templateName:this.styles[styleId].templateName,primaryColor:this.styles[styleId].primaryColor,};}}
data.customTableStyles=exportedStyles;}}
class UIPlugin extends BasePlugin{static layers=[];getters;ui;selection;constructor({getters,stateObserver,dispatch,canDispatch,uiActions,selection,}){super(stateObserver,dispatch,canDispatch);this.getters=getters;this.ui=uiActions;this.selection=selection;}
drawLayer(ctx,layer){}}
const onIterationEndEvaluationRegistry=new Registry();onIterationEndEvaluationRegistry.add("pivots",(getters)=>{for(const pivotId of getters.getPivotIds()){const pivot=getters.getPivot(pivotId);pivotRegistry.get(pivot.type).onIterationEndEvaluation(pivot);}});const functionMap=functionRegistry.mapping;function buildCompilationParameters(context,getters,computeCell){const builder=new CompilationParametersBuilder(context,getters,computeCell);return builder.getParameters();}
class CompilationParametersBuilder{getters;computeCell;evalContext;rangeCache={};constructor(context,getters,computeCell){this.getters=getters;this.computeCell=computeCell;this.evalContext=Object.assign(Object.create(functionMap),context,{getters:this.getters,locale:this.getters.getLocale(),});}
getParameters(){return{referenceDenormalizer:this.refFn.bind(this),ensureRange:this.range.bind(this),evalContext:this.evalContext,};}
refFn(range,isMeta){const rangeError=this.getRangeError(range);if(rangeError){return rangeError;}
if(isMeta){const sheetName=this.getters.getSheetName(range.sheetId);return{value:getFullReference(sheetName,zoneToXc(range.zone))};}
const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};return this.computeCell(position);}
range(range){const rangeError=this.getRangeError(range);if(rangeError){return[[rangeError]];}
const sheetId=range.sheetId;const zone=range.zone;const sheetZone=this.getters.getSheetZone(sheetId);const _zone=intersection(zone,sheetZone);if(!_zone){return[[]];}
const{top,left,bottom,right}=zone;const cacheKey=`${sheetId}-${top}-${left}-${bottom}-${right}`;if(cacheKey in this.rangeCache){return this.rangeCache[cacheKey];}
const height=_zone.bottom-_zone.top+1;const width=_zone.right-_zone.left+1;const matrix=new Array(width);for(let col=_zone.left;col<=_zone.right;col++){const colIndex=col-_zone.left;matrix[colIndex]=new Array(height);for(let row=_zone.top;row<=_zone.bottom;row++){const rowIndex=row-_zone.top;matrix[colIndex][rowIndex]=this.computeCell({sheetId,col,row});}}
this.rangeCache[cacheKey]=matrix;return matrix;}
getRangeError(range){if(!isZoneValid(range.zone)){return new InvalidReferenceError();}
if(range.invalidSheetName){return new EvaluationError(_t("Invalid sheet name: %s",range.invalidSheetName));}
return undefined;}}
function quickselect(arr,k,left,right,compare){quickselectStep(arr,k,left||0,right||(arr.length-1),compare||defaultCompare);}
function quickselectStep(arr,k,left,right,compare){while(right>left){if(right-left>600){var n=right-left+1;var m=k-left+1;var z=Math.log(n);var s=0.5*Math.exp(2*z/3);var sd=0.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1);var newLeft=Math.max(left,Math.floor(k-m*s/n+sd));var newRight=Math.min(right,Math.floor(k+(n-m)*s/n+sd));quickselectStep(arr,k,newLeft,newRight,compare);}
var t=arr[k];var i=left;var j=right;swap(arr,left,k);if(compare(arr[right],t)>0)swap(arr,left,right);while(i<j){swap(arr,i,j);i++;j--;while(compare(arr[i],t)<0)i++;while(compare(arr[j],t)>0)j--;}
if(compare(arr[left],t)===0)swap(arr,left,j);else{j++;swap(arr,j,right);}
if(j<=k)left=j+1;if(k<=j)right=j-1;}}
function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j];arr[j]=tmp;}
function defaultCompare(a,b){return a<b?-1:a>b?1:0;}
class RBush{constructor(maxEntries=9){this._maxEntries=Math.max(4,maxEntries);this._minEntries=Math.max(2,Math.ceil(this._maxEntries*0.4));this.clear();}
all(){return this._all(this.data,[]);}
search(bbox){let node=this.data;const result=[];if(!intersects(bbox,node))return result;const toBBox=this.toBBox;const nodesToSearch=[];while(node){for(let i=0;i<node.children.length;i++){const child=node.children[i];const childBBox=node.leaf?toBBox(child):child;if(intersects(bbox,childBBox)){if(node.leaf)result.push(child);else if(contains(bbox,childBBox))this._all(child,result);else nodesToSearch.push(child);}}
node=nodesToSearch.pop();}
return result;}
collides(bbox){let node=this.data;if(!intersects(bbox,node))return false;const nodesToSearch=[];while(node){for(let i=0;i<node.children.length;i++){const child=node.children[i];const childBBox=node.leaf?this.toBBox(child):child;if(intersects(bbox,childBBox)){if(node.leaf||contains(bbox,childBBox))return true;nodesToSearch.push(child);}}
node=nodesToSearch.pop();}
return false;}
load(data){if(!(data&&data.length))return this;if(data.length<this._minEntries){for(let i=0;i<data.length;i++){this.insert(data[i]);}
return this;}
let node=this._build(data.slice(),0,data.length-1,0);if(!this.data.children.length){this.data=node;}else if(this.data.height===node.height){this._splitRoot(this.data,node);}else{if(this.data.height<node.height){const tmpNode=this.data;this.data=node;node=tmpNode;}
this._insert(node,this.data.height-node.height-1,true);}
return this;}
insert(item){if(item)this._insert(item,this.data.height-1);return this;}
clear(){this.data=createNode([]);return this;}
remove(item,equalsFn){if(!item)return this;let node=this.data;const bbox=this.toBBox(item);const path=[];const indexes=[];let i,parent,goingUp;while(node||path.length){if(!node){node=path.pop();parent=path[path.length-1];i=indexes.pop();goingUp=true;}
if(node.leaf){const index=findItem(item,node.children,equalsFn);if(index!==-1){node.children.splice(index,1);path.push(node);this._condense(path);return this;}}
if(!goingUp&&!node.leaf&&contains(node,bbox)){path.push(node);indexes.push(i);i=0;parent=node;node=node.children[0];}else if(parent){i++;node=parent.children[i];goingUp=false;}else node=null;}
return this;}
toBBox(item){return item;}
compareMinX(a,b){return a.minX-b.minX;}
compareMinY(a,b){return a.minY-b.minY;}
toJSON(){return this.data;}
fromJSON(data){this.data=data;return this;}
_all(node,result){const nodesToSearch=[];while(node){if(node.leaf)result.push(...node.children);else nodesToSearch.push(...node.children);node=nodesToSearch.pop();}
return result;}
_build(items,left,right,height){const N=right-left+1;let M=this._maxEntries;let node;if(N<=M){node=createNode(items.slice(left,right+1));calcBBox(node,this.toBBox);return node;}
if(!height){height=Math.ceil(Math.log(N)/Math.log(M));M=Math.ceil(N/Math.pow(M,height-1));}
node=createNode([]);node.leaf=false;node.height=height;const N2=Math.ceil(N/M);const N1=N2*Math.ceil(Math.sqrt(M));multiSelect(items,left,right,N1,this.compareMinX);for(let i=left;i<=right;i+=N1){const right2=Math.min(i+N1-1,right);multiSelect(items,i,right2,N2,this.compareMinY);for(let j=i;j<=right2;j+=N2){const right3=Math.min(j+N2-1,right2);node.children.push(this._build(items,j,right3,height-1));}}
calcBBox(node,this.toBBox);return node;}
_chooseSubtree(bbox,node,level,path){while(true){path.push(node);if(node.leaf||path.length-1===level)break;let minArea=Infinity;let minEnlargement=Infinity;let targetNode;for(let i=0;i<node.children.length;i++){const child=node.children[i];const area=bboxArea(child);const enlargement=enlargedArea(bbox,child)-area;if(enlargement<minEnlargement){minEnlargement=enlargement;minArea=area<minArea?area:minArea;targetNode=child;}else if(enlargement===minEnlargement){if(area<minArea){minArea=area;targetNode=child;}}}
node=targetNode||node.children[0];}
return node;}
_insert(item,level,isNode){const bbox=isNode?item:this.toBBox(item);const insertPath=[];const node=this._chooseSubtree(bbox,this.data,level,insertPath);node.children.push(item);extend(node,bbox);while(level>=0){if(insertPath[level].children.length>this._maxEntries){this._split(insertPath,level);level--;}else break;}
this._adjustParentBBoxes(bbox,insertPath,level);}
_split(insertPath,level){const node=insertPath[level];const M=node.children.length;const m=this._minEntries;this._chooseSplitAxis(node,m,M);const splitIndex=this._chooseSplitIndex(node,m,M);const newNode=createNode(node.children.splice(splitIndex,node.children.length-splitIndex));newNode.height=node.height;newNode.leaf=node.leaf;calcBBox(node,this.toBBox);calcBBox(newNode,this.toBBox);if(level)insertPath[level-1].children.push(newNode);else this._splitRoot(node,newNode);}
_splitRoot(node,newNode){this.data=createNode([node,newNode]);this.data.height=node.height+1;this.data.leaf=false;calcBBox(this.data,this.toBBox);}
_chooseSplitIndex(node,m,M){let index;let minOverlap=Infinity;let minArea=Infinity;for(let i=m;i<=M-m;i++){const bbox1=distBBox(node,0,i,this.toBBox);const bbox2=distBBox(node,i,M,this.toBBox);const overlap=intersectionArea(bbox1,bbox2);const area=bboxArea(bbox1)+bboxArea(bbox2);if(overlap<minOverlap){minOverlap=overlap;index=i;minArea=area<minArea?area:minArea;}else if(overlap===minOverlap){if(area<minArea){minArea=area;index=i;}}}
return index||M-m;}
_chooseSplitAxis(node,m,M){const compareMinX=node.leaf?this.compareMinX:compareNodeMinX;const compareMinY=node.leaf?this.compareMinY:compareNodeMinY;const xMargin=this._allDistMargin(node,m,M,compareMinX);const yMargin=this._allDistMargin(node,m,M,compareMinY);if(xMargin<yMargin)node.children.sort(compareMinX);}
_allDistMargin(node,m,M,compare){node.children.sort(compare);const toBBox=this.toBBox;const leftBBox=distBBox(node,0,m,toBBox);const rightBBox=distBBox(node,M-m,M,toBBox);let margin=bboxMargin(leftBBox)+bboxMargin(rightBBox);for(let i=m;i<M-m;i++){const child=node.children[i];extend(leftBBox,node.leaf?toBBox(child):child);margin+=bboxMargin(leftBBox);}
for(let i=M-m-1;i>=m;i--){const child=node.children[i];extend(rightBBox,node.leaf?toBBox(child):child);margin+=bboxMargin(rightBBox);}
return margin;}
_adjustParentBBoxes(bbox,path,level){for(let i=level;i>=0;i--){extend(path[i],bbox);}}
_condense(path){for(let i=path.length-1,siblings;i>=0;i--){if(path[i].children.length===0){if(i>0){siblings=path[i-1].children;siblings.splice(siblings.indexOf(path[i]),1);}else this.clear();}else calcBBox(path[i],this.toBBox);}}}
function findItem(item,items,equalsFn){if(!equalsFn)return items.indexOf(item);for(let i=0;i<items.length;i++){if(equalsFn(item,items[i]))return i;}
return-1;}
function calcBBox(node,toBBox){distBBox(node,0,node.children.length,toBBox,node);}
function distBBox(node,k,p,toBBox,destNode){if(!destNode)destNode=createNode(null);destNode.minX=Infinity;destNode.minY=Infinity;destNode.maxX=-Infinity;destNode.maxY=-Infinity;for(let i=k;i<p;i++){const child=node.children[i];extend(destNode,node.leaf?toBBox(child):child);}
return destNode;}
function extend(a,b){a.minX=Math.min(a.minX,b.minX);a.minY=Math.min(a.minY,b.minY);a.maxX=Math.max(a.maxX,b.maxX);a.maxY=Math.max(a.maxY,b.maxY);return a;}
function compareNodeMinX(a,b){return a.minX-b.minX;}
function compareNodeMinY(a,b){return a.minY-b.minY;}
function bboxArea(a){return(a.maxX-a.minX)*(a.maxY-a.minY);}
function bboxMargin(a){return(a.maxX-a.minX)+(a.maxY-a.minY);}
function enlargedArea(a,b){return(Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY));}
function intersectionArea(a,b){const minX=Math.max(a.minX,b.minX);const minY=Math.max(a.minY,b.minY);const maxX=Math.min(a.maxX,b.maxX);const maxY=Math.min(a.maxY,b.maxY);return Math.max(0,maxX-minX)*Math.max(0,maxY-minY);}
function contains(a,b){return a.minX<=b.minX&&a.minY<=b.minY&&b.maxX<=a.maxX&&b.maxY<=a.maxY;}
function intersects(a,b){return b.minX<=a.maxX&&b.minY<=a.maxY&&b.maxX>=a.minX&&b.maxY>=a.minY;}
function createNode(children){return{children,height:1,leaf:true,minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity};}
function multiSelect(arr,left,right,n,compare){const stack=[left,right];while(stack.length){right=stack.pop();left=stack.pop();if(right-left<=n)continue;const mid=left+Math.ceil((right-left)/n/2)*n;quickselect(arr,mid,left,right,compare);stack.push(left,mid,mid,right);}}
class SpreadsheetRTree{rTrees={};constructor(items=[]){const rangesPerSheet={};for(const item of items){const sheetId=item.boundingBox.sheetId;if(!rangesPerSheet[sheetId]){rangesPerSheet[sheetId]=[];}
rangesPerSheet[sheetId].push(item);}
for(const sheetId in rangesPerSheet){this.rTrees[sheetId]=new ZoneRBush();this.rTrees[sheetId].load(rangesPerSheet[sheetId]);}}
insert(item){const sheetId=item.boundingBox.sheetId;if(!this.rTrees[sheetId]){this.rTrees[sheetId]=new ZoneRBush();}
this.rTrees[sheetId].insert(item);}
search({zone,sheetId}){if(!this.rTrees[sheetId]){return[];}
return this.rTrees[sheetId].search({minX:zone.left,minY:zone.top,maxX:zone.right,maxY:zone.bottom,});}
remove(item){const sheetId=item.boundingBox.sheetId;if(!this.rTrees[sheetId]){return;}
this.rTrees[sheetId].remove(item,this.rtreeItemComparer);}
rtreeItemComparer(left,right){return(left.data==right.data&&left.boundingBox.sheetId===right.boundingBox.sheetId&&left.boundingBox?.zone.left===right.boundingBox.zone.left&&left.boundingBox?.zone.top===right.boundingBox.zone.top&&left.boundingBox?.zone.right===right.boundingBox.zone.right&&left.boundingBox?.zone.bottom===right.boundingBox.zone.bottom);}}
class ZoneRBush extends RBush{toBBox({boundingBox}){const zone=boundingBox.zone;return{minX:zone.left,minY:zone.top,maxX:zone.right,maxY:zone.bottom,};}
compareMinX(a,b){return a.boundingBox.zone.left-b.boundingBox.zone.left;}
compareMinY(a,b){return a.boundingBox.zone.top-b.boundingBox.zone.top;}}
class FormulaDependencyGraph{createEmptyPositionSet;dependencies=new PositionMap();rTree;constructor(createEmptyPositionSet,data=[]){this.createEmptyPositionSet=createEmptyPositionSet;this.rTree=new SpreadsheetRTree(data);}
removeAllDependencies(formulaPosition){const ranges=this.dependencies.get(formulaPosition);if(!ranges){return;}
for(const range of ranges){this.rTree.remove(range);}
this.dependencies.delete(formulaPosition);}
addDependencies(formulaPosition,dependencies){const rTreeItems=dependencies.map(({sheetId,zone})=>({data:formulaPosition,boundingBox:{zone,sheetId,},}));for(const item of rTreeItems){this.rTree.insert(item);}
const existingDependencies=this.dependencies.get(formulaPosition);if(existingDependencies){existingDependencies.push(...rTreeItems);}
else{this.dependencies.set(formulaPosition,rTreeItems);}}
getCellsDependingOn(ranges){const visited=this.createEmptyPositionSet();const queue=Array.from(ranges).reverse();while(queue.length>0){const range=queue.pop();const zone=range.zone;const sheetId=range.sheetId;for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){visited.add({sheetId,col,row});}}
const impactedPositions=this.rTree.search(range).map((dep)=>dep.data);const nextInQueue={};for(const position of impactedPositions){if(!visited.has(position)){if(!nextInQueue[position.sheetId]){nextInQueue[position.sheetId]=[];}
nextInQueue[position.sheetId].push(positionToZone(position));}}
for(const sheetId in nextInQueue){const zones=recomputeZones(nextInQueue[sheetId],[]);queue.push(...zones.map((zone)=>({sheetId,zone})));}}
for(const range of ranges){const zone=range.zone;const sheetId=range.sheetId;for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){visited.delete({sheetId,col,row});}}}
return visited;}}
class BinaryGrid extends Uint32Array{columnOffset=0;cols=0;rows=0;static create(rows,columns){const columnOffset=log2Ceil(columns);const length=(rows<<columnOffset)>>5;const grid=new this(length+1);grid.columnOffset=columnOffset;grid.cols=columns;grid.rows=rows;return grid;}
getValue(position){const[bucket,bitPosition]=this.getCoordinates(position);return((this[bucket]>>bitPosition)&1);}
setValue(position,value){const[bucket,bitPosition]=this.getCoordinates(position);const currentValue=(this[bucket]>>bitPosition)&1;const hasBeenInserted=currentValue===0&&value===1;this[bucket]=(this[bucket]&~(1<<bitPosition))|(value<<bitPosition);return hasBeenInserted;}
isEmpty(){return!this.some((bucket)=>bucket!==0);}
fillAllPositions(){const thirtyTwoOnes=-1>>>0;this.fill(thirtyTwoOnes);}
clear(){this.fill(0);}
getCoordinates(position){const{row,col}=position;const index=(row<<this.columnOffset)+col;const bucket=index>>5;return[bucket,index-(bucket<<5)];}}
function log2Ceil(value){if(value===0){return-Infinity;}
else if(value<0){return NaN;}
return 32-Math.clz32(--value);}
class PositionSet{sheets={};insertions=[];maxSize=0;constructor(sheetSizes){for(const sheetId in sheetSizes){const cols=sheetSizes[sheetId].cols;const rows=sheetSizes[sheetId].rows;this.maxSize+=cols*rows;this.sheets[sheetId]=BinaryGrid.create(rows,cols);}}
add(position){const hasBeenInserted=this.sheets[position.sheetId].setValue(position,1);if(hasBeenInserted){this.insertions.push(position);}}
addMany(positions){for(const position of positions){this.add(position);}}
delete(position){this.sheets[position.sheetId].setValue(position,0);}
deleteMany(positions){for(const position of positions){this.delete(position);}}
has(position){return this.sheets[position.sheetId].getValue(position)===1;}
clear(){const insertions=[...this];this.insertions=[];for(const sheetId in this.sheets){this.sheets[sheetId].clear();}
return insertions;}
isEmpty(){if(this.insertions.length===0){return true;}
for(const sheetId in this.sheets){if(!this.sheets[sheetId].isEmpty()){return false;}}
return true;}
fillAllPositions(){this.insertions=new Array(this.maxSize);let index=0;for(const sheetId in this.sheets){const grid=this.sheets[sheetId];grid.fillAllPositions();for(let i=0;i<grid.rows;i++){for(let j=0;j<grid.cols;j++){this.insertions[index++]={sheetId,row:i,col:j};}}}}*[Symbol.iterator](){for(const position of this.insertions){if(this.sheets[position.sheetId].getValue(position)===1){yield position;}}}}
class SpreadingRelation{resultsToArrayFormulas=new SpreadsheetRTree();arrayFormulasToResults=new PositionMap();searchFormulaPositionsSpreadingOn(sheetId,zone){return(this.resultsToArrayFormulas.search({sheetId,zone}).map((node)=>node.data)||EMPTY_ARRAY);}
getArrayResultZone(formulasPosition){return this.arrayFormulasToResults.get(formulasPosition);}
removeNode(position){this.resultsToArrayFormulas.remove({boundingBox:{sheetId:position.sheetId,zone:positionToZone(position)},data:position,});this.arrayFormulasToResults.delete(position);}
addRelation({arrayFormulaPosition,resultZone:resultPosition,}){this.resultsToArrayFormulas.insert({boundingBox:{sheetId:arrayFormulaPosition.sheetId,zone:resultPosition},data:arrayFormulaPosition,});this.arrayFormulasToResults.set(arrayFormulaPosition,resultPosition);}
isArrayFormula(position){return this.arrayFormulasToResults.has(position);}}
const EMPTY_ARRAY=[];const MAX_ITERATION=30;const ERROR_CYCLE_CELL=createEvaluatedCell(new CircularDependencyError());const EMPTY_CELL=createEvaluatedCell({value:null});class Evaluator{context;getters;compilationParams;evaluatedCells=new PositionMap();formulaDependencies=lazy(new FormulaDependencyGraph(this.createEmptyPositionSet.bind(this)));blockedArrayFormulas=new PositionSet({});spreadingRelations=new SpreadingRelation();constructor(context,getters){this.context=context;this.getters=getters;this.compilationParams=buildCompilationParameters(this.context,this.getters,this.computeAndSave.bind(this));}
getEvaluatedCell(position){return this.evaluatedCells.get(position)||EMPTY_CELL;}
getSpreadZone(position,options={ignoreSpillError:false}){const spreadZone=this.spreadingRelations.getArrayResultZone(position);if(!spreadZone){return undefined;}
const evaluatedCell=this.evaluatedCells.get(position);if(evaluatedCell?.type===CellValueType.error&&!(options.ignoreSpillError&&evaluatedCell?.value===CellErrorType.SpilledBlocked)){return positionToZone(position);}
return union(positionToZone(position),spreadZone);}
getEvaluatedPositions(){return this.evaluatedCells.keys();}
getEvaluatedPositionsInSheet(sheetId){return this.evaluatedCells.keysForSheet(sheetId);}
getArrayFormulaSpreadingOn(position){const hasArrayFormulaResult=this.getEvaluatedCell(position).type!==CellValueType.empty&&!this.getters.getCell(position)?.isFormula;if(!hasArrayFormulaResult){return this.spreadingRelations.isArrayFormula(position)?position:undefined;}
const arrayFormulas=this.spreadingRelations.searchFormulaPositionsSpreadingOn(position.sheetId,positionToZone(position));return Array.from(arrayFormulas).find((position)=>!this.blockedArrayFormulas.has(position));}
updateDependencies(position){this.formulaDependencies().removeAllDependencies(position);const dependencies=this.getDirectDependencies(position);this.formulaDependencies().addDependencies(position,dependencies);}
addDependencies(position,dependencies){this.formulaDependencies().addDependencies(position,dependencies);for(const range of dependencies){const sheetId=range.sheetId;const{left,bottom,right,top}=range.zone;for(let col=left;col<=right;col++){for(let row=top;row<=bottom;row++){this.computeAndSave({sheetId,col,row});}}}}
updateCompilationParameters(){this.compilationParams=buildCompilationParameters(this.context,this.getters,this.computeAndSave.bind(this));this.compilationParams.evalContext.updateDependencies=this.updateDependencies.bind(this);this.compilationParams.evalContext.addDependencies=this.addDependencies.bind(this);}
createEmptyPositionSet(){const sheetSizes={};for(const sheetId of this.getters.getSheetIds()){sheetSizes[sheetId]={rows:this.getters.getNumberRows(sheetId),cols:this.getters.getNumberCols(sheetId),};}
return new PositionSet(sheetSizes);}
evaluateCells(positions){const start=performance.now();const cellsToCompute=this.createEmptyPositionSet();cellsToCompute.addMany(positions);const arrayFormulasPositions=this.getArrayFormulasImpactedByChangesOf(positions);cellsToCompute.addMany(this.getCellsDependingOn(positions));cellsToCompute.addMany(arrayFormulasPositions);cellsToCompute.addMany(this.getCellsDependingOn(arrayFormulasPositions));this.evaluate(cellsToCompute);console.info("evaluate Cells",performance.now()-start,"ms");}
getArrayFormulasImpactedByChangesOf(positions){const impactedPositions=this.createEmptyPositionSet();for(const position of positions){const content=this.getters.getCell(position)?.content;const arrayFormulaPosition=this.getArrayFormulaSpreadingOn(position);if(arrayFormulaPosition!==undefined){impactedPositions.add(arrayFormulaPosition);}
if(!content){impactedPositions.add(position);}}
const zonesBySheetIds=aggregatePositionsToZones(impactedPositions);for(const sheetId in zonesBySheetIds){for(const zone of zonesBySheetIds[sheetId]){impactedPositions.addMany(this.getArrayFormulasBlockedBy(sheetId,zone));}}
return impactedPositions;}
buildDependencyGraph(){this.blockedArrayFormulas=this.createEmptyPositionSet();this.spreadingRelations=new SpreadingRelation();this.formulaDependencies=lazy(()=>{const dependencies=[...this.getAllCells()].flatMap((position)=>this.getDirectDependencies(position).filter((range)=>!range.invalidSheetName&&!range.invalidXc).map((range)=>({data:position,boundingBox:{zone:range.zone,sheetId:range.sheetId,},})));return new FormulaDependencyGraph(this.createEmptyPositionSet.bind(this),dependencies);});}
evaluateAllCells(){const start=performance.now();this.evaluatedCells=new PositionMap();this.evaluate(this.getAllCells());console.info("evaluate all cells",performance.now()-start,"ms");}
evaluateFormulaResult(sheetId,formulaString){const compiledFormula=compile(formulaString);const ranges=compiledFormula.dependencies.map((xc)=>this.getters.getRangeFromSheetXC(sheetId,xc));this.updateCompilationParameters();return this.evaluateCompiledFormula(sheetId,{...compiledFormula,dependencies:ranges,});}
evaluateCompiledFormula(sheetId,compiledFormula,getContextualSymbolValue){try{const result=updateEvalContextAndExecute(compiledFormula,this.compilationParams,sheetId,this.buildSafeGetSymbolValue(getContextualSymbolValue),this.compilationParams.evalContext.__originCellPosition);if(isMatrix(result)){return matrixMap(result,nullValueToZeroValue);}
return nullValueToZeroValue(result);}
catch(error){return handleError(error,"");}}
getAllCells(){const positions=this.createEmptyPositionSet();positions.fillAllPositions();return positions;}
getArrayFormulasBlockedBy(sheetId,zone){const arrayFormulaPositions=this.createEmptyPositionSet();const arrayFormulas=this.spreadingRelations.searchFormulaPositionsSpreadingOn(sheetId,zone);arrayFormulaPositions.addMany(arrayFormulas);const spilledPositions=[...arrayFormulas].filter((position)=>!this.blockedArrayFormulas.has(position));if(spilledPositions.length){arrayFormulaPositions.deleteMany(spilledPositions);}
arrayFormulaPositions.addMany(this.getCellsDependingOn(arrayFormulaPositions));return arrayFormulaPositions;}
nextPositionsToUpdate=new PositionSet({});cellsBeingComputed=new Set();symbolsBeingComputed=new Set();evaluate(positions){this.cellsBeingComputed=new Set();this.nextPositionsToUpdate=positions;let currentIteration=0;while(!this.nextPositionsToUpdate.isEmpty()&&currentIteration++<MAX_ITERATION){this.updateCompilationParameters();const positions=this.nextPositionsToUpdate.clear();for(let i=0;i<positions.length;++i){this.evaluatedCells.delete(positions[i]);}
for(let i=0;i<positions.length;++i){const position=positions[i];const evaluatedCell=this.computeCell(position);if(evaluatedCell!==EMPTY_CELL){this.evaluatedCells.set(position,evaluatedCell);}}
onIterationEndEvaluationRegistry.getAll().forEach((callback)=>callback(this.getters));}}
computeCell(position){const evaluation=this.evaluatedCells.get(position);if(evaluation){return evaluation;}
if(!this.blockedArrayFormulas.has(position)){this.invalidateSpreading(position);}
if(this.spreadingRelations.isArrayFormula(position)){this.spreadingRelations.removeNode(position);}
const cell=this.getters.getCell(position);if(cell===undefined){return EMPTY_CELL;}
const cellId=cell.id;const localeFormat={format:cell.format,locale:this.getters.getLocale()};try{if(this.cellsBeingComputed.has(cellId)){return ERROR_CYCLE_CELL;}
this.cellsBeingComputed.add(cellId);return cell.isFormula?this.computeFormulaCell(position,cell):evaluateLiteral(cell,localeFormat);}
catch(e){e.value=e?.value||CellErrorType.GenericError;e.message=e?.message||implementationErrorMessage;return createEvaluatedCell(e);}
finally{this.cellsBeingComputed.delete(cellId);this.nextPositionsToUpdate.delete(position);}}
computeAndSave(position){const evaluatedCell=this.computeCell(position);if(!this.evaluatedCells.has(position)){this.evaluatedCells.set(position,evaluatedCell);}
return evaluatedCell;}
computeFormulaCell(formulaPosition,cellData){const formulaReturn=updateEvalContextAndExecute(cellData.compiledFormula,this.compilationParams,formulaPosition.sheetId,this.buildSafeGetSymbolValue(),formulaPosition);if(!isMatrix(formulaReturn)){return createEvaluatedCell(nullValueToZeroValue(formulaReturn),this.getters.getLocale(),cellData);}
this.assertSheetHasEnoughSpaceToSpreadFormulaResult(formulaPosition,formulaReturn);const nbColumns=formulaReturn.length;const nbRows=formulaReturn[0].length;const resultZone={top:formulaPosition.row,bottom:formulaPosition.row+nbRows-1,left:formulaPosition.col,right:formulaPosition.col+nbColumns-1,};this.spreadingRelations.addRelation({resultZone,arrayFormulaPosition:formulaPosition});this.assertNoMergedCellsInSpreadZone(formulaPosition,formulaReturn);forEachSpreadPositionInMatrix(nbColumns,nbRows,this.checkCollision(formulaPosition));forEachSpreadPositionInMatrix(nbColumns,nbRows,this.spreadValues(formulaPosition,formulaReturn));this.invalidatePositionsDependingOnSpread(formulaPosition.sheetId,resultZone);return createEvaluatedCell(nullValueToZeroValue(formulaReturn[0][0]),this.getters.getLocale(),cellData);}
invalidatePositionsDependingOnSpread(sheetId,resultZone){const invalidatedPositions=this.formulaDependencies().getCellsDependingOn(excludeTopLeft(resultZone).map((zone)=>({sheetId,zone})));this.nextPositionsToUpdate.addMany(invalidatedPositions);}
assertSheetHasEnoughSpaceToSpreadFormulaResult({sheetId,col,row},matrixResult){const numberOfCols=this.getters.getNumberCols(sheetId);const numberOfRows=this.getters.getNumberRows(sheetId);const enoughCols=col+matrixResult.length<=numberOfCols;const enoughRows=row+matrixResult[0].length<=numberOfRows;if(enoughCols&&enoughRows){return;}
if(enoughCols){throw new SplillBlockedError(_t("Result couldn't be automatically expanded. Please insert more rows."));}
if(enoughRows){throw new SplillBlockedError(_t("Result couldn't be automatically expanded. Please insert more columns."));}
throw new SplillBlockedError(_t("Result couldn't be automatically expanded. Please insert more columns and rows."));}
assertNoMergedCellsInSpreadZone({sheetId,col,row},matrixResult){const mergedCells=this.getters.getMergesInZone(sheetId,{top:row,bottom:row+matrixResult[0].length-1,left:col,right:col+matrixResult.length-1,});if(mergedCells.length===0){return;}
throw new SplillBlockedError(_t("Merged cells found in the spill zone. Please unmerge cells before using array formulas."));}
checkCollision(formulaPosition){const{sheetId,col,row}=formulaPosition;const checkCollision=(i,j)=>{const position={sheetId:sheetId,col:i+col,row:j+row};const rawCell=this.getters.getCell(position);if(rawCell?.content||this.getters.getEvaluatedCell(position).type!==CellValueType.empty){this.blockedArrayFormulas.add(formulaPosition);throw new SplillBlockedError(_t("Array result was not expanded because it would overwrite data in %s.",toXC(position.col,position.row)));}
this.blockedArrayFormulas.delete(formulaPosition);};return checkCollision;}
spreadValues({sheetId,col,row},matrixResult){const spreadValues=(i,j)=>{const position={sheetId,col:i+col,row:j+row};const cell=this.getters.getCell(position);const evaluatedCell=createEvaluatedCell(nullValueToZeroValue(matrixResult[i][j]),this.getters.getLocale(),cell);this.evaluatedCells.set(position,evaluatedCell);};return spreadValues;}
invalidateSpreading(position){const zone=this.spreadingRelations.getArrayResultZone(position);if(!zone){return;}
for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const resultPosition={sheetId:position.sheetId,col,row};const content=this.getters.getCell(resultPosition)?.content;if(content){continue;}
this.evaluatedCells.delete(resultPosition);}}
const sheetId=position.sheetId;this.invalidatePositionsDependingOnSpread(sheetId,zone);this.nextPositionsToUpdate.addMany(this.getArrayFormulasBlockedBy(sheetId,zone));}
buildSafeGetSymbolValue(getContextualSymbolValue){const getSymbolValue=(symbolName)=>{if(this.symbolsBeingComputed.has(symbolName)){return ERROR_CYCLE_CELL;}
this.symbolsBeingComputed.add(symbolName);try{const symbolValue=getContextualSymbolValue?.(symbolName);if(symbolValue){return symbolValue;}
return new BadExpressionError(_t("Invalid formula"));}
finally{this.symbolsBeingComputed.delete(symbolName);}};return getSymbolValue;}
getDirectDependencies(position){const cell=this.getters.getCell(position);if(!cell?.isFormula){return[];}
return cell.compiledFormula.dependencies;}
getCellsDependingOn(positions){const ranges=[];const zonesBySheetIds=aggregatePositionsToZones(positions);for(const sheetId in zonesBySheetIds){ranges.push(...zonesBySheetIds[sheetId].map((zone)=>({sheetId,zone})));}
return this.formulaDependencies().getCellsDependingOn(ranges);}}
function forEachSpreadPositionInMatrix(nbColumns,nbRows,callback){for(let i=0;i<nbColumns;++i){for(let j=0;j<nbRows;++j){if(i===0&&j===0){continue;}
callback(i,j);}}}
function nullValueToZeroValue(functionResult){if(functionResult.value===null||functionResult.value===undefined){return{...functionResult,value:0};}
return functionResult;}
function updateEvalContextAndExecute(compiledFormula,compilationParams,sheetId,getSymbolValue,originCellPosition){compilationParams.evalContext.__originCellPosition=originCellPosition;compilationParams.evalContext.__originSheetId=sheetId;return compiledFormula.execute(compiledFormula.dependencies,compilationParams.referenceDenormalizer,compilationParams.ensureRange,getSymbolValue,compilationParams.evalContext);}
class EvaluationPlugin extends UIPlugin{static getters=["evaluateFormula","evaluateFormulaResult","evaluateCompiledFormula","getCorrespondingFormulaCell","getRangeFormattedValues","getRangeValues","getRangeFormats","getEvaluatedCell","getEvaluatedCells","getEvaluatedCellsInZone","getEvaluatedCellsPositions","getSpreadZone","getArrayFormulaSpreadingOn","isEmpty",];shouldRebuildDependenciesGraph=true;evaluator;positionsToUpdate=[];constructor(config){super(config);this.evaluator=new Evaluator(config.custom,this.getters);}
beforeHandle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||invalidateDependenciesCommands.has(cmd.type)){this.shouldRebuildDependenciesGraph=true;}}
handle(cmd){switch(cmd.type){case"UPDATE_CELL":if(!("content"in cmd||"format"in cmd)||this.shouldRebuildDependenciesGraph){return;}
const position={sheetId:cmd.sheetId,row:cmd.row,col:cmd.col};this.positionsToUpdate.push(position);if("content"in cmd){this.evaluator.updateDependencies(position);}
break;case"EVALUATE_CELLS":this.evaluator.evaluateAllCells();break;}}
finalize(){if(this.shouldRebuildDependenciesGraph){this.evaluator.buildDependencyGraph();this.evaluator.evaluateAllCells();this.shouldRebuildDependenciesGraph=false;}
else if(this.positionsToUpdate.length){this.evaluator.evaluateCells(this.positionsToUpdate);}
this.positionsToUpdate=[];}
evaluateFormula(sheetId,formulaString){const result=this.evaluateFormulaResult(sheetId,formulaString);if(isMatrix(result)){return matrixMap(result,(cell)=>cell.value);}
return result.value;}
evaluateFormulaResult(sheetId,formulaString){return this.evaluator.evaluateFormulaResult(sheetId,formulaString);}
evaluateCompiledFormula(sheetId,compiledFormula,getSymbolValue){return this.evaluator.evaluateCompiledFormula(sheetId,compiledFormula,getSymbolValue);}
getRangeFormattedValues(range){const sheet=this.getters.tryGetSheet(range.sheetId);if(sheet===undefined)
return[];return this.mapVisiblePositions(range,(p)=>this.getters.getEvaluatedCell(p).formattedValue);}
getRangeValues(range){const sheet=this.getters.tryGetSheet(range.sheetId);if(sheet===undefined)
return[];return this.mapVisiblePositions(range,(p)=>this.getters.getEvaluatedCell(p).value);}
getRangeFormats(range){const sheet=this.getters.tryGetSheet(range.sheetId);if(sheet===undefined)
return[];return this.getters.getEvaluatedCellsInZone(sheet.id,range.zone).map((cell)=>cell.format);}
getEvaluatedCell(position){return this.evaluator.getEvaluatedCell(position);}
getEvaluatedCells(sheetId){return this.evaluator.getEvaluatedPositionsInSheet(sheetId).map((position)=>this.getEvaluatedCell(position));}
getEvaluatedCellsPositions(sheetId){return this.evaluator.getEvaluatedPositionsInSheet(sheetId);}
getEvaluatedCellsInZone(sheetId,zone){return positions(zone).map(({col,row})=>this.getters.getEvaluatedCell({sheetId,col,row}));}
getSpreadZone(position,options={ignoreSpillError:false}){return this.evaluator.getSpreadZone(position,options);}
getArrayFormulaSpreadingOn(position){return this.evaluator.getArrayFormulaSpreadingOn(position);}
isEmpty(sheetId,zone){return positions(zone).map(({col,row})=>this.getEvaluatedCell({sheetId,col,row})).every((cell)=>cell.type===CellValueType.empty);}
mapVisiblePositions(range,evaluationCallback){const{sheetId,zone}=range;const xcPositions=positions(zone);return xcPositions.reduce((acc,position)=>{const{col,row}=position;if(!this.getters.isColHidden(sheetId,col)&&!this.getters.isRowHidden(sheetId,row)){acc.push(evaluationCallback({sheetId,...position}));}
return acc;},[]);}
exportForExcel(data){for(const position of this.evaluator.getEvaluatedPositions()){const evaluatedCell=this.evaluator.getEvaluatedCell(position);const xc=toXC(position.col,position.row);const value=evaluatedCell.value;let isFormula=false;let newContent=undefined;let newFormat=undefined;let isExported=true;const exportedSheetData=data.sheets.find((sheet)=>sheet.id===position.sheetId);const formulaCell=this.getCorrespondingFormulaCell(position);if(formulaCell){isExported=isExportableToExcel(formulaCell.compiledFormula.tokens);isFormula=isExported;if(!isExported){if(value!==""){newContent=(value??"").toString();newFormat=evaluatedCell.format;}}}
const exportedCellData=exportedSheetData.cells[xc]||{};const format=newFormat?getItemId(newFormat,data.formats):exportedCellData.format;let content;if(isExported&&isFormula&&formulaCell instanceof FormulaCellWithDependencies){content=formulaCell.contentWithFixedReferences;}
else{content=!isExported?newContent:exportedCellData.content;}
exportedSheetData.cells[xc]={...exportedCellData,value,isFormula,content,format};}}
getCorrespondingFormulaCell(position){const cell=this.getters.getCell(position);if(cell&&cell.isFormula){return cell.compiledFormula.isBadExpression?undefined:cell;}
else if(cell&&cell.content){return undefined;}
const spreadingFormulaPosition=this.getArrayFormulaSpreadingOn(position);if(spreadingFormulaPosition===undefined){return undefined;}
const spreadingFormulaCell=this.getters.getCell(spreadingFormulaPosition);if(spreadingFormulaCell?.isFormula){return spreadingFormulaCell;}
return undefined;}}
const chartColorRegex=/"(#[0-9a-fA-F]{6})"/g;function sortWithClusters(colorsToSort){const clusters=[{leadColor:rgba(255,0,0),colors:[]},{leadColor:rgba(255,128,0),colors:[]},{leadColor:rgba(128,128,0),colors:[]},{leadColor:rgba(128,255,0),colors:[]},{leadColor:rgba(0,255,0),colors:[]},{leadColor:rgba(0,255,128),colors:[]},{leadColor:rgba(0,255,255),colors:[]},{leadColor:rgba(0,127,255),colors:[]},{leadColor:rgba(0,0,255),colors:[]},{leadColor:rgba(127,0,255),colors:[]},{leadColor:rgba(128,0,128),colors:[]},{leadColor:rgba(255,0,128),colors:[]},];for(const color of colorsToSort.map(colorToRGBA)){let currentDistance=500;let currentIndex=0;clusters.forEach((cluster,clusterIndex)=>{const distance=colorDistance(color,cluster.leadColor);if(currentDistance>distance){currentDistance=distance;currentIndex=clusterIndex;}});clusters[currentIndex].colors.push(color);}
return clusters.map((cluster)=>cluster.colors.sort((a,b)=>rgbaToHSLA(a).s-rgbaToHSLA(b).s)).flat().map(rgbaToHex);}
function colorDistance(color1,color2){return Math.sqrt(Math.pow(color1.r-color2.r,2)+
Math.pow(color1.g-color2.g,2)+
Math.pow(color1.b-color2.b,2));}
class CustomColorsPlugin extends UIPlugin{customColors={};shouldUpdateColors=true;static getters=["getCustomColors"];constructor(config){super(config);this.tryToAddColors(config.customColors??[]);}
handle(cmd){switch(cmd.type){case"START":for(const sheetId of this.getters.getSheetIds()){for(const chartId of this.getters.getChartIds(sheetId)){this.tryToAddColors(this.getChartColors(chartId));}}
break;case"UPDATE_CHART":case"CREATE_CHART":this.tryToAddColors(this.getChartColors(cmd.id));break;case"UPDATE_CELL":case"ADD_CONDITIONAL_FORMAT":case"SET_BORDER":case"SET_ZONE_BORDERS":case"SET_FORMATTING":case"CREATE_TABLE":case"UPDATE_TABLE":this.history.update("shouldUpdateColors",true);break;}}
finalize(){if(this.shouldUpdateColors){this.history.update("shouldUpdateColors",false);this.tryToAddColors(this.computeCustomColors());}}
getCustomColors(){return sortWithClusters(Object.keys(this.customColors));}
computeCustomColors(){let usedColors=[];for(const sheetId of this.getters.getSheetIds()){usedColors=usedColors.concat(this.getColorsFromCells(sheetId),this.getFormattingColors(sheetId),this.getTableColors(sheetId));}
return[...new Set([...usedColors])];}
getColorsFromCells(sheetId){const cells=Object.values(this.getters.getCells(sheetId));const colors=new Set();for(const cell of cells){if(cell.style?.textColor){colors.add(cell.style.textColor);}
if(cell.style?.fillColor){colors.add(cell.style.fillColor);}}
for(const color of this.getters.getBordersColors(sheetId)){colors.add(color);}
return[...colors];}
getFormattingColors(sheetId){const formats=this.getters.getConditionalFormats(sheetId);const formatColors=[];for(const format of formats){const rule=format.rule;if(rule.type==="CellIsRule"){formatColors.push(rule.style.textColor);formatColors.push(rule.style.fillColor);}
else if(rule.type==="ColorScaleRule"){formatColors.push(colorNumberString(rule.minimum.color));formatColors.push(rule.midpoint?colorNumberString(rule.midpoint.color):undefined);formatColors.push(colorNumberString(rule.maximum.color));}}
return formatColors.filter(isDefined);}
getChartColors(chartId){const chart=this.getters.getChart(chartId);if(chart===undefined){return[];}
const stringifiedChart=JSON.stringify(chart.getDefinition());const colors=stringifiedChart.matchAll(chartColorRegex);return[...colors].map((color)=>color[1]);}
getTableColors(sheetId){const tables=this.getters.getTables(sheetId);return tables.flatMap((table)=>{const config=table.config;const style=this.getters.getTableStyle(config.styleId);return[this.getTableStyleElementColors(style.wholeTable),config.numberOfHeaders>0?this.getTableStyleElementColors(style.headerRow):[],config.totalRow?this.getTableStyleElementColors(style.totalRow):[],config.bandedColumns?this.getTableStyleElementColors(style.firstColumnStripe):[],config.bandedColumns?this.getTableStyleElementColors(style.secondColumnStripe):[],config.bandedRows?this.getTableStyleElementColors(style.firstRowStripe):[],config.bandedRows?this.getTableStyleElementColors(style.secondRowStripe):[],config.firstColumn?this.getTableStyleElementColors(style.firstColumn):[],config.lastColumn?this.getTableStyleElementColors(style.lastColumn):[],].flat();});}
getTableStyleElementColors(element){if(!element){return[];}
return[element.style?.fillColor,element.style?.textColor,element.border?.bottom?.color,element.border?.top?.color,element.border?.left?.color,element.border?.right?.color,element.border?.horizontal?.color,element.border?.vertical?.color,].filter(isDefined);}
tryToAddColors(colors){for(const color of colors){if(!isColorValid(color)){continue;}
const formattedColor=toHex(color);if(color&&!COLOR_PICKER_DEFAULTS.includes(formattedColor)){this.history.update("customColors",formattedColor,true);}}}}
class EvaluationChartPlugin extends UIPlugin{static getters=["getChartRuntime","getStyleOfSingleCellChart"];charts={};createRuntimeChart=chartRuntimeFactory(this.getters);handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||invalidateCFEvaluationCommands.has(cmd.type)||invalidateChartEvaluationCommands.has(cmd.type)){for(const chartId in this.charts){this.charts[chartId]=undefined;}}
switch(cmd.type){case"UPDATE_CHART":case"CREATE_CHART":case"DELETE_FIGURE":this.charts[cmd.id]=undefined;break;case"DELETE_SHEET":for(let chartId in this.charts){if(!this.getters.isChartDefined(chartId)){this.charts[chartId]=undefined;}}
break;}}
getChartRuntime(figureId){if(!this.charts[figureId]){const chart=this.getters.getChart(figureId);if(!chart){throw new Error(`No chart for the given id: ${figureId}`);}
this.charts[figureId]=this.createRuntimeChart(chart);}
return this.charts[figureId];}
getStyleOfSingleCellChart(chartBackground,mainRange){if(chartBackground)
return{background:chartBackground,fontColor:chartFontColor(chartBackground)};if(!mainRange){return{background:BACKGROUND_CHART_COLOR,fontColor:chartFontColor(BACKGROUND_CHART_COLOR),};}
const col=mainRange.zone.left;const row=mainRange.zone.top;const sheetId=mainRange.sheetId;const style=this.getters.getCellComputedStyle({sheetId,col,row});const background=style.fillColor||BACKGROUND_CHART_COLOR;return{background,fontColor:style.textColor||chartFontColor(background),};}
exportForExcel(data){for(const sheet of data.sheets){if(!sheet.images){sheet.images=[];}
const sheetFigures=this.getters.getFigures(sheet.id);const figures=[];for(const figure of sheetFigures){if(!figure||figure.tag!=="chart"){continue;}
const figureId=figure.id;const figureData=this.getters.getChart(figureId)?.getDefinitionForExcel();if(figureData){figures.push({...figure,data:figureData,});}
else{const chart=this.getters.getChart(figureId);if(!chart){continue;}
const type=this.getters.getChartType(figureId);const runtime=this.getters.getChartRuntime(figureId);const img=chartToImage(runtime,figure,type);if(img){sheet.images.push({...figure,tag:"image",data:{mimetype:"image/png",path:img,size:{width:figure.width,height:figure.height},},});}}}
sheet.charts=figures;}}}
class EvaluationConditionalFormatPlugin extends UIPlugin{static getters=["getConditionalIcon","getCellConditionalFormatStyle","getConditionalDataBar",];isStale=true;computedStyles={};computedIcons={};computedDataBars={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||invalidateCFEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this.isStale=true;}}
finalize(){if(this.isStale){for(const sheetId of this.getters.getSheetIds()){this.computedStyles[sheetId]=lazy(()=>this.getComputedStyles(sheetId));this.computedIcons[sheetId]=lazy(()=>this.getComputedIcons(sheetId));this.computedDataBars[sheetId]=lazy(()=>this.getComputedDataBars(sheetId));}
this.isStale=false;}}
getCellConditionalFormatStyle(position){const{sheetId,col,row}=position;const styles=this.computedStyles[sheetId]();return styles&&styles[col]?.[row];}
getConditionalIcon({sheetId,col,row}){const icons=this.computedIcons[sheetId]();return icons&&icons[col]?.[row];}
getConditionalDataBar({sheetId,col,row}){const dataBars=this.computedDataBars[sheetId]();return dataBars&&dataBars[col]?.[row];}
getComputedStyles(sheetId){const computedStyle={};for(let cf of this.getters.getConditionalFormats(sheetId).reverse()){switch(cf.rule.type){case"ColorScaleRule":for(let range of cf.ranges){this.applyColorScale(sheetId,range,cf.rule,computedStyle);}
break;case"CellIsRule":const formulas=cf.rule.values.map((value)=>value.startsWith("=")?compile(value):undefined);for(let ref of cf.ranges){const zone=this.getters.getRangeFromSheetXC(sheetId,ref).zone;for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const predicate=this.rulePredicate[cf.rule.type];const target={sheetId,col,row};const values=cf.rule.values.map((value,i)=>{const compiledFormula=formulas[i];if(compiledFormula){return this.getters.getTranslatedCellFormula(sheetId,col-zone.left,row-zone.top,compiledFormula.tokens);}
return value;});if(predicate&&predicate(target,{...cf.rule,values})){if(!computedStyle[col])
computedStyle[col]=[];computedStyle[col][row]=Object.assign(computedStyle[col]?.[row]||{},cf.rule.style);}}}}
break;}}
return computedStyle;}
getComputedIcons(sheetId){const computedIcons={};for(let cf of this.getters.getConditionalFormats(sheetId).reverse()){if(cf.rule.type!=="IconSetRule")
continue;for(let range of cf.ranges){this.applyIcon(sheetId,range,cf.rule,computedIcons);}}
return computedIcons;}
getComputedDataBars(sheetId){const computedDataBars={};for(let cf of this.getters.getConditionalFormats(sheetId).reverse()){if(cf.rule.type!=="DataBarRule")
continue;for(let range of cf.ranges){this.applyDataBar(sheetId,range,cf.rule,computedDataBars);}}
return computedDataBars;}
parsePoint(sheetId,range,threshold,functionName){const rangeValues=this.getters.getEvaluatedCellsInZone(sheetId,this.getters.getRangeFromSheetXC(sheetId,range).zone).filter((cell)=>cell.type===CellValueType.number).map((cell)=>cell.value);switch(threshold.type){case"value":const result=functionName==="max"?largeMax(rangeValues):largeMin(rangeValues);return result;case"number":return Number(threshold.value);case"percentage":const min=largeMin(rangeValues);const max=largeMax(rangeValues);const delta=max-min;return min+(delta*Number(threshold.value))/100;case"percentile":return percentile(rangeValues,Number(threshold.value)/100,true);case"formula":const value=threshold.value&&this.getters.evaluateFormula(sheetId,threshold.value);return typeof value==="number"?value:null;default:return null;}}
applyIcon(sheetId,range,rule,computedIcons){const lowerInflectionPoint=this.parsePoint(sheetId,range,rule.lowerInflectionPoint);const upperInflectionPoint=this.parsePoint(sheetId,range,rule.upperInflectionPoint);if(lowerInflectionPoint===null||upperInflectionPoint===null||lowerInflectionPoint>upperInflectionPoint){return;}
const zone=this.getters.getRangeFromSheetXC(sheetId,range).zone;const iconSet=[rule.icons.upper,rule.icons.middle,rule.icons.lower];for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cell=this.getters.getEvaluatedCell({sheetId,col,row});if(cell.type!==CellValueType.number){continue;}
const icon=this.computeIcon(cell.value,upperInflectionPoint,rule.upperInflectionPoint.operator,lowerInflectionPoint,rule.lowerInflectionPoint.operator,iconSet);if(!computedIcons[col]){computedIcons[col]=[];}
computedIcons[col][row]=icon;}}}
computeIcon(value,upperInflectionPoint,upperOperator,lowerInflectionPoint,lowerOperator,icons){if((upperOperator==="ge"&&value>=upperInflectionPoint)||(upperOperator==="gt"&&value>upperInflectionPoint)){return icons[0];}
else if((lowerOperator==="ge"&&value>=lowerInflectionPoint)||(lowerOperator==="gt"&&value>lowerInflectionPoint)){return icons[1];}
return icons[2];}
applyDataBar(sheetId,range,rule,computedDataBars){const rangeValues=this.getters.getRangeFromSheetXC(sheetId,rule.rangeValues||range);const allValues=this.getters.getEvaluatedCellsInZone(sheetId,rangeValues.zone).filter((cell)=>cell.type===CellValueType.number).map((cell)=>cell.value);const max=largeMax(allValues);if(max<=0){return;}
const color=rule.color;const zone=this.getters.getRangeFromSheetXC(sheetId,range).zone;const zoneOfValues=rangeValues.zone;for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cell=this.getEvaluatedCellInZone(sheetId,zone,col,row,zoneOfValues);if(cell.type!==CellValueType.number||cell.value<=0){continue;}
if(!computedDataBars[col])
computedDataBars[col]=[];computedDataBars[col][row]={color:colorNumberString(color),percentage:(cell.value*100)/max,};}}}
getEvaluatedCellInZone(sheetId,zone,col,row,targetZone){const targetCol=col-zone.left+targetZone.left;const targetRow=row-zone.top+targetZone.top;return this.getters.getEvaluatedCell({sheetId,col:targetCol,row:targetRow});}
applyColorScale(sheetId,range,rule,computedStyle){const minValue=this.parsePoint(sheetId,range,rule.minimum,"min");const midValue=rule.midpoint?this.parsePoint(sheetId,range,rule.midpoint):null;const maxValue=this.parsePoint(sheetId,range,rule.maximum,"max");if(minValue===null||maxValue===null||minValue>=maxValue||(midValue&&(minValue>=midValue||midValue>=maxValue))){return;}
const zone=this.getters.getRangeFromSheetXC(sheetId,range).zone;const colorCellArgs=[];if(rule.midpoint&&midValue){colorCellArgs.push({minValue,minColor:rule.minimum.color,colorDiffUnit:this.computeColorDiffUnits(minValue,midValue,rule.minimum.color,rule.midpoint.color),});colorCellArgs.push({minValue:midValue,minColor:rule.midpoint.color,colorDiffUnit:this.computeColorDiffUnits(midValue,maxValue,rule.midpoint.color,rule.maximum.color),});}
else{colorCellArgs.push({minValue,minColor:rule.minimum.color,colorDiffUnit:this.computeColorDiffUnits(minValue,maxValue,rule.minimum.color,rule.maximum.color),});}
for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cell=this.getters.getEvaluatedCell({sheetId,col,row});if(cell.type===CellValueType.number){const value=clip(cell.value,minValue,maxValue);let color;if(colorCellArgs.length===2&&midValue){color=value<=midValue?this.colorCell(value,colorCellArgs[0].minValue,colorCellArgs[0].minColor,colorCellArgs[0].colorDiffUnit):this.colorCell(value,colorCellArgs[1].minValue,colorCellArgs[1].minColor,colorCellArgs[1].colorDiffUnit);}
else{color=this.colorCell(value,colorCellArgs[0].minValue,colorCellArgs[0].minColor,colorCellArgs[0].colorDiffUnit);}
if(!computedStyle[col])
computedStyle[col]=[];computedStyle[col][row]=computedStyle[col]?.[row]||{};computedStyle[col][row].fillColor=colorNumberString(color);}}}}
computeColorDiffUnits(minValue,maxValue,minColor,maxColor){const deltaValue=maxValue-minValue;const deltaColorR=((minColor>>16)%256)-((maxColor>>16)%256);const deltaColorG=((minColor>>8)%256)-((maxColor>>8)%256);const deltaColorB=(minColor%256)-(maxColor%256);const colorDiffUnitR=deltaColorR/deltaValue;const colorDiffUnitG=deltaColorG/deltaValue;const colorDiffUnitB=deltaColorB/deltaValue;return[colorDiffUnitR,colorDiffUnitG,colorDiffUnitB];}
colorCell(value,minValue,minColor,colorDiffUnit){const[colorDiffUnitR,colorDiffUnitG,colorDiffUnitB]=colorDiffUnit;const r=Math.round(((minColor>>16)%256)-colorDiffUnitR*(value-minValue));const g=Math.round(((minColor>>8)%256)-colorDiffUnitG*(value-minValue));const b=Math.round((minColor%256)-colorDiffUnitB*(value-minValue));return(r<<16)|(g<<8)|b;}
rulePredicate={CellIsRule:(target,rule)=>{const cell=this.getters.getEvaluatedCell(target);if(cell.type===CellValueType.error){return false;}
let[value0,value1]=rule.values.map((val)=>{if(val.startsWith("=")){return this.getters.evaluateFormula(target.sheetId,val)??"";}
return parseLiteral(val,DEFAULT_LOCALE);});if(isMatrix(value0)||isMatrix(value1)){return false;}
const cellValue=cell.value??"";value0=value0??"";value1=value1??"";switch(rule.operator){case"IsEmpty":return cellValue.toString().trim()==="";case"IsNotEmpty":return cellValue.toString().trim()!=="";case"BeginsWith":if(value0===""){return false;}
return cellValue.toString().startsWith(value0.toString());case"EndsWith":if(value0===""){return false;}
return cellValue.toString().endsWith(value0.toString());case"Between":return cellValue>=value0&&cellValue<=value1;case"NotBetween":return!(cellValue>=value0&&cellValue<=value1);case"ContainsText":return cellValue.toString().indexOf(value0.toString())>-1;case"NotContains":return!cellValue||cellValue.toString().indexOf(value0.toString())===-1;case"GreaterThan":return cellValue>value0;case"GreaterThanOrEqual":return cellValue>=value0;case"LessThan":return cellValue<value0;case"LessThanOrEqual":return cellValue<=value0;case"NotEqual":if(value0===""){return false;}
return cellValue!==value0;case"Equal":if(value0===""){return true;}
return cellValue===value0;default:console.warn(_t("Not implemented operator %s for kind of conditional formatting:  %s",rule.operator,rule.type));}
return false;},};}
const VALID_RESULT={isValid:true};class EvaluationDataValidationPlugin extends UIPlugin{static getters=["getDataValidationInvalidCriterionValueMessage","getInvalidDataValidationMessage","getValidationResultForCellValue","isCellValidCheckbox","isDataValidationInvalid",];validationResults={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||cmd.type==="EVALUATE_CELLS"||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this.validationResults={};return;}
switch(cmd.type){case"ADD_DATA_VALIDATION_RULE":const ranges=cmd.ranges.map((range)=>this.getters.getRangeFromRangeData(range));if(cmd.rule.criterion.type==="isBoolean"){this.setContentToBooleanCells({...cmd.rule,ranges});}
delete this.validationResults[cmd.sheetId];break;case"REMOVE_DATA_VALIDATION_RULE":delete this.validationResults[cmd.sheetId];break;}}
setContentToBooleanCells(rule){for(const position of getCellPositionsInRanges(rule.ranges)){const evaluatedCell=this.getters.getEvaluatedCell(position);if(evaluatedCell.type!==CellValueType.boolean){this.dispatch("UPDATE_CELL",{...position,content:"FALSE"});}}}
isDataValidationInvalid(cellPosition){return!this.getValidationResultForCell(cellPosition).isValid;}
getInvalidDataValidationMessage(cellPosition){const validationResult=this.getValidationResultForCell(cellPosition);return validationResult.isValid?undefined:validationResult.error;}
getDataValidationInvalidCriterionValueMessage(criterionType,value){const evaluator=dataValidationEvaluatorRegistry.get(criterionType);if(value.startsWith("=")){return evaluator.allowedValues==="onlyLiterals"?_t("The value must not be a formula"):undefined;}
else if(evaluator.allowedValues==="onlyFormulas"){return _t("The value must be a formula");}
return evaluator.isCriterionValueValid(value)?undefined:evaluator.criterionValueErrorString;}
isCellValidCheckbox(cellPosition){if(!this.getters.isMainCellPosition(cellPosition)){return false;}
const rule=this.getters.getValidationRuleForCell(cellPosition);if(!rule||rule.criterion.type!=="isBoolean"){return false;}
return this.getValidationResultForCell(cellPosition).isValid;}
getValidationResultForCellValue(cellValue,cellPosition){const rule=this.getters.getValidationRuleForCell(cellPosition);if(!rule){return VALID_RESULT;}
const error=this.getRuleErrorForCellValue(cellValue,cellPosition,rule);return error?{error,rule,isValid:false}:VALID_RESULT;}
getValidationResultForCell(cellPosition){const{col,row,sheetId}=cellPosition;if(!this.validationResults[sheetId]){this.validationResults[sheetId]=this.computeSheetValidationResults(sheetId);}
return this.validationResults[sheetId][col]?.[row]?.()||VALID_RESULT;}
computeSheetValidationResults(sheetId){const validationResults={};const ranges=this.getters.getDataValidationRules(sheetId).map((rule)=>rule.ranges);for(const cellPosition of getCellPositionsInRanges(ranges.flat())){const{col,row}=cellPosition;if(!validationResults[col]){validationResults[col]=[];}
validationResults[col][row]=lazy(()=>{const evaluatedCell=this.getters.getEvaluatedCell(cellPosition);if(evaluatedCell.type===CellValueType.empty){return VALID_RESULT;}
return this.getValidationResultForCellValue(evaluatedCell.value,cellPosition);});}
return validationResults;}
getRuleErrorForCellValue(cellValue,cellPosition,rule){const{sheetId}=cellPosition;const criterion=rule.criterion;const evaluator=dataValidationEvaluatorRegistry.get(criterion.type);const offset=this.getCellOffsetInRule(cellPosition,rule);const evaluatedCriterionValues=this.getEvaluatedCriterionValues(sheetId,offset,criterion);const evaluatedCriterion={...criterion,values:evaluatedCriterionValues};if(evaluator.isValueValid(cellValue,evaluatedCriterion,this.getters,sheetId)){return undefined;}
return evaluator.getErrorString(evaluatedCriterion,this.getters,sheetId);}
getCellOffsetInRule(cellPosition,rule){const range=rule.ranges.find((range)=>isInside(cellPosition.col,cellPosition.row,range.zone));if(!range){throw new Error("The cell is not in any range of the rule");}
return{col:cellPosition.col-range.zone.left,row:cellPosition.row-range.zone.top,};}
getEvaluatedCriterionValues(sheetId,offset,criterion){return criterion.values.map((value)=>{if(!value.startsWith("=")){return value;}
const formula=compile(value);const translatedFormula=this.getters.getTranslatedCellFormula(sheetId,offset.col,offset.row,formula.tokens);const evaluated=this.getters.evaluateFormula(sheetId,translatedFormula);return evaluated&&!isMatrix(evaluated)?evaluated.toString():"";});}}
class DynamicTablesPlugin extends UIPlugin{static getters=["canCreateDynamicTableOnZones","doesZonesContainFilter","getFilter","getFilters","getTable","getTables","getTablesOverlappingZones","getFilterId","getFilterHeaders","isFilterHeader",];tables={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&"content"in cmd)||cmd.type==="EVALUATE_CELLS"){this.tables={};return;}
switch(cmd.type){case"CREATE_TABLE":case"REMOVE_TABLE":case"UPDATE_TABLE":case"DELETE_CONTENT":this.tables={};break;}}
finalize(){for(const sheetId of this.getters.getSheetIds()){if(!this.tables[sheetId]){this.tables[sheetId]=this.computeTables(sheetId);}}}
computeTables(sheetId){const tables=[];const coreTables=this.getters.getCoreTables(sheetId);for(const table of coreTables){if(table.type==="dynamic")
continue;tables.push(table);}
const staticTables=[...tables];for(const coreTable of coreTables){if(coreTable.type!=="dynamic")
continue;const table=this.coreTableToTable(sheetId,coreTable);let tableZone=table.range.zone;for(const staticTable of staticTables){if(overlap(tableZone,staticTable.range.zone)){tableZone={...tableZone,right:staticTable.range.zone.left-1};}}
tables.push({...table,range:this.getters.getRangeFromZone(sheetId,tableZone)});}
return tables;}
getFilters(sheetId){return this.getTables(sheetId).filter((table)=>table.config.hasFilters).map((table)=>table.filters).flat();}
getTables(sheetId){return this.tables[sheetId]||[];}
getFilter(position){const table=this.getTable(position);if(!table||!table.config.hasFilters){return undefined;}
return table.filters.find((filter)=>filter.col===position.col);}
getFilterId(position){return this.getFilter(position)?.id;}
getTable({sheetId,col,row}){return this.getTables(sheetId).find((table)=>isInside(col,row,table.range.zone));}
getTablesOverlappingZones(sheetId,zones){return this.getTables(sheetId).filter((table)=>zones.some((zone)=>overlap(table.range.zone,zone)));}
doesZonesContainFilter(sheetId,zones){return this.getTablesOverlappingZones(sheetId,zones).some((table)=>table.config.hasFilters);}
getFilterHeaders(sheetId){const headers=[];for(const table of this.getTables(sheetId)){if(!table.config.hasFilters){continue;}
const zone=table.range.zone;const row=zone.top;for(let col=zone.left;col<=zone.right;col++){headers.push({sheetId,col,row});}}
return headers;}
isFilterHeader({sheetId,col,row}){const headers=this.getFilterHeaders(sheetId);return headers.some((header)=>header.col===col&&header.row===row);}
canCreateDynamicTableOnZones(sheetId,zones){if(!areZonesContinuous(zones)){return false;}
const unionZone=union(...zones);const topLeft={col:unionZone.left,row:unionZone.top,sheetId};const parentSpreadingCell=this.getters.getArrayFormulaSpreadingOn(topLeft);if(!parentSpreadingCell){return false;}
else if(deepEquals(parentSpreadingCell,topLeft)&&getZoneArea(unionZone)===1){return true;}
const zone=this.getters.getSpreadZone(parentSpreadingCell);return deepEquals(unionZone,zone);}
coreTableToTable(sheetId,table){if(table.type!=="dynamic"){return table;}
const tableZone=table.range.zone;const tablePosition={sheetId,col:tableZone.left,row:tableZone.top};const zone=this.getters.getSpreadZone(tablePosition)??table.range.zone;const range=this.getters.getRangeFromZone(sheetId,zone);const filters=this.getDynamicTableFilters(sheetId,table,zone);return{id:table.id,range,filters,config:table.config};}
getDynamicTableFilters(sheetId,table,tableZone){const filters=[];const{top,bottom,left,right}=tableZone;for(let col=left;col<=right;col++){const tableColIndex=col-left;const zone={left:col,right:col,top,bottom};const filter=createFilter(this.getDynamicTableFilterId(table.id,tableColIndex),this.getters.getRangeFromZone(sheetId,zone),table.config,this.getters.getRangeFromZone);filters.push(filter);}
return filters;}
getDynamicTableFilterId(tableId,tableCol){return tableId+"_"+tableCol;}
exportForExcel(data){for(const sheet of data.sheets){for(const tableData of sheet.tables){const zone=toZone(tableData.range);const topLeft={sheetId:sheet.id,col:zone.left,row:zone.top};const coreTable=this.getters.getCoreTable(topLeft);const table=this.getTable(topLeft);if(coreTable?.type!=="dynamic"||!table){continue;}
tableData.range=zoneToXc(table.range.zone);}}}}
class HeaderSizeUIPlugin extends UIPlugin{static getters=["getRowSize","getHeaderSize"];tallestCellInRow={};ctx=document.createElement("canvas").getContext("2d");handle(cmd){switch(cmd.type){case"START":for(const sheetId of this.getters.getSheetIds()){this.initializeSheet(sheetId);}
break;case"CREATE_SHEET":{this.initializeSheet(cmd.sheetId);break;}
case"DUPLICATE_SHEET":{const tallestCells=deepCopy(this.tallestCellInRow[cmd.sheetId]);this.history.update("tallestCellInRow",cmd.sheetIdTo,tallestCells);break;}
case"DELETE_SHEET":const tallestCells={...this.tallestCellInRow};delete tallestCells[cmd.sheetId];this.history.update("tallestCellInRow",tallestCells);break;case"REMOVE_COLUMNS_ROWS":{if(cmd.dimension==="COL"){return;}
const tallestCells=removeIndexesFromArray(this.tallestCellInRow[cmd.sheetId],cmd.elements);this.history.update("tallestCellInRow",cmd.sheetId,tallestCells);break;}
case"ADD_COLUMNS_ROWS":{if(cmd.dimension==="COL"){return;}
const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);const newCells=Array(cmd.quantity).fill(undefined);const newTallestCells=insertItemsAtIndex(this.tallestCellInRow[cmd.sheetId],newCells,addIndex);this.history.update("tallestCellInRow",cmd.sheetId,newTallestCells);break;}
case"RESIZE_COLUMNS_ROWS":{const sheetId=cmd.sheetId;if(cmd.dimension==="ROW"){for(const row of cmd.elements){const tallestCell=this.getRowTallestCell(sheetId,row);this.history.update("tallestCellInRow",sheetId,row,tallestCell);}}
else{for(const row of range(0,this.getters.getNumberRows(sheetId))){for(const col of cmd.elements){this.updateRowSizeForCellChange(sheetId,row,col);}}}}
break;case"UPDATE_CELL":this.updateRowSizeForCellChange(cmd.sheetId,cmd.row,cmd.col);break;case"ADD_MERGE":case"REMOVE_MERGE":for(const target of cmd.target){for(const position of positions(target)){this.updateRowSizeForCellChange(cmd.sheetId,position.row,position.col);}}}
return;}
getRowSize(sheetId,row){return Math.round(this.getters.getUserRowSize(sheetId,row)??this.tallestCellInRow[sheetId][row]?.size??DEFAULT_CELL_HEIGHT);}
getHeaderSize(sheetId,dimension,index){if(this.getters.isHeaderHidden(sheetId,dimension,index)){return 0;}
return dimension==="ROW"?this.getRowSize(sheetId,index):this.getters.getColSize(sheetId,index);}
updateRowSizeForCellChange(sheetId,row,col){const tallestCellInRow=this.tallestCellInRow[sheetId]?.[row];if(tallestCellInRow?.cell.col===col){const newTallestCell=this.getRowTallestCell(sheetId,row);this.history.update("tallestCellInRow",sheetId,row,newTallestCell);}
const updatedCellHeight=this.getCellHeight({sheetId,col,row});if(updatedCellHeight<=DEFAULT_CELL_HEIGHT){return;}
if((!tallestCellInRow&&updatedCellHeight>DEFAULT_CELL_HEIGHT)||(tallestCellInRow&&updatedCellHeight>tallestCellInRow.size)){const newTallestCell={cell:{sheetId,col,row},size:updatedCellHeight};this.history.update("tallestCellInRow",sheetId,row,newTallestCell);}}
initializeSheet(sheetId){const tallestCells=[];for(let row=0;row<this.getters.getNumberRows(sheetId);row++){const tallestCell=this.getRowTallestCell(sheetId,row);tallestCells.push(tallestCell);}
this.history.update("tallestCellInRow",sheetId,tallestCells);}
getCellHeight(position){if(this.isInMultiRowMerge(position)){return DEFAULT_CELL_HEIGHT;}
const cell=this.getters.getCell(position);const colSize=this.getters.getColSize(position.sheetId,position.col);return getDefaultCellHeight(this.ctx,cell,colSize);}
isInMultiRowMerge(position){const merge=this.getters.getMerge(position);return!!merge&&merge.bottom!==merge.top;}
getRowTallestCell(sheetId,row){const userRowSize=this.getters.getUserRowSize(sheetId,row);if(userRowSize!==undefined){return undefined;}
const cellIds=this.getters.getRowCells(sheetId,row);let maxHeight=0;let tallestCell=undefined;for(let i=0;i<cellIds.length;i++){const cell=this.getters.getCellById(cellIds[i]);if(!cell){continue;}
const position=this.getters.getCellPosition(cell.id);const cellHeight=this.getCellHeight(position);if(cellHeight>maxHeight&&cellHeight>DEFAULT_CELL_HEIGHT){maxHeight=cellHeight;tallestCell={cell:position,size:cellHeight};}}
if(tallestCell&&tallestCell.size>DEFAULT_CELL_HEIGHT){return tallestCell;}
return undefined;}}
const PERCENT_FORMAT="0.00%";function withPivotPresentationLayer(PivotClass){class PivotPresentationLayer extends PivotClass{getters;cache={};rankAsc={};rankDesc={};runningTotal={};runningTotalInPercent={};constructor(custom,params){super(custom,params);this.getters=params.getters;}
init(params){this.cache={};this.rankAsc={};this.rankDesc={};this.runningTotal={};this.runningTotalInPercent={};super.init(params);}
getPivotCellValueAndFormat(measureName,domain){return this.getMeasureDisplayValue(measureName,domain);}
_getPivotCellValueAndFormat(measureName,domain){const cacheKey=`${measureName}-${domain
                .map((node) => node.field + "=" + node.value)
                .join(",")}`;if(this.cache[cacheKey]){return this.cache[cacheKey];}
const measure=this.getMeasure(measureName);const result=measure.computedBy?this.computeMeasure(measure,domain):super.getPivotCellValueAndFormat(measureName,domain);if(measure.format){this.cache[cacheKey]={...result,format:measure.format};}
else{this.cache[cacheKey]=result;}
return this.cache[cacheKey];}
computeMeasure(measure,domain){if(!measure.computedBy){return{value:0};}
const{columns,rows}=super.definition;if(columns.length+rows.length!==domain.length){const values=this.getValuesToAggregate(measure,domain);const aggregator=AGGREGATORS_FN[measure.aggregator];if(!aggregator){return{value:0};}
try{return aggregator([values],this.getters.getLocale());}
catch(error){return handleError(error,measure.aggregator.toUpperCase());}}
const formula=this.getters.getMeasureCompiledFormula(measure);const getSymbolValue=(symbolName)=>{const{columns,rows}=this.definition;if(columns.find((col)=>col.nameWithGranularity===symbolName)){const{colDomain}=domainToColRowDomain(this,domain);const symbolIndex=colDomain.findIndex((node)=>node.field===symbolName);return this.getPivotHeaderValueAndFormat(colDomain.slice(0,symbolIndex+1));}
if(rows.find((row)=>row.nameWithGranularity===symbolName)){const{rowDomain}=domainToColRowDomain(this,domain);const symbolIndex=rowDomain.findIndex((row)=>row.field===symbolName);return this.getPivotHeaderValueAndFormat(rowDomain.slice(0,symbolIndex+1));}
return this._getPivotCellValueAndFormat(symbolName,domain);};const result=this.getters.evaluateCompiledFormula(measure.computedBy.sheetId,formula,getSymbolValue);if(isMatrix(result)){return result[0][0];}
return result;}
getValuesToAggregate(measure,domain){const{rowDomain,colDomain}=domainToColRowDomain(this,domain);const table=this.getTableStructure();const values=[];if(colDomain.length===0&&rowDomain.length<this.definition.rows.length&&this.definition.rows.length&&this.definition.columns.length){const colDomains=this.treeToLeafDomains(table.getColTree());const rowSubTree=this.getSubTreeMatchingDomain(table.getRowTree(),rowDomain);const rowDomains=this.treeToLeafDomains(rowSubTree);for(const colDomain of colDomains){for(const subRowDomain of rowDomains){values.push(this._getPivotCellValueAndFormat(measure.id,rowDomain.concat(subRowDomain).concat(colDomain)));}}
return values;}
else if(rowDomain.length===this.definition.rows.length&&colDomain.length===0){const tree=table.getColTree();const subTree=this.getSubTreeMatchingDomain(tree,colDomain);const domains=this.treeToLeafDomains(subTree,colDomain);for(const domain of domains){values.push(this._getPivotCellValueAndFormat(measure.id,rowDomain.concat(domain)));}
return values;}
else{const tree=table.getRowTree();const subTree=this.getSubTreeMatchingDomain(tree,rowDomain);const domains=this.treeToLeafDomains(subTree,rowDomain);for(const domain of domains){values.push(this._getPivotCellValueAndFormat(measure.id,domain.concat(colDomain)));}
return values;}}
getSubTreeMatchingDomain(tree,domain,domainLevel=0){if(domainLevel>domain.length){return[];}
if(domain.length===domainLevel){return tree;}
for(const node of tree){const dimension=this.definition.getDimension(node.field);const normalizedValue=toNormalizedPivotValue(dimension,domain[domainLevel]?.value);if(node.field===domain[domainLevel]?.field&&node.value===normalizedValue){return this.getSubTreeMatchingDomain(node.children,domain,domainLevel+1);}}
return tree;}
treeToLeafDomains(tree,parentDomain=[]){const domains=[];for(const node of tree){const dimension=this.definition.getDimension(node.field);const nodeDomain=[...parentDomain,{field:node.field,value:node.value,type:dimension.type},];if(node.children.length===0){domains.push(nodeDomain);}
else{domains.push(...this.treeToLeafDomains(node.children,nodeDomain));}}
return domains;}
getMeasureDisplayValue(measureId,domain){const measure=this.getMeasure(measureId);const rawValue=this._getPivotCellValueAndFormat(measureId,domain);if(!measure.display||measure.display.type==="no_calculations"||rawValue.message){return rawValue;}
const fieldName=measure.display.fieldNameWithGranularity;if(fieldName&&!this.isFieldInPivot(fieldName)){return{value:CellErrorType.NotAvailable,message:_t('Field "%s" not found in pivot for measure display calculation',fieldName),};}
try{const display=measure.display;switch(display.type){case"%_of_grand_total":return this.asPercentOfGrandTotal(rawValue,measure);case"%_of_col_total":return this.asPercentOfColumnTotal(rawValue,measure,domain);case"%_of_row_total":return this.asPercentOfRowTotal(rawValue,measure,domain);case"%_of_parent_row_total":return this.asPercentOfParentRowTotal(rawValue,measure,domain);case"%_of_parent_col_total":return this.asPercentOfParentColumnTotal(rawValue,measure,domain);case"index":return this.asIndex(rawValue,measure,domain);case"%_of_parent_total":return this.asPercentOfParentTotal(rawValue,measure,domain,display);case"running_total":return this.asRunningTotal(rawValue,measure,domain,display,"running_total");case"%_running_total":return this.asRunningTotal(rawValue,measure,domain,display,"%_running_total");case"rank_asc":return this.asRank(rawValue,measure,domain,display,"asc");case"rank_desc":return this.asRank(rawValue,measure,domain,display,"desc");case"%_of":return this.asPercentOf(rawValue,measure,domain,display);case"difference_from":return this.asDifferenceFrom(rawValue,measure,domain,display);case"%_difference_from":return this.asDifferenceFromInPercent(rawValue,measure,domain,display);}
return rawValue;}
catch(e){return handleError(e,"COMPUTE_MEASURE_DISPLAY_VALUE");}}
asPercentOfGrandTotal(rawValue,measure){const grandTotal=this.getGrandTotal(measure.id);return grandTotal===0?{value:CellErrorType.DivisionByZero}:{value:this.measureValueToNumber(rawValue)/grandTotal,format:PERCENT_FORMAT};}
asPercentOfRowTotal(rawValue,measure,domain){const rowTotal=this.getRowTotal(measure.id,domain);return rowTotal===0?{value:CellErrorType.DivisionByZero}:{value:this.measureValueToNumber(rawValue)/rowTotal,format:PERCENT_FORMAT};}
asPercentOfColumnTotal(rawValue,measure,domain){const columnTotal=this.getColumnTotal(measure.id,domain);return columnTotal===0?{value:CellErrorType.DivisionByZero}:{value:this.measureValueToNumber(rawValue)/columnTotal,format:PERCENT_FORMAT};}
asPercentOfParentRowTotal(rawValue,measure,domain){const parentRowDomain=getDomainOfParentRow(this,domain);const parentRowValue=this.measureValueToNumber(this._getPivotCellValueAndFormat(measure.id,parentRowDomain));return parentRowValue===0?{value:""}:{value:this.measureValueToNumber(rawValue)/parentRowValue,format:PERCENT_FORMAT};}
asPercentOfParentColumnTotal(rawValue,measure,domain){const parentColumnDomain=getDomainOfParentCol(this,domain);const parentColValue=this.measureValueToNumber(this._getPivotCellValueAndFormat(measure.id,parentColumnDomain));return parentColValue===0?{value:""}:{value:this.measureValueToNumber(rawValue)/parentColValue,format:PERCENT_FORMAT};}
asPercentOfParentTotal(rawValue,measure,domain,display){const{fieldNameWithGranularity}=display;if(!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const parentDomain=getFieldParentDomain(this,fieldNameWithGranularity,domain);const parentTotal=this._getPivotCellValueAndFormat(measure.id,parentDomain);const parentTotalValue=this.measureValueToNumber(parentTotal);return parentTotalValue===0?{value:""}:{value:this.measureValueToNumber(rawValue)/parentTotalValue,format:PERCENT_FORMAT};}
asIndex(rawValue,measure,domain){const value=this.measureValueToNumber(rawValue);const parentRowTotal=this.getRowTotal(measure.id,domain);const parentColTotal=this.getColumnTotal(measure.id,domain);const grandTotal=this.getGrandTotal(measure.id);return parentRowTotal===0||parentColTotal===0?{value:CellErrorType.DivisionByZero}:{value:(value*grandTotal)/(parentColTotal*parentRowTotal),format:undefined};}
asRunningTotal(rawValue,measure,domain,display,mode){const{fieldNameWithGranularity}=display;if(!fieldNameWithGranularity){return rawValue;}
const totalCache=mode==="running_total"?this.runningTotal:this.runningTotalInPercent;let runningTotals=totalCache[measure.id]?.[fieldNameWithGranularity];if(!runningTotals){runningTotals=this.computeRunningTotal(measure,fieldNameWithGranularity,mode);if(!totalCache[measure.id]){totalCache[measure.id]={};}
totalCache[measure.id][fieldNameWithGranularity]=runningTotals;}
const{rowDomain,colDomain}=domainToColRowDomain(this,domain);const colDomainKey=domainToString(colDomain);const rowDomainKey=domainToString(rowDomain);const runningTotal=runningTotals[colDomainKey]?.[rowDomainKey];return{value:runningTotal??"",format:mode==="running_total"?rawValue.format:PERCENT_FORMAT,};}
asPercentOf(rawValue,measure,domain,display){const{fieldNameWithGranularity,value}=display;if(value===undefined||!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
let comparedValue=this.getComparisonValue(measure,domain,fieldNameWithGranularity,value);let numberValue=this.strictMeasureValueToNumber(rawValue);if(comparedValue===0||(comparedValue==="sameValue"&&numberValue===0)){return{value:CellErrorType.DivisionByZero};}
else if(!comparedValue||(comparedValue==="sameValue"&&!numberValue)){return{value:""};}
else if(comparedValue==="sameValue"){return{value:1,format:PERCENT_FORMAT};}
else if(numberValue===undefined){return{value:CellErrorType.NullError};}
return{value:numberValue/comparedValue,format:PERCENT_FORMAT};}
asDifferenceFrom(rawValue,measure,domain,display){const{fieldNameWithGranularity,value}=display;if(value===undefined||!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const comparedValue=this.getComparisonValue(measure,domain,fieldNameWithGranularity,value)||0;return comparedValue==="sameValue"?{value:""}:{value:this.measureValueToNumber(rawValue)-comparedValue,format:rawValue.format,};}
asDifferenceFromInPercent(rawValue,measure,domain,display){const{fieldNameWithGranularity,value}=display;if(value===undefined||!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
let comparedValue=this.getComparisonValue(measure,domain,fieldNameWithGranularity,value);const numberValue=this.strictMeasureValueToNumber(rawValue);if(comparedValue===0){return{value:CellErrorType.DivisionByZero};}
else if(!comparedValue||comparedValue==="sameValue"){return{value:""};}
else if(numberValue===undefined){return{value:CellErrorType.NullError};}
return{value:(numberValue-comparedValue)/comparedValue,format:PERCENT_FORMAT};}
asRank(rawValue,measure,domain,display,order){const{fieldNameWithGranularity}=display;if(!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const rankingCache=order==="asc"?this.rankAsc:this.rankDesc;let ranking=rankingCache[measure.id]?.[fieldNameWithGranularity];if(!ranking){ranking=this.computeRank(measure,fieldNameWithGranularity,order);if(!rankingCache[measure.id]){rankingCache[measure.id]={};}
rankingCache[measure.id][fieldNameWithGranularity]=ranking;}
const{rowDomain,colDomain}=domainToColRowDomain(this,domain);const colDomainKey=domainToString(colDomain);const rowDomainKey=domainToString(rowDomain);const rank=ranking[colDomainKey]?.[rowDomainKey];return{value:rank??""};}
computeRank(measure,fieldNameWithGranularity,order){const ranking={};const mainDimension=getFieldDimensionType(this,fieldNameWithGranularity);const secondaryDimension=mainDimension==="row"?"column":"row";let pivotCells=this.getPivotValueCells(measure.id);if(mainDimension==="column"){pivotCells=transposeMatrix(pivotCells);}
for(const col of pivotCells){const colDomain=getDimensionDomain(this,secondaryDimension,col[0].domain);const colDomainKey=domainToString(colDomain);const cells=col.map((cell)=>({...cell,value:this.strictMeasureValueToNumber(this._getPivotCellValueAndFormat(measure.id,cell.domain)),rowDomain:getDimensionDomain(this,mainDimension,cell.domain),})).filter((cell)=>isFieldInDomain(fieldNameWithGranularity,cell.rowDomain));const groupedCell=Object.groupBy(cells,(cell)=>getRankingDomainKey(cell.rowDomain,fieldNameWithGranularity));for(const rankingDomainKey in groupedCell){groupedCell[rankingDomainKey]=removeDuplicates$1(groupedCell[rankingDomainKey]||[],(cell)=>cell.value).filter((cell)=>cell.value!==undefined).sort((a,b)=>(order==="asc"?a.value-b.value:b.value-a.value));}
ranking[colDomainKey]={};for(const cell of cells){const rowDomain=getDimensionDomain(this,mainDimension,cell.domain);const rowDomainKey=domainToString(rowDomain);const rankingDomainKey=getRankingDomainKey(cell.rowDomain,fieldNameWithGranularity);const group=groupedCell[rankingDomainKey];if(!group){continue;}
const rank=group.findIndex((c)=>c.value===cell.value);if(rank!==-1){ranking[colDomainKey][rowDomainKey]=rank+1;}}}
return mainDimension==="row"?ranking:transpose2dPOJO(ranking);}
computeRunningTotal(measure,fieldNameWithGranularity,mode){const cellsRunningTotals={};const mainDimension=getFieldDimensionType(this,fieldNameWithGranularity);const secondaryDimension=mainDimension==="row"?"column":"row";let pivotCells=this.getPivotValueCells(measure.id);if(mainDimension==="column"){pivotCells=transposeMatrix(pivotCells);}
for(const col of pivotCells){const colDomain=getDimensionDomain(this,secondaryDimension,col[0].domain);const colDomainKey=domainToString(colDomain);cellsRunningTotals[colDomainKey]={};const runningTotals={};const cellsWithValue=col.map((cell)=>({...cell,rowDomain:getDimensionDomain(this,mainDimension,cell.domain),value:this.measureValueToNumber(this._getPivotCellValueAndFormat(measure.id,cell.domain)),})).filter((cell)=>isFieldInDomain(fieldNameWithGranularity,cell.rowDomain));for(const cell of cellsWithValue){const rowDomainKey=domainToString(cell.rowDomain);const runningTotalKey=getRunningTotalDomainKey(cell.rowDomain,fieldNameWithGranularity);const runningTotal=(runningTotals[runningTotalKey]||0)+cell.value;runningTotals[runningTotalKey]=runningTotal;cellsRunningTotals[colDomainKey][rowDomainKey]=runningTotal;}
if(mode==="%_running_total"){for(const cell of cellsWithValue){const rowDomain=cell.rowDomain;const rowDomainKey=domainToString(rowDomain);const runningTotalKey=getRunningTotalDomainKey(rowDomain,fieldNameWithGranularity);const cellRunningTotal=cellsRunningTotals[colDomainKey][rowDomainKey]||0;const finalRunningTotal=runningTotals[runningTotalKey];cellsRunningTotals[colDomainKey][rowDomainKey]=!finalRunningTotal?undefined:cellRunningTotal/finalRunningTotal;}}}
return mainDimension==="row"?cellsRunningTotals:transpose2dPOJO(cellsRunningTotals);}
getGrandTotal(measureId){const grandTotal=this._getPivotCellValueAndFormat(measureId,[]);return this.measureValueToNumber(grandTotal);}
getRowTotal(measureId,domain){const totalDomain=domainToColRowDomain(this,domain).rowDomain;const rowTotal=this._getPivotCellValueAndFormat(measureId,totalDomain);return this.measureValueToNumber(rowTotal);}
getColumnTotal(measureId,domain){const totalDomain=domainToColRowDomain(this,domain).colDomain;const columnTotal=this._getPivotCellValueAndFormat(measureId,totalDomain);return this.measureValueToNumber(columnTotal);}
isFieldInPivot(nameWithGranularity){return(this.definition.columns.some((c)=>c.nameWithGranularity===nameWithGranularity)||this.definition.rows.some((r)=>r.nameWithGranularity===nameWithGranularity));}
getComparisonValue(measure,domain,fieldNameWithGranularity,valueToCompare){const comparedDomain=valueToCompare===PREVIOUS_VALUE||valueToCompare===NEXT_VALUE?getPreviousOrNextValueDomain(this,domain,fieldNameWithGranularity,valueToCompare):replaceFieldValueInDomain(domain,fieldNameWithGranularity,valueToCompare);if(deepEquals(comparedDomain,domain)){return"sameValue";}
if(!comparedDomain||!isDomainIsInPivot(this,comparedDomain)){throw new NotAvailableError();}
const comparedValue=this._getPivotCellValueAndFormat(measure.id,comparedDomain);const comparedValueNumber=this.strictMeasureValueToNumber(comparedValue);return comparedValueNumber;}
getPivotValueCells(measureId){return this.getTableStructure().getPivotCells().map((col)=>col.filter((cell)=>cell.type==="VALUE"&&cell.measure===measureId)).filter((col)=>col.length>0);}
measureValueToNumber(result){if(typeof result.value==="number"){return result.value;}
if(!result.value){return 0;}
throw new Error(`Value ${result.value} is not a number`);}
strictMeasureValueToNumber(result){if(typeof result.value==="number"){return result.value;}
if(!result.value){return undefined;}
throw new Error(`Value ${result.value} is not a number`);}}
return PivotPresentationLayer;}
const UNDO_REDO_PIVOT_COMMANDS=["ADD_PIVOT","UPDATE_PIVOT"];function isPivotCommand(cmd){return UNDO_REDO_PIVOT_COMMANDS.includes(cmd.type);}
class PivotUIPlugin extends UIPlugin{static getters=["getPivot","getFirstPivotFunction","getPivotIdFromPosition","getPivotCellFromPosition","generateNewCalculatedMeasureName","isPivotUnused","isSpillPivotFormula",];pivots={};unusedPivots;custom;constructor(config){super(config);this.custom=config.custom;}
beforeHandle(cmd){switch(cmd.type){case"START":for(const pivotId of this.getters.getPivotIds()){this.setupPivot(pivotId);}}}
handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)){for(const pivotId of this.getters.getPivotIds()){if(!pivotRegistry.get(this.getters.getPivotCoreDefinition(pivotId).type).externalData){this.setupPivot(pivotId,{recreate:true});}}}
switch(cmd.type){case"REFRESH_PIVOT":this.refreshPivot(cmd.id);break;case"ADD_PIVOT":{this.setupPivot(cmd.pivotId);break;}
case"DUPLICATE_PIVOT":{this.setupPivot(cmd.newPivotId);break;}
case"UPDATE_PIVOT":{this.setupPivot(cmd.pivotId,{recreate:true});break;}
case"DELETE_SHEET":case"UPDATE_CELL":{this.unusedPivots=undefined;break;}
case"UNDO":case"REDO":{this.unusedPivots=undefined;const pivotCommands=cmd.commands.filter(isPivotCommand);for(const cmd of pivotCommands){const pivotId=cmd.pivotId;if(!this.getters.isExistingPivot(pivotId)){continue;}
this.setupPivot(pivotId,{recreate:true});}
break;}
case"UPDATE_LOCALE":resetMapValueDimensionDate();break;}}
getPivotIdFromPosition(position){const cell=this.getters.getCorrespondingFormulaCell(position);if(cell&&cell.isFormula){const pivotFunction=this.getFirstPivotFunction(position.sheetId,cell.compiledFormula.tokens);if(pivotFunction){const pivotId=pivotFunction.args[0]?.toString();return pivotId&&this.getters.getPivotId(pivotId);}}
return undefined;}
isSpillPivotFormula(position){const cell=this.getters.getCorrespondingFormulaCell(position);if(cell&&cell.isFormula){const pivotFunction=this.getFirstPivotFunction(position.sheetId,cell.compiledFormula.tokens);return pivotFunction?.functionName==="PIVOT";}
return false;}
getFirstPivotFunction(sheetId,tokens){const pivotFunction=getFirstPivotFunction(tokens);if(!pivotFunction){return undefined;}
const{functionName,args}=pivotFunction;const evaluatedArgs=args.map((argAst)=>{if(argAst.type=="EMPTY"){return undefined;}
else if(argAst.type==="STRING"||argAst.type==="BOOLEAN"||argAst.type==="NUMBER"){return argAst.value;}
const argsString=astToFormula(argAst);return this.getters.evaluateFormula(sheetId,argsString);});return{functionName,args:evaluatedArgs};}
getPivotCellFromPosition(position){const cell=this.getters.getCorrespondingFormulaCell(position);if(!cell||!cell.isFormula||getNumberOfPivotFunctions(cell.compiledFormula.tokens)===0){return EMPTY_PIVOT_CELL;}
const mainPosition=this.getters.getCellPosition(cell.id);const result=this.getters.getFirstPivotFunction(position.sheetId,cell.compiledFormula.tokens);if(!result){return EMPTY_PIVOT_CELL;}
const{functionName,args}=result;const formulaId=args[0];if(!formulaId){return EMPTY_PIVOT_CELL;}
const pivotId=this.getters.getPivotId(formulaId.toString());if(!pivotId){return EMPTY_PIVOT_CELL;}
const pivot=this.getPivot(pivotId);if(!pivot.isValid()){return EMPTY_PIVOT_CELL;}
if(functionName==="PIVOT"){const includeTotal=args[2]===false?false:undefined;const includeColumnHeaders=args[3]===false?false:undefined;const pivotCells=pivot.getTableStructure().getPivotCells(includeTotal,includeColumnHeaders);const pivotCol=position.col-mainPosition.col;const pivotRow=position.row-mainPosition.row;return pivotCells[pivotCol][pivotRow];}
try{if(functionName==="PIVOT.HEADER"&&args.at(-2)==="measure"){const domain=pivot.parseArgsToPivotDomain(args.slice(1,-2).map((value)=>({value})));return{type:"MEASURE_HEADER",domain,measure:args.at(-1)?.toString()||"",};}
else if(functionName==="PIVOT.HEADER"){const domain=pivot.parseArgsToPivotDomain(args.slice(1).map((value)=>({value})));return{type:"HEADER",domain,};}
const[measure,...domainArgs]=args.slice(1);const domain=pivot.parseArgsToPivotDomain(domainArgs.map((value)=>({value})));return{type:"VALUE",domain,measure:measure?.toString()||"",};}
catch(_){return EMPTY_PIVOT_CELL;}}
generateNewCalculatedMeasureName(measures){const existingMeasures=measures.map((m)=>m.fieldName);let i=1;let name=_t("Calculated measure %s",i);while(existingMeasures.includes(name)){i++;name=_t("Calculated measure %s",i);}
return name;}
getPivot(pivotId){if(!this.getters.isExistingPivot(pivotId)){throw new Error(`pivot ${pivotId} not found`);}
return this.pivots[pivotId];}
isPivotUnused(pivotId){return this._getUnusedPivots().includes(pivotId);}
refreshPivot(pivotId){const pivot=this.getters.getPivot(pivotId);pivot.init({reload:true});}
setupPivot(pivotId,{recreate}={recreate:false}){const definition=this.getters.getPivotCoreDefinition(pivotId);if(!(pivotId in this.pivots)){const Pivot=withPivotPresentationLayer(pivotRegistry.get(definition.type).ui);this.pivots[pivotId]=new Pivot(this.custom,{definition,getters:this.getters});}
else if(recreate){this.pivots[pivotId].onDefinitionChange(definition);}}
_getUnusedPivots(){if(this.unusedPivots!==undefined){return this.unusedPivots;}
const unusedPivots=new Set(this.getters.getPivotIds());for(const sheetId of this.getters.getSheetIds()){for(const cellId in this.getters.getCells(sheetId)){const position=this.getters.getCellPosition(cellId);const pivotId=this.getPivotIdFromPosition(position);if(pivotId){unusedPivots.delete(pivotId);if(!unusedPivots.size){this.unusedPivots=[];return[];}}}}
this.unusedPivots=[...unusedPivots];return this.unusedPivots;}}
class AutofillGenerator{cells;getters;index=0;direction;constructor(cells,getters,direction){this.cells=cells;this.getters=getters;this.direction=direction;}
next(){const genCell=this.cells[this.index++%this.cells.length];const rule=genCell.rule;const{cellData,tooltip}=autofillModifiersRegistry.get(rule.type).apply(rule,genCell.data,this.getters,this.direction);return{cellData,tooltip,origin:{col:genCell.data.col,row:genCell.data.row,},};}}
class AutofillPlugin extends UIPlugin{static layers=["Autofill"];static getters=["getAutofillTooltip"];autofillZone;steps;lastCellSelected={};direction;tooltip;allowDispatch(cmd){switch(cmd.type){case"AUTOFILL_SELECT":const sheetId=this.getters.getActiveSheetId();this.lastCellSelected.col=cmd.col===-1?this.lastCellSelected.col:clip(cmd.col,0,this.getters.getNumberCols(sheetId));this.lastCellSelected.row=cmd.row===-1?this.lastCellSelected.row:clip(cmd.row,0,this.getters.getNumberRows(sheetId));if(this.lastCellSelected.col!==undefined&&this.lastCellSelected.row!==undefined){return"Success";}
return"InvalidAutofillSelection";}
return"Success";}
handle(cmd){switch(cmd.type){case"AUTOFILL":this.autofill(true);break;case"AUTOFILL_SELECT":this.select(cmd.col,cmd.row);break;case"AUTOFILL_AUTO":this.autofillAuto();break;case"AUTOFILL_CELL":this.autoFillMerge(cmd.originCol,cmd.originRow,cmd.col,cmd.row);const sheetId=this.getters.getActiveSheetId();this.dispatch("UPDATE_CELL",{sheetId,col:cmd.col,row:cmd.row,style:cmd.style||null,content:cmd.content||"",format:cmd.format||"",});this.dispatch("SET_BORDER",{sheetId,col:cmd.col,row:cmd.row,border:cmd.border,});this.autofillCF(cmd.originCol,cmd.originRow,cmd.col,cmd.row);this.autofillDV(cmd.originCol,cmd.originRow,cmd.col,cmd.row);}}
getAutofillTooltip(){return this.tooltip;}
autofill(apply){if(!this.autofillZone||!this.steps||this.direction===undefined){this.tooltip=undefined;return;}
const source=this.getters.getSelectedZone();const target=this.autofillZone;switch(this.direction){case"down":for(let col=source.left;col<=source.right;col++){const xcs=[];for(let row=source.top;row<=source.bottom;row++){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let row=target.top;row<=target.bottom;row++){this.computeNewCell(generator,col,row,apply);}}
break;case"up":for(let col=source.left;col<=source.right;col++){const xcs=[];for(let row=source.bottom;row>=source.top;row--){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let row=target.bottom;row>=target.top;row--){this.computeNewCell(generator,col,row,apply);}}
break;case"left":for(let row=source.top;row<=source.bottom;row++){const xcs=[];for(let col=source.right;col>=source.left;col--){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let col=target.right;col>=target.left;col--){this.computeNewCell(generator,col,row,apply);}}
break;case"right":for(let row=source.top;row<=source.bottom;row++){const xcs=[];for(let col=source.left;col<=source.right;col++){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let col=target.left;col<=target.right;col++){this.computeNewCell(generator,col,row,apply);}}
break;}
if(apply){this.autofillZone=undefined;this.selection.resizeAnchorZone(this.direction,this.steps);this.lastCellSelected={};this.direction=undefined;this.steps=0;this.tooltip=undefined;}}
select(col,row){const source=this.getters.getSelectedZone();if(isInside(col,row,source)){this.autofillZone=undefined;return;}
this.direction=this.getDirection(col,row);switch(this.direction){case"up":this.saveZone(row,source.top-1,source.left,source.right);this.steps=source.top-row;break;case"down":this.saveZone(source.bottom+1,row,source.left,source.right);this.steps=row-source.bottom;break;case"left":this.saveZone(source.top,source.bottom,col,source.left-1);this.steps=source.left-col;break;case"right":this.saveZone(source.top,source.bottom,source.right+1,col);this.steps=col-source.right;break;}
this.autofill(false);}
autofillAuto(){const activePosition=this.getters.getActivePosition();const table=this.getters.getTable(activePosition);let autofillRow=table?table.range.zone.bottom:this.getAutofillAutoLastRow();const selection=this.getters.getSelectedZone();for(let row=selection.bottom+1;row<=autofillRow;row++){if(this.getters.getEvaluatedCell({...activePosition,row}).type!==CellValueType.empty){autofillRow=row-1;break;}}
if(autofillRow>selection.bottom){this.select(activePosition.col,autofillRow);this.autofill(true);}}
getAutofillAutoLastRow(){const zone=this.getters.getSelectedZone();const sheetId=this.getters.getActiveSheetId();let col=zone.left;let row=zone.bottom;if(col>0){let leftPosition={sheetId,col:col-1,row};while(this.getters.getEvaluatedCell(leftPosition).type!==CellValueType.empty){row+=1;leftPosition={sheetId,col:col-1,row};}}
if(row===zone.bottom){col=zone.right;if(col<=this.getters.getNumberCols(sheetId)){let rightPosition={sheetId,col:col+1,row};while(this.getters.getEvaluatedCell(rightPosition).type!==CellValueType.empty){row+=1;rightPosition={sheetId,col:col+1,row};}}}
return row-1;}
computeNewCell(generator,col,row,apply){const{cellData,tooltip,origin}=generator.next();const{content,style,border,format}=cellData;this.tooltip=tooltip;if(apply){this.dispatch("AUTOFILL_CELL",{originCol:origin.col,originRow:origin.row,col,row,content,style,border,format,});}}
getRule(cell,cells){const rules=autofillRulesRegistry.getAll().sort((a,b)=>a.sequence-b.sequence);const rule=rules.find((rule)=>rule.condition(cell,cells));return rule&&rule.generateRule(cell,cells);}
createGenerator(source){const nextCells=[];const cellsData=[];const sheetId=this.getters.getActiveSheetId();for(let xc of source){const{col,row}=toCartesian(xc);const cell=this.getters.getCell({sheetId,col,row});cellsData.push({col,row,cell,sheetId,});}
const cells=cellsData.map((cellData)=>cellData.cell);for(let cellData of cellsData){let rule={type:"COPY_MODIFIER"};if(cellData&&cellData.cell){const newRule=this.getRule(cellData.cell,cells);rule=newRule||rule;}
const border=this.getters.getCellBorder(cellData)||undefined;nextCells.push({data:{...cellData,border},rule,});}
return new AutofillGenerator(nextCells,this.getters,this.direction);}
saveZone(top,bottom,left,right){this.autofillZone={top,bottom,left,right};}
getDirection(col,row){const source=this.getters.getSelectedZone();const position={up:{number:source.top-row,value:"up"},down:{number:row-source.bottom,value:"down"},left:{number:source.left-col,value:"left"},right:{number:col-source.right,value:"right"},};if(Object.values(position).map((x)=>(x.number>0?1:0)).reduce((acc,value)=>acc+value)===1){return Object.values(position).find((x)=>(x.number>0?1:0)).value;}
const first=position.up.number>0?"up":"down";const second=position.left.number>0?"left":"right";return Math.abs(position[first].number)>=Math.abs(position[second].number)?position[first].value:position[second].value;}
autoFillMerge(originCol,originRow,col,row){const sheetId=this.getters.getActiveSheetId();const position={sheetId,col,row};const originPosition={sheetId,col:originCol,row:originRow};if(this.getters.isInMerge(position)&&!this.getters.isInMerge(originPosition)){const zone=this.getters.getMerge(position);if(zone){this.dispatch("REMOVE_MERGE",{sheetId,target:[zone],});}}
const originMerge=this.getters.getMerge(originPosition);if(originMerge?.left===originCol&&originMerge?.top===originRow){this.dispatch("ADD_MERGE",{sheetId,target:[{top:row,bottom:row+originMerge.bottom-originMerge.top,left:col,right:col+originMerge.right-originMerge.left,},],});}}
autofillCF(originCol,originRow,col,row){const sheetId=this.getters.getActiveSheetId();const cfOrigin=this.getters.getRulesByCell(sheetId,originCol,originRow);for(const cf of cfOrigin){const newCfRanges=this.getters.getAdaptedCfRanges(sheetId,cf,[positionToZone({col,row})],[]);if(newCfRanges){this.dispatch("ADD_CONDITIONAL_FORMAT",{cf:deepCopy(cf),ranges:newCfRanges,sheetId,});}}}
autofillDV(originCol,originRow,col,row){const sheetId=this.getters.getActiveSheetId();const cellPosition={sheetId,col:originCol,row:originRow};const dvOrigin=this.getters.getValidationRuleForCell(cellPosition);if(!dvOrigin){return;}
const dvRangesZones=dvOrigin.ranges.map((range)=>range.zone);const newDvRanges=recomputeZones(dvRangesZones.concat(positionToZone({col,row})),[]);this.dispatch("ADD_DATA_VALIDATION_RULE",{rule:dvOrigin,ranges:newDvRanges.map((zone)=>this.getters.getRangeDataFromZone(sheetId,zone)),sheetId,});}
drawLayer(renderingContext){if(!this.autofillZone){return;}
const{ctx,thinLineWidth}=renderingContext;const{x,y,width,height}=this.getters.getVisibleRect(this.autofillZone);if(width>0&&height>0){ctx.strokeStyle="black";ctx.lineWidth=thinLineWidth;ctx.setLineDash([3]);ctx.strokeRect(x,y,width,height);ctx.setLineDash([]);}}}
class AutomaticSumPlugin extends UIPlugin{static getters=["getAutomaticSums"];handle(cmd){switch(cmd.type){case"SUM_SELECTION":const sheetId=this.getters.getActiveSheetId();const{zones,anchor}=this.getters.getSelection();for(const zone of zones){const sums=this.getAutomaticSums(sheetId,zone,anchor.cell);this.dispatchCellUpdates(sheetId,sums);}
break;}}
getAutomaticSums(sheetId,zone,anchor){return this.shouldFindData(sheetId,zone)?this.sumAdjacentData(sheetId,zone,anchor):this.sumData(sheetId,zone);}
sumData(sheetId,zone){const dimensions=this.dimensionsToSum(sheetId,zone);const sums=this.sumDimensions(sheetId,zone,dimensions).filter(({zone})=>!this.getters.isEmpty(sheetId,zone));if(dimensions.has("ROW")&&dimensions.has("COL")){sums.push(this.sumTotal(zone));}
return sums;}
sumAdjacentData(sheetId,zone,anchor){const{col,row}=isInside(anchor.col,anchor.row,zone)?anchor:{col:zone.left,row:zone.top};const dataZone=this.findAdjacentData(sheetId,col,row);if(!dataZone){return[];}
if(this.getters.isSingleCellOrMerge(sheetId,zone)||isOneDimensional(union(dataZone,zone))){return[{position:{col,row},zone:dataZone}];}
else{return this.sumDimensions(sheetId,union(dataZone,zone),this.transpose(this.dimensionsToSum(sheetId,zone)));}}
findAdjacentData(sheetId,col,row){const sheet=this.getters.getSheet(sheetId);const mainCellPosition=this.getters.getMainCellPosition({sheetId,col,row});const zone=this.findSuitableZoneToSum(sheet,mainCellPosition.col,mainCellPosition.row);if(zone){return this.getters.expandZone(sheetId,zone);}
return undefined;}
findSuitableZoneToSum(sheet,col,row){const topCell=this.getters.getEvaluatedCell({sheetId:sheet.id,col,row:row-1});const leftCell=this.getters.getEvaluatedCell({sheetId:sheet.id,col:col-1,row});if(this.isNumber(leftCell)&&!this.isNumber(topCell)){return this.findHorizontalZone(sheet,col,row);}
const verticalZone=this.findVerticalZone(sheet,col,row);if(this.isZoneValid(verticalZone)){return verticalZone;}
const horizontalZone=this.findHorizontalZone(sheet,col,row);if(this.isZoneValid(horizontalZone)){return horizontalZone;}
return undefined;}
findVerticalZone(sheet,col,row){const zone={top:0,bottom:row-1,left:col,right:col,};const top=this.reduceZoneStart(sheet,zone,zone.bottom);return{...zone,top};}
findHorizontalZone(sheet,col,row){const zone={top:row,bottom:row,left:0,right:col-1,};const left=this.reduceZoneStart(sheet,zone,zone.right);return{...zone,left};}
reduceZoneStart(sheet,zone,end){const cells=this.getters.getEvaluatedCellsInZone(sheet.id,zone);const cellPositions=range(end,-1,-1);const invalidCells=cellPositions.filter((position)=>cells[position]&&!cells[position].isAutoSummable);const maxValidPosition=largeMax(invalidCells);const numberSequences=groupConsecutive(cellPositions.filter((position)=>this.isNumber(cells[position])));const firstSequence=numberSequences[0]||[];if(largeMax(firstSequence)<maxValidPosition){return Infinity;}
return largeMin(firstSequence);}
shouldFindData(sheetId,zone){return this.getters.isEmpty(sheetId,zone)||this.getters.isSingleCellOrMerge(sheetId,zone);}
isNumber(cell){return cell.type===CellValueType.number&&!(cell.format&&isDateTimeFormat(cell.format));}
isZoneValid(zone){return zone.bottom>=zone.top&&zone.right>=zone.left;}
lastColIsEmpty(sheetId,zone){return this.getters.isEmpty(sheetId,{...zone,left:zone.right});}
lastRowIsEmpty(sheetId,zone){return this.getters.isEmpty(sheetId,{...zone,top:zone.bottom});}
dimensionsToSum(sheetId,zone){const dimensions=new Set();if(isOneDimensional(zone)){dimensions.add(zoneToDimension(zone).numberOfCols===1?"COL":"ROW");return dimensions;}
if(this.lastColIsEmpty(sheetId,zone)){dimensions.add("ROW");}
if(this.lastRowIsEmpty(sheetId,zone)){dimensions.add("COL");}
if(dimensions.size===0){dimensions.add("COL");}
return dimensions;}
sumDimensions(sheetId,zone,dimensions){return[...(dimensions.has("COL")?this.sumColumns(zone,sheetId):[]),...(dimensions.has("ROW")?this.sumRows(zone,sheetId):[]),];}
sumTotal(zone){const{bottom,right}=zone;return{position:{col:right,row:bottom},zone:{...zone,top:bottom,right:right-1},};}
sumColumns(zone,sheetId){const target=this.nextEmptyRow(sheetId,{...zone,bottom:zone.bottom-1});zone={...zone,bottom:Math.min(zone.bottom,target.bottom-1)};return positions(target).map((position)=>({position,zone:{...zone,right:position.col,left:position.col},}));}
sumRows(zone,sheetId){const target=this.nextEmptyCol(sheetId,{...zone,right:zone.right-1});zone={...zone,right:Math.min(zone.right,target.right-1)};return positions(target).map((position)=>({position,zone:{...zone,top:position.row,bottom:position.row},}));}
dispatchCellUpdates(sheetId,sums){for(const sum of sums){const{col,row}=sum.position;this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=SUM(${this.getters.zoneToXC(sheetId, sum.zone)})`,});}}
nextEmptyRow(sheetId,zone){let start=zone.bottom+1;const{left,right}=zone;while(!this.getters.isEmpty(sheetId,{bottom:start,top:start,left,right})){start++;}
return{...zone,top:start,bottom:start,};}
nextEmptyCol(sheetId,zone){let start=zone.right+1;const{top,bottom}=zone;while(!this.getters.isEmpty(sheetId,{left:start,right:start,top,bottom})){start++;}
return{...zone,left:start,right:start,};}
transpose(dimensions){return new Set([...dimensions.values()].map((dimension)=>(dimension==="COL"?"ROW":"COL")));}}
otRegistry.addTransformation("ADD_COLUMNS_ROWS",["ADD_COLUMNS_ROWS"],addHeadersTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["ADD_COLUMNS_ROWS"],addHeadersTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["CREATE_CHART","UPDATE_CHART"],updateChartRangesTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["CREATE_CHART","UPDATE_CHART"],updateChartRangesTransformation);otRegistry.addTransformation("DELETE_SHEET",["MOVE_RANGES"],transformTargetSheetId);otRegistry.addTransformation("DELETE_FIGURE",["UPDATE_FIGURE","UPDATE_CHART"],updateChartFigure);otRegistry.addTransformation("CREATE_SHEET",["CREATE_SHEET"],createSheetTransformation);otRegistry.addTransformation("ADD_MERGE",["ADD_MERGE","REMOVE_MERGE"],mergeTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["FREEZE_COLUMNS","FREEZE_ROWS"],freezeTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["FREEZE_COLUMNS","FREEZE_ROWS"],freezeTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["UPDATE_TABLE"],updateTableTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["UPDATE_TABLE"],updateTableTransformation);otRegistry.addTransformation("REMOVE_TABLE_STYLE",["CREATE_TABLE","UPDATE_TABLE"],removeTableStyleTransform);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["GROUP_HEADERS","UNGROUP_HEADERS","FOLD_HEADER_GROUP","UNFOLD_HEADER_GROUP"],groupHeadersTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["GROUP_HEADERS","UNGROUP_HEADERS","FOLD_HEADER_GROUP","UNFOLD_HEADER_GROUP"],groupHeadersTransformation);otRegistry.addTransformation("REMOVE_PIVOT",["RENAME_PIVOT","DUPLICATE_PIVOT","INSERT_PIVOT","UPDATE_PIVOT"],pivotRemovedTransformation);otRegistry.addTransformation("DELETE_SHEET",["ADD_PIVOT","UPDATE_PIVOT"],pivotDeletedSheetTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["ADD_PIVOT","UPDATE_PIVOT"],pivotZoneTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["ADD_PIVOT","UPDATE_PIVOT"],pivotZoneTransformation);function pivotZoneTransformation(toTransform,executed){if(toTransform.pivot.type!=="SPREADSHEET"){return toTransform;}
if(toTransform.pivot.dataSet?.sheetId!==executed.sheetId){return toTransform;}
const newZone=transformZone(toTransform.pivot.dataSet.zone,executed);const dataSet=newZone?{...toTransform.pivot.dataSet,zone:newZone}:undefined;return{...toTransform,pivot:{...toTransform.pivot,dataSet}};}
function pivotDeletedSheetTransformation(toTransform,executed){if(toTransform.pivot.type!=="SPREADSHEET"){return toTransform;}
if(toTransform.pivot.dataSet?.sheetId===executed.sheetId){return{...toTransform,pivot:{...toTransform.pivot,dataSet:undefined}};}
return toTransform;}
function pivotRemovedTransformation(toTransform,executed){if(toTransform.pivotId===executed.pivotId){return undefined;}
return toTransform;}
function transformTargetSheetId(toTransform,executed){const deletedSheetId=executed.sheetId;if(toTransform.targetSheetId===deletedSheetId||toTransform.sheetId===deletedSheetId){return undefined;}
return toTransform;}
function updateChartFigure(toTransform,executed){if(toTransform.id===executed.id){return undefined;}
return toTransform;}
function updateChartRangesTransformation(toTransform,executed){return{...toTransform,definition:transformDefinition(toTransform.definition,executed),};}
function createSheetTransformation(toTransform,executed){if(toTransform.name===executed.name){return{...toTransform,name:toTransform.name?.match(/\d+/)?toTransform.name.replace(/\d+/,(n)=>(parseInt(n)+1).toString()):`${toTransform.name}~`,position:toTransform.position+1,};}
return toTransform;}
function mergeTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId){return toTransform;}
const target=[];for(const zone1 of toTransform.target){for(const zone2 of executed.target){if(!overlap(zone1,zone2)){target.push({...zone1});}}}
if(target.length){return{...toTransform,target};}
return undefined;}
function freezeTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId){return toTransform;}
const dimension=toTransform.type==="FREEZE_COLUMNS"?"COL":"ROW";if(dimension!==executed.dimension){return toTransform;}
let quantity=toTransform["quantity"];if(executed.type==="REMOVE_COLUMNS_ROWS"){const executedElements=[...executed.elements].sort((a,b)=>b-a);for(let removedElement of executedElements){if(quantity>removedElement){quantity--;}}}
if(executed.type==="ADD_COLUMNS_ROWS"){const executedBase=executed.position==="before"?executed.base-1:executed.base;quantity=quantity>executedBase?quantity+executed.quantity:quantity;}
return quantity>0?{...toTransform,quantity}:undefined;}
function updateTableTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId){return toTransform;}
const newCmdZone=transformZone(toTransform.zone,executed);if(!newCmdZone){return undefined;}
const newTableRange=toTransform.newTableRange?transformRangeData(toTransform.newTableRange,executed):undefined;return{...toTransform,newTableRange,zone:newCmdZone};}
function removeTableStyleTransform(toTransform,executed){if(toTransform.config?.styleId!==executed.tableStyleId){return toTransform;}
return{...toTransform,config:{...toTransform.config,styleId:DEFAULT_TABLE_CONFIG.styleId},};}
function addHeadersTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId||toTransform.dimension!==executed.dimension){return toTransform;}
let result=undefined;if(executed.type==="REMOVE_COLUMNS_ROWS"){result=moveHeaderIndexesOnHeaderDeletion(executed.elements,[toTransform.base])[0];}
else if(executed.type==="ADD_COLUMNS_ROWS"){const base=getAddHeaderStartIndex(executed.position,executed.base);result=moveHeaderIndexesOnHeaderAddition(base,executed.quantity,[toTransform.base])[0];}
if(result===undefined){return undefined;}
return{...toTransform,base:result};}
function groupHeadersTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId||toTransform.dimension!==executed.dimension){return toTransform;}
const elementsToTransform=range(toTransform.start,toTransform.end+1);let results=[];if(executed.type==="REMOVE_COLUMNS_ROWS"){results=moveHeaderIndexesOnHeaderDeletion(executed.elements,elementsToTransform);}
else if(executed.type==="ADD_COLUMNS_ROWS"){const base=getAddHeaderStartIndex(executed.position,executed.base);results=moveHeaderIndexesOnHeaderAddition(base,executed.quantity,elementsToTransform);}
if(results.length===0){return undefined;}
return{...toTransform,start:Math.min(...results),end:Math.max(...results)};}
const transformations=[{match:isSheetDependent,fn:transformSheetId},{match:isTargetDependent,fn:transformTarget},{match:isZoneDependent,fn:transformZoneDependentCommand},{match:isPositionDependent,fn:transformPosition},{match:isHeadersDependant,fn:transformHeaders},{match:isRangeDependant,fn:transformRangesDependentCommand},];function transform(toTransform,executed){const specificTransform=otRegistry.getTransformation(toTransform.type,executed.type);return specificTransform?specificTransform(toTransform,executed):genericTransform(toTransform,executed);}
function transformAll(toTransform,executed){let transformedCommands=[...toTransform];for(const executedCommand of executed){transformedCommands=transformedCommands.map((cmd)=>transform(cmd,executedCommand)).filter(isDefined);}
return transformedCommands;}
function genericTransform(cmd,executed){for(const{match,fn}of transformations){if(match(cmd)){const result=fn(cmd,executed);if(result==="SKIP_TRANSFORMATION"){continue;}
if(result==="IGNORE_COMMAND"){return undefined;}
cmd=result;}}
return cmd;}
function transformSheetId(toTransform,executed){if(!("sheetId"in executed)){return toTransform;}
const deleteSheet=executed.type==="DELETE_SHEET"&&executed.sheetId;if(toTransform.sheetId===deleteSheet){return"IGNORE_COMMAND";}
else if(toTransform.type==="CREATE_SHEET"||executed.type==="CREATE_SHEET"||toTransform.sheetId!==executed.sheetId){return toTransform;}
return"SKIP_TRANSFORMATION";}
function transformTarget(cmd,executed){const transformSheetResult=transformSheetId(cmd,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":cmd;}
const target=[];for(const zone of cmd.target){const newZone=transformZone(zone,executed);if(newZone){target.push(newZone);}}
if(!target.length){return"IGNORE_COMMAND";}
return{...cmd,target};}
function transformZoneDependentCommand(cmd,executed){const transformSheetResult=transformSheetId(cmd,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":cmd;}
const newZone=transformZone(cmd.zone,executed);if(newZone){return{...cmd,zone:newZone};}
return"IGNORE_COMMAND";}
function transformRangesDependentCommand(toTransform,executed){if(!("sheetId"in executed)){return toTransform;}
const ranges=toTransform.ranges.map((range)=>transformRangeData(range,executed)).filter(isDefined);if(!ranges.length){return"IGNORE_COMMAND";}
return{...toTransform,ranges};}
function transformHeaders(toTransform,executed){const transformSheetResult=transformSheetId(toTransform,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":toTransform;}
if(executed.type!=="ADD_COLUMNS_ROWS"&&executed.type!=="REMOVE_COLUMNS_ROWS"){return"SKIP_TRANSFORMATION";}
if(executed.dimension!==toTransform.dimension){return toTransform;}
let result=[];if(executed.type==="REMOVE_COLUMNS_ROWS"){result=moveHeaderIndexesOnHeaderDeletion(executed.elements,toTransform.elements);}
else if(executed.type==="ADD_COLUMNS_ROWS"){const base=getAddHeaderStartIndex(executed.position,executed.base);result=moveHeaderIndexesOnHeaderAddition(base,executed.quantity,toTransform.elements);}
if(result.length===0){return"IGNORE_COMMAND";}
return{...toTransform,elements:result};}
function transformPosition(toTransform,executed){const transformSheetResult=transformSheetId(toTransform,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":toTransform;}
if(executed.type==="ADD_COLUMNS_ROWS"||executed.type==="REMOVE_COLUMNS_ROWS"){return transformPositionWithGrid(toTransform,executed);}
if(executed.type==="ADD_MERGE"){return transformPositionWithMerge(toTransform,executed);}
return"SKIP_TRANSFORMATION";}
function transformPositionWithGrid(toTransform,executed){const field=executed.dimension==="COL"?"col":"row";let base=toTransform[field];if(executed.type==="REMOVE_COLUMNS_ROWS"){const elements=[...executed.elements].sort((a,b)=>b-a);if(elements.includes(base)){return"IGNORE_COMMAND";}
for(let removedElement of elements){if(base>=removedElement){base--;}}}
if(executed.type==="ADD_COLUMNS_ROWS"){if(base>executed.base||(base===executed.base&&executed.position==="before")){base=base+executed.quantity;}}
return{...toTransform,[field]:base};}
function transformPositionWithMerge(toTransform,executed){for(const zone of executed.target){const sameTopLeft=toTransform.col===zone.left&&toTransform.row===zone.top;if(!sameTopLeft&&isInside(toTransform.col,toTransform.row,zone)){return"IGNORE_COMMAND";}}
return toTransform;}
class Revision{rootCommand;timestamp;id;clientId;_commands=[];_changes=[];constructor(id,clientId,commands,rootCommand,changes,timestamp){this.rootCommand=rootCommand;this.timestamp=timestamp;this.id=id;this.clientId=clientId;this._commands=[...commands];this._changes=changes?[...changes]:[];}
setChanges(changes){this._changes=changes;}
get commands(){return this._commands;}
get changes(){return this._changes;}}
class ClientDisconnectedError extends Error{}
class Session extends EventBus{revisions;transportService;serverRevisionId;clients={};clientId="local";debouncedMove;pendingMessages=[];waitingAck=false;waitingUndoRedoAck=false;isReplayingInitialRevisions=false;processedRevisions=new Set();uuidGenerator=new UuidGenerator();lastLocalOperation;constructor(revisions,transportService,serverRevisionId=DEFAULT_REVISION_ID){super();this.revisions=revisions;this.transportService=transportService;this.serverRevisionId=serverRevisionId;this.debouncedMove=debounce(this._move.bind(this),DEBOUNCE_TIME);}
canApplyOptimisticUpdate(){return!this.waitingUndoRedoAck;}
save(rootCommand,commands,changes){if(!commands.length||!changes.length||!this.canApplyOptimisticUpdate())
return;const revision=new Revision(this.uuidGenerator.uuidv4(),this.clientId,commands,rootCommand,changes,Date.now());this.revisions.append(revision.id,revision);if(rootCommand.type!=="REQUEST_REDO"){this.lastLocalOperation=revision;}
this.trigger("new-local-state-update",{id:revision.id});this.sendUpdateMessage({type:"REMOTE_REVISION",version:MESSAGE_VERSION,serverRevisionId:this.serverRevisionId,nextRevisionId:revision.id,clientId:revision.clientId,commands:revision.commands,});}
undo(revisionId){this.waitingUndoRedoAck=true;this.sendUpdateMessage({type:"REVISION_UNDONE",version:MESSAGE_VERSION,serverRevisionId:this.serverRevisionId,nextRevisionId:this.uuidGenerator.uuidv4(),undoneRevisionId:revisionId,});}
redo(revisionId){this.waitingUndoRedoAck=true;this.sendUpdateMessage({type:"REVISION_REDONE",version:MESSAGE_VERSION,serverRevisionId:this.serverRevisionId,nextRevisionId:this.uuidGenerator.uuidv4(),redoneRevisionId:revisionId,});}
move(position){this.debouncedMove(position);}
join(client){if(client){this.clients[client.id]=client;this.clientId=client.id;}
else{this.clients["local"]={id:"local",name:"local"};this.clientId="local";}
this.transportService.onNewMessage(this.clientId,this.onMessageReceived.bind(this));}
loadInitialMessages(messages){const start=performance.now();const numberOfCommands=messages.reduce((acc,message)=>acc+(message.type==="REMOTE_REVISION"?message.commands.length:1),0);this.isReplayingInitialRevisions=true;for(const message of messages){this.onMessageReceived(message);}
this.isReplayingInitialRevisions=false;console.info("Replayed",numberOfCommands,"commands in",performance.now()-start,"ms");}
async leave(data){if(Object.keys(this.clients).length===1&&this.processedRevisions.size){await this.snapshot(data());}
delete this.clients[this.clientId];this.transportService.leave(this.clientId);this.transportService.sendMessage({type:"CLIENT_LEFT",clientId:this.clientId,version:MESSAGE_VERSION,});}
async snapshot(data){if(this.pendingMessages.length!==0){return;}
const snapshotId=this.uuidGenerator.uuidv4();await this.transportService.sendMessage({type:"SNAPSHOT",nextRevisionId:snapshotId,serverRevisionId:this.serverRevisionId,data:{...data,revisionId:snapshotId},version:MESSAGE_VERSION,});}
getClient(){const client=this.clients[this.clientId];if(!client){throw new ClientDisconnectedError("The client left the session");}
return client;}
getConnectedClients(){return new Set(Object.values(this.clients).filter(isDefined));}
getRevisionId(){return this.serverRevisionId;}
isFullySynchronized(){return this.pendingMessages.length===0;}
getLastLocalNonEmptyRevision(){return this.lastLocalOperation;}
_move(position){if(!this.clients[this.clientId])
return;const currentPosition=this.clients[this.clientId]?.position;if(currentPosition?.col===position.col&&currentPosition.row===position.row&&currentPosition.sheetId===position.sheetId){return;}
const type=currentPosition?"CLIENT_MOVED":"CLIENT_JOINED";const client=this.getClient();this.clients[this.clientId]={...client,position};this.transportService.sendMessage({type,version:MESSAGE_VERSION,client:{...client,position},});}
onMessageReceived(message){if(this.isAlreadyProcessed(message))
return;if(this.isWrongServerRevisionId(message)){this.trigger("unexpected-revision-id");return;}
switch(message.type){case"CLIENT_MOVED":this.onClientMoved(message);break;case"CLIENT_JOINED":this.onClientJoined(message);break;case"CLIENT_LEFT":this.onClientLeft(message);break;case"REVISION_REDONE":{this.revisions.redo(message.redoneRevisionId,message.nextRevisionId,message.serverRevisionId);this.trigger("revision-redone",{revisionId:message.redoneRevisionId,commands:this.revisions.get(message.redoneRevisionId).commands,});break;}
case"REVISION_UNDONE":this.revisions.undo(message.undoneRevisionId,message.nextRevisionId,message.serverRevisionId);this.trigger("revision-undone",{revisionId:message.undoneRevisionId,commands:this.revisions.get(message.undoneRevisionId).commands,});break;case"REMOTE_REVISION":const{clientId,commands,timestamp}=message;const revision=new Revision(message.nextRevisionId,clientId,commands,undefined,undefined,timestamp);if(revision.clientId!==this.clientId){this.revisions.insert(revision.id,revision,message.serverRevisionId);const pendingCommands=this.pendingMessages.filter((msg)=>msg.type==="REMOTE_REVISION").map((msg)=>msg.commands).flat();this.trigger("remote-revision-received",{commands:transformAll(commands,pendingCommands),});}
break;case"SNAPSHOT_CREATED":{const revision=new Revision(message.nextRevisionId,"server",[],undefined,undefined,Date.now());this.revisions.insert(revision.id,revision,message.serverRevisionId);this.dropPendingHistoryMessages();this.trigger("snapshot");this.lastLocalOperation=undefined;break;}}
this.acknowledge(message);this.trigger("collaborative-event-received");}
onClientMoved(message){if(message.client.id!==this.clientId){this.clients[message.client.id]=message.client;}}
onClientJoined(message){if(message.client.id!==this.clientId){this.clients[message.client.id]=message.client;const client=this.clients[this.clientId];if(client){const{position}=client;if(position){this.transportService.sendMessage({type:"CLIENT_MOVED",version:MESSAGE_VERSION,client:{...client,position},});}}}}
onClientLeft(message){if(message.clientId!==this.clientId){delete this.clients[message.clientId];}}
sendUpdateMessage(message){this.pendingMessages.push(message);if(this.waitingAck){return;}
this.waitingAck=true;this.sendPendingMessage();}
sendPendingMessage(){let message=this.pendingMessages[0];if(!message)
return;if(message.type==="REMOTE_REVISION"){const revision=this.revisions.get(message.nextRevisionId);if(revision.commands.length===0){this.revisions.drop(revision.id);const revisionIds=this.pendingMessages.filter((message)=>message.type==="REMOTE_REVISION").map((message)=>message.nextRevisionId);this.trigger("pending-revisions-dropped",{revisionIds});this.waitingAck=false;this.waitingUndoRedoAck=false;this.pendingMessages=[];return;}
message={...message,clientId:revision.clientId,commands:revision.commands,};}
if(this.isReplayingInitialRevisions){throw new Error(`Trying to send a new revision while replaying initial revision. This can lead to endless dispatches every time the spreadsheet is open.
      ${JSON.stringify(message)}`);}
this.transportService.sendMessage({...message,serverRevisionId:this.serverRevisionId,});}
acknowledge(message){if(message.type==="REVISION_UNDONE"||message.type==="REVISION_REDONE"){this.waitingUndoRedoAck=false;}
switch(message.type){case"REMOTE_REVISION":case"REVISION_REDONE":case"REVISION_UNDONE":case"SNAPSHOT_CREATED":this.waitingAck=false;this.pendingMessages=this.pendingMessages.filter((msg)=>msg.nextRevisionId!==message.nextRevisionId);this.serverRevisionId=message.nextRevisionId;this.processedRevisions.add(message.nextRevisionId);this.sendPendingMessage();break;}}
isAlreadyProcessed(message){if(message.type==="CLIENT_MOVED"&&message.client.id===this.clientId){return true;}
switch(message.type){case"REMOTE_REVISION":case"REVISION_REDONE":case"REVISION_UNDONE":case"SNAPSHOT_CREATED":return this.processedRevisions.has(message.nextRevisionId);default:return false;}}
isWrongServerRevisionId(message){switch(message.type){case"REMOTE_REVISION":case"REVISION_REDONE":case"REVISION_UNDONE":case"SNAPSHOT_CREATED":return message.serverRevisionId!==this.serverRevisionId;default:return false;}}
dropPendingHistoryMessages(){this.waitingUndoRedoAck=false;this.pendingMessages=this.pendingMessages.filter(({type})=>type!=="REVISION_REDONE"&&type!=="REVISION_UNDONE");}}
function randomChoice(arr){return arr[Math.floor(Math.random()*arr.length)];}
const colors=["#ff851b","#0074d9","#7fdbff","#b10dc9","#39cccc","#f012be","#3d9970","#111111","#ff4136","#aaaaaa","#85144b","#001f3f",];class CollaborativePlugin extends UIPlugin{static getters=["getClientsToDisplay","getClient","getConnectedClients","isFullySynchronized",];static layers=["Selection"];availableColors=new Set(colors);colors={};session;constructor(config){super(config);this.session=config.session;}
isPositionValid(position){return(position.row<this.getters.getNumberRows(position.sheetId)&&position.col<this.getters.getNumberCols(position.sheetId));}
chooseNewColor(){if(this.availableColors.size===0){this.availableColors=new Set(colors);}
const color=randomChoice([...this.availableColors.values()]);this.availableColors.delete(color);return color;}
getClient(){return this.session.getClient();}
getConnectedClients(){return this.session.getConnectedClients();}
isFullySynchronized(){return this.session.isFullySynchronized();}
getClientsToDisplay(){try{this.getters.getClient();}
catch(e){if(e instanceof ClientDisconnectedError){return[];}
else{throw e;}}
const sheetId=this.getters.getActiveSheetId();const clients=[];for(const client of this.getters.getConnectedClients()){if(client.id!==this.getters.getClient().id&&client.position&&client.position.sheetId===sheetId&&this.isPositionValid(client.position)){const position=client.position;if(!this.colors[client.id]){this.colors[client.id]=this.chooseNewColor();}
const color=this.colors[client.id];clients.push({...client,position,color});}}
return clients;}
drawLayer(renderingContext){if(this.getters.isDashboard()){return;}
const{ctx,thinLineWidth}=renderingContext;const activeSheetId=this.getters.getActiveSheetId();for(const client of this.getClientsToDisplay()){const{row,col}=client.position;const zone=this.getters.expandZone(activeSheetId,{top:row,bottom:row,left:col,right:col,});const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width<=0||height<=0){continue;}
const color=client.color;const cellBackgroundColor=`${color}10`;ctx.fillStyle=cellBackgroundColor;ctx.lineWidth=4*thinLineWidth;ctx.strokeStyle=color;ctx.globalCompositeOperation="multiply";ctx.fillRect(x,y,width,height);ctx.globalCompositeOperation="source-over";ctx.strokeRect(x,y,width,height);ctx.font=`bold ${DEFAULT_FONT_SIZE + 1}px ${DEFAULT_FONT}`;}}}
class DataCleanupPlugin extends UIPlugin{allowDispatch(cmd){switch(cmd.type){case"REMOVE_DUPLICATES":return this.checkValidations(cmd,this.chainValidations(this.checkSingleRangeSelected,this.checkNoMergeInZone,this.checkRangeContainsValues,this.checkColumnsIncludedInZone),this.chainValidations(this.checkNoColumnProvided,this.checkColumnsAreUnique));}
return"Success";}
handle(cmd){switch(cmd.type){case"REMOVE_DUPLICATES":this.removeDuplicates(cmd.columns,cmd.hasHeader);break;case"TRIM_WHITESPACE":this.trimWhitespace();break;}}
removeDuplicates(columnsToAnalyze,hasHeader){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getSelectedZone();if(hasHeader){zone.top+=1;}
const uniqueRowsIndexes=this.getUniqueRowsIndexes(sheetId,zone.top,zone.bottom,columnsToAnalyze);const numberOfUniqueRows=uniqueRowsIndexes.length;if(numberOfUniqueRows===zoneToDimension(zone).numberOfRows){this.notifyRowsRemovedAndRemaining(0,numberOfUniqueRows);return;}
const rowsToKeep=uniqueRowsIndexes.map((rowIndex)=>({left:zone.left,top:rowIndex,right:zone.right,bottom:rowIndex,}));const handler=new CellClipboardHandler(this.getters,this.dispatch);const data=handler.copy(getClipboardDataPositions(sheetId,rowsToKeep));if(!data){return;}
this.dispatch("CLEAR_CELLS",{target:[zone],sheetId});const zonePasted={left:zone.left,top:zone.top,right:zone.left,bottom:zone.top,};handler.paste({zones:[zonePasted],sheetId},data,{isCutOperation:false});const remainingZone={left:zone.left,top:zone.top-(hasHeader?1:0),right:zone.right,bottom:zone.top+numberOfUniqueRows-1,};this.selection.selectZone({cell:{col:remainingZone.left,row:remainingZone.top},zone:remainingZone,});const removedRows=zone.bottom-zone.top+1-numberOfUniqueRows;this.notifyRowsRemovedAndRemaining(removedRows,numberOfUniqueRows);}
getUniqueRowsIndexes(sheetId,top,bottom,columns){const uniqueRows=new Map();for(const row of range(top,bottom+1)){const cellsValuesInRow=columns.map((col)=>{return this.getters.getEvaluatedCell({sheetId,col,row,}).value;});const isRowUnique=!Object.values(uniqueRows).some((uniqueRow)=>deepEquals(uniqueRow,cellsValuesInRow));if(isRowUnique){uniqueRows[row]=cellsValuesInRow;}}
return Object.keys(uniqueRows).map((key)=>parseInt(key));}
notifyRowsRemovedAndRemaining(removedRows,remainingRows){this.ui.notifyUI({type:"info",text:_t("%s duplicate rows found and removed.\n%s unique rows remain.",removedRows.toString(),remainingRows.toString()),sticky:false,});}
checkSingleRangeSelected(){const zones=this.getters.getSelectedZones();if(zones.length!==1){return"MoreThanOneRangeSelected";}
return"Success";}
checkNoMergeInZone(){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getSelectedZone();const mergesInZone=this.getters.getMergesInZone(sheetId,zone);if(mergesInZone.length>0){return"WillRemoveExistingMerge";}
return"Success";}
checkRangeContainsValues(cmd){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getSelectedZone();if(cmd.hasHeader){zone.top+=1;}
const evaluatedCells=this.getters.getEvaluatedCellsInZone(sheetId,zone);if(evaluatedCells.every((evaluatedCel)=>evaluatedCel.type==="empty")){return"EmptyTarget";}
return"Success";}
checkNoColumnProvided(cmd){if(cmd.columns.length===0){return"NoColumnsProvided";}
return"Success";}
checkColumnsIncludedInZone(cmd){const zone=this.getters.getSelectedZone();const columnsToAnalyze=cmd.columns;if(columnsToAnalyze.some((colIndex)=>colIndex<zone.left||colIndex>zone.right)){return"ColumnsNotIncludedInZone";}
return"Success";}
checkColumnsAreUnique(cmd){if(cmd.columns.length!==new Set(cmd.columns).size){return"DuplicatesColumnsSelected";}
return"Success";}
trimWhitespace(){const zones=recomputeZones(this.getters.getSelectedZones());const sheetId=this.getters.getActiveSheetId();let count=0;for(const{col,row}of zones.map(positions).flat()){const cell=this.getters.getCell({col,row,sheetId});if(!cell){continue;}
const trimmedContent=trimContent(cell.content);if(trimmedContent!==cell.content){count+=1;this.dispatch("UPDATE_CELL",{sheetId,col,row,content:trimmedContent,});}}
const text=count?_t("Trimmed whitespace from %s cells.",count):_t("No selected cells had whitespace trimmed.");this.ui.notifyUI({type:"info",text:text,sticky:false,});}}
class FormatPlugin extends UIPlugin{handle(cmd){switch(cmd.type){case"SET_DECIMAL":this.setDecimal(cmd.sheetId,cmd.target,cmd.step);break;case"SET_FORMATTING_WITH_PIVOT":{this.setContextualFormat(cmd.sheetId,cmd.target,cmd.format);break;}}}
setContextualFormat(sheetId,zones,format){const measurePositions=[];const measuresByPivotId={};for(const zone of recomputeZones(zones)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const position={sheetId,col,row};const pivotCell=this.getters.getPivotCellFromPosition(position);if(pivotCell.type==="VALUE"){measurePositions.push(position);const pivotId=this.getters.getPivotIdFromPosition(position)||"";measuresByPivotId[pivotId]??=new Set();measuresByPivotId[pivotId].add(pivotCell.measure);}}}}
const measureZones=recomputeZones(measurePositions.map(positionToZone));for(const pivotId in measuresByPivotId){const measures=measuresByPivotId[pivotId];const pivotDefinition=this.getters.getPivotCoreDefinition(pivotId);this.dispatch("UPDATE_PIVOT",{pivotId,pivot:{...pivotDefinition,measures:pivotDefinition.measures.map((measure)=>{if(measures.has(measure.id)){return{...measure,format};}
return measure;}),},});}
this.dispatch("SET_FORMATTING",{sheetId,target:measureZones,format:"",});this.dispatch("SET_FORMATTING",{sheetId,target:recomputeZones(zones,measureZones),format,});}
setDecimal(sheetId,zones,step){const positionsByFormat={};for(const zone of recomputeZones(zones)){for(const position of positions(zone)){const numberFormat=this.getCellNumberFormat({sheetId,...position});if(numberFormat!==undefined){const newFormat=changeDecimalPlaces(numberFormat,step);positionsByFormat[newFormat]=positionsByFormat[newFormat]||[];positionsByFormat[newFormat].push(position);}}}
for(const newFormat in positionsByFormat){const zones=recomputeZones(positionsByFormat[newFormat].map((position)=>positionToZone(position)));this.setContextualFormat(sheetId,zones,newFormat);}}
getCellNumberFormat(position){for(const pos of[position]){const cell=this.getters.getEvaluatedCell(pos);if(cell.type===CellValueType.number&&!(cell.format&&isDateTimeFormat(cell.format))){return cell.format||createDefaultFormat(cell.value);}}
return undefined;}}
class HeaderVisibilityUIPlugin extends UIPlugin{static getters=["getNextVisibleCellPosition","findVisibleHeader","findLastVisibleColRowIndex","findFirstVisibleColRowIndex","isRowHidden","isColHidden","isHeaderHidden",];isRowHidden(sheetId,index){return(this.getters.isRowHiddenByUser(sheetId,index)||this.getters.isRowFiltered(sheetId,index));}
isColHidden(sheetId,index){return this.getters.isColHiddenByUser(sheetId,index);}
isHeaderHidden(sheetId,dimension,index){return dimension==="COL"?this.isColHidden(sheetId,index):this.isRowHidden(sheetId,index);}
getNextVisibleCellPosition({sheetId,col,row}){return{sheetId,col:this.findVisibleHeader(sheetId,"COL",col,this.getters.getNumberCols(sheetId)-1),row:this.findVisibleHeader(sheetId,"ROW",row,this.getters.getNumberRows(sheetId)-1),};}
findVisibleHeader(sheetId,dimension,from,to){if(from<=to){for(let i=from;i<=to;i++){if(this.getters.doesHeaderExist(sheetId,dimension,i)&&!this.isHeaderHidden(sheetId,dimension,i)){return i;}}}
if(from>to){for(let i=from;i>=to;i--){if(this.getters.doesHeaderExist(sheetId,dimension,i)&&!this.isHeaderHidden(sheetId,dimension,i)){return i;}}}
return undefined;}
findLastVisibleColRowIndex(sheetId,dimension,{last,first}){const lastVisibleIndex=range(last,first,-1).find((index)=>!this.isHeaderHidden(sheetId,dimension,index));return lastVisibleIndex||first;}
findFirstVisibleColRowIndex(sheetId,dimension){const numberOfHeaders=this.getters.getNumberHeaders(sheetId,dimension);for(let i=0;i<numberOfHeaders;i++){if(dimension==="COL"&&!this.isColHidden(sheetId,i)){return i;}
if(dimension==="ROW"&&!this.isRowHidden(sheetId,i)){return i;}}
return undefined;}
exportForExcel(data){for(const sheetData of data.sheets){for(const[row,rowData]of Object.entries(sheetData.rows)){const isHidden=this.isRowHidden(sheetData.id,Number(row));rowData.isHidden=isHidden;}}}}
class InsertPivotPlugin extends UIPlugin{static getters=[];handle(cmd){switch(cmd.type){case"INSERT_NEW_PIVOT":this.insertNewPivot(cmd.pivotId,cmd.newSheetId);break;case"DUPLICATE_PIVOT_IN_NEW_SHEET":this.duplicatePivotInNewSheet(cmd.pivotId,cmd.newPivotId,cmd.newSheetId);break;case"INSERT_PIVOT_WITH_TABLE":this.insertPivotWithTable(cmd.sheetId,cmd.col,cmd.row,cmd.pivotId,cmd.table,cmd.pivotMode);break;case"SPLIT_PIVOT_FORMULA":this.splitPivotFormula(cmd.sheetId,cmd.col,cmd.row,cmd.pivotId);}}
insertNewPivot(pivotId,sheetId){if(getZoneArea(this.getters.getSelectedZone())===1){this.selection.selectTableAroundSelection();}
const currentSheetId=this.getters.getActiveSheetId();this.dispatch("ADD_PIVOT",{pivotId,pivot:{dataSet:{zone:this.getters.getSelectedZone(),sheetId:currentSheetId,},columns:[],rows:[],measures:[],name:_t("New pivot"),type:"SPREADSHEET",},});const position=this.getters.getSheetIds().findIndex((sheetId)=>sheetId===currentSheetId)+1;const formulaId=this.getters.getPivotFormulaId(pivotId);this.dispatch("CREATE_SHEET",{sheetId,name:_t("Pivot #%(formulaId)s",{formulaId}),position,});this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:currentSheetId,sheetIdTo:sheetId,});const pivot=this.getters.getPivot(pivotId);this.insertPivotWithTable(sheetId,0,0,pivotId,pivot.getTableStructure().export(),"dynamic");}
duplicatePivotInNewSheet(pivotId,newPivotId,newSheetId){this.dispatch("DUPLICATE_PIVOT",{pivotId,newPivotId,});const activeSheetId=this.getters.getActiveSheetId();const position=this.getters.getSheetIds().indexOf(activeSheetId)+1;const formulaId=this.getters.getPivotFormulaId(newPivotId);const newPivotName=this.getters.getPivotName(newPivotId);const result=this.dispatch("CREATE_SHEET",{sheetId:newSheetId,name:this.getPivotDuplicateSheetName(_t("%(newPivotName)s (Pivot #%(formulaId)s)",{newPivotName,formulaId,})),position,});if(result.isSuccessful){this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:newSheetId});const pivot=this.getters.getPivot(pivotId);this.insertPivotWithTable(newSheetId,0,0,newPivotId,pivot.getTableStructure().export(),"dynamic");}}
getPivotDuplicateSheetName(pivotName){let i=1;const names=this.getters.getSheetIds().map((id)=>this.getters.getSheetName(id));const sanitizedName=pivotName.replace(new RegExp(FORBIDDEN_IN_EXCEL_REGEX,"g")," ");let name=sanitizedName;while(names.includes(name)){name=`${sanitizedName} (${i})`;i++;}
return name;}
insertPivotWithTable(sheetId,col,row,pivotId,table,mode){const{cols,rows,measures,fieldsType}=table;const pivotTable=new SpreadsheetPivotTable(cols,rows,measures,fieldsType||{});const numberOfHeaders=pivotTable.columns.length-1;this.resizeSheet(sheetId,col,row,pivotTable);const pivotFormulaId=this.getters.getPivotFormulaId(pivotId);let zone;if(mode==="dynamic"){this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=PIVOT(${pivotFormulaId})`,});zone={left:col,right:col,top:row,bottom:row,};}
else{this.dispatch("INSERT_PIVOT",{sheetId,col,row,pivotId,table:pivotTable.export(),});zone={left:col,right:col+pivotTable.getNumberOfDataColumns(),top:row,bottom:row+numberOfHeaders+pivotTable.rows.length,};}
this.dispatch("CREATE_TABLE",{tableType:mode,sheetId,ranges:[this.getters.getRangeDataFromZone(sheetId,zone)],config:{...PIVOT_TABLE_CONFIG,numberOfHeaders},});}
resizeSheet(sheetId,col,row,table){const colLimit=table.getNumberOfDataColumns()+1;const numberCols=this.getters.getNumberCols(sheetId);const deltaCol=numberCols-col;if(deltaCol<colLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:numberCols-1,sheetId:sheetId,quantity:colLimit-deltaCol,position:"after",});}
const rowLimit=table.columns.length+table.rows.length;const numberRows=this.getters.getNumberRows(sheetId);const deltaRow=numberRows-row;if(deltaRow<rowLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:numberRows-1,sheetId:sheetId,quantity:rowLimit-deltaRow,position:"after",});}}
splitPivotFormula(sheetId,col,row,pivotId){const spreadZone=this.getters.getSpreadZone({sheetId,col,row});if(!spreadZone){return;}
const formulaId=this.getters.getPivotFormulaId(pivotId);const pivotCells=new Map();for(let col=spreadZone.left;col<=spreadZone.right;col++){for(let row=spreadZone.top;row<=spreadZone.bottom;row++){const position={sheetId,col,row};pivotCells.set(position,this.getters.getPivotCellFromPosition(position));}}
for(const[position,pivotCell]of pivotCells){this.dispatch("UPDATE_CELL",{...position,content:createPivotFormula(formulaId,pivotCell),});}
const table=this.getters.getCoreTable({sheetId,col,row});if(table?.type==="dynamic"){const zone=positionToZone({col,row});const rangeData=this.getters.getRangeDataFromZone(sheetId,spreadZone);this.dispatch("UPDATE_TABLE",{sheetId,zone,newTableRange:rangeData,tableType:"static",});}}}
class SortPlugin extends UIPlugin{allowDispatch(cmd){switch(cmd.type){case"SORT_CELLS":if(!isInside(cmd.col,cmd.row,cmd.zone)){throw new Error(_t("The anchor must be part of the provided zone"));}
return this.checkValidations(cmd,this.checkMerge,this.checkMergeSizes);}
return"Success";}
handle(cmd){switch(cmd.type){case"SORT_CELLS":this.sortZone(cmd.sheetId,cmd,cmd.zone,cmd.sortDirection,cmd.sortOptions||{});break;}}
checkMerge({sheetId,zone}){if(!this.getters.doesIntersectMerge(sheetId,zone)){return"Success";}
const singleCells=positions(zone).some(({col,row})=>!this.getters.isInMerge({sheetId,col,row}));if(singleCells){return"InvalidSortZone";}
return"Success";}
checkMergeSizes({sheetId,zone}){if(!this.getters.doesIntersectMerge(sheetId,zone)){return"Success";}
const merges=this.getters.getMerges(sheetId).filter((merge)=>overlap(merge,zone));const mergeDimension=zoneToDimension(merges[0]);let[widthFirst,heightFirst]=[mergeDimension.numberOfCols,mergeDimension.numberOfRows];if(!merges.every((merge)=>{let[widthCurrent,heightCurrent]=[merge.right-merge.left+1,merge.bottom-merge.top+1,];return widthCurrent===widthFirst&&heightCurrent===heightFirst;})){return"InvalidSortZone";}
return"Success";}
hasHeader(sheetId,items){if(items[0].length===1)
return false;let cells=items.map((col)=>col.map(({col,row})=>this.getters.getEvaluatedCell({sheetId,col,row}).type));const topLeft=cells[0][0];if(topLeft===CellValueType.empty){cells=cells.slice(1);}
if(cells.some((item)=>item[0]===CellValueType.empty)){return false;}
else if(cells.some((item)=>item[1]!==CellValueType.empty&&item[0]!==item[1])){return true;}
else{return false;}}
sortZone(sheetId,anchor,zone,sortDirection,options){const[stepX,stepY]=this.mainCellsSteps(sheetId,zone);let sortingCol=this.getters.getMainCellPosition({sheetId,col:anchor.col,row:anchor.row,}).col;let sortZone=Object.assign({},zone);let cellPositions=this.mainCells(sheetId,zone);if(!options.sortHeaders&&this.hasHeader(sheetId,cellPositions)){sortZone.top+=stepY;}
cellPositions=this.mainCells(sheetId,sortZone);const sortingCells=cellPositions[sortingCol-sortZone.left];const sortedIndexOfSortTypeCells=sortCells(sortingCells.map((position)=>this.getters.getEvaluatedCell(position)),sortDirection,Boolean(options.emptyCellAsZero));const sortedIndex=sortedIndexOfSortTypeCells.map((x)=>x.index);const[width,height]=[cellPositions.length,cellPositions[0].length];const updateCellCommands=[];for(let c=0;c<width;c++){for(let r=0;r<height;r++){let{col,row,sheetId}=cellPositions[c][sortedIndex[r]];const cell=this.getters.getCell({sheetId,col,row});let newCol=sortZone.left+c*stepX;let newRow=sortZone.top+r*stepY;let newCellValues={sheetId:sheetId,col:newCol,row:newRow,content:"",};if(cell){let content=cell.content;if(cell.isFormula){const position=this.getters.getCellPosition(cell.id);content=this.getters.getTranslatedCellFormula(sheetId,0,newRow-position.row,cell.compiledFormula.tokens);}
newCellValues.style=cell.style;newCellValues.content=content;newCellValues.format=cell.format;}
updateCellCommands.push(newCellValues);}}
updateCellCommands.forEach((cmdPayload)=>this.dispatch("UPDATE_CELL",cmdPayload));}
mainCellsSteps(sheetId,zone){const merge=this.getters.getMerge({sheetId,col:zone.left,row:zone.top});const stepX=merge?merge.right-merge.left+1:1;const stepY=merge?merge.bottom-merge.top+1:1;return[stepX,stepY];}
mainCells(sheetId,zone){const[stepX,stepY]=this.mainCellsSteps(sheetId,zone);const cells=[];const cols=range(zone.left,zone.right+1,stepX);const rows=range(zone.top,zone.bottom+1,stepY);for(const col of cols){const colCells=[];cells.push(colCells);for(const row of rows){colCells.push({sheetId,col,row});}}
return cells;}}
class UIOptionsPlugin extends UIPlugin{static getters=["shouldShowFormulas"];showFormulas=false;handle(cmd){switch(cmd.type){case"SET_FORMULA_VISIBILITY":this.showFormulas=cmd.show;break;}}
shouldShowFormulas(){return this.showFormulas;}}
class SheetUIPlugin extends UIPlugin{static getters=["doesCellHaveGridIcon","getCellWidth","getCellIconSrc","getTextWidth","getCellText","getCellMultiLineText","getContiguousZone",];ctx=document.createElement("canvas").getContext("2d");allowDispatch(cmd){return this.chainValidations(this.checkSheetExists,this.checkZonesAreInSheet)(cmd);}
handle(cmd){switch(cmd.type){case"AUTORESIZE_COLUMNS":for(let col of cmd.cols){const size=this.getColMaxWidth(cmd.sheetId,col);if(size!==0){this.dispatch("RESIZE_COLUMNS_ROWS",{elements:[col],dimension:"COL",size,sheetId:cmd.sheetId,});}}
break;case"AUTORESIZE_ROWS":for(let row of cmd.rows){this.dispatch("RESIZE_COLUMNS_ROWS",{elements:[row],dimension:"ROW",size:null,sheetId:cmd.sheetId,});}
break;}}
getCellWidth(position){const style=this.getters.getCellComputedStyle(position);let contentWidth=0;const content=this.getters.getEvaluatedCell(position).formattedValue;if(content){const multiLineText=splitTextToWidth(this.ctx,content,style,undefined);contentWidth+=Math.max(...multiLineText.map((line)=>computeTextWidth(this.ctx,line,style)));}
const icon=this.getters.getCellIconSrc(position);if(icon){contentWidth+=computeIconWidth(style);}
if(this.getters.doesCellHaveGridIcon(position)){contentWidth+=ICON_EDGE_LENGTH+GRID_ICON_MARGIN;}
if(contentWidth===0){return 0;}
contentWidth+=2*PADDING_AUTORESIZE_HORIZONTAL;if(style.wrapping==="wrap"){const colWidth=this.getters.getColSize(this.getters.getActiveSheetId(),position.col);return Math.min(colWidth,contentWidth);}
return contentWidth;}
getCellIconSrc(position){const callbacks=iconsOnCellRegistry.getAll();for(const callback of callbacks){const imageSrc=callback(this.getters,position);if(imageSrc){return imageSrc;}}
return undefined;}
getTextWidth(text,style){return computeTextWidth(this.ctx,text,style);}
getCellText(position,args){const cell=this.getters.getCell(position);const locale=this.getters.getLocale();if(args?.showFormula&&cell?.isFormula){return localizeFormula(cell.content,locale);}
else if(args?.showFormula&&!cell?.content){return"";}
else{const evaluatedCell=this.getters.getEvaluatedCell(position);const formatWidth=args?.availableWidth?{availableWidth:args.availableWidth,measureText:(text)=>computeTextWidth(this.ctx,text,cell?.style||{}),}:undefined;return formatValue(evaluatedCell.value,{format:evaluatedCell.format,locale,formatWidth,});}}
getCellMultiLineText(position,args){const style=this.getters.getCellStyle(position);const text=this.getters.getCellText(position,{showFormula:this.getters.shouldShowFormulas(),availableWidth:args.maxWidth,});return splitTextToWidth(this.ctx,text,style,args.wrapText?args.maxWidth:undefined);}
doesCellHaveGridIcon(position){const isFilterHeader=this.getters.isFilterHeader(position);const hasListIcon=!this.getters.isReadonly()&&this.getters.cellHasListDataValidationIcon(position);return isFilterHeader||hasListIcon;}
getContiguousZone(sheetId,zoneToExpand){const expandZone=(zone)=>{for(const col of range(zone.left,zone.right+1)){if(!this.isCellEmpty({sheetId,col,row:zone.top-1})){return{...zone,top:zone.top-1};}
if(!this.isCellEmpty({sheetId,col,row:zone.bottom+1})){return{...zone,bottom:zone.bottom+1};}}
for(const row of range(zone.top,zone.bottom+1)){if(!this.isCellEmpty({sheetId,col:zone.left-1,row})){return{...zone,left:zone.left-1};}
if(!this.isCellEmpty({sheetId,col:zone.right+1,row})){return{...zone,right:zone.right+1};}}
return zone;};let hasExpanded=false;let zone=zoneToExpand;do{hasExpanded=false;const newZone=expandZone(zone);if(!isEqual(zone,newZone)){hasExpanded=true;zone=newZone;continue;}}while(hasExpanded);return zone;}
isCellEmpty(position){const mainPosition=this.getters.getMainCellPosition(position);return this.getters.getEvaluatedCell(mainPosition).type===CellValueType.empty;}
getColMaxWidth(sheetId,index){const cellsPositions=positions(this.getters.getColsZone(sheetId,index,index));const sizes=cellsPositions.map((position)=>this.getCellWidth({sheetId,...position}));return Math.max(0,largeMax(sizes));}
checkSheetExists(cmd){if("sheetId"in cmd&&this.getters.tryGetSheet(cmd.sheetId)===undefined){return"InvalidSheetId";}
return"Success";}
checkZonesAreInSheet(cmd){const sheetId="sheetId"in cmd?cmd.sheetId:this.getters.tryGetActiveSheetId();const zones=this.getters.getCommandZones(cmd);if(!sheetId&&zones.length>0){return"NoActiveSheet";}
if(sheetId&&zones.length>0){return this.getters.checkZonesExistInSheet(sheetId,zones);}
return"Success";}}
class TableComputedStylePlugin extends UIPlugin{static getters=["getCellTableStyle","getCellTableBorder"];tableStyles={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&"content"in cmd)||cmd.type==="EVALUATE_CELLS"){this.tableStyles={};return;}
if(doesCommandInvalidatesTableStyle(cmd)){if("sheetId"in cmd){delete this.tableStyles[cmd.sheetId];}
else{this.tableStyles={};}
return;}}
finalize(){for(const sheetId of this.getters.getSheetIds()){if(!this.tableStyles[sheetId]){this.tableStyles[sheetId]={};}
for(const table of this.getters.getTables(sheetId)){if(!this.tableStyles[sheetId][table.id]){this.tableStyles[sheetId][table.id]=this.computeTableStyle(sheetId,table);}}}}
getCellTableStyle(position){const table=this.getters.getTable(position);if(!table){return undefined;}
return this.tableStyles[position.sheetId][table.id]().styles[position.col]?.[position.row];}
getCellTableBorder(position){const table=this.getters.getTable(position);if(!table){return undefined;}
return this.tableStyles[position.sheetId][table.id]().borders[position.col]?.[position.row];}
computeTableStyle(sheetId,table){return lazy(()=>{const{config,numberOfCols,numberOfRows}=this.getTableRuntimeConfig(sheetId,table);const style=this.getters.getTableStyle(table.config.styleId);const relativeTableStyle=getComputedTableStyle(config,style,numberOfCols,numberOfRows);const mapping=this.getTableMapping(sheetId,table);const absoluteTableStyle={borders:{},styles:{}};for(let col=0;col<numberOfCols;col++){const colInSheet=mapping.colMapping[col];absoluteTableStyle.borders[colInSheet]={};absoluteTableStyle.styles[colInSheet]={};for(let row=0;row<numberOfRows;row++){const rowInSheet=mapping.rowMapping[row];absoluteTableStyle.borders[colInSheet][rowInSheet]=relativeTableStyle.borders[col][row];absoluteTableStyle.styles[colInSheet][rowInSheet]=relativeTableStyle.styles[col][row];}}
return absoluteTableStyle;});}
getTableRuntimeConfig(sheetId,table){const tableZone=table.range.zone;const config={...table.config};let numberOfCols=tableZone.right-tableZone.left+1;let numberOfRows=tableZone.bottom-tableZone.top+1;for(let row=tableZone.top;row<=tableZone.bottom;row++){if(!this.getters.isRowHidden(sheetId,row)){continue;}
numberOfRows--;if(row-tableZone.top<table.config.numberOfHeaders){config.numberOfHeaders--;if(config.numberOfHeaders<0){config.numberOfHeaders=0;}}
if(row===tableZone.bottom){config.totalRow=false;}}
for(let col=tableZone.left;col<=tableZone.right;col++){if(!this.getters.isColHidden(sheetId,col)){continue;}
numberOfCols--;if(col===tableZone.left){config.firstColumn=false;}
if(col===tableZone.right){config.lastColumn=false;}}
return{config,numberOfCols,numberOfRows,};}
getTableMapping(sheetId,table){const colMapping={};const rowMapping={};let colOffset=0;let rowOffset=0;const tableZone=table.range.zone;for(let col=tableZone.left;col<=tableZone.right;col++){if(this.getters.isColHidden(sheetId,col)){continue;}
colMapping[colOffset]=col;colOffset++;for(let row=tableZone.top;row<=tableZone.bottom;row++){if(this.getters.isRowHidden(sheetId,row)){continue;}
rowMapping[rowOffset]=row;rowOffset++;}}
return{colMapping,rowMapping,};}}
const invalidateTableStyleCommands=["HIDE_COLUMNS_ROWS","UNHIDE_COLUMNS_ROWS","UNFOLD_HEADER_GROUP","UNGROUP_HEADERS","FOLD_HEADER_GROUP","FOLD_ALL_HEADER_GROUPS","UNFOLD_ALL_HEADER_GROUPS","FOLD_HEADER_GROUPS_IN_ZONE","UNFOLD_HEADER_GROUPS_IN_ZONE","CREATE_TABLE","UPDATE_TABLE","UPDATE_FILTER","REMOVE_TABLE","RESIZE_TABLE","CREATE_TABLE_STYLE","REMOVE_TABLE_STYLE",];const invalidateTableStyleCommandsSet=new Set(invalidateTableStyleCommands);function doesCommandInvalidatesTableStyle(cmd){return invalidateTableStyleCommandsSet.has(cmd.type);}
class CellComputedStylePlugin extends UIPlugin{static getters=["getCellComputedBorder","getCellComputedStyle"];styles={};borders={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||cmd.type==="UPDATE_CELL"||cmd.type==="SET_FORMATTING"||cmd.type==="EVALUATE_CELLS"){this.styles={};this.borders={};return;}
if(doesCommandInvalidatesTableStyle(cmd)){if("sheetId"in cmd){delete this.styles[cmd.sheetId];delete this.borders[cmd.sheetId];}
else{this.styles={};this.borders={};}
return;}
if(invalidateCFEvaluationCommands.has(cmd.type)){this.styles={};return;}
if(invalidateBordersCommands.has(cmd.type)){this.borders={};return;}}
getCellComputedBorder(position){const{sheetId,row,col}=position;if(this.borders[sheetId]?.[row]?.[col]!==undefined){return this.borders[sheetId][row][col];}
if(!this.borders[sheetId]){this.borders[sheetId]={};}
if(!this.borders[sheetId][row]){this.borders[sheetId][row]={};}
if(!this.borders[sheetId][row][col]){this.borders[sheetId][row][col]=this.computeCellBorder(position);}
return this.borders[sheetId][row][col];}
getCellComputedStyle(position){const{sheetId,row,col}=position;if(this.styles[sheetId]?.[row]?.[col]!==undefined){return this.styles[sheetId][row][col];}
if(!this.styles[sheetId]){this.styles[sheetId]={};}
if(!this.styles[sheetId][row]){this.styles[sheetId][row]={};}
if(!this.styles[sheetId][row][col]){this.styles[sheetId][row][col]=this.computeCellStyle(position);}
return this.styles[sheetId][row][col];}
computeCellBorder(position){const cellBorder=this.getters.getCellBorder(position)||{};const cellTableBorder=this.getters.getCellTableBorder(position)||{};const border={...removeFalsyAttributes(cellTableBorder),...removeFalsyAttributes(cellBorder),};return isObjectEmptyRecursive(border)?null:border;}
computeCellStyle(position){const cell=this.getters.getCell(position);const cfStyle=this.getters.getCellConditionalFormatStyle(position);const tableStyle=this.getters.getCellTableStyle(position);const computedStyle={...removeFalsyAttributes(tableStyle),...removeFalsyAttributes(cell?.style),...removeFalsyAttributes(cfStyle),};const evaluatedCell=this.getters.getEvaluatedCell(position);if(evaluatedCell.link&&!computedStyle.textColor){computedStyle.textColor=LINK_COLOR;}
return computedStyle;}}
const genericRepeatsTransforms=[repeatSheetDependantCommand,repeatTargetDependantCommand,repeatPositionDependantCommand,repeatRangeDependantCommand,];function repeatSheetDependantCommand(getters,command){if(!("sheetId"in command))
return command;return{...deepCopy(command),sheetId:getters.getActiveSheetId()};}
function repeatTargetDependantCommand(getters,command){if(!("target"in command)||!Array.isArray(command.target))
return command;return{...deepCopy(command),target:getters.getSelectedZones(),};}
function repeatZoneDependantCommand(getters,command){if(!("zone"in command))
return command;return{...deepCopy(command),zone:getters.getSelectedZone(),};}
function repeatPositionDependantCommand(getters,command){if(!("row"in command)||!("col"in command))
return command;const{col,row}=getters.getActivePosition();return{...deepCopy(command),col,row};}
function repeatRangeDependantCommand(getters,command){if(!("ranges"in command))
return command;return{...deepCopy(command),ranges:getters.getSelectedZones().map((zone)=>getters.getRangeDataFromZone(getters.getActiveSheetId(),zone)),};}
const uuidGenerator=new UuidGenerator();function repeatCreateChartCommand(getters,cmd){return{...repeatSheetDependantCommand(getters,cmd),id:uuidGenerator.uuidv4(),};}
function repeatCreateImageCommand(getters,cmd){return{...repeatSheetDependantCommand(getters,cmd),figureId:uuidGenerator.uuidv4(),};}
function repeatCreateFigureCommand(getters,cmd){const newCmd=repeatSheetDependantCommand(getters,cmd);newCmd.figure.id=uuidGenerator.uuidv4();return newCmd;}
function repeatCreateSheetCommand(getters,cmd){const newCmd=deepCopy(cmd);newCmd.sheetId=uuidGenerator.uuidv4();const sheetName=cmd.name||getters.getSheet(getters.getActiveSheetId()).name;const namePrefix=sheetName.match(/(.+?)\d*$/)?.[1]||sheetName;newCmd.name=getters.getNextSheetName(namePrefix);return newCmd;}
function repeatAddColumnsRowsCommand(getters,cmd){const currentPosition=getters.getActivePosition();return{...repeatSheetDependantCommand(getters,cmd),base:cmd.dimension==="COL"?currentPosition.col:currentPosition.row,};}
function repeatHeaderElementCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...repeatSheetDependantCommand(getters,cmd),elements:cmd.dimension==="COL"?range(currentSelection.left,currentSelection.right+1):range(currentSelection.top,currentSelection.bottom+1),};}
function repeatInsertOrDeleteCellCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...deepCopy(cmd),zone:currentSelection,};}
function repeatAutoResizeCommand(getters,cmd){const newCmd=deepCopy(cmd);const currentSelection=getters.getSelectedZone();const{top,bottom,left,right}=currentSelection;if("cols"in newCmd){newCmd.cols=range(left,right+1);}
else if("rows"in newCmd){newCmd.rows=range(top,bottom+1);}
return newCmd;}
function repeatSortCellsCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...repeatSheetDependantCommand(getters,cmd),col:currentSelection.left,row:currentSelection.top,zone:currentSelection,};}
function repeatPasteCommand(getters,cmd){return{type:"REPEAT_PASTE",pasteOption:deepCopy(cmd.pasteOption),target:getters.getSelectedZones(),};}
function repeatGroupHeadersCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...repeatSheetDependantCommand(getters,cmd),start:cmd.dimension==="COL"?currentSelection.left:currentSelection.top,end:cmd.dimension==="COL"?currentSelection.right:currentSelection.bottom,};}
const repeatCommandTransformRegistry=new Registry();repeatCommandTransformRegistry.add("UPDATE_CELL",genericRepeat);repeatCommandTransformRegistry.add("CLEAR_CELL",genericRepeat);repeatCommandTransformRegistry.add("CLEAR_CELLS",genericRepeat);repeatCommandTransformRegistry.add("DELETE_CONTENT",genericRepeat);repeatCommandTransformRegistry.add("ADD_MERGE",genericRepeat);repeatCommandTransformRegistry.add("REMOVE_MERGE",genericRepeat);repeatCommandTransformRegistry.add("SET_FORMATTING",genericRepeat);repeatCommandTransformRegistry.add("CLEAR_FORMATTING",genericRepeat);repeatCommandTransformRegistry.add("SET_BORDER",genericRepeat);repeatCommandTransformRegistry.add("CREATE_TABLE",genericRepeat);repeatCommandTransformRegistry.add("REMOVE_TABLE",genericRepeat);repeatCommandTransformRegistry.add("HIDE_SHEET",genericRepeat);repeatCommandTransformRegistry.add("ADD_COLUMNS_ROWS",repeatAddColumnsRowsCommand);repeatCommandTransformRegistry.add("REMOVE_COLUMNS_ROWS",repeatHeaderElementCommand);repeatCommandTransformRegistry.add("HIDE_COLUMNS_ROWS",repeatHeaderElementCommand);repeatCommandTransformRegistry.add("RESIZE_COLUMNS_ROWS",repeatHeaderElementCommand);repeatCommandTransformRegistry.add("CREATE_SHEET",repeatCreateSheetCommand);repeatCommandTransformRegistry.add("CREATE_FIGURE",repeatCreateFigureCommand);repeatCommandTransformRegistry.add("CREATE_CHART",repeatCreateChartCommand);repeatCommandTransformRegistry.add("CREATE_IMAGE",repeatCreateImageCommand);repeatCommandTransformRegistry.add("GROUP_HEADERS",repeatGroupHeadersCommand);repeatCommandTransformRegistry.add("UNGROUP_HEADERS",repeatGroupHeadersCommand);repeatCommandTransformRegistry.add("UNGROUP_HEADERS",repeatGroupHeadersCommand);repeatCommandTransformRegistry.add("UNFOLD_HEADER_GROUPS_IN_ZONE",repeatZoneDependantCommand);repeatCommandTransformRegistry.add("FOLD_HEADER_GROUPS_IN_ZONE",repeatZoneDependantCommand);const repeatLocalCommandTransformRegistry=new Registry();repeatLocalCommandTransformRegistry.add("PASTE",repeatPasteCommand);repeatLocalCommandTransformRegistry.add("INSERT_CELL",repeatInsertOrDeleteCellCommand);repeatLocalCommandTransformRegistry.add("DELETE_CELL",repeatInsertOrDeleteCellCommand);repeatLocalCommandTransformRegistry.add("AUTORESIZE_COLUMNS",repeatAutoResizeCommand);repeatLocalCommandTransformRegistry.add("AUTORESIZE_ROWS",repeatAutoResizeCommand);repeatLocalCommandTransformRegistry.add("SORT_CELLS",repeatSortCellsCommand);repeatLocalCommandTransformRegistry.add("SUM_SELECTION",genericRepeat);repeatLocalCommandTransformRegistry.add("SET_DECIMAL",genericRepeat);function genericRepeat(getters,command){let transformedCommand=deepCopy(command);for(const repeatTransform of genericRepeatsTransforms){transformedCommand=repeatTransform(getters,transformedCommand);}
return transformedCommand;}
function repeatCoreCommand(getters,command){if(!command){return undefined;}
const isRepeatable=repeatCommandTransformRegistry.contains(command.type);if(!isRepeatable){return undefined;}
const transform=repeatCommandTransformRegistry.get(command.type);return transform(getters,command);}
function repeatLocalCommand(getters,command,childCommands){const isRepeatable=repeatLocalCommandTransformRegistry.contains(command.type);if(!isRepeatable){return undefined;}
const repeatTransform=repeatLocalCommandTransformRegistry.get(command.type);return repeatTransform(getters,command,childCommands);}
function canRepeatRevision(revision){if(!revision||!revision.rootCommand||typeof revision.rootCommand!=="object"){return false;}
if(isCoreCommand(revision.rootCommand)){return repeatCommandTransformRegistry.contains(revision.rootCommand.type);}
return repeatLocalCommandTransformRegistry.contains(revision.rootCommand.type);}
function repeatRevision(revision,getters){if(!revision.rootCommand||typeof revision.rootCommand!=="object"){return undefined;}
if(isCoreCommand(revision.rootCommand)){return repeatCoreCommand(getters,revision.rootCommand);}
return repeatLocalCommand(getters,revision.rootCommand,revision.commands);}
class HistoryPlugin extends UIPlugin{static getters=["canUndo","canRedo"];undoStack=[];redoStack=[];session;constructor(config){super(config);this.session=config.session;this.session.on("new-local-state-update",this,this.onNewLocalStateUpdate);this.session.on("pending-revisions-dropped",this,({revisionIds})=>this.drop(revisionIds));this.session.on("snapshot",this,()=>{this.undoStack=[];this.redoStack=[];});}
allowDispatch(cmd){switch(cmd.type){case"REQUEST_UNDO":if(!this.canUndo()){return"EmptyUndoStack";}
break;case"REQUEST_REDO":if(!this.canRedo()){return"EmptyRedoStack";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"REQUEST_UNDO":case"REQUEST_REDO":this.requestHistoryChange(cmd.type==="REQUEST_UNDO"?"UNDO":"REDO");}}
finalize(){}
requestHistoryChange(type){const id=type==="UNDO"?this.undoStack.pop():this.redoStack.pop();if(!id){const lastNonRedoRevision=this.getPossibleRevisionToRepeat();if(!lastNonRedoRevision){return;}
const repeatedCommands=repeatRevision(lastNonRedoRevision,this.getters);if(!repeatedCommands){return;}
if(!Array.isArray(repeatedCommands)){this.dispatch(repeatedCommands.type,repeatedCommands);return;}
for(const command of repeatedCommands){this.dispatch(command.type,command);}
return;}
if(type==="UNDO"){this.session.undo(id);this.redoStack.push(id);}
else{this.session.redo(id);this.undoStack.push(id);}}
canUndo(){return this.undoStack.length>0;}
canRedo(){if(this.redoStack.length>0)
return true;const lastNonRedoRevision=this.getPossibleRevisionToRepeat();return canRepeatRevision(lastNonRedoRevision);}
drop(revisionIds){this.undoStack=this.undoStack.filter((id)=>!revisionIds.includes(id));this.redoStack=[];}
onNewLocalStateUpdate({id}){this.undoStack.push(id);this.redoStack=[];if(this.undoStack.length>MAX_HISTORY_STEPS){this.undoStack.shift();}}
getPossibleRevisionToRepeat(){return this.session.getLastLocalNonEmptyRevision();}}
class SplitToColumnsPlugin extends UIPlugin{static getters=["getAutomaticSeparator"];allowDispatch(cmd){switch(cmd.type){case"SPLIT_TEXT_INTO_COLUMNS":return this.chainValidations(this.batchValidations(this.checkSingleColSelected,this.checkNonEmptySelector),this.batchValidations(this.checkNotOverwritingContent,this.checkSeparatorInSelection))(cmd);}
return"Success";}
handle(cmd){switch(cmd.type){case"SPLIT_TEXT_INTO_COLUMNS":this.splitIntoColumns(cmd);break;}}
getAutomaticSeparator(){const cells=this.getters.getSelectedCells();for(const cell of cells){if(cell.value&&cell.type===CellValueType.text){const separator=this.getAutoSeparatorForString(cell.value);if(separator){return separator;}}}
return" ";}
getAutoSeparatorForString(str){const separators=[NEWLINE,";",","," ","."];for(const separator of separators){if(str.includes(separator)){return separator;}}
return;}
splitIntoColumns({separator,addNewColumns}){const selection=this.getters.getSelectedZone();const sheetId=this.getters.getActiveSheetId();const splitted=this.getSplittedCols(selection,separator);if(addNewColumns){this.addColsToAvoidCollisions(selection,splitted);}
this.removeMergesInSplitZone(selection,splitted);this.addColumnsToNotOverflowSheet(selection,splitted);for(let i=0;i<splitted.length;i++){const row=selection.top+i;const splittedContent=splitted[i];const col=selection.left;const mainCell=this.getters.getCell({sheetId,col,row});if(splittedContent.length===1&&splittedContent[0]===mainCell?.content){continue;}
for(const[index,content]of splittedContent.entries()){this.dispatch("UPDATE_CELL",{sheetId,col:col+index,row,content:canonicalizeNumberContent(content,this.getters.getLocale()),format:"",style:mainCell?.style||null,});}}}
getSplittedCols(selection,separator){if(!separator){throw new Error("Separator cannot be empty");}
const sheetId=this.getters.getActiveSheetId();const splitted=[];for(const row of range(selection.top,selection.bottom+1)){const text=this.getters.getEvaluatedCell({sheetId,col:selection.left,row,}).formattedValue;splitted.push(this.splitAndRemoveTrailingEmpty(text,separator));}
return splitted;}
splitAndRemoveTrailingEmpty(string,separator){const splitted=string.split(separator);while(splitted.length>1&&splitted[splitted.length-1]===""){splitted.pop();}
return splitted;}
willSplittedColsOverwriteContent(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();for(const row of range(selection.top,selection.bottom+1)){const splittedText=splittedCols[row-selection.top];for(let i=1;i<splittedText.length;i++){const cell=this.getters.getCell({sheetId,col:selection.left+i,row});if(cell&&cell.content){return true;}}}
return false;}
removeMergesInSplitZone(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();const colsInSplitZone=Math.max(...splittedCols.map((s)=>s.length));const splitZone={...selection,right:selection.left+colsInSplitZone-1};const merges=this.getters.getMergesInZone(sheetId,splitZone);this.dispatch("REMOVE_MERGE",{sheetId,target:merges});}
addColsToAvoidCollisions(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();let colsToAdd=0;for(const row of range(selection.top,selection.bottom+1)){const cellPosition={sheetId,col:selection.left,row};const splittedText=splittedCols[row-selection.top];const colsToAddInRow=this.getColsToAddToAvoidCollision(cellPosition,splittedText);colsToAdd=Math.max(colsToAdd,colsToAddInRow);}
if(colsToAdd){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:selection.left,sheetId,quantity:colsToAdd,position:"after",});}}
getColsToAddToAvoidCollision(cellPosition,splittedText){const maxColumnsToSpread=splittedText.length;for(let i=1;i<maxColumnsToSpread;i++){const col=cellPosition.col+i;const cell=this.getters.getCell({...cellPosition,col});if(cell&&cell.content){return maxColumnsToSpread-i;}}
return 0;}
addColumnsToNotOverflowSheet(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();const maxColumnsToSpread=Math.max(...splittedCols.map((s)=>s.length-1));const maxColIndex=this.getters.getNumberCols(sheetId)-1;if(selection.left+maxColumnsToSpread>maxColIndex){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:maxColIndex,sheetId,quantity:selection.left+maxColumnsToSpread-maxColIndex,position:"after",});}}
checkSingleColSelected(){if(!this.getters.isSingleColSelected()){return"MoreThanOneColumnSelected";}
return"Success";}
checkNonEmptySelector(cmd){if(cmd.separator===""){return"EmptySplitSeparator";}
return"Success";}
checkNotOverwritingContent(cmd){if(cmd.addNewColumns||cmd.force){return"Success";}
const selection=this.getters.getSelectedZones()[0];const splitted=this.getSplittedCols(selection,cmd.separator);if(this.willSplittedColsOverwriteContent(selection,splitted)){return"SplitWillOverwriteContent";}
return"Success";}
checkSeparatorInSelection({separator}){const cells=this.getters.getSelectedCells();for(const cell of cells){if(cell.formattedValue.includes(separator)){return"Success";}}
return"NoSplitSeparatorInSelection";}}
class TableAutofillPlugin extends UIPlugin{handle(cmd){switch(cmd.type){case"AUTOFILL_TABLE_COLUMN":const table=this.getters.getCoreTable(cmd);const cell=this.getters.getCell(cmd);if(!table?.config.automaticAutofill||table.type==="dynamic"||!cell?.isFormula){return;}
const{col,row}=cmd;const tableContentZone=getTableContentZone(table.range.zone,table.config);if(tableContentZone&&isInside(col,row,tableContentZone)){const top=cmd.autofillRowStart??tableContentZone.top;const bottom=cmd.autofillRowEnd??tableContentZone.bottom;const autofillZone={...tableContentZone,top,bottom};this.autofillTableZone(cmd,autofillZone);}
break;}}
autofillTableZone(autofillSource,zone){if(zone.top===zone.bottom){return;}
const{col,row,sheetId}=autofillSource;for(let r=zone.top;r<=zone.bottom;r++){if(r===row){continue;}
if(this.getters.getEvaluatedCell({col,row:r,sheetId}).type!==CellValueType.empty){return;}}
const oldSelection={zone:this.getters.getSelectedZone(),cell:this.getters.getActivePosition(),};this.selection.selectCell(col,row);this.dispatch("AUTOFILL_SELECT",{col,row:zone.bottom});this.dispatch("AUTOFILL");this.selection.selectCell(col,row);this.dispatch("AUTOFILL_SELECT",{col,row:zone.top});this.dispatch("AUTOFILL");this.selection.selectZone(oldSelection);}}
class TableResizeUI extends UIPlugin{allowDispatch(cmd){switch(cmd.type){case"RESIZE_TABLE":const table=this.getters.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!table){return"TableNotFound";}
const oldTableZone=table.range.zone;const newTableZone=this.getters.getRangeFromRangeData(cmd.newTableRange).zone;if(newTableZone.top!==oldTableZone.top||newTableZone.left!==oldTableZone.left){return"InvalidTableResize";}
return this.canDispatch("UPDATE_TABLE",{...cmd}).reasons;}
return"Success";}
handle(cmd){switch(cmd.type){case"RESIZE_TABLE":{const table=this.getters.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);this.dispatch("UPDATE_TABLE",{...cmd});if(!table||!table.config.automaticAutofill)
return;const oldTableZone=table.range.zone;const newTableZone=this.getters.getRangeFromRangeData(cmd.newTableRange).zone;if(newTableZone.bottom>=oldTableZone.bottom){for(let col=newTableZone.left;col<=newTableZone.right;col++){const autofillSource={col,row:oldTableZone.bottom,sheetId:cmd.sheetId};if(this.getters.getCell(autofillSource)?.content.startsWith("=")){this.dispatch("AUTOFILL_TABLE_COLUMN",{...autofillSource,autofillRowStart:oldTableZone.bottom,autofillRowEnd:newTableZone.bottom,});}}
break;}}}}}
class ClipboardPlugin extends UIPlugin{static layers=["Clipboard"];static getters=["getClipboardContent","getClipboardId","getClipboardTextContent","isCutOperation",];status="invisible";originSheetId;copiedData;_isCutOperation=false;clipboardId=new UuidGenerator().uuidv4();allowDispatch(cmd){switch(cmd.type){case"CUT":const zones=this.getters.getSelectedZones();return this.isCutAllowedOn(zones);case"PASTE_FROM_OS_CLIPBOARD":{const copiedData=this.convertOSClipboardData(cmd.clipboardContent[ClipboardMIMEType.PlainText]??"");const pasteOption=cmd.pasteOption;return this.isPasteAllowed(cmd.target,copiedData,{pasteOption,isCutOperation:false});}
case"PASTE":{if(!this.copiedData){return"EmptyClipboard";}
const pasteOption=cmd.pasteOption;return this.isPasteAllowed(cmd.target,this.copiedData,{pasteOption:pasteOption,isCutOperation:this._isCutOperation,});}
case"COPY_PASTE_CELLS_ABOVE":{const zones=this.getters.getSelectedZones();if(zones.length>1||(zones[0].top===0&&zones[0].bottom===0)){return"InvalidCopyPasteSelection";}
break;}
case"COPY_PASTE_CELLS_ON_LEFT":{const zones=this.getters.getSelectedZones();if(zones.length>1||(zones[0].left===0&&zones[0].right===0)){return"InvalidCopyPasteSelection";}
break;}
case"INSERT_CELL":{const{cut,paste}=this.getInsertCellsTargets(cmd.zone,cmd.shiftDimension);const copiedData=this.copy(cut);return this.isPasteAllowed(paste,copiedData,{isCutOperation:true});}
case"DELETE_CELL":{const{cut,paste}=this.getDeleteCellsTargets(cmd.zone,cmd.shiftDimension);const copiedData=this.copy(cut);return this.isPasteAllowed(paste,copiedData,{isCutOperation:true});}}
return"Success";}
handle(cmd){switch(cmd.type){case"COPY":case"CUT":const zones=this.getters.getSelectedZones();this.status="visible";this.originSheetId=this.getters.getActiveSheetId();this.copiedData=this.copy(zones);this._isCutOperation=cmd.type==="CUT";break;case"PASTE_FROM_OS_CLIPBOARD":{this._isCutOperation=false;if(cmd.clipboardContent[ClipboardMIMEType.OSpreadsheet]){this.copiedData=JSON.parse(cmd.clipboardContent[ClipboardMIMEType.OSpreadsheet]);}
else{this.copiedData=this.convertOSClipboardData(cmd.clipboardContent[ClipboardMIMEType.PlainText]??"");}
const pasteOption=cmd.pasteOption;this.paste(cmd.target,this.copiedData,{pasteOption,selectTarget:true,isCutOperation:false,});this.status="invisible";break;}
case"PASTE":{const pasteOption=cmd.pasteOption;this.paste(cmd.target,this.copiedData,{pasteOption,selectTarget:true,isCutOperation:this._isCutOperation,});this.status="invisible";if(this._isCutOperation){this.copiedData=undefined;this._isCutOperation=false;}
break;}
case"COPY_PASTE_CELLS_ABOVE":{const zone=this.getters.getSelectedZone();const multipleRowsInSelection=zone.top!==zone.bottom;const copyTarget={...zone,bottom:multipleRowsInSelection?zone.top:zone.top-1,top:multipleRowsInSelection?zone.top:zone.top-1,};this.originSheetId=this.getters.getActiveSheetId();const copiedData=this.copy([copyTarget]);this.paste([zone],copiedData,{isCutOperation:false,selectTarget:true,});}
break;case"COPY_PASTE_CELLS_ON_LEFT":{const zone=this.getters.getSelectedZone();const multipleColsInSelection=zone.left!==zone.right;const copyTarget={...zone,right:multipleColsInSelection?zone.left:zone.left-1,left:multipleColsInSelection?zone.left:zone.left-1,};this.originSheetId=this.getters.getActiveSheetId();const copiedData=this.copy([copyTarget]);this.paste([zone],copiedData,{isCutOperation:false,selectTarget:true,});}
break;case"CLEAN_CLIPBOARD_HIGHLIGHT":this.status="invisible";break;case"DELETE_CELL":{const{cut,paste}=this.getDeleteCellsTargets(cmd.zone,cmd.shiftDimension);if(!isZoneValid(cut[0])){this.dispatch("CLEAR_CELLS",{target:[cmd.zone],sheetId:this.getters.getActiveSheetId(),});break;}
const copiedData=this.copy(cut);this.paste(paste,copiedData,{isCutOperation:true});break;}
case"INSERT_CELL":{const{cut,paste}=this.getInsertCellsTargets(cmd.zone,cmd.shiftDimension);const copiedData=this.copy(cut);this.paste(paste,copiedData,{isCutOperation:true});break;}
case"ADD_COLUMNS_ROWS":{this.status="invisible";if(this._isCutOperation!==true||cmd.sheetId!==this.copiedData?.sheetId){return;}
const isClipboardDirty=this.isColRowDirtyingClipboard(cmd.position==="before"?cmd.base:cmd.base+1,cmd.dimension);if(isClipboardDirty){this.copiedData=undefined;}
break;}
case"REMOVE_COLUMNS_ROWS":{this.status="invisible";if(this._isCutOperation!==true||cmd.sheetId!==this.copiedData?.sheetId){return;}
for(let el of cmd.elements){const isClipboardDirty=this.isColRowDirtyingClipboard(el,cmd.dimension);if(isClipboardDirty){this.copiedData=undefined;break;}}
this.status="invisible";break;}
case"REPEAT_PASTE":{this.paste(cmd.target,this.copiedData,{isCutOperation:false,pasteOption:cmd.pasteOption,selectTarget:true,});break;}
case"DELETE_SHEET":if(this._isCutOperation!==true){return;}
if(this.originSheetId===cmd.sheetId){this.copiedData=undefined;this.status="invisible";}
break;default:if(isCoreCommand(cmd)){this.status="invisible";}}}
convertOSClipboardData(clipboardData){const handlers=this.selectClipboardHandlers({figureId:true}).concat(this.selectClipboardHandlers({}));let copiedData={};for(const{handlerName,handler}of handlers){const data=handler.convertOSClipboardData(clipboardData);copiedData[handlerName]=data;const minimalKeys=["sheetId","cells","zones","figureId"];for(const key of minimalKeys){if(data&&key in data){copiedData[key]=data[key];}}}
return copiedData;}
selectClipboardHandlers(data){const handlersRegistry="figureId"in data?clipboardHandlersRegistries.figureHandlers:clipboardHandlersRegistries.cellHandlers;return handlersRegistry.getKeys().map((handlerName)=>{const Handler=handlersRegistry.get(handlerName);return{handlerName,handler:new Handler(this.getters,this.dispatch)};});}
isCutAllowedOn(zones){const clipboardData=this.getClipboardData(zones);for(const{handler}of this.selectClipboardHandlers(clipboardData)){const result=handler.isCutAllowed(clipboardData);if(result!=="Success"){return result;}}
return"Success";}
isPasteAllowed(target,copiedData,options){for(const{handler}of this.selectClipboardHandlers(copiedData)){const result=handler.isPasteAllowed(this.getters.getActiveSheetId(),target,copiedData,{...options,});if(result!=="Success"){return result;}}
return"Success";}
isColRowDirtyingClipboard(position,dimension){if(!this.copiedData||!this.copiedData.zones){return false;}
const{zones}=this.copiedData;for(let zone of zones){if(dimension==="COL"&&position<=zone.right){return true;}
if(dimension==="ROW"&&position<=zone.bottom){return true;}}
return false;}
copy(zones){let copiedData={};const clipboardData=this.getClipboardData(zones);for(const{handlerName,handler}of this.selectClipboardHandlers(clipboardData)){const data=handler.copy(clipboardData);copiedData[handlerName]=data;const minimalKeys=["sheetId","cells","zones","figureId"];for(const key of minimalKeys){if(data&&key in data){copiedData[key]=data[key];}}}
return copiedData;}
paste(zones,copiedData,options){if(!copiedData){return;}
let zone=undefined;let selectedZones=[];const sheetId=this.getters.getActiveSheetId();let target={sheetId,zones,};const handlers=this.selectClipboardHandlers(copiedData);for(const{handlerName,handler}of handlers){const handlerData=copiedData[handlerName];if(!handlerData){continue;}
const currentTarget=handler.getPasteTarget(sheetId,zones,handlerData,options);if(currentTarget.figureId){target.figureId=currentTarget.figureId;}
for(const targetZone of currentTarget.zones){selectedZones.push(targetZone);if(zone===undefined){zone=targetZone;continue;}
zone=union(zone,targetZone);}}
if(zone!==undefined){this.addMissingDimensions(this.getters.getActiveSheetId(),zone.right-zone.left+1,zone.bottom-zone.top+1,zone.left,zone.top);}
handlers.forEach(({handlerName,handler})=>{const handlerData=copiedData[handlerName];if(handlerData){handler.paste(target,handlerData,options);}});if(!options?.selectTarget){return;}
const selection=zones[0];const col=selection.left;const row=selection.top;this.selection.getBackToDefault();this.selection.selectZone({cell:{col,row},zone:union(...selectedZones)},{scrollIntoView:false});}
addMissingDimensions(sheetId,width,height,col,row){const missingRows=height+row-this.getters.getNumberRows(sheetId);if(missingRows>0){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:this.getters.getNumberRows(sheetId)-1,sheetId,quantity:missingRows,position:"after",});}
const missingCols=width+col-this.getters.getNumberCols(sheetId);if(missingCols>0){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:this.getters.getNumberCols(sheetId)-1,sheetId,quantity:missingCols,position:"after",});}}
getClipboardTextContent(){return this.getPlainTextContent();}
getClipboardId(){return this.clipboardId;}
getClipboardContent(){return{[ClipboardMIMEType.PlainText]:this.getPlainTextContent(),[ClipboardMIMEType.Html]:this.getHTMLContent(),[ClipboardMIMEType.OSpreadsheet]:this.getSerializedGridData(),};}
getSerializedGridData(){const data={version:CURRENT_VERSION,clipboardId:this.clipboardId,};if(this.copiedData&&"figureId"in this.copiedData){return JSON.stringify(data);}
return JSON.stringify({...data,...this.copiedData,});}
getPlainTextContent(){if(!this.copiedData?.cells){return"\t";}
return(this.copiedData.cells.map((cells)=>{return cells.map((c)=>this.getters.shouldShowFormulas()&&c?.tokens?.length?c?.content||"":c.evaluatedCell?.formattedValue||"").join("\t");}).join("\n")||"\t");}
getHTMLContent(){if(!this.copiedData?.cells){return`<div data-clipboard-id="${this.clipboardId}">\t</div>`;}
const cells=this.copiedData.cells;if(cells.length===1&&cells[0].length===1){return`<div data-clipboard-id="${this.clipboardId}">${this.getters.getCellText(cells[0][0].position)}</div>`;}
if(!cells[0][0]){return"";}
let htmlTable=`<div data-clipboard-id="${this.clipboardId}"><table border="1" style="border-collapse:collapse">`;for(const row of cells){htmlTable+="<tr>";for(const cell of row){if(!cell){continue;}
const cssStyle=cssPropertiesToCss(cellStyleToCss(this.getters.getCellComputedStyle(cell.position)));const cellText=this.getters.getCellText(cell.position);htmlTable+=`<td style="${cssStyle}">`+xmlEscape(cellText)+"</td>";}
htmlTable+="</tr>";}
htmlTable+="</table></div>";return htmlTable;}
isCutOperation(){return this._isCutOperation??false;}
getDeleteCellsTargets(zone,dimension){const sheetId=this.getters.getActiveSheetId();let cut;if(dimension==="COL"){cut={...zone,left:zone.right+1,right:this.getters.getNumberCols(sheetId)-1,};}
else{cut={...zone,top:zone.bottom+1,bottom:this.getters.getNumberRows(sheetId)-1,};}
return{cut:[cut],paste:[zone]};}
getInsertCellsTargets(zone,dimension){const sheetId=this.getters.getActiveSheetId();let cut;let paste;if(dimension==="COL"){cut={...zone,right:this.getters.getNumberCols(sheetId)-1,};paste={...zone,left:zone.right+1,right:zone.right+1,};}
else{cut={...zone,bottom:this.getters.getNumberRows(sheetId)-1,};paste={...zone,top:zone.bottom+1,bottom:this.getters.getNumberRows(sheetId)-1};}
return{cut:[cut],paste:[paste]};}
getClipboardData(zones){const sheetId=this.getters.getActiveSheetId();const selectedFigureId=this.getters.getSelectedFigureId();if(selectedFigureId){return{figureId:selectedFigureId,sheetId};}
return getClipboardDataPositions(sheetId,zones);}
drawLayer(renderingContext){if(this.status!=="visible"||!this.copiedData){return;}
const{sheetId,zones}=this.copiedData;if(sheetId!==this.getters.getActiveSheetId()||!zones||!zones.length){return;}
const{ctx,thinLineWidth}=renderingContext;ctx.setLineDash([8,5]);ctx.strokeStyle=SELECTION_BORDER_COLOR;ctx.lineWidth=3.3*thinLineWidth;for(const zone of zones){const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width>0&&height>0){ctx.strokeRect(x,y,width,height);}}}}
class FilterEvaluationPlugin extends UIPlugin{static getters=["getFilterHiddenValues","getFirstTableInSelection","isRowFiltered","isFilterActive",];filterValues={};hiddenRows={};isEvaluationDirty=false;allowDispatch(cmd){switch(cmd.type){case"UPDATE_FILTER":if(!this.getters.getFilterId(cmd)){return"FilterNotFound";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"UNDO":case"REDO":case"UPDATE_CELL":case"EVALUATE_CELLS":case"ACTIVATE_SHEET":case"REMOVE_TABLE":case"ADD_COLUMNS_ROWS":case"REMOVE_COLUMNS_ROWS":case"UPDATE_TABLE":this.isEvaluationDirty=true;break;case"START":for(const sheetId of this.getters.getSheetIds()){this.filterValues[sheetId]={};}
break;case"CREATE_SHEET":this.filterValues[cmd.sheetId]={};break;case"HIDE_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"GROUP_HEADERS":case"UNGROUP_HEADERS":case"FOLD_HEADER_GROUP":case"UNFOLD_HEADER_GROUP":case"FOLD_ALL_HEADER_GROUPS":case"UNFOLD_ALL_HEADER_GROUPS":case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":this.updateHiddenRows(cmd.sheetId);break;case"UPDATE_FILTER":this.updateFilter(cmd);this.updateHiddenRows(cmd.sheetId);break;case"DUPLICATE_SHEET":this.filterValues[cmd.sheetIdTo]=deepCopy(this.filterValues[cmd.sheetId]);break;}}
finalize(){if(this.isEvaluationDirty){for(const sheetId of this.getters.getSheetIds()){this.updateHiddenRows(sheetId);}
this.isEvaluationDirty=false;}}
isRowFiltered(sheetId,row){return!!this.hiddenRows[sheetId]?.has(row);}
getFilterHiddenValues(position){const id=this.getters.getFilterId(position);const sheetId=position.sheetId;if(!id||!this.filterValues[sheetId])
return[];return this.filterValues[sheetId][id]||[];}
isFilterActive(position){const id=this.getters.getFilterId(position);const sheetId=position.sheetId;return Boolean(id&&this.filterValues[sheetId]?.[id]?.length);}
getFirstTableInSelection(){const sheetId=this.getters.getActiveSheetId();const selection=this.getters.getSelectedZones();return this.getters.getTablesOverlappingZones(sheetId,selection)[0];}
updateFilter({col,row,hiddenValues,sheetId}){const id=this.getters.getFilterId({sheetId,col,row});if(!id)
return;if(!this.filterValues[sheetId])
this.filterValues[sheetId]={};this.filterValues[sheetId][id]=hiddenValues;}
updateHiddenRows(sheetId){const filters=this.getters.getFilters(sheetId).sort((filter1,filter2)=>filter1.rangeWithHeaders.zone.top-filter2.rangeWithHeaders.zone.top);const hiddenRows=new Set();for(let filter of filters){if(hiddenRows.has(filter.rangeWithHeaders.zone.top)||this.getters.isRowHiddenByUser(sheetId,filter.rangeWithHeaders.zone.top)){continue;}
const filteredValues=this.filterValues[sheetId]?.[filter.id]?.map(toLowerCase);const filteredZone=filter.filteredRange?.zone;if(!filteredValues||!filteredZone)
continue;for(let row=filteredZone.top;row<=filteredZone.bottom;row++){const value=this.getCellValueAsString(sheetId,filter.col,row);if(filteredValues.includes(value)){hiddenRows.add(row);}}}
this.hiddenRows[sheetId]=hiddenRows;}
getCellValueAsString(sheetId,col,row){const value=this.getters.getEvaluatedCell({sheetId,col,row}).formattedValue;return value.toLowerCase();}
exportForExcel(data){for(const sheetData of data.sheets){const sheetId=sheetData.id;for(const tableData of sheetData.tables){const tableZone=toZone(tableData.range);const filters=[];const headerNames=[];for(const i of range(0,zoneToDimension(tableZone).numberOfCols)){const position={sheetId:sheetData.id,col:tableZone.left+i,row:tableZone.top,};const filteredValues=this.getFilterHiddenValues(position);const filter=this.getters.getFilter(position);const valuesInFilterZone=filter?.filteredRange?positions(filter.filteredRange.zone).map((position)=>this.getters.getEvaluatedCell({sheetId,...position}).formattedValue):[];if(filteredValues.length){const xlsxDisplayedValues=valuesInFilterZone.filter((val)=>val).filter((val)=>!filteredValues.includes(val));filters.push({colId:i,displayedValues:[...new Set(xlsxDisplayedValues)],displayBlanks:!filteredValues.includes("")&&valuesInFilterZone.some((val)=>!val),});}
const headerString=this.getters.getEvaluatedCell(position).formattedValue;const headerName=this.getUniqueColNameForExcel(i,headerString,headerNames);headerNames.push(headerName);sheetData.cells[toXC(position.col,position.row)]={...sheetData.cells[toXC(position.col,position.row)],content:headerName,value:headerName,isFormula:false,};}
tableData.filters=filters;}}}
getUniqueColNameForExcel(colIndex,colName,usedColNames){if(!colName){colName=`Column${colIndex}`;}
let currentColName=colName;let i=2;while(usedColNames.includes(currentColName)){currentColName=colName+String(i);i++;}
return currentColName;}}
class GridSelectionPlugin extends UIPlugin{static layers=["Selection"];static getters=["getActiveSheet","getActiveSheetId","getActiveCell","getActiveCols","getActiveRows","getCurrentStyle","getSelectedZones","getSelectedZone","getSelectedCells","getSelectedFigureId","getSelection","getActivePosition","getSheetPosition","isSingleColSelected","getElementsFromSelection","tryGetActiveSheetId","isGridSelectionActive",];gridSelection={anchor:{cell:{col:0,row:0},zone:{top:0,left:0,bottom:0,right:0},},zones:[{top:0,left:0,bottom:0,right:0}],};selectedFigureId=null;sheetsData={};moveClient;activeSheet=null;constructor(config){super(config);this.moveClient=config.moveClient;}
allowDispatch(cmd){switch(cmd.type){case"ACTIVATE_SHEET":try{const sheet=this.getters.getSheet(cmd.sheetIdTo);if(!sheet.isVisible){return"SheetIsHidden";}
break;}
catch(error){return"InvalidSheetId";}
case"MOVE_COLUMNS_ROWS":return this.isMoveElementAllowed(cmd);}
return"Success";}
handleEvent(event){const anchor=event.anchor;let zones=[];switch(event.mode){case"overrideSelection":zones=[anchor.zone];break;case"updateAnchor":zones=[...this.gridSelection.zones];const index=zones.findIndex((z)=>isEqual(z,event.previousAnchor.zone));if(index>=0){zones[index]=anchor.zone;}
break;case"newAnchor":zones=[...this.gridSelection.zones,anchor.zone];break;}
this.setSelectionMixin(event.anchor,zones);this.selection.resetDefaultAnchor(this,deepCopy(this.gridSelection.anchor));const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId:this.getters.getActiveSheetId(),col,row,});this.selectedFigureId=null;}
handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.selectedFigureId=null;break;case"DELETE_FIGURE":if(this.selectedFigureId===cmd.id){this.selectedFigureId=null;}
break;case"DELETE_SHEET":if(this.selectedFigureId&&this.getters.getFigure(cmd.sheetId,this.selectedFigureId)){this.selectedFigureId=null;}
break;}
switch(cmd.type){case"START":const firstSheetId=this.getters.getVisibleSheetIds()[0];this.activateSheet(firstSheetId,firstSheetId);const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:firstSheetId,col:0,row:0,});this.selectCell(col,row);this.selection.registerAsDefault(this,this.gridSelection.anchor,{handleEvent:this.handleEvent.bind(this),});this.moveClient({sheetId:firstSheetId,col:0,row:0});break;case"ACTIVATE_SHEET":{this.activateSheet(cmd.sheetIdFrom,cmd.sheetIdTo);break;}
case"REMOVE_COLUMNS_ROWS":{const sheetId=this.getters.getActiveSheetId();if(cmd.sheetId===sheetId){if(cmd.dimension==="COL"){this.onColumnsRemoved(cmd);}
else{this.onRowsRemoved(cmd);}
const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId,col,row});}
break;}
case"ADD_COLUMNS_ROWS":{const sheetId=this.getters.getActiveSheetId();if(cmd.sheetId===sheetId){this.onAddElements(cmd);const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId,col,row});}
break;}
case"MOVE_COLUMNS_ROWS":if(cmd.sheetId===this.getActiveSheetId()){this.onMoveElements(cmd);}
break;case"SELECT_FIGURE":this.selectedFigureId=cmd.id;break;case"ACTIVATE_NEXT_SHEET":this.activateNextSheet("right");break;case"ACTIVATE_PREVIOUS_SHEET":this.activateNextSheet("left");break;case"HIDE_SHEET":if(cmd.sheetId===this.getActiveSheetId()){this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:cmd.sheetId,sheetIdTo:this.getters.getVisibleSheetIds()[0],});}
break;case"UNDO":case"REDO":case"DELETE_SHEET":const deletedSheetIds=Object.keys(this.sheetsData).filter((sheetId)=>!this.getters.tryGetSheet(sheetId));for(const sheetId of deletedSheetIds){delete this.sheetsData[sheetId];}
for(const sheetId in this.sheetsData){const gridSelection=this.clipSelection(sheetId,this.sheetsData[sheetId].gridSelection);this.sheetsData[sheetId]={gridSelection:deepCopy(gridSelection),};}
if(!this.getters.tryGetSheet(this.getters.getActiveSheetId())){const currentSheetIds=this.getters.getVisibleSheetIds();this.activeSheet=this.getters.getSheet(currentSheetIds[0]);if(this.activeSheet.id in this.sheetsData){const{anchor}=this.clipSelection(this.activeSheet.id,this.sheetsData[this.activeSheet.id].gridSelection);this.selectCell(anchor.cell.col,anchor.cell.row);}
else{this.selectCell(0,0);}
const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId:this.getters.getActiveSheetId(),col,row,});}
const sheetId=this.getters.getActiveSheetId();this.gridSelection.zones=this.gridSelection.zones.map((z)=>this.getters.expandZone(sheetId,z));this.gridSelection.anchor.zone=this.getters.expandZone(sheetId,this.gridSelection.anchor.zone);this.setSelectionMixin(this.gridSelection.anchor,this.gridSelection.zones);this.selectedFigureId=null;break;}}
finalize(){this.selection.resetDefaultAnchor(this,deepCopy(this.gridSelection.anchor));}
isGridSelectionActive(){return this.selection.isListening(this);}
getActiveSheet(){return this.activeSheet;}
getActiveSheetId(){return this.activeSheet.id;}
tryGetActiveSheetId(){return this.activeSheet?.id;}
getActiveCell(){return this.getters.getEvaluatedCell(this.getActivePosition());}
getActiveCols(){const activeCols=new Set();for(let zone of this.gridSelection.zones){if(zone.top===0&&zone.bottom===this.getters.getNumberRows(this.getters.getActiveSheetId())-1){for(let i=zone.left;i<=zone.right;i++){activeCols.add(i);}}}
return activeCols;}
getActiveRows(){const activeRows=new Set();const sheetId=this.getters.getActiveSheetId();for(let zone of this.gridSelection.zones){if(zone.left===0&&zone.right===this.getters.getNumberCols(sheetId)-1){for(let i=zone.top;i<=zone.bottom;i++){activeRows.add(i);}}}
return activeRows;}
getCurrentStyle(){const zone=this.getters.getSelectedZone();const sheetId=this.getters.getActiveSheetId();return this.getters.getCellStyle({sheetId,col:zone.left,row:zone.top});}
getSelectedZones(){return deepCopy(this.gridSelection.zones);}
getSelectedZone(){return deepCopy(this.gridSelection.anchor.zone);}
getSelection(){return deepCopy(this.gridSelection);}
getSelectedCells(){const sheetId=this.getters.getActiveSheetId();const cells=[];for(const zone of this.gridSelection.zones){cells.push(...this.getters.getEvaluatedCellsInZone(sheetId,zone));}
return cells;}
getSelectedFigureId(){return this.selectedFigureId;}
getActivePosition(){return this.getters.getMainCellPosition({sheetId:this.getActiveSheetId(),col:this.gridSelection.anchor.cell.col,row:this.gridSelection.anchor.cell.row,});}
getSheetPosition(sheetId){if(sheetId===this.getters.getActiveSheetId()){return this.getActivePosition();}
else{const sheetData=this.sheetsData[sheetId];return sheetData?{sheetId,col:sheetData.gridSelection.anchor.cell.col,row:sheetData.gridSelection.anchor.cell.row,}:this.getters.getNextVisibleCellPosition({sheetId,col:0,row:0});}}
isSingleColSelected(){const selection=this.getters.getSelectedZones();if(selection.length!==1||selection[0].left!==selection[0].right){return false;}
return true;}
getElementsFromSelection(dimension){if(dimension==="COL"&&this.getters.getActiveCols().size===0){return[];}
if(dimension==="ROW"&&this.getters.getActiveRows().size===0){return[];}
const zones=this.getters.getSelectedZones();let elements=[];const start=dimension==="COL"?"left":"top";const end=dimension==="COL"?"right":"bottom";for(const zone of zones){const zoneRows=Array.from({length:zone[end]-zone[start]+1},(_,i)=>zone[start]+i);elements=elements.concat(zoneRows);}
return[...new Set(elements)].sort();}
activateSheet(sheetIdFrom,sheetIdTo){this.setActiveSheet(sheetIdTo);this.sheetsData[sheetIdFrom]={gridSelection:deepCopy(this.gridSelection),};if(sheetIdTo in this.sheetsData){Object.assign(this,this.sheetsData[sheetIdTo]);this.selection.resetDefaultAnchor(this,deepCopy(this.gridSelection.anchor));}
else{const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:sheetIdTo,col:0,row:0,});this.selectCell(col,row);}}
setSelectionMixin(anchor,zones){const{anchor:clippedAnchor,zones:clippedZones}=this.clipSelection(this.getters.getActiveSheetId(),{anchor,zones});this.gridSelection.anchor=clippedAnchor;this.gridSelection.zones=uniqueZones(clippedZones);}
selectCell(col,row){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.expandZone(sheetId,{left:col,right:col,top:row,bottom:row});this.setSelectionMixin({zone,cell:{col,row}},[zone]);}
setActiveSheet(id){const sheet=this.getters.getSheet(id);this.activeSheet=sheet;}
activateNextSheet(direction){const sheetIds=this.getters.getSheetIds();const oldSheetPosition=sheetIds.findIndex((id)=>id===this.activeSheet.id);const delta=direction==="left"?sheetIds.length-1:1;const newPosition=(oldSheetPosition+delta)%sheetIds.length;this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.getActiveSheetId(),sheetIdTo:sheetIds[newPosition],});}
onColumnsRemoved(cmd){const{cell,zone}=this.gridSelection.anchor;const selectedZone=updateSelectionOnDeletion(zone,"left",[...cmd.elements]);let anchorZone={left:cell.col,right:cell.col,top:cell.row,bottom:cell.row};anchorZone=updateSelectionOnDeletion(anchorZone,"left",[...cmd.elements]);const anchor={cell:{col:anchorZone.left,row:anchorZone.top,},zone:selectedZone,};const selections=this.gridSelection.zones.map((zone)=>updateSelectionOnDeletion(zone,"left",[...cmd.elements]));this.setSelectionMixin(anchor,selections);}
onRowsRemoved(cmd){const{cell,zone}=this.gridSelection.anchor;const selectedZone=updateSelectionOnDeletion(zone,"top",[...cmd.elements]);let anchorZone={left:cell.col,right:cell.col,top:cell.row,bottom:cell.row};anchorZone=updateSelectionOnDeletion(anchorZone,"top",[...cmd.elements]);const anchor={cell:{col:anchorZone.left,row:anchorZone.top,},zone:selectedZone,};const selections=this.gridSelection.zones.map((zone)=>updateSelectionOnDeletion(zone,"top",[...cmd.elements]));this.setSelectionMixin(anchor,selections);}
onAddElements(cmd){const start=cmd.dimension==="COL"?"left":"top";const anchorZone=updateSelectionOnInsertion(this.gridSelection.anchor.zone,start,cmd.base,cmd.position,cmd.quantity);const selection=this.gridSelection.zones.map((zone)=>updateSelectionOnInsertion(zone,start,cmd.base,cmd.position,cmd.quantity));const anchor={cell:{col:anchorZone.left,row:anchorZone.top},zone:anchorZone,};this.setSelectionMixin(anchor,selection);}
onMoveElements(cmd){const thickness=cmd.elements.length;this.dispatch("ADD_COLUMNS_ROWS",{dimension:cmd.dimension,sheetId:cmd.sheetId,base:cmd.base,quantity:thickness,position:cmd.position,});const isCol=cmd.dimension==="COL";const start=cmd.elements[0];const end=cmd.elements[thickness-1];const isBasedBefore=cmd.base<start;const deltaCol=isBasedBefore&&isCol?thickness:0;const deltaRow=isBasedBefore&&!isCol?thickness:0;const target=[{left:isCol?start+deltaCol:0,right:isCol?end+deltaCol:this.getters.getNumberCols(cmd.sheetId)-1,top:!isCol?start+deltaRow:0,bottom:!isCol?end+deltaRow:this.getters.getNumberRows(cmd.sheetId)-1,},];const sheetId=this.getActiveSheetId();const handler=new CellClipboardHandler(this.getters,this.dispatch);const data=handler.copy(getClipboardDataPositions(sheetId,target));if(!data){return;}
const base=isBasedBefore?cmd.base:cmd.base+1;const pasteTarget=[{left:isCol?base:0,right:isCol?base+thickness-1:this.getters.getNumberCols(cmd.sheetId)-1,top:!isCol?base:0,bottom:!isCol?base+thickness-1:this.getters.getNumberRows(cmd.sheetId)-1,},];handler.paste({zones:pasteTarget,sheetId},data,{isCutOperation:true});const toRemove=isBasedBefore?cmd.elements.map((el)=>el+thickness):cmd.elements;let currentIndex=cmd.base;for(const element of toRemove){const size=this.getters.getHeaderSize(cmd.sheetId,cmd.dimension,element);this.dispatch("RESIZE_COLUMNS_ROWS",{dimension:cmd.dimension,sheetId:cmd.sheetId,size,elements:[currentIndex],});currentIndex+=1;}
this.dispatch("REMOVE_COLUMNS_ROWS",{dimension:cmd.dimension,sheetId:cmd.sheetId,elements:toRemove,});}
isMoveElementAllowed(cmd){const isCol=cmd.dimension==="COL";const start=cmd.elements[0];const end=cmd.elements[cmd.elements.length-1];const id=cmd.sheetId;const doesElementsHaveCommonMerges=isCol?this.getters.doesColumnsHaveCommonMerges:this.getters.doesRowsHaveCommonMerges;if(doesElementsHaveCommonMerges(id,start-1,start)||doesElementsHaveCommonMerges(id,end,end+1)||doesElementsHaveCommonMerges(id,cmd.base-1,cmd.base)){return"WillRemoveExistingMerge";}
const headers=[cmd.base,...cmd.elements];const maxHeaderValue=isCol?this.getters.getNumberCols(id):this.getters.getNumberRows(id);if(headers.some((h)=>h<0||h>=maxHeaderValue)){return"InvalidHeaderIndex";}
return"Success";}
clipSelection(sheetId,selection){const cols=this.getters.getNumberCols(sheetId)-1;const rows=this.getters.getNumberRows(sheetId)-1;const zones=selection.zones.map((z)=>{return{left:clip(z.left,0,cols),right:clip(z.right,0,cols),top:clip(z.top,0,rows),bottom:clip(z.bottom,0,rows),};});const anchorCol=clip(selection.anchor.cell.col,0,cols);const anchorRow=clip(selection.anchor.cell.row,0,rows);const anchorZone={left:clip(selection.anchor.zone.left,0,cols),right:clip(selection.anchor.zone.right,0,cols),top:clip(selection.anchor.zone.top,0,rows),bottom:clip(selection.anchor.zone.bottom,0,rows),};return{zones,anchor:{cell:{col:anchorCol,row:anchorRow},zone:anchorZone,},};}
drawLayer(renderingContext){if(this.getters.isDashboard()){return;}
const{ctx,thinLineWidth}=renderingContext;const zones=this.getSelectedZones();ctx.fillStyle="#f3f7fe";const onlyOneCell=zones.length===1&&zones[0].left===zones[0].right&&zones[0].top===zones[0].bottom;ctx.fillStyle=onlyOneCell?"#f3f7fe":"#e9f0ff";ctx.strokeStyle=SELECTION_BORDER_COLOR;ctx.lineWidth=1.5*thinLineWidth;for(const zone of zones){const{x,y,width,height}=this.getters.getVisibleRect(zone);ctx.globalCompositeOperation="multiply";ctx.fillRect(x,y,width,height);ctx.globalCompositeOperation="source-over";ctx.strokeRect(x,y,width,height);}
ctx.globalCompositeOperation="source-over";const position=this.getActivePosition();ctx.strokeStyle=SELECTION_BORDER_COLOR;ctx.lineWidth=3*thinLineWidth;let zone;if(this.getters.isInMerge(position)){zone=this.getters.getMerge(position);}
else{zone=positionToZone(position);}
const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width>0&&height>0){ctx.strokeRect(x,y,width,height);}}}
class InternalViewport{getters;sheetId;boundaries;top;bottom;left;right;offsetX;offsetY;offsetScrollbarX;offsetScrollbarY;canScrollVertically;canScrollHorizontally;viewportWidth;viewportHeight;offsetCorrectionX;offsetCorrectionY;constructor(getters,sheetId,boundaries,sizeInGrid,options,offsets){this.getters=getters;this.sheetId=sheetId;this.boundaries=boundaries;this.viewportWidth=sizeInGrid.width;this.viewportHeight=sizeInGrid.height;this.offsetScrollbarX=offsets.x;this.offsetScrollbarY=offsets.y;this.canScrollVertically=options.canScrollVertically;this.canScrollHorizontally=options.canScrollHorizontally;this.offsetCorrectionX=this.getters.getColDimensions(this.sheetId,this.boundaries.left).start;this.offsetCorrectionY=this.getters.getRowDimensions(this.sheetId,this.boundaries.top).start;this.adjustViewportOffsetX();this.adjustViewportOffsetY();}
getMaxSize(){const lastCol=this.getters.findLastVisibleColRowIndex(this.sheetId,"COL",{first:this.boundaries.left,last:this.boundaries.right,});const lastRow=this.getters.findLastVisibleColRowIndex(this.sheetId,"ROW",{first:this.boundaries.top,last:this.boundaries.bottom,});const{end:lastColEnd,size:lastColSize}=this.getters.getColDimensions(this.sheetId,lastCol);const{end:lastRowEnd,size:lastRowSize}=this.getters.getRowDimensions(this.sheetId,lastRow);const leftColIndex=this.searchHeaderIndex("COL",lastColEnd-this.viewportWidth,0);const leftColSize=this.getters.getColSize(this.sheetId,leftColIndex);const leftRowIndex=this.searchHeaderIndex("ROW",lastRowEnd-this.viewportHeight,0);const topRowSize=this.getters.getRowSize(this.sheetId,leftRowIndex);let width=lastColEnd-this.offsetCorrectionX;if(this.canScrollHorizontally){width+=Math.max(DEFAULT_CELL_WIDTH,Math.min(leftColSize,this.viewportWidth-lastColSize));width=Math.max(width,this.viewportWidth);}
let height=lastRowEnd-this.offsetCorrectionY;if(this.canScrollVertically){height+=Math.max(DEFAULT_CELL_HEIGHT+5,Math.min(topRowSize,this.viewportHeight-lastRowSize));height=Math.max(height,this.viewportHeight);}
if(lastRowEnd+FOOTER_HEIGHT>height&&!this.getters.isReadonly()){height+=FOOTER_HEIGHT;}
return{width,height};}
getColIndex(x){if(x<this.offsetCorrectionX||x>this.offsetCorrectionX+this.viewportWidth){return-1;}
return this.searchHeaderIndex("COL",x-this.offsetCorrectionX,this.left);}
getRowIndex(y){if(y<this.offsetCorrectionY||y>this.offsetCorrectionY+this.viewportHeight){return-1;}
return this.searchHeaderIndex("ROW",y-this.offsetCorrectionY,this.top);}
adjustPosition(position){const sheetId=this.sheetId;const mainCellPosition=this.getters.getMainCellPosition({sheetId,...position});const{col,row}=this.getters.getNextVisibleCellPosition(mainCellPosition);if(isInside(col,this.boundaries.top,this.boundaries)){this.adjustPositionX(col);}
if(isInside(this.boundaries.left,row,this.boundaries)){this.adjustPositionY(row);}}
adjustPositionX(targetCol){const sheetId=this.sheetId;const{end}=this.getters.getColDimensions(sheetId,targetCol);if(this.offsetX+this.offsetCorrectionX+this.viewportWidth<end){const maxCol=this.getters.getNumberCols(sheetId);let finalTarget=targetCol;while(this.getters.isColHidden(sheetId,finalTarget)&&finalTarget<maxCol){finalTarget++;}
const finalTargetEnd=this.getters.getColDimensions(sheetId,finalTarget).end;const startIndex=this.searchHeaderIndex("COL",finalTargetEnd-this.viewportWidth-this.offsetCorrectionX,this.boundaries.left);this.offsetScrollbarX=this.getters.getColDimensions(sheetId,startIndex).end-this.offsetCorrectionX;}
else if(this.left>targetCol){let finalTarget=targetCol;while(this.getters.isColHidden(sheetId,finalTarget)&&finalTarget>0){finalTarget--;}
this.offsetScrollbarX=this.getters.getColDimensions(sheetId,finalTarget).start-this.offsetCorrectionX;}
this.adjustViewportZoneX();}
adjustPositionY(targetRow){const sheetId=this.sheetId;const{end}=this.getters.getRowDimensions(sheetId,targetRow);if(this.offsetY+this.viewportHeight+this.offsetCorrectionY<end){const maxRow=this.getters.getNumberRows(sheetId);let finalTarget=targetRow;while(this.getters.isRowHidden(sheetId,finalTarget)&&finalTarget<maxRow){finalTarget++;}
const finalTargetEnd=this.getters.getRowDimensions(sheetId,finalTarget).end;const startIndex=this.searchHeaderIndex("ROW",finalTargetEnd-this.viewportHeight-this.offsetCorrectionY,this.boundaries.top);this.offsetScrollbarY=this.getters.getRowDimensions(sheetId,startIndex).end-this.offsetCorrectionY;}
else if(this.top>targetRow){let finalTarget=targetRow;while(this.getters.isRowHidden(sheetId,finalTarget)&&finalTarget>0){finalTarget--;}
this.offsetScrollbarY=this.getters.getRowDimensions(sheetId,finalTarget).start-this.offsetCorrectionY;}
this.adjustViewportZoneY();}
willNewOffsetScrollViewport(offsetX,offsetY){return((this.canScrollHorizontally&&this.offsetScrollbarX!==offsetX)||(this.canScrollVertically&&this.offsetScrollbarY!==offsetY));}
setViewportOffset(offsetX,offsetY){this.setViewportOffsetX(offsetX);this.setViewportOffsetY(offsetY);}
adjustViewportZone(){this.adjustViewportZoneX();this.adjustViewportZoneY();}
getRect(zone){const targetZone=intersection(zone,this);if(targetZone){const x=this.getters.getColRowOffset("COL",this.left,targetZone.left)+this.offsetCorrectionX;const y=this.getters.getColRowOffset("ROW",this.top,targetZone.top)+this.offsetCorrectionY;const width=Math.min(this.getters.getColRowOffset("COL",targetZone.left,targetZone.right+1),this.viewportWidth);const height=Math.min(this.getters.getColRowOffset("ROW",targetZone.top,targetZone.bottom+1),this.viewportHeight);return{x,y,width,height,};}
return undefined;}
isVisible(col,row){const isInside=row<=this.bottom&&row>=this.top&&col>=this.left&&col<=this.right;return(isInside&&!this.getters.isColHidden(this.sheetId,col)&&!this.getters.isRowHidden(this.sheetId,row));}
searchHeaderIndex(dimension,position,startIndex=0){const sheetId=this.sheetId;const headers=this.getters.getNumberHeaders(sheetId,dimension);let start=startIndex;let end=headers;while(start<=end&&start!==headers&&end!==-1){const mid=Math.floor((start+end)/2);const offset=this.getters.getColRowOffset(dimension,startIndex,mid);const size=this.getters.getHeaderSize(sheetId,dimension,mid);if(position>=offset&&position<offset+size){return mid;}
else if(position>=offset+size){start=mid+1;}
else{end=mid-1;}}
return-1;}
setViewportOffsetX(offsetX){if(!this.canScrollHorizontally){return;}
this.offsetScrollbarX=offsetX;this.adjustViewportZoneX();}
setViewportOffsetY(offsetY){if(!this.canScrollVertically){return;}
this.offsetScrollbarY=offsetY;this.adjustViewportZoneY();}
adjustViewportOffsetX(){if(this.canScrollHorizontally){const{width:viewportWidth}=this.getMaxSize();if(this.viewportWidth+this.offsetScrollbarX>viewportWidth){this.offsetScrollbarX=Math.max(0,viewportWidth-this.viewportWidth);}}
this.adjustViewportZoneX();}
adjustViewportOffsetY(){if(this.canScrollVertically){const{height:paneHeight}=this.getMaxSize();if(this.viewportHeight+this.offsetScrollbarY>paneHeight){this.offsetScrollbarY=Math.max(0,paneHeight-this.viewportHeight);}}
this.adjustViewportZoneY();}
adjustViewportZoneX(){const sheetId=this.sheetId;this.left=this.searchHeaderIndex("COL",this.offsetScrollbarX,this.boundaries.left);this.right=Math.min(this.boundaries.right,this.searchHeaderIndex("COL",this.viewportWidth,this.left));if(this.left===-1){this.left=this.boundaries.left;}
if(this.right===-1){this.right=this.getters.getNumberCols(sheetId)-1;}
this.offsetX=this.getters.getColDimensions(sheetId,this.left).start-
this.getters.getColDimensions(sheetId,this.boundaries.left).start;}
adjustViewportZoneY(){const sheetId=this.sheetId;this.top=this.searchHeaderIndex("ROW",this.offsetScrollbarY,this.boundaries.top);this.bottom=Math.min(this.boundaries.bottom,this.searchHeaderIndex("ROW",this.viewportHeight,this.top));if(this.top===-1){this.top=this.boundaries.top;}
if(this.bottom===-1){this.bottom=this.getters.getNumberRows(sheetId)-1;}
this.offsetY=this.getters.getRowDimensions(sheetId,this.top).start-
this.getters.getRowDimensions(sheetId,this.boundaries.top).start;}}
class SheetViewPlugin extends UIPlugin{static getters=["getColIndex","getRowIndex","getActiveMainViewport","getSheetViewDimension","getSheetViewDimensionWithHeaders","getMainViewportRect","isVisibleInViewport","getEdgeScrollCol","getEdgeScrollRow","getVisibleFigures","getVisibleRect","getVisibleRectWithoutHeaders","getVisibleCellPositions","getColRowOffsetInViewport","getMainViewportCoordinates","getActiveSheetScrollInfo","getActiveSheetDOMScrollInfo","getSheetViewVisibleCols","getSheetViewVisibleRows","getFrozenSheetViewRatio","isPositionVisible","getColDimensionsInViewport","getRowDimensionsInViewport",];viewports={};sheetViewWidth=getDefaultSheetViewSize();sheetViewHeight=getDefaultSheetViewSize();gridOffsetX=0;gridOffsetY=0;sheetsWithDirtyViewports=new Set();shouldAdjustViewports=false;allowDispatch(cmd){switch(cmd.type){case"SET_VIEWPORT_OFFSET":return this.chainValidations(this.checkScrollingDirection,this.checkIfViewportsWillChange)(cmd);case"RESIZE_SHEETVIEW":return this.chainValidations(this.checkValuesAreDifferent,this.checkPositiveDimension)(cmd);default:return"Success";}}
handleEvent(event){const sheetId=this.getters.getActiveSheetId();if(event.options.scrollIntoView){let{col,row}=findCellInNewZone(event.previousAnchor.zone,event.anchor.zone);if(event.mode==="updateAnchor"){const oldZone=event.previousAnchor.zone;const newZone=event.anchor.zone;const{top,bottom,left,right}=this.getMainInternalViewport(sheetId);if(oldZone.left===newZone.left&&oldZone.right===newZone.right){col=left>col||col>right?left:col;}
if(oldZone.top===newZone.top&&oldZone.bottom===newZone.bottom){row=top>row||row>bottom?top:row;}}
col=Math.min(col,this.getters.getNumberCols(sheetId)-1);row=Math.min(row,this.getters.getNumberRows(sheetId)-1);if(!this.sheetsWithDirtyViewports.has(sheetId)){this.refreshViewport(this.getters.getActiveSheetId(),{col,row});}}}
handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)){for(const sheetId of this.getters.getSheetIds()){this.sheetsWithDirtyViewports.add(sheetId);}}
switch(cmd.type){case"START":this.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});this.resetViewports(this.getters.getActiveSheetId());break;case"UNDO":case"REDO":this.cleanViewports();for(const sheetId of this.getters.getSheetIds()){this.sheetsWithDirtyViewports.add(sheetId);}
this.shouldAdjustViewports=true;break;case"RESIZE_SHEETVIEW":this.resizeSheetView(cmd.height,cmd.width,cmd.gridOffsetX,cmd.gridOffsetY);break;case"SET_VIEWPORT_OFFSET":this.setSheetViewOffset(cmd.offsetX,cmd.offsetY);break;case"SHIFT_VIEWPORT_DOWN":const sheetId=this.getters.getActiveSheetId();const{top,viewportHeight,offsetCorrectionY}=this.getMainInternalViewport(sheetId);const topRowDims=this.getters.getRowDimensions(sheetId,top);this.shiftVertically(topRowDims.start+viewportHeight-offsetCorrectionY);break;case"SHIFT_VIEWPORT_UP":{const sheetId=this.getters.getActiveSheetId();const{top,viewportHeight,offsetCorrectionY}=this.getMainInternalViewport(sheetId);const topRowDims=this.getters.getRowDimensions(sheetId,top);this.shiftVertically(topRowDims.end-offsetCorrectionY-viewportHeight);break;}
case"REMOVE_TABLE":case"UPDATE_TABLE":case"UPDATE_FILTER":this.sheetsWithDirtyViewports.add(cmd.sheetId);break;case"REMOVE_COLUMNS_ROWS":case"RESIZE_COLUMNS_ROWS":case"HIDE_COLUMNS_ROWS":case"ADD_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"UNGROUP_HEADERS":case"GROUP_HEADERS":case"FOLD_HEADER_GROUP":case"UNFOLD_HEADER_GROUP":case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_ALL_HEADER_GROUPS":case"FOLD_ALL_HEADER_GROUPS":{const sheetId="sheetId"in cmd?cmd.sheetId:this.getters.getActiveSheetId();this.sheetsWithDirtyViewports.add(sheetId);break;}
case"UPDATE_CELL":if("content"in cmd||"format"in cmd||cmd.style?.fontSize!==undefined){for(const sheetId of this.getters.getSheetIds()){this.sheetsWithDirtyViewports.add(sheetId);}}
break;case"DELETE_SHEET":this.cleanViewports();break;case"ACTIVATE_SHEET":this.sheetsWithDirtyViewports.add(cmd.sheetIdTo);break;case"UNFREEZE_ROWS":case"UNFREEZE_COLUMNS":case"FREEZE_COLUMNS":case"FREEZE_ROWS":case"UNFREEZE_COLUMNS_ROWS":this.resetViewports(this.getters.getActiveSheetId());break;case"DELETE_SHEET":this.sheetsWithDirtyViewports.delete(cmd.sheetId);break;case"SCROLL_TO_CELL":this.refreshViewport(this.getters.getActiveSheetId(),{col:cmd.col,row:cmd.row});break;}}
finalize(){for(const sheetId of this.sheetsWithDirtyViewports){this.resetViewports(sheetId);if(this.shouldAdjustViewports){const position=this.getters.getSheetPosition(sheetId);this.getSubViewports(sheetId).forEach((viewport)=>{viewport.adjustPosition(position);});}}
this.sheetsWithDirtyViewports=new Set();this.shouldAdjustViewports=false;this.setViewports();}
setViewports(){const sheetIds=this.getters.getSheetIds();for(const sheetId of sheetIds){if(!this.viewports[sheetId]?.bottomRight){this.resetViewports(sheetId);}}}
getColIndex(x){const sheetId=this.getters.getActiveSheetId();return Math.max(...this.getSubViewports(sheetId).map((viewport)=>viewport.getColIndex(x)));}
getRowIndex(y){const sheetId=this.getters.getActiveSheetId();return Math.max(...this.getSubViewports(sheetId).map((viewport)=>viewport.getRowIndex(y)));}
getSheetViewDimensionWithHeaders(){return{width:this.sheetViewWidth+this.gridOffsetX,height:this.sheetViewHeight+this.gridOffsetY,};}
getSheetViewDimension(){return{width:this.sheetViewWidth,height:this.sheetViewHeight,};}
getActiveMainViewport(){const sheetId=this.getters.getActiveSheetId();return this.getMainViewport(sheetId);}
getActiveSheetScrollInfo(){const sheetId=this.getters.getActiveSheetId();const viewport=this.getMainInternalViewport(sheetId);return{scrollX:viewport.offsetX,scrollY:viewport.offsetY,};}
getActiveSheetDOMScrollInfo(){const sheetId=this.getters.getActiveSheetId();const viewport=this.getMainInternalViewport(sheetId);return{scrollX:viewport.offsetScrollbarX,scrollY:viewport.offsetScrollbarY,};}
getSheetViewVisibleCols(){const sheetId=this.getters.getActiveSheetId();const viewports=this.getSubViewports(sheetId);return[...new Set(viewports.map((v)=>range(v.left,v.right+1)).flat())].filter((col)=>!this.getters.isHeaderHidden(sheetId,"COL",col));}
getSheetViewVisibleRows(){const sheetId=this.getters.getActiveSheetId();const viewports=this.getSubViewports(sheetId);return[...new Set(viewports.map((v)=>range(v.top,v.bottom+1)).flat())].filter((row)=>!this.getters.isHeaderHidden(sheetId,"ROW",row));}
getVisibleCellPositions(){const visibleCols=this.getSheetViewVisibleCols();const visibleRows=this.getSheetViewVisibleRows();const sheetId=this.getters.getActiveSheetId();const positions=[];for(const col of visibleCols){for(const row of visibleRows){const position={sheetId,col,row};const mainPosition=this.getters.getMainCellPosition(position);if(mainPosition.row!==row||mainPosition.col!==col){continue;}
positions.push(position);}}
return positions;}
getMainViewportRect(){const sheetId=this.getters.getActiveSheetId();const viewport=this.getMainInternalViewport(sheetId);const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);let{width,height}=viewport.getMaxSize();const x=this.getters.getColDimensions(sheetId,xSplit).start;const y=this.getters.getRowDimensions(sheetId,ySplit).start;return{x,y,width,height};}
getMaximumSheetOffset(){const sheetId=this.getters.getActiveSheetId();const{width,height}=this.getMainViewportRect();const viewport=this.getMainInternalViewport(sheetId);return{maxOffsetX:Math.max(0,width-viewport.viewportWidth+1),maxOffsetY:Math.max(0,height-viewport.viewportHeight+1),};}
getColRowOffsetInViewport(dimension,referenceIndex,index){const sheetId=this.getters.getActiveSheetId();const visibleCols=this.getters.getSheetViewVisibleCols();const visibleRows=this.getters.getSheetViewVisibleRows();if(index<referenceIndex){return-this.getColRowOffsetInViewport(dimension,index,referenceIndex);}
let offset=0;const visibleIndexes=dimension==="COL"?visibleCols:visibleRows;for(let i=referenceIndex;i<index;i++){if(!visibleIndexes.includes(i)){continue;}
offset+=this.getters.getHeaderSize(sheetId,dimension,i);}
return offset;}
isVisibleInViewport({sheetId,col,row}){return this.getSubViewports(sheetId).some((pane)=>pane.isVisible(col,row));}
getEdgeScrollCol(x,previousX,startingX){let canEdgeScroll=false;let direction=0;let delay=0;const{xSplit}=this.getters.getPaneDivisions(this.getters.getActiveSheetId());const{width}=this.getSheetViewDimension();const{x:offsetCorrectionX}=this.getMainViewportCoordinates();const currentOffsetX=this.getActiveSheetScrollInfo().scrollX;if(x>width){canEdgeScroll=true;delay=scrollDelay(x-width);direction=1;}
else if(x<offsetCorrectionX&&startingX>=offsetCorrectionX&&currentOffsetX>0){canEdgeScroll=true;delay=scrollDelay(offsetCorrectionX-x);direction=-1;}
else if(xSplit&&previousX<offsetCorrectionX&&x>offsetCorrectionX){canEdgeScroll=true;delay=scrollDelay(x);direction="reset";}
return{canEdgeScroll,direction,delay};}
getEdgeScrollRow(y,previousY,tartingY){let canEdgeScroll=false;let direction=0;let delay=0;const{ySplit}=this.getters.getPaneDivisions(this.getters.getActiveSheetId());const{height}=this.getSheetViewDimension();const{y:offsetCorrectionY}=this.getMainViewportCoordinates();const currentOffsetY=this.getActiveSheetScrollInfo().scrollY;if(y>height){canEdgeScroll=true;delay=scrollDelay(y-height);direction=1;}
else if(y<offsetCorrectionY&&tartingY>=offsetCorrectionY&&currentOffsetY>0){canEdgeScroll=true;delay=scrollDelay(offsetCorrectionY-y);direction=-1;}
else if(ySplit&&previousY<offsetCorrectionY&&y>offsetCorrectionY){canEdgeScroll=true;delay=scrollDelay(y);direction="reset";}
return{canEdgeScroll,direction,delay};}
getVisibleRect(zone){const rect=this.getVisibleRectWithoutHeaders(zone);return{...rect,x:rect.x+this.gridOffsetX,y:rect.y+this.gridOffsetY};}
getVisibleRectWithoutHeaders(zone){const sheetId=this.getters.getActiveSheetId();const viewportRects=this.getSubViewports(sheetId).map((viewport)=>viewport.getRect(zone)).filter(isDefined);if(viewportRects.length===0){return{x:0,y:0,width:0,height:0};}
const x=Math.min(...viewportRects.map((rect)=>rect.x));const y=Math.min(...viewportRects.map((rect)=>rect.y));const width=Math.max(...viewportRects.map((rect)=>rect.x+rect.width))-x;const height=Math.max(...viewportRects.map((rect)=>rect.y+rect.height))-y;return{x,y,width,height};}
getMainViewportCoordinates(){const sheetId=this.getters.getActiveSheetId();const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const x=this.getters.getColDimensions(sheetId,xSplit).start;const y=this.getters.getRowDimensions(sheetId,ySplit).start;return{x,y};}
getColDimensionsInViewport(sheetId,col){const left=largeMin(this.getters.getSheetViewVisibleCols());const start=this.getters.getColRowOffsetInViewport("COL",left,col);const size=this.getters.getColSize(sheetId,col);const isColHidden=this.getters.isColHidden(sheetId,col);return{start,size:size,end:start+(isColHidden?0:size),};}
getRowDimensionsInViewport(sheetId,row){const top=largeMin(this.getters.getSheetViewVisibleRows());const start=this.getters.getColRowOffsetInViewport("ROW",top,row);const size=this.getters.getRowSize(sheetId,row);const isRowHidden=this.getters.isRowHidden(sheetId,row);return{start,size:size,end:start+(isRowHidden?0:size),};}
ensureMainViewportExist(sheetId){if(!this.viewports[sheetId]){this.resetViewports(sheetId);}}
getSubViewports(sheetId){this.ensureMainViewportExist(sheetId);return Object.values(this.viewports[sheetId]).filter(isDefined);}
checkPositiveDimension(cmd){if(cmd.width<0||cmd.height<0){return"InvalidViewportSize";}
return"Success";}
checkValuesAreDifferent(cmd){const{height,width}=this.getSheetViewDimension();if(cmd.gridOffsetX===this.gridOffsetX&&cmd.gridOffsetY===this.gridOffsetY&&cmd.width===width&&cmd.height===height){return"ValuesNotChanged";}
return"Success";}
checkScrollingDirection({offsetX,offsetY,}){const pane=this.getMainInternalViewport(this.getters.getActiveSheetId());if((!pane.canScrollHorizontally&&offsetX>0)||(!pane.canScrollVertically&&offsetY>0)){return"InvalidScrollingDirection";}
return"Success";}
checkIfViewportsWillChange({offsetX,offsetY}){const sheetId=this.getters.getActiveSheetId();const{maxOffsetX,maxOffsetY}=this.getMaximumSheetOffset();const willScroll=this.getSubViewports(sheetId).some((viewport)=>viewport.willNewOffsetScrollViewport(clip(offsetX,0,maxOffsetX),clip(offsetY,0,maxOffsetY)));return willScroll?"Success":"ViewportScrollLimitsReached";}
getMainViewport(sheetId){const viewport=this.getMainInternalViewport(sheetId);return{top:viewport.top,left:viewport.left,bottom:viewport.bottom,right:viewport.right,};}
getMainInternalViewport(sheetId){this.ensureMainViewportExist(sheetId);return this.viewports[sheetId].bottomRight;}
cleanViewports(){const sheetIds=this.getters.getSheetIds();for(let sheetId of Object.keys(this.viewports)){if(!sheetIds.includes(sheetId)){delete this.viewports[sheetId];}}}
resizeSheetView(height,width,gridOffsetX=0,gridOffsetY=0){this.sheetViewHeight=height;this.sheetViewWidth=width;this.gridOffsetX=gridOffsetX;this.gridOffsetY=gridOffsetY;this.recomputeViewports();}
recomputeViewports(){for(let sheetId of Object.keys(this.viewports)){this.resetViewports(sheetId);}}
setSheetViewOffset(offsetX,offsetY){const sheetId=this.getters.getActiveSheetId();const{maxOffsetX,maxOffsetY}=this.getMaximumSheetOffset();this.getSubViewports(sheetId).forEach((viewport)=>viewport.setViewportOffset(clip(offsetX,0,maxOffsetX),clip(offsetY,0,maxOffsetY)));}
getViewportOffset(sheetId){return{x:this.viewports[sheetId]?.bottomRight.offsetScrollbarX||0,y:this.viewports[sheetId]?.bottomRight.offsetScrollbarY||0,};}
resetViewports(sheetId){if(!this.getters.tryGetSheet(sheetId)){return;}
const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const nCols=this.getters.getNumberCols(sheetId);const nRows=this.getters.getNumberRows(sheetId);const colOffset=this.getters.getColRowOffset("COL",0,xSplit,sheetId);const rowOffset=this.getters.getColRowOffset("ROW",0,ySplit,sheetId);const{xRatio,yRatio}=this.getFrozenSheetViewRatio(sheetId);const canScrollHorizontally=xRatio<1.0;const canScrollVertically=yRatio<1.0;const previousOffset=this.getViewportOffset(sheetId);const sheetViewports={topLeft:(ySplit&&xSplit&&new InternalViewport(this.getters,sheetId,{left:0,right:xSplit-1,top:0,bottom:ySplit-1},{width:colOffset,height:rowOffset},{canScrollHorizontally:false,canScrollVertically:false},{x:0,y:0}))||undefined,topRight:(ySplit&&new InternalViewport(this.getters,sheetId,{left:xSplit,right:nCols-1,top:0,bottom:ySplit-1},{width:this.sheetViewWidth-colOffset,height:rowOffset},{canScrollHorizontally,canScrollVertically:false},{x:canScrollHorizontally?previousOffset.x:0,y:0}))||undefined,bottomLeft:(xSplit&&new InternalViewport(this.getters,sheetId,{left:0,right:xSplit-1,top:ySplit,bottom:nRows-1},{width:colOffset,height:this.sheetViewHeight-rowOffset},{canScrollHorizontally:false,canScrollVertically},{x:0,y:canScrollVertically?previousOffset.y:0}))||undefined,bottomRight:new InternalViewport(this.getters,sheetId,{left:xSplit,right:nCols-1,top:ySplit,bottom:nRows-1},{width:this.sheetViewWidth-colOffset,height:this.sheetViewHeight-rowOffset,},{canScrollHorizontally,canScrollVertically},{x:canScrollHorizontally?previousOffset.x:0,y:canScrollVertically?previousOffset.y:0,}),};this.viewports[sheetId]=sheetViewports;}
refreshViewport(sheetId,anchorPosition){this.getSubViewports(sheetId).forEach((viewport)=>{viewport.adjustViewportZone();viewport.adjustPosition(anchorPosition);});}
shiftVertically(offset){const sheetId=this.getters.getActiveSheetId();const{top}=this.getMainInternalViewport(sheetId);const{scrollX}=this.getActiveSheetScrollInfo();this.setSheetViewOffset(scrollX,offset);const{anchor}=this.getters.getSelection();if(anchor.cell.row>=this.getters.getPaneDivisions(sheetId).ySplit){const deltaRow=this.getMainInternalViewport(sheetId).top-top;this.selection.selectCell(anchor.cell.col,anchor.cell.row+deltaRow);}}
getVisibleFigures(){const sheetId=this.getters.getActiveSheetId();const result=[];const figures=this.getters.getFigures(sheetId);const{scrollX,scrollY}=this.getActiveSheetScrollInfo();const{x:offsetCorrectionX,y:offsetCorrectionY}=this.getters.getMainViewportCoordinates();const{width,height}=this.getters.getSheetViewDimensionWithHeaders();for(const figure of figures){if(figure.x>=offsetCorrectionX&&(figure.x+figure.width<=offsetCorrectionX+scrollX||figure.x>=width+scrollX+offsetCorrectionX)){continue;}
if(figure.y>=offsetCorrectionY&&(figure.y+figure.height<=offsetCorrectionY+scrollY||figure.y>=height+scrollY+offsetCorrectionY)){continue;}
result.push(figure);}
return result;}
isPositionVisible(position){const{scrollX,scrollY}=this.getters.getActiveSheetScrollInfo();const{x:mainViewportX,y:mainViewportY}=this.getters.getMainViewportCoordinates();const{width,height}=this.getters.getSheetViewDimension();if(position.x>=mainViewportX&&(position.x<mainViewportX+scrollX||position.x>width+scrollX+mainViewportX)){return false;}
if(position.y>=mainViewportY&&(position.y<mainViewportY+scrollY||position.y>height+scrollY+mainViewportY)){return false;}
return true;}
getFrozenSheetViewRatio(sheetId){const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const offsetCorrectionX=this.getters.getColDimensions(sheetId,xSplit).start;const offsetCorrectionY=this.getters.getRowDimensions(sheetId,ySplit).start;const width=this.sheetViewWidth+this.gridOffsetX;const height=this.sheetViewHeight+this.gridOffsetY;return{xRatio:offsetCorrectionX/width,yRatio:offsetCorrectionY/height};}}
class HeaderPositionsUIPlugin extends UIPlugin{static getters=["getColDimensions","getRowDimensions","getColRowOffset"];headerPositions={};isDirty=true;handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)){this.headerPositions={};this.isDirty=true;}
switch(cmd.type){case"START":for(const sheetId of this.getters.getSheetIds()){this.headerPositions[sheetId]=this.computeHeaderPositionsOfSheet(sheetId);}
break;case"UPDATE_CELL":this.headerPositions={};this.isDirty=true;break;case"UPDATE_FILTER":case"UPDATE_TABLE":case"REMOVE_TABLE":this.headerPositions={};this.isDirty=true;break;case"REMOVE_COLUMNS_ROWS":case"RESIZE_COLUMNS_ROWS":case"HIDE_COLUMNS_ROWS":case"ADD_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"FOLD_HEADER_GROUP":case"UNFOLD_HEADER_GROUP":case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_ALL_HEADER_GROUPS":case"FOLD_ALL_HEADER_GROUPS":case"UNGROUP_HEADERS":case"GROUP_HEADERS":case"CREATE_SHEET":this.headerPositions[cmd.sheetId]=this.computeHeaderPositionsOfSheet(cmd.sheetId);break;case"DUPLICATE_SHEET":this.headerPositions[cmd.sheetIdTo]=deepCopy(this.headerPositions[cmd.sheetId]);break;}}
finalize(){if(this.isDirty){for(const sheetId of this.getters.getSheetIds()){this.headerPositions[sheetId]=this.computeHeaderPositionsOfSheet(sheetId);}
this.isDirty=false;}}
getColDimensions(sheetId,col){const start=this.headerPositions[sheetId]["COL"][col];const size=this.getters.getColSize(sheetId,col);const isColHidden=this.getters.isColHidden(sheetId,col);return{start,size,end:start+(isColHidden?0:size),};}
getRowDimensions(sheetId,row){const start=this.headerPositions[sheetId]["ROW"][row];const size=this.getters.getRowSize(sheetId,row);const isRowHidden=this.getters.isRowHidden(sheetId,row);return{start,size:size,end:start+(isRowHidden?0:size),};}
getColRowOffset(dimension,referenceIndex,index,sheetId=this.getters.getActiveSheetId()){const referencePosition=this.headerPositions[sheetId][dimension][referenceIndex];const position=this.headerPositions[sheetId][dimension][index];return position-referencePosition;}
computeHeaderPositionsOfSheet(sheetId){return{COL:this.computePositions(sheetId,"COL"),ROW:this.computePositions(sheetId,"ROW"),};}
computePositions(sheetId,dimension){const positions={};let offset=0;for(let i=0;i<this.getters.getNumberHeaders(sheetId,dimension)+1;i++){positions[i]=offset;if(this.getters.isHeaderHidden(sheetId,dimension,i)){continue;}
offset+=this.getters.getHeaderSize(sheetId,dimension,i);}
return positions;}}
const corePluginRegistry=new Registry().add("settings",SettingsPlugin).add("sheet",SheetPlugin).add("header grouping",HeaderGroupingPlugin).add("header visibility",HeaderVisibilityPlugin).add("tables",TablePlugin).add("dataValidation",DataValidationPlugin).add("cell",CellPlugin).add("merge",MergePlugin).add("headerSize",HeaderSizePlugin).add("borders",BordersPlugin).add("conditional formatting",ConditionalFormatPlugin).add("figures",FigurePlugin).add("chart",ChartPlugin).add("image",ImagePlugin).add("pivot_core",PivotCorePlugin).add("spreadsheet_pivot_core",SpreadsheetPivotCorePlugin).add("tableStyle",TableStylePlugin);const featurePluginRegistry=new Registry().add("ui_sheet",SheetUIPlugin).add("ui_options",UIOptionsPlugin).add("autofill",AutofillPlugin).add("sort",SortPlugin).add("automatic_sum",AutomaticSumPlugin).add("format",FormatPlugin).add("insert_pivot",InsertPivotPlugin).add("split_to_columns",SplitToColumnsPlugin).add("collaborative",CollaborativePlugin).add("history",HistoryPlugin).add("data_cleanup",DataCleanupPlugin).add("table_autofill",TableAutofillPlugin).add("table_ui_resize",TableResizeUI);const statefulUIPluginRegistry=new Registry().add("selection",GridSelectionPlugin).add("evaluation_filter",FilterEvaluationPlugin).add("header_visibility_ui",HeaderVisibilityUIPlugin).add("cell_computed_style",CellComputedStylePlugin).add("table_computed_style",TableComputedStylePlugin).add("header_positions",HeaderPositionsUIPlugin).add("viewport",SheetViewPlugin).add("clipboard",ClipboardPlugin);const coreViewsPluginRegistry=new Registry().add("evaluation",EvaluationPlugin).add("evaluation_chart",EvaluationChartPlugin).add("evaluation_cf",EvaluationConditionalFormatPlugin).add("row_size",HeaderSizeUIPlugin).add("data_validation_ui",EvaluationDataValidationPlugin).add("dynamic_tables",DynamicTablesPlugin).add("custom_colors",CustomColorsPlugin).add("pivot_ui",PivotUIPlugin);const clickableCellRegistry=new Registry();clickableCellRegistry.add("link",{condition:(position,getters)=>{return!!getters.getEvaluatedCell(position).link;},execute:(position,env)=>openLink(env.model.getters.getEvaluatedCell(position).link,env),sequence:5,});class ImageProvider{fileStore;constructor(fileStore){this.fileStore=fileStore;}
async requestImage(){const file=await this.getImageFromUser();const path=await this.fileStore.upload(file);const size=await this.getImageOriginalSize(path);return{path,size,mimetype:file.type};}
getImageFromUser(){return new Promise((resolve,reject)=>{const input=document.createElement("input");input.setAttribute("type","file");input.setAttribute("accept","image/*");input.addEventListener("change",async()=>{if(input.files===null||input.files.length!=1){reject();}
else{resolve(input.files[0]);}});input.click();});}
getImageOriginalSize(path){return new Promise((resolve,reject)=>{const image=new Image();image.src=path;image.addEventListener("load",()=>{const size={width:image.width,height:image.height};resolve(size);});image.addEventListener("error",reject);});}}
const RIPPLE_KEY_FRAMES=[{transform:"scale(0)"},{transform:"scale(0.8)",offset:0.33},{opacity:"0",transform:"scale(1)",offset:1},];css`
  .o-ripple {
    z-index: 1;
  }
`;class RippleEffect extends Component{static template="o-spreadsheet-RippleEffect";static props={x:String,y:String,color:String,opacity:Number,duration:Number,width:Number,height:Number,offsetY:Number,offsetX:Number,allowOverflow:Boolean,onAnimationEnd:Function,style:String,};rippleRef=useRef("ripple");setup(){let animation=undefined;onMounted(()=>{const rippleEl=this.rippleRef.el;if(!rippleEl||!rippleEl.animate)
return;animation=rippleEl.animate(RIPPLE_KEY_FRAMES,{duration:this.props.duration,easing:"ease-out",});animation.addEventListener("finish",this.props.onAnimationEnd);});onWillUnmount(()=>{animation?.removeEventListener("finish",this.props.onAnimationEnd);});}
get rippleStyle(){const{x,y,width,height}=this.props;const offsetX=this.props.offsetX||0;const offsetY=this.props.offsetY||0;return cssPropertiesToCss({transform:"scale(0)",left:x,top:y,"margin-left":`${-width / 2 + offsetX}px`,"margin-top":`${-height / 2 + offsetY}px`,width:`${width}px`,height:`${height}px`,background:this.props.color,"border-radius":"100%",opacity:`${this.props.opacity}`,});}}
class Ripple extends Component{static template="o-spreadsheet-Ripple";static props={color:{type:String,optional:true},opacity:{type:Number,optional:true},duration:{type:Number,optional:true},ignoreClickPosition:{type:Boolean,optional:true},width:{type:Number,optional:true},height:{type:Number,optional:true},offsetY:{type:Number,optional:true},offsetX:{type:Number,optional:true},allowOverflow:{type:Boolean,optional:true},enabled:{type:Boolean,optional:true},onAnimationEnd:{type:Function,optional:true},slots:Object,class:{type:String,optional:true},};static components={RippleEffect};static defaultProps={color:"#aaaaaa",opacity:0.4,duration:800,enabled:true,onAnimationEnd:()=>{},class:"",};childContainer=useRef("childContainer");state=useState({ripples:[]});currentId=1;onClick(ev){if(!this.props.enabled)
return;const containerEl=this.childContainer.el;if(!containerEl)
return;const rect=this.getRippleChildRectInfo();const{x,y,width,height}=rect;const maxDim=Math.max(width,height);const rippleRect={x:ev.clientX-x,y:ev.clientY-y,width:this.props.width||maxDim*2.85,height:this.props.height||maxDim*2.85,};this.state.ripples.push({rippleRect,id:this.currentId++});}
getRippleStyle(){const containerEl=this.childContainer.el;if(!containerEl||containerEl.childElementCount!==1||!containerEl.firstElementChild){return"";}
const rect=this.getRippleChildRectInfo();return cssPropertiesToCss({top:rect.marginTop+"px",left:rect.marginLeft+"px",width:rect.width+"px",height:rect.height+"px",});}
getRippleChildRectInfo(){const el=this.childContainer.el;if(!el)
throw new Error("No child container element found");if(el.childElementCount!==1||!el.firstElementChild){const boundingRect=getBoundingRectAsPOJO(el);return{...boundingRect,marginLeft:0,marginTop:0};}
const childEl=el.firstElementChild;const margins=getElementMargins(childEl);const boundingRect=getBoundingRectAsPOJO(childEl);return{...boundingRect,marginLeft:margins.left,marginTop:margins.top,};}
removeRipple(id){const index=this.state.ripples.findIndex((r)=>r.id===id);if(index===-1)
return;this.state.ripples.splice(index,1);}
getRippleEffectProps(id){const rect=this.state.ripples.find((r)=>r.id===id)?.rippleRect;if(!rect)
throw new Error("Cannot find a ripple with the id "+id);return{color:this.props.color,opacity:this.props.opacity,duration:this.props.duration,x:this.props.ignoreClickPosition?"50%":rect.x+"px",y:this.props.ignoreClickPosition?"50%":rect.y+"px",width:rect.width,height:rect.height,offsetX:this.props.offsetX||0,offsetY:this.props.offsetY||0,allowOverflow:this.props.allowOverflow||false,style:this.getRippleStyle(),onAnimationEnd:()=>this.removeRipple(id),};}}
function interactiveRenameSheet(env,sheetId,name,errorCallback){const result=env.model.dispatch("RENAME_SHEET",{sheetId,name});if(result.reasons.includes("MissingSheetName")){env.raiseError(_t("The sheet name cannot be empty."),errorCallback);}
else if(result.reasons.includes("DuplicatedSheetName")){env.raiseError(_t("A sheet with the name %s already exists. Please select another name.",name),errorCallback);}
else if(result.reasons.includes("ForbiddenCharactersInSheetName")){env.raiseError(_t("Some used characters are not allowed in a sheet name (Forbidden characters are %s).",FORBIDDEN_SHEET_CHARS.join(" ")),errorCallback);}}
css`
  .o-sheet {
    padding: 0 15px;
    padding-right: 10px;
    height: ${BOTTOMBAR_HEIGHT}px;
    border-left: 1px solid #c1c1c1;
    border-right: 1px solid #c1c1c1;
    margin-left: -1px;
    cursor: pointer;
    &:hover {
      background-color: rgba(0, 0, 0, 0.08);
    }

    &.active {
      color: ${ACTION_COLOR};
      background-color: #ffffff;
      box-shadow: 0 1px 3px 1px rgba(60, 64, 67, 0.15);
    }

    .o-sheet-icon {
      z-index: 1;

      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    .o-sheet-name {
      outline: none;
      padding: 2px 4px;

      &.o-sheet-name-editable {
        border-radius: 2px;
        border: 2px solid mediumblue;
        /* negative margins so nothing moves when the border is added */
        margin-left: -2px;
        margin-right: -2px;
      }
    }

    .o-sheet-color {
      bottom: 0;
      left: 0;
      height: 6px;
      z-index: 1;
      width: calc(100% - 1px);
    }
  }
`;class BottomBarSheet extends Component{static template="o-spreadsheet-BottomBarSheet";static props={sheetId:String,openContextMenu:Function,style:{type:String,optional:true},onMouseDown:{type:Function,optional:true},};static components={Ripple,ColorPicker};static defaultProps={onMouseDown:()=>{},style:"",};state=useState({isEditing:false,pickerOpened:false});sheetDivRef=useRef("sheetDiv");sheetNameRef=useRef("sheetNameSpan");editionState="initializing";DOMFocusableElementStore;setup(){onMounted(()=>{if(this.isSheetActive){this.scrollToSheet();}});onPatched(()=>{if(this.sheetNameRef.el&&this.state.isEditing&&this.editionState==="initializing"){this.editionState="editing";this.focusInputAndSelectContent();}});this.DOMFocusableElementStore=useStore(DOMFocusableElementStore);useExternalListener(window,"click",()=>(this.state.pickerOpened=false));}
focusInputAndSelectContent(){if(!this.state.isEditing||!this.sheetNameRef.el)
return;this.sheetNameRef.el.focus();const selection=window.getSelection();if(selection&&this.sheetNameRef.el.firstChild){selection.setBaseAndExtent(this.sheetNameRef.el.firstChild,0,this.sheetNameRef.el.firstChild,this.sheetNameRef.el.textContent?.length||0);}}
scrollToSheet(){this.sheetDivRef.el?.scrollIntoView?.();}
onFocusOut(){if(this.state.isEditing&&this.editionState!=="initializing"){this.stopEdition();}}
onMouseDown(ev){this.activateSheet();this.props.onMouseDown(ev);}
activateSheet(){this.env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.env.model.getters.getActiveSheetId(),sheetIdTo:this.props.sheetId,});this.scrollToSheet();}
onDblClick(){if(this.env.model.getters.isReadonly()){return;}
this.startEdition();}
onKeyDown(ev){if(!this.state.isEditing)
return;if(ev.key==="Enter"){ev.preventDefault();this.stopEdition();this.DOMFocusableElementStore.focus();}
if(ev.key==="Escape"){this.cancelEdition();this.DOMFocusableElementStore.focus();}}
onMouseEventSheetName(ev){if(this.state.isEditing)
ev.stopPropagation();}
startEdition(){this.state.isEditing=true;this.editionState="initializing";}
stopEdition(){const input=this.sheetNameRef.el;if(!this.state.isEditing||!input)
return;this.state.isEditing=false;this.editionState="initializing";input.blur();const inputValue=this.getInputContent()||"";input.innerText=inputValue;interactiveRenameSheet(this.env,this.props.sheetId,inputValue,()=>this.startEdition());}
cancelEdition(){this.state.isEditing=false;this.editionState="initializing";this.sheetNameRef.el?.blur();this.setInputContent(this.sheetName);}
onIconClick(ev){if(!this.isSheetActive){this.activateSheet();}
this.props.openContextMenu(this.contextMenuRegistry,ev);}
onContextMenu(ev){if(!this.isSheetActive){this.activateSheet();}
this.props.openContextMenu(this.contextMenuRegistry,ev);}
getInputContent(){return this.sheetNameRef.el?.textContent;}
setInputContent(content){if(this.sheetNameRef.el)
this.sheetNameRef.el.textContent=content;}
onColorPicked(color){this.state.pickerOpened=false;this.env.model.dispatch("COLOR_SHEET",{sheetId:this.props.sheetId,color});}
get colorPickerAnchorRect(){const button=this.sheetDivRef.el;return getBoundingRectAsPOJO(button);}
get contextMenuRegistry(){return getSheetMenuRegistry({renameSheetCallback:()=>{this.scrollToSheet();this.startEdition();},openSheetColorPickerCallback:()=>{this.state.pickerOpened=true;},});}
get isSheetActive(){return this.env.model.getters.getActiveSheetId()===this.props.sheetId;}
get sheetName(){return this.env.model.getters.getSheetName(this.props.sheetId);}
get sheetColorStyle(){const color=this.env.model.getters.getSheet(this.props.sheetId).color||"";return cssPropertiesToCss({background:color});}}
const selectionStatisticFunctions=[{name:_t("Sum"),types:[CellValueType.number],compute:(values,locale)=>sum([[values]],locale),},{name:_t("Avg"),types:[CellValueType.number],compute:(values,locale)=>average([[values]],locale),},{name:_t("Min"),types:[CellValueType.number],compute:(values,locale)=>min([[values]],locale).value,},{name:_t("Max"),types:[CellValueType.number],compute:(values,locale)=>max([[values]],locale).value,},{name:_t("Count"),types:[CellValueType.number,CellValueType.text,CellValueType.boolean,CellValueType.error],compute:(values)=>countAny([[values]]),},{name:_t("Count Numbers"),types:[CellValueType.number,CellValueType.text,CellValueType.boolean,CellValueType.error],compute:(values,locale)=>countNumbers([[values]],locale),},];class AggregateStatisticsStore extends SpreadsheetStore{statisticFnResults=this._computeStatisticFnResults();isDirty=false;constructor(get){super(get);this.model.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});}
handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&"content"in cmd)){this.isDirty=true;}
switch(cmd.type){case"HIDE_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"GROUP_HEADERS":case"UNGROUP_HEADERS":case"ACTIVATE_SHEET":case"ACTIVATE_NEXT_SHEET":case"ACTIVATE_PREVIOUS_SHEET":case"EVALUATE_CELLS":case"UNDO":case"REDO":this.isDirty=true;}}
finalize(){if(this.isDirty){this.isDirty=false;this.statisticFnResults=this._computeStatisticFnResults();}}
handleEvent(){if(this.getters.isGridSelectionActive()){this.statisticFnResults=this._computeStatisticFnResults();}}
_computeStatisticFnResults(){const getters=this.getters;const sheetId=getters.getActiveSheetId();const cells=[];const recomputedZones=recomputeZones(getters.getSelectedZones(),[]);const heightMax=this.getters.getSheetSize(sheetId).numberOfRows-1;const widthMax=this.getters.getSheetSize(sheetId).numberOfCols-1;for(const zone of recomputedZones){for(let col=zone.left;col<=(zone.right??widthMax);col++){for(let row=zone.top;row<=(zone.bottom??heightMax);row++){if(getters.isRowHidden(sheetId,row)||getters.isColHidden(sheetId,col)){continue;}
const evaluatedCell=getters.getEvaluatedCell({sheetId,col,row});if(evaluatedCell.type!==CellValueType.empty){cells.push(evaluatedCell);}}}}
const locale=getters.getLocale();let statisticFnResults={};const getCells=memoize((typeStr)=>{const types=typeStr.split(",");return cells.filter((c)=>types.includes(c.type));});for(let fn of selectionStatisticFunctions){let fnResult=undefined;const evaluatedCells=getCells(fn.types.sort().join(","));if(evaluatedCells.length){fnResult=lazy(()=>fn.compute(evaluatedCells,locale));}
statisticFnResults[fn.name]=fnResult;}
return statisticFnResults;}}
css`
  .o-selection-statistic {
    margin-right: 20px;
    padding: 4px 4px 4px 8px;
    color: #333;
    cursor: pointer;
    &:hover {
      background-color: rgba(0, 0, 0, 0.08) !important;
    }
  }
`;class BottomBarStatistic extends Component{static template="o-spreadsheet-BottomBarStatistic";static props={openContextMenu:Function,closeContextMenu:Function,};static components={Ripple};selectedStatisticFn="";store;setup(){this.store=useStore(AggregateStatisticsStore);onWillUpdateProps(()=>{if(Object.values(this.store.statisticFnResults).every((result)=>result===undefined)){this.props.closeContextMenu();}});}
getSelectedStatistic(){if(Object.values(this.store.statisticFnResults).every((result)=>result===undefined)){return undefined;}
if(this.selectedStatisticFn===""){this.selectedStatisticFn=Object.keys(this.store.statisticFnResults)[0];}
return this.getComposedFnName(this.selectedStatisticFn);}
listSelectionStatistics(ev){const registry=new MenuItemRegistry();let i=0;for(let[fnName]of Object.entries(this.store.statisticFnResults)){registry.add(fnName,{name:()=>this.getComposedFnName(fnName),sequence:i,isReadonlyAllowed:true,execute:()=>{this.selectedStatisticFn=fnName;},});i++;}
const target=ev.currentTarget;const{top,left,width}=target.getBoundingClientRect();this.props.openContextMenu(left+width,top,registry);}
getComposedFnName(fnName){const locale=this.env.model.getters.getLocale();const fnValue=this.store.statisticFnResults[fnName];return fnName+": "+(fnValue!==undefined?formatValue(fnValue(),{locale}):"__");}}
const MENU_MAX_HEIGHT=250;css`
  .o-spreadsheet-bottom-bar {
    background-color: ${BACKGROUND_GRAY_COLOR};
    padding-left: ${HEADER_WIDTH}px;
    font-size: 15px;
    border-top: 1px solid lightgrey;

    .o-sheet-item {
      cursor: pointer;
      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    .o-all-sheets {
      max-width: 70%;
      .o-bottom-bar-fade-out {
        background-image: linear-gradient(-90deg, #cfcfcf, transparent 1%);
      }

      .o-bottom-bar-fade-in {
        background-image: linear-gradient(90deg, #cfcfcf, transparent 1%);
      }

      .o-sheet-list {
        overflow-y: hidden;
        overflow-x: auto;

        &::-webkit-scrollbar {
          display: none; /* Chrome */
        }
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
      }
    }

    .o-bottom-bar-arrows {
      .o-bottom-bar-arrow {
        cursor: pointer;
        &:hover:not([class*="o-disabled"]) {
          .o-icon {
            opacity: 0.9;
          }
        }

        .o-icon {
          height: 18px;
          width: 18px;
          font-size: 18px;
        }
      }
    }
  }
`;class BottomBar extends Component{static template="o-spreadsheet-BottomBar";static props={onClick:Function,};static components={Menu,Ripple,BottomBarSheet,BottomBarStatistic};bottomBarRef=useRef("bottomBar");sheetListRef=useRef("sheetList");dragAndDrop=useDragAndDropListItems();targetScroll=undefined;state=useState({isSheetListScrollableLeft:false,isSheetListScrollableRight:false,});menuMaxHeight=MENU_MAX_HEIGHT;menuState=useState({isOpen:false,menuId:undefined,position:null,menuItems:[],});sheetList=this.getVisibleSheets();setup(){onWillUpdateProps(()=>{this.updateScrollState();const visibleSheets=this.getVisibleSheets();if(!deepEquals(this.sheetList,visibleSheets)){this.dragAndDrop.cancel();}
this.sheetList=visibleSheets;});}
clickAddSheet(ev){const activeSheetId=this.env.model.getters.getActiveSheetId();const position=this.env.model.getters.getSheetIds().findIndex((sheetId)=>sheetId===activeSheetId)+1;const sheetId=this.env.model.uuidGenerator.uuidv4();const name=this.env.model.getters.getNextSheetName(_t("Sheet"));this.env.model.dispatch("CREATE_SHEET",{sheetId,position,name});this.env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:sheetId});}
getVisibleSheets(){return this.env.model.getters.getVisibleSheetIds().map((sheetId)=>{const sheet=this.env.model.getters.getSheet(sheetId);return{id:sheet.id,name:sheet.name};});}
clickListSheets(ev){const registry=new MenuItemRegistry();const from=this.env.model.getters.getActiveSheetId();let i=0;for(const sheetId of this.env.model.getters.getSheetIds()){const sheet=this.env.model.getters.getSheet(sheetId);registry.add(sheetId,{name:sheet.name,sequence:i,isReadonlyAllowed:true,textColor:sheet.isVisible?undefined:"#808080",execute:(env)=>{if(!this.env.model.getters.isSheetVisible(sheetId)){this.env.model.dispatch("SHOW_SHEET",{sheetId});}
env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:from,sheetIdTo:sheetId});},isEnabled:(env)=>(env.model.getters.isReadonly()?sheet.isVisible:true),icon:sheet.color?"o-spreadsheet-Icon.SMALL_DOT_RIGHT_ALIGN":undefined,iconColor:sheet.color,});i++;}
const target=ev.currentTarget;const{left}=target.getBoundingClientRect();const top=this.bottomBarRef.el.getBoundingClientRect().top;this.openContextMenu(left,top,"listSheets",registry);}
openContextMenu(x,y,menuId,registry){this.menuState.isOpen=true;this.menuState.menuId=menuId;this.menuState.menuItems=registry.getMenuItems();this.menuState.position={x,y};}
onSheetContextMenu(sheetId,registry,ev){const target=ev.currentTarget;const{top,left}=target.getBoundingClientRect();if(ev.closedMenuId===sheetId){this.closeMenu();return;}
this.openContextMenu(left,top,sheetId,registry);}
closeMenu(){this.menuState.isOpen=false;this.menuState.menuId=undefined;this.menuState.menuItems=[];this.menuState.position=null;}
closeContextMenuWithId(menuId){if(this.menuState.menuId===menuId){this.closeMenu();}}
onWheel(ev){this.targetScroll=undefined;const target=ev.currentTarget;target.scrollLeft+=ev.deltaY*0.5;}
onScroll(){this.updateScrollState();if(this.targetScroll===this.sheetListCurrentScroll){this.targetScroll=undefined;}}
onArrowLeft(ev){if(!this.state.isSheetListScrollableLeft)
return;if(!this.targetScroll)
this.targetScroll=this.sheetListCurrentScroll;const newScroll=this.targetScroll-this.sheetListWidth;this.scrollSheetListTo(Math.max(0,newScroll));}
onArrowRight(ev){if(!this.state.isSheetListScrollableRight)
return;if(!this.targetScroll)
this.targetScroll=this.sheetListCurrentScroll;const newScroll=this.targetScroll+this.sheetListWidth;this.scrollSheetListTo(Math.min(this.sheetListMaxScroll,newScroll));}
updateScrollState(){this.state.isSheetListScrollableLeft=this.sheetListCurrentScroll>0;this.state.isSheetListScrollableRight=this.sheetListCurrentScroll<this.sheetListMaxScroll;}
scrollSheetListTo(scroll){if(!this.sheetListRef.el)
return;this.targetScroll=scroll;this.sheetListRef.el.scrollTo({top:0,left:scroll,behavior:"smooth"});}
onSheetMouseDown(sheetId,event){if(event.button!==0||this.env.model.getters.isReadonly())
return;this.closeMenu();const visibleSheets=this.getVisibleSheets();const sheetRects=this.getSheetItemRects();const sheets=visibleSheets.map((sheet,index)=>({id:sheet.id,size:sheetRects[index].width,position:sheetRects[index].x,}));this.dragAndDrop.start("horizontal",{draggedItemId:sheetId,initialMousePosition:event.clientX,items:sheets,containerEl:this.sheetListRef.el,onDragEnd:(sheetId,finalIndex)=>this.onDragEnd(sheetId,finalIndex),});}
onDragEnd(sheetId,finalIndex){const originalIndex=this.getVisibleSheets().findIndex((sheet)=>sheet.id===sheetId);const delta=finalIndex-originalIndex;if(sheetId&&delta!==0){this.env.model.dispatch("MOVE_SHEET",{sheetId:sheetId,delta:delta,});}}
getSheetStyle(sheetId){return this.dragAndDrop.itemsStyle[sheetId]||"";}
getSheetItemRects(){return Array.from(this.bottomBarRef.el.querySelectorAll(`.o-sheet`)).map((sheetEl)=>sheetEl.getBoundingClientRect()).map((rect)=>({x:rect.x,width:rect.width-1,y:rect.y,height:rect.height,}));}
get sheetListCurrentScroll(){if(!this.sheetListRef.el)
return 0;return this.sheetListRef.el.scrollLeft;}
get sheetListWidth(){if(!this.sheetListRef.el)
return 0;return this.sheetListRef.el.clientWidth;}
get sheetListMaxScroll(){if(!this.sheetListRef.el)
return 0;return this.sheetListRef.el.scrollWidth-this.sheetListRef.el.clientWidth;}}
class ClickableCellsStore extends SpreadsheetStore{_clickableCells=markRaw({});_registryItems=markRaw(clickableCellRegistry.getAll().sort((a,b)=>a.sequence-b.sequence));handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||cmd.type==="EVALUATE_CELLS"||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this._clickableCells=markRaw({});this._registryItems=markRaw(clickableCellRegistry.getAll().sort((a,b)=>a.sequence-b.sequence));}}
getClickableAction(position){const{sheetId,col,row}=position;const clickableCells=this._clickableCells;const xc=toXC(col,row);if(!clickableCells[sheetId]){clickableCells[sheetId]={};}
if(!(xc in clickableCells[sheetId])){clickableCells[sheetId][xc]=this.findClickableAction(position);}
return clickableCells[sheetId][xc];}
findClickableAction(position){const getters=this.getters;for(const item of this._registryItems){if(item.condition(position,getters)){return item.execute;}}
return false;}
get clickableCells(){const cells=[];const getters=this.getters;const sheetId=getters.getActiveSheetId();for(const col of getters.getSheetViewVisibleCols()){for(const row of getters.getSheetViewVisibleRows()){const position={sheetId,col,row};if(!getters.isMainCellPosition(position)){continue;}
const action=this.getClickableAction(position);if(!action){continue;}
const zone=getters.expandZone(sheetId,positionToZone(position));cells.push({coordinates:getters.getVisibleRect(zone),position,action,});}}
return cells;}}
css`
  .o-dashboard-clickable-cell {
    position: absolute;
    cursor: pointer;
  }
`;class SpreadsheetDashboard extends Component{static template="o-spreadsheet-SpreadsheetDashboard";static props={};static components={GridOverlay,GridPopover,Popover,VerticalScrollBar,HorizontalScrollBar,};cellPopovers;onMouseWheel;canvasPosition;hoveredCell;clickableCellsStore;setup(){const gridRef=useRef("grid");this.canvasPosition=useAbsoluteBoundingRect(gridRef);this.hoveredCell=useStore(HoveredCellStore);this.clickableCellsStore=useStore(ClickableCellsStore);useChildSubEnv({getPopoverContainerRect:()=>this.getGridRect()});useGridDrawing("canvas",this.env.model,()=>this.env.model.getters.getSheetViewDimension());this.onMouseWheel=useWheelHandler((deltaX,deltaY)=>{this.moveCanvas(deltaX,deltaY);this.hoveredCell.clear();});this.cellPopovers=useStore(CellPopoverStore);}
onCellHovered({col,row}){this.hoveredCell.hover({col,row});}
get gridContainer(){const sheetId=this.env.model.getters.getActiveSheetId();const{right}=this.env.model.getters.getSheetZone(sheetId);const{end}=this.env.model.getters.getColDimensions(sheetId,right);return cssPropertiesToCss({"max-width":`${end}px`});}
get gridOverlayDimensions(){return cssPropertiesToCss({height:"100%",width:"100%",});}
getCellClickableStyle(coordinates){return cssPropertiesToCss({top:`${coordinates.y}px`,left:`${coordinates.x}px`,width:`${coordinates.width}px`,height:`${coordinates.height}px`,});}
getClickableCells(){return toRaw(this.clickableCellsStore.clickableCells);}
selectClickableCell(clickableCell){const{position,action}=clickableCell;action(position,this.env);}
onClosePopover(){this.cellPopovers.close();}
onGridResized({height,width}){this.env.model.dispatch("RESIZE_SHEETVIEW",{width:width,height:height,gridOffsetX:0,gridOffsetY:0,});}
moveCanvas(deltaX,deltaY){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetDOMScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX+deltaX,offsetY:scrollY+deltaY,});}
getGridRect(){return{...this.canvasPosition,...this.env.model.getters.getSheetViewDimensionWithHeaders()};}}
css`
  .o-header-group {
    .o-header-group-header {
      z-index: ${ComponentsImportance.HeaderGroupingButton};
      .o-group-fold-button {
        cursor: pointer;
        width: 13px;
        height: 13px;
        border: 1px solid ${HEADER_GROUPING_BORDER_COLOR};
        .o-icon {
          width: 7px;
          height: 7px;
        }

        &:hover {
          border-color: #777;
        }
      }
    }
    .o-group-border {
      box-sizing: border-box;
    }
  }
`;class AbstractHeaderGroup extends Component{static template="o-spreadsheet-HeaderGroup";static props={group:Object,layerOffset:Number,openContextMenu:Function,};toggleGroup(){const sheetId=this.env.model.getters.getActiveSheetId();const{start,end}=this.props.group;interactiveToggleGroup(this.env,sheetId,this.dimension,start,end);}
get groupBoxStyle(){const groupBox=this.groupBox;return cssPropertiesToCss({top:`${groupBox.groupRect.y}px`,left:`${groupBox.groupRect.x}px`,width:`${groupBox.groupRect.width}px`,height:`${groupBox.groupRect.height}px`,});}
get groupButtonStyle(){return cssPropertiesToCss({"background-color":this.isGroupFolded?"#333":"#fff",color:this.isGroupFolded?"#fff":"#333",});}
get groupButtonIcon(){return this.isGroupFolded?"o-spreadsheet-Icon.PLUS":"o-spreadsheet-Icon.MINUS";}
get isGroupFolded(){const sheetId=this.env.model.getters.getActiveSheetId();const group=this.props.group;return this.env.model.getters.isGroupFolded(sheetId,this.dimension,group.start,group.end);}
onContextMenu(ev){const sheetId=this.env.model.getters.getActiveSheetId();const position={x:ev.clientX,y:ev.clientY};const group=this.props.group;const menuItems=getHeaderGroupContextMenu(sheetId,this.dimension,group.start,group.end);this.props.openContextMenu(position,menuItems);}}
class RowGroup extends AbstractHeaderGroup{dimension="ROW";get groupBorderStyle(){const groupBox=this.groupBox;if(this.groupBox.groupRect.height===0){return"";}
return cssPropertiesToCss({top:`${groupBox.headerRect.height / 2}px`,left:`calc(50% - 1px)`,width:`30%`,height:`calc(100% - ${groupBox.headerRect.height / 2}px)`,"border-left":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,"border-bottom":groupBox.isEndHidden?"":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,});}
get groupHeaderStyle(){return cssPropertiesToCss({width:`100%`,height:`${this.groupBox.headerRect.height}px`,});}
get groupBox(){const sheetId=this.env.model.getters.getActiveSheetId();const{start:startRow,end:endRow}=this.props.group;const startCoordinates=this.env.model.getters.getRowDimensions(sheetId,startRow).start;const endCoordinates=this.env.model.getters.getRowDimensions(sheetId,endRow).end;let groupHeaderY=0;let groupHeaderHeight=HEADER_HEIGHT;if(startRow!==0){const headerRowDims=this.env.model.getters.getRowDimensions(sheetId,startRow-1);groupHeaderY=HEADER_HEIGHT+headerRowDims.start;groupHeaderHeight=headerRowDims.end-headerRowDims.start;}
const headerRect={x:this.props.layerOffset,y:groupHeaderY,width:GROUP_LAYER_WIDTH,height:groupHeaderHeight,};const groupRect={x:this.props.layerOffset,y:headerRect.y,width:GROUP_LAYER_WIDTH,height:headerRect.height+(endCoordinates-startCoordinates),};return{headerRect,groupRect,isEndHidden:this.env.model.getters.isRowHidden(sheetId,endRow),};}}
class ColGroup extends AbstractHeaderGroup{dimension="COL";get groupBorderStyle(){const groupBox=this.groupBox;if(groupBox.groupRect.width===0){return"";}
return cssPropertiesToCss({top:`calc(50% - 1px)`,left:`${groupBox.headerRect.width / 2}px`,width:`calc(100% - ${groupBox.headerRect.width / 2}px)`,height:`30%`,"border-top":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,"border-right":groupBox.isEndHidden?"":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,});}
get groupHeaderStyle(){return cssPropertiesToCss({width:`${this.groupBox.headerRect.width}px`,height:`100%`,});}
get groupBox(){const sheetId=this.env.model.getters.getActiveSheetId();const{start:startCol,end:endCol}=this.props.group;const startCoordinates=this.env.model.getters.getColDimensions(sheetId,startCol).start;const endCoordinates=this.env.model.getters.getColDimensions(sheetId,endCol).end;let groupHeaderX=0;let groupHeaderWidth=HEADER_WIDTH;if(startCol!==0){const headerRowDims=this.env.model.getters.getColDimensions(sheetId,startCol-1);groupHeaderX=HEADER_WIDTH+headerRowDims.start;groupHeaderWidth=headerRowDims.end-headerRowDims.start;}
const headerRect={x:groupHeaderX,y:this.props.layerOffset,width:groupHeaderWidth,height:GROUP_LAYER_WIDTH,};const groupRect={x:headerRect.x,y:this.props.layerOffset,width:headerRect.width+(endCoordinates-startCoordinates),height:GROUP_LAYER_WIDTH,};return{headerRect,groupRect,isEndHidden:this.env.model.getters.isColHidden(sheetId,endCol),};}}
css`
  .o-header-group-frozen-pane-border {
    &.o-group-rows {
      margin-top: -1px;
      border-bottom: 3px solid ${FROZEN_PANE_HEADER_BORDER_COLOR};
    }
    &.o-group-columns {
      margin-left: -1px;
      border-right: 3px solid ${FROZEN_PANE_HEADER_BORDER_COLOR};
    }
  }

  .o-header-group-main-pane {
    &.o-group-rows {
      margin-top: -2px; // Counteract o-header-group-frozen-pane-border offset
    }
    &.o-group-columns {
      margin-left: -2px;
    }
  }
`;class HeaderGroupContainer extends Component{static template="o-spreadsheet-HeaderGroupContainer";static props={dimension:String,layers:Array,};static components={RowGroup,ColGroup,Menu};menu=useState({isOpen:false,position:null,menuItems:[]});getLayerOffset(layerIndex){return layerIndex*GROUP_LAYER_WIDTH;}
onContextMenu(event){const sheetId=this.env.model.getters.getActiveSheetId();const position={x:event.clientX,y:event.clientY};const menuItems=createHeaderGroupContainerContextMenu(sheetId,this.props.dimension);this.openContextMenu(position,menuItems);}
openContextMenu(position,menuItems){this.menu.isOpen=true;this.menu.position=position;this.menu.menuItems=menuItems;}
closeMenu(){this.menu.isOpen=false;this.menu.position=null;this.menu.menuItems=[];}
get groupComponent(){return this.props.dimension==="ROW"?RowGroup:ColGroup;}
get hasFrozenPane(){const viewportCoordinates=this.env.model.getters.getMainViewportCoordinates();return this.props.dimension==="COL"?viewportCoordinates.x>0:viewportCoordinates.y>0;}
get scrollContainerStyle(){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const cssProperties={};if(this.props.dimension==="COL"){cssProperties.left=`${-scrollX - this.frozenPaneContainerSize}px`;}
else{cssProperties.top=`${-scrollY - this.frozenPaneContainerSize}px`;}
return cssPropertiesToCss(cssProperties);}
get frozenPaneContainerStyle(){const cssProperties={};if(this.props.dimension==="COL"){cssProperties.width=`${this.frozenPaneContainerSize}px`;}
else{cssProperties.height=`${this.frozenPaneContainerSize}px`;}
return cssPropertiesToCss(cssProperties);}
get frozenPaneContainerSize(){if(!this.hasFrozenPane){return 0;}
const viewportCoordinates=this.env.model.getters.getMainViewportCoordinates();if(this.props.dimension==="COL"){return HEADER_WIDTH+viewportCoordinates.x;}
else{return HEADER_HEIGHT+viewportCoordinates.y;}}}
css`
  .o-sidePanel {
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
    background-color: white;
    border: solid ${GRAY_300};
    border-width: 1px 0 0 1px;
    user-select: none;
    color: ${TEXT_BODY};

    .o-heading-3 {
      line-height: 20px;
      font-size: 16px;
      font-weight: 600;
    }

    .o-sidePanelHeader {
      padding: 8px 16px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-bottom: 1px solid ${GRAY_300};

      .o-sidePanelClose {
        padding: 5px 10px;
        cursor: pointer;
        &:hover {
          background-color: WhiteSmoke;
        }
      }
    }
    .o-sidePanelBody-container {
      /* This overwrites the min-height: auto; of flex. Without this, a flex div cannot be smaller than its children */
      min-height: 0;
    }
    .o-sidePanelBody {
      overflow: auto;
      width: 100%;
      height: 100%;

      .o-section {
        padding: 16px;

        .o-section-title {
          font-weight: 500;
          margin-bottom: 5px;
        }

        .o-section-subtitle {
          font-weight: 500;
          font-size: 13px;
          line-height: 14px;
          margin: 8px 0 4px 0;
        }

        .o-subsection-left {
          display: inline-block;
          width: 47%;
          margin-right: 3%;
        }

        .o-subsection-right {
          display: inline-block;
          width: 47%;
          margin-left: 3%;
        }
      }

      .o-sidePanel-composer {
        color: ${TEXT_BODY};
      }
    }

    .o-sidePanelButtons {
      display: flex;
      gap: 8px;
    }

    .o-invalid {
      border-width: 2px;
      border-color: red;
    }

    .o-sidePanel-handle-container {
      width: 8px;
      position: fixed;
      top: 50%;
      z-index: 1;
    }
    .o-sidePanel-handle {
      cursor: col-resize;
      color: #a9a9a9;
      .o-icon {
        height: 25px;
        margin-left: -5px;
      }
    }
  }
`;class SidePanel extends Component{static template="o-spreadsheet-SidePanel";static props={};sidePanelStore;spreadsheetRect=useSpreadsheetRect();setup(){this.sidePanelStore=useStore(SidePanelStore);useEffect((isOpen)=>{if(!isOpen){this.sidePanelStore.close();}},()=>[this.sidePanelStore.isOpen]);}
get panel(){return sidePanelRegistry.get(this.sidePanelStore.componentTag);}
close(){this.sidePanelStore.close();}
getTitle(){const panel=this.panel;return typeof panel.title==="function"?panel.title(this.env,this.sidePanelStore.panelProps):panel.title;}
startHandleDrag(ev){const startingCursor=document.body.style.cursor;const startSize=this.sidePanelStore.panelSize;const startPosition=ev.clientX;const onMouseMove=(ev)=>{document.body.style.cursor="col-resize";const newSize=startSize+startPosition-ev.clientX;this.sidePanelStore.changePanelSize(newSize,this.spreadsheetRect.width);};const cleanUp=()=>{document.body.style.cursor=startingCursor;};startDnd(onMouseMove,cleanUp);}}
css`
  .o-menu-item-button {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2px 1px;
    padding: 0px 1px;
    border-radius: 2px;
    min-width: 20px;
  }
  .o-disabled {
    opacity: 0.6;
    cursor: default;
  }
`;class ActionButton extends Component{static template="o-spreadsheet-ActionButton";static props={action:Object,hasTriangleDownIcon:{type:Boolean,optional:true},selectedColor:{type:String,optional:true},class:{type:String,optional:true},onClick:{type:Function,optional:true},};actionButton=createAction(this.props.action);setup(){onWillUpdateProps((nextProps)=>{if(nextProps.action!==this.props.action){this.actionButton=createAction(this.props.action);}});}
get isVisible(){return this.actionButton.isVisible(this.env);}
get isEnabled(){return this.actionButton.isEnabled(this.env);}
get isActive(){return this.actionButton.isActive?.(this.env);}
get title(){const name=this.actionButton.name(this.env);const description=this.actionButton.description(this.env);return name+(description?` (${description})`:"");}
get iconTitle(){return this.actionButton.icon(this.env);}
onClick(ev){if(this.isEnabled){this.props.onClick?.(ev);this.actionButton.execute?.(this.env);}}
get buttonStyle(){if(this.props.selectedColor){return cssPropertiesToCss({"border-bottom":`4px solid ${this.props.selectedColor}`,height:"16px","margin-top":"2px",});}
return"";}}
const BORDER_POSITIONS=[[["all","o-spreadsheet-Icon.BORDERS"],["hv","o-spreadsheet-Icon.BORDER_HV"],["h","o-spreadsheet-Icon.BORDER_H"],["v","o-spreadsheet-Icon.BORDER_V"],["external","o-spreadsheet-Icon.BORDER_EXTERNAL"],],[["left","o-spreadsheet-Icon.BORDER_LEFT"],["top","o-spreadsheet-Icon.BORDER_TOP"],["right","o-spreadsheet-Icon.BORDER_RIGHT"],["bottom","o-spreadsheet-Icon.BORDER_BOTTOM"],["clear","o-spreadsheet-Icon.BORDER_CLEAR"],],];css`
  .o-border-selector {
    padding: 4px;
    background-color: white;

    .o-divider {
      border-right: 1px solid ${GRAY_300};
      margin: 0 6px;
    }

    .o-border-selector-section {
      .o-dropdown-line {
        height: 30px;
        margin: 1px;
        .o-line-item {
          padding: 4px;
          width: 18px;
          height: 18px;
          &.active {
            background-color: ${BUTTON_ACTIVE_BG};
          }
        }
      }
      .o-border-style-tool {
        padding: 0px 3px;
        margin: 2px;
        height: 25px;
      }
    }
  }

  .o-border-style-dropdown {
    background: #ffffff;
    padding: 4px;
    .o-dropdown-line {
    }
    .o-style-preview {
      margin: 7px 5px 7px 5px;
      width: 60px;
      height: 5px;
    }
    .o-style-thin {
      border-bottom: 1px solid #000000;
    }
    .o-style-medium {
      border-bottom: 2px solid #000000;
    }
    .o-style-thick {
      border-bottom: 3px solid #000000;
    }
    .o-style-dashed {
      border-bottom: 1px dashed #000000;
    }
    .o-style-dotted {
      border-bottom: 1px dotted #000000;
    }
    .o-dropdown-border-type {
      cursor: pointer;
      &:not(.o-disabled):not(.active):hover {
        background-color: ${BUTTON_HOVER_BG};
      }
    }
    .o-dropdown-border-check {
      width: 20px;
      font-size: 12px;
    }
    .o-border-picker-button {
      padding: 0px !important;
      margin: 5px 0px 0px 0px !important;
      height: 25px !important;
    }
  }
`;class BorderEditor extends Component{static template="o-spreadsheet-BorderEditor";static props={class:{type:String,optional:true},currentBorderColor:{type:String,optional:false},currentBorderStyle:{type:String,optional:false},currentBorderPosition:{type:String,optional:true},onBorderColorPicked:Function,onBorderStylePicked:Function,onBorderPositionPicked:Function,maxHeight:{type:Number,optional:true},anchorRect:Object,};static components={ColorPickerWidget,Popover};BORDER_POSITIONS=BORDER_POSITIONS;lineStyleButtonRef=useRef("lineStyleButton");borderStyles=borderStyles;state=useState({activeTool:undefined,});toggleDropdownTool(tool){const isOpen=this.state.activeTool===tool;this.state.activeTool=isOpen?undefined:tool;}
closeDropdown(){this.state.activeTool=undefined;}
setBorderPosition(position){this.props.onBorderPositionPicked(position);this.closeDropdown();}
setBorderColor(color){this.props.onBorderColorPicked(color);this.closeDropdown();}
setBorderStyle(style){this.props.onBorderStylePicked(style);this.closeDropdown();}
get lineStylePickerPopoverProps(){return{anchorRect:this.lineStylePickerAnchorRect,positioning:"BottomLeft",verticalOffset:0,};}
get popoverProps(){return{anchorRect:this.props.anchorRect,maxHeight:this.props.maxHeight,positioning:"BottomLeft",verticalOffset:0,};}
get lineStylePickerAnchorRect(){const button=this.lineStyleButtonRef.el;if(button===null){return{x:0,y:0,width:0,height:0};}
const buttonRect=button.getBoundingClientRect();return{x:buttonRect.x,y:buttonRect.y,width:buttonRect.width,height:buttonRect.height,};}}
class BorderEditorWidget extends Component{static template="o-spreadsheet-BorderEditorWidget";static props={toggleBorderEditor:Function,showBorderEditor:Boolean,disabled:{type:Boolean,optional:true},dropdownMaxHeight:{type:Number,optional:true},class:{type:String,optional:true},};static components={BorderEditor};borderEditorButtonRef=useRef("borderEditorButton");state=useState({currentColor:DEFAULT_BORDER_DESC.color,currentStyle:DEFAULT_BORDER_DESC.style,currentPosition:undefined,});get borderEditorAnchorRect(){const button=this.borderEditorButtonRef.el;const buttonRect=button.getBoundingClientRect();return{x:buttonRect.x,y:buttonRect.y,width:buttonRect.width,height:buttonRect.height,};}
onBorderPositionPicked(position){this.state.currentPosition=position;this.updateBorder();}
onBorderColorPicked(color){this.state.currentColor=color;this.updateBorder();}
onBorderStylePicked(style){this.state.currentStyle=style;this.updateBorder();}
updateBorder(){if(this.state.currentPosition===undefined){return;}
this.env.model.dispatch("SET_ZONE_BORDERS",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),border:{position:this.state.currentPosition,color:this.state.currentColor,style:this.state.currentStyle,},});}}
const COMPOSER_MAX_HEIGHT=100;const FX_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 121.8 122.9' width='16' height='16' focusable='false'>
  <path d='m28 34-4 5v2h10l-6 40c-4 22-6 28-7 30-2 2-3 3-5 3-3 0-7-2-9-4H4c-2 2-4 4-4 7s4 6 8 6 9-2 15-8c8-7 13-17 18-39l7-35 13-1 3-6H49c4-23 7-27 11-27 2 0 5 2 8 6h4c1-1 4-4 4-7 0-2-3-6-9-6-5 0-13 4-20 10-6 7-9 14-11 24h-8zm41 16c4-5 7-7 8-7s2 1 5 9l3 12c-7 11-12 17-16 17l-3-1-2-1c-3 0-6 3-6 7s3 7 7 7c6 0 12-6 22-23l3 10c3 9 6 13 10 13 5 0 11-4 18-15l-3-4c-4 6-7 8-8 8-2 0-4-3-6-10l-5-15 8-10 6-4 3 1 3 2c2 0 6-3 6-7s-2-7-6-7c-6 0-11 5-21 20l-2-6c-3-9-5-14-9-14-5 0-12 6-18 15l3 3z' fill='#BDBDBD'/>
</svg>
`;css`
  .o-topbar-composer {
    height: fit-content;
    margin-top: -1px;
    border: 1px solid;
    z-index: ${ComponentsImportance.TopBarComposer};
    font-family: ${DEFAULT_FONT};

    .o-composer:empty:not(:focus):not(.active)::before {
      content: url("data:image/svg+xml,${encodeURIComponent(FX_SVG)}");
      position: relative;
      top: 20%;
    }
  }

  .user-select-text {
    user-select: text;
  }
`;class TopBarComposer extends Component{static template="o-spreadsheet-TopBarComposer";static props={};static components={Composer};composerFocusStore;composerStore;composerInterface;setup(){this.composerFocusStore=useStore(ComposerFocusStore);const composerStore=useStore(CellComposerStore);this.composerStore=composerStore;this.composerInterface={id:"topbarComposer",get editionMode(){return composerStore.editionMode;},startEdition:this.composerStore.startEdition,setCurrentContent:this.composerStore.setCurrentContent,stopEdition:this.composerStore.stopEdition,};}
get focus(){return this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";}
get composerStyle(){const style={padding:"5px 0px 5px 8px","max-height":`${COMPOSER_MAX_HEIGHT}px`,"line-height":"24px",};style.height=this.focus==="inactive"?`${TOPBAR_TOOLBAR_HEIGHT}px`:"fit-content";return cssPropertiesToCss(style);}
get containerStyle(){if(this.focus==="inactive"){return cssPropertiesToCss({"border-color":SEPARATOR_COLOR,"border-right":"none",});}
return cssPropertiesToCss({"border-color":SELECTION_BORDER_COLOR,});}
onFocus(selection){this.composerFocusStore.focusComposer(this.composerInterface,{selection});}}
css`
  .o-font-size-editor {
    height: calc(100% - 4px);
    input.o-font-size {
      outline-color: ${SELECTION_BORDER_COLOR};
      height: 20px;
      width: 23px;
    }
  }
  .o-text-options > div {
    cursor: pointer;
    line-height: 26px;
    padding: 3px 12px;
    &:hover {
      background-color: rgba(0, 0, 0, 0.08);
    }
  }
`;class FontSizeEditor extends Component{static template="o-spreadsheet-FontSizeEditor";static props={onToggle:Function,dropdownStyle:String,class:String,};static components={};fontSizes=FONT_SIZES;dropdown=useState({isOpen:false});inputRef=useRef("inputFontSize");rootEditorRef=useRef("FontSizeEditor");setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
onExternalClick(ev){if(!isChildEvent(this.rootEditorRef.el,ev)){this.closeFontList();}}
get currentFontSize(){return this.env.model.getters.getCurrentStyle().fontSize||DEFAULT_FONT_SIZE;}
toggleFontList(){const isOpen=this.dropdown.isOpen;if(!isOpen){this.props.onToggle();this.inputRef.el.focus();}
else{this.closeFontList();}}
closeFontList(){this.dropdown.isOpen=false;}
setSize(fontSizeStr){const fontSize=clip(Math.floor(parseFloat(fontSizeStr)),1,400);setStyle(this.env,{fontSize});this.closeFontList();}
setSizeFromInput(ev){this.setSize(ev.target.value);}
setSizeFromList(fontSizeStr){this.setSize(fontSizeStr);}
onInputFocused(ev){this.dropdown.isOpen=true;ev.target.select();}
onInputKeydown(ev){if(ev.key==="Enter"||ev.key==="Escape"){this.closeFontList();const target=ev.target;if(ev.key==="Escape"){target.value=`${this.currentFontSize}`;}
this.props.onToggle();}}}
class TableDropdownButton extends Component{static template="o-spreadsheet-TableDropdownButton";static components={TableStylesPopover,ActionButton};static props={};state=useState({popoverProps:undefined});onStylePicked(styleId){const sheetId=this.env.model.getters.getActiveSheetId();const tableConfig={...this.tableConfig,styleId};const result=interactiveCreateTable(this.env,sheetId,tableConfig);if(result.isSuccessful){this.env.openSidePanel("TableSidePanel",{});}
this.closePopover();}
onClick(ev){if(ev.hasClosedTableStylesPopover||this.state.popoverProps){this.closePopover();return;}
if(this.env.model.getters.getFirstTableInSelection()){this.env.toggleSidePanel("TableSidePanel",{});return;}
const target=ev.currentTarget;const{bottom,left}=target.getBoundingClientRect();this.state.popoverProps={anchorRect:{x:left,y:bottom,width:0,height:0},positioning:"BottomLeft",verticalOffset:0,};}
closePopover(){this.state.popoverProps=undefined;}
get action(){return{name:(env)=>this.env.model.getters.getFirstTableInSelection()?_t("Edit table"):_t("Insert table"),icon:(env)=>this.env.model.getters.getFirstTableInSelection()?"o-spreadsheet-Icon.EDIT_TABLE":"o-spreadsheet-Icon.PAINT_TABLE",};}
get tableConfig(){return{...DEFAULT_TABLE_CONFIG,numberOfHeaders:1,bandedRows:true};}}
class PaintFormatButton extends Component{static template="o-spreadsheet-PaintFormatButton";static props={class:{type:String,optional:true},};paintFormatStore;setup(){this.paintFormatStore=useStore(PaintFormatStore);}
get isActive(){return this.paintFormatStore.isActive;}
onDblClick(){this.paintFormatStore.activate({persistent:true});}
togglePaintFormat(){if(this.isActive){this.paintFormatStore.cancel();}
else{this.paintFormatStore.activate({persistent:false});}}}
css`
  .o-spreadsheet-topbar {
    line-height: 1.2;
    font-size: 13px;
    font-weight: 500;
    background-color: #fff;

    .o-topbar-top {
      border-bottom: 1px solid ${SEPARATOR_COLOR};
      padding: 2px 10px;

      /* Menus */
      .o-topbar-topleft {
        .o-topbar-menu {
          padding: 4px 6px;
          margin: 0 2px;

          &.active {
            background-color: ${BUTTON_ACTIVE_BG};
            color: ${BUTTON_ACTIVE_TEXT_COLOR};
          }
        }
      }
    }

    .o-topbar-composer {
      flex-grow: 1;
    }

    /* Toolbar */
    .o-topbar-toolbar {
      height: ${TOPBAR_TOOLBAR_HEIGHT}px;

      .o-readonly-toolbar {
        background-color: ${BACKGROUND_HEADER_COLOR};
        padding-left: 18px;
        padding-right: 18px;
      }

      /* Toolbar */
      .o-toolbar-tools {
        display: flex;
        flex-shrink: 0;
        margin: 0px 6px 0px 16px;
        cursor: default;

        .o-divider {
          display: inline-block;
          border-right: 1px solid ${SEPARATOR_COLOR};
          width: 0;
          margin: 0 6px;
        }

        .o-dropdown {
          position: relative;
          display: flex;
          align-items: center;

          > span {
            height: 30px;
          }

          .o-dropdown-content {
            position: absolute;
            top: 100%;
            left: 0;
            overflow-y: auto;
            overflow-x: hidden;
            padding: 2px;
            z-index: ${ComponentsImportance.Dropdown};
            box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);
            background-color: white;

            .o-dropdown-line {
              display: flex;

              > span {
                padding: 4px;
              }
            }
          }
        }
      }
    }
  }
`;class TopBar extends Component{static template="o-spreadsheet-TopBar";static props={onClick:Function,dropdownMaxHeight:Number,};get dropdownStyle(){return`max-height:${this.props.dropdownMaxHeight}px`;}
static components={ColorPickerWidget,ColorPicker,Menu,TopBarComposer,FontSizeEditor,ActionButton,PaintFormatButton,BorderEditorWidget,TableDropdownButton,};state=useState({menuState:{isOpen:false,position:null,menuItems:[]},activeTool:"",fillColor:"#ffffff",textColor:"#000000",});isSelectingMenu=false;openedEl=null;menus=[];EDIT=ACTION_EDIT;FORMAT=ACTION_FORMAT;DATA=ACTION_DATA;formatNumberMenuItemSpec=formatNumberMenuItemSpec;isntToolbarMenu=false;composerFocusStore;setup(){this.composerFocusStore=useStore(ComposerFocusStore);useExternalListener(window,"click",this.onExternalClick);onWillStart(()=>this.updateCellState());onWillUpdateProps(()=>this.updateCellState());}
get topbarComponents(){return topbarComponentRegistry.getAllOrdered().filter((item)=>!item.isVisible||item.isVisible(this.env));}
onExternalClick(ev){if(this.openedEl===ev.target){return;}
this.closeMenus();}
onClick(){this.props.onClick();this.closeMenus();}
onMenuMouseOver(menu,ev){if(this.isSelectingMenu&&this.isntToolbarMenu){this.openMenu(menu,ev);}}
toggleDropdownTool(tool,ev){const isOpen=this.state.activeTool===tool;this.closeMenus();this.state.activeTool=isOpen?"":tool;this.openedEl=isOpen?null:ev.target;}
toggleContextMenu(menu,ev){if(this.state.menuState.isOpen&&this.isntToolbarMenu){this.closeMenus();}
else{this.openMenu(menu,ev);this.isntToolbarMenu=true;}}
toggleToolbarContextMenu(menuSpec,ev){if(this.state.menuState.isOpen&&!this.isntToolbarMenu){this.closeMenus();}
else{const menu=createAction(menuSpec);this.openMenu(menu,ev);this.isntToolbarMenu=false;}}
openMenu(menu,ev){const{left,top,height}=ev.currentTarget.getBoundingClientRect();this.state.activeTool="";this.state.menuState.isOpen=true;this.state.menuState.position={x:left,y:top+height};this.state.menuState.menuItems=menu.children(this.env).sort((a,b)=>a.sequence-b.sequence);this.state.menuState.parentMenu=menu;this.isSelectingMenu=true;this.openedEl=ev.target;this.composerFocusStore.activeComposer.stopEdition();}
closeMenus(){this.state.activeTool="";this.state.menuState.isOpen=false;this.state.menuState.parentMenu=undefined;this.isSelectingMenu=false;this.openedEl=null;}
updateCellState(){const style=this.env.model.getters.getCurrentStyle();this.state.fillColor=style.fillColor||"#ffffff";this.state.textColor=style.textColor||"#000000";this.menus=topbarMenuRegistry.getMenuItems();}
getMenuName(menu){return menu.name(this.env);}
setColor(target,color){setStyle(this.env,{[target]:color});this.onClick();}}
function instantiateClipboard(){return new WebClipboardWrapper(navigator.clipboard);}
class WebClipboardWrapper{clipboard;constructor(clipboard){this.clipboard=clipboard;}
async write(clipboardContent){if(this.clipboard?.write){try{await this.clipboard?.write(this.getClipboardItems(clipboardContent));}
catch(e){try{await this.clipboard?.write([new ClipboardItem({[ClipboardMIMEType.PlainText]:this.getBlob(clipboardContent,ClipboardMIMEType.PlainText),[ClipboardMIMEType.Html]:this.getBlob(clipboardContent,ClipboardMIMEType.Html),}),]);}
catch(e){}}}
else{await this.writeText(clipboardContent[ClipboardMIMEType.PlainText]??"");}}
async writeText(text){try{this.clipboard?.writeText(text);}
catch(e){}}
async read(){let permissionResult=undefined;try{permissionResult=await navigator.permissions.query({name:"clipboard-read"});}
catch(e){}
if(this.clipboard?.read){try{const clipboardItems=await this.clipboard.read();const clipboardContent={};for(const item of clipboardItems){for(const type of item.types){const blob=await item.getType(type);const text=await blob.text();clipboardContent[type]=text;}}
return{status:"ok",content:clipboardContent};}
catch(e){const status=permissionResult?.state==="denied"?"permissionDenied":"notImplemented";return{status};}}
else{return{status:"ok",content:{[ClipboardMIMEType.PlainText]:await this.clipboard?.readText(),},};}}
getClipboardItems(content){const clipboardItemData={[ClipboardMIMEType.PlainText]:this.getBlob(content,ClipboardMIMEType.PlainText),[ClipboardMIMEType.Html]:this.getBlob(content,ClipboardMIMEType.Html),};const spreadsheetData=content[ClipboardMIMEType.OSpreadsheet];if(spreadsheetData){clipboardItemData[ClipboardMIMEType.OSpreadsheet]=this.getBlob(content,ClipboardMIMEType.OSpreadsheet);}
return[new ClipboardItem(clipboardItemData)];}
getBlob(clipboardContent,type){return new Blob([clipboardContent[type]||""],{type,});}}
const CARET_DOWN_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' width='7' height='4' viewBox='0 0 7 4'>
  <polygon fill='%23374151' points='3.5 4 7 0 0 0'/>
</svg>
`;css`
  .o-spreadsheet {
    position: relative;
    display: grid;
    color: ${TEXT_BODY};
    font-size: 14px;

    input {
      background-color: white;
    }
    .text-muted {
      color: ${TEXT_BODY_MUTED} !important;
    }
    .o-disabled {
      opacity: 0.4;
      cursor: default;
      pointer-events: none;
    }

    &,
    *,
    *:before,
    *:after {
      box-sizing: content-box;
      /** rtl not supported ATM */
      direction: ltr;
    }
    .o-separator {
      border-bottom: ${MENU_SEPARATOR_BORDER_WIDTH}px solid ${SEPARATOR_COLOR};
      margin-top: ${MENU_SEPARATOR_PADDING}px;
      margin-bottom: ${MENU_SEPARATOR_PADDING}px;
    }
    .o-hoverable-button {
      border-radius: 2px;
      cursor: pointer;
      .o-icon {
        color: ${TEXT_BODY};
      }
      &:not(.o-disabled):not(.active):hover {
        background-color: ${BUTTON_HOVER_BG};
        color: ${BUTTON_HOVER_TEXT_COLOR};
        .o-icon {
          color: ${BUTTON_HOVER_TEXT_COLOR};
        }
      }
      &.active {
        background-color: ${BUTTON_ACTIVE_BG};
        color: ${BUTTON_ACTIVE_TEXT_COLOR};
        .o-icon {
          color: ${BUTTON_ACTIVE_TEXT_COLOR};
        }
      }
    }

    .o-grid-container {
      display: grid;
      background-color: ${HEADER_GROUPING_BACKGROUND_COLOR};

      .o-top-left {
        border: 1px solid ${GRID_BORDER_COLOR};
        margin-bottom: -1px;
        margin-right: -1px;
      }

      .o-column-groups {
        grid-column-start: 2;
        border-top: 1px solid ${GRID_BORDER_COLOR};
      }

      .o-row-groups {
        grid-row-start: 2;
      }

      .o-group-grid {
        border-top: 1px solid ${GRID_BORDER_COLOR};
        border-left: 1px solid ${GRID_BORDER_COLOR};
      }
    }

    .o-input {
      min-width: 0px;
      padding: 1px 0;
      box-sizing: border-box;
      width: 100%;
      outline: none;
      border-color: ${GRAY_300};
      color: ${GRAY_900};

      &::placeholder {
        opacity: 0.5;
      }
      &:focus {
        border-color: ${ACTION_COLOR};
      }
    }

    select.o-input {
      cursor: pointer;
      border-width: 0 0 1px 0;
      padding: 1px 6px 1px 0px;

      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      background: transparent url("data:image/svg+xml,${encodeURIComponent(CARET_DOWN_SVG)}")
        no-repeat right center;
      text-overflow: ellipsis;

      &:disabled {
        color: ${DISABLED_TEXT_COLOR};
        opacity: 0.4;
        cursor: default;
      }
    }

    .o-input[type="text"] {
      border-width: 0 0 1px 0;
    }

    .o-input[type="number"],
    .o-number-input {
      border-width: 0 0 1px 0;
      /* Remove number input arrows */
      appearance: textfield;
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }
  }

  .o-two-columns {
    grid-column: 1 / 3;
  }

  .o-text-icon {
    vertical-align: middle;
  }
`;css`
  .o-grid {
    position: relative;
    overflow: hidden;
    background-color: ${BACKGROUND_GRAY_COLOR};
    &:focus {
      outline: none;
    }

    > canvas {
      border-bottom: 1px solid #e2e3e3;
    }
    .o-scrollbar {
      &.corner {
        right: 0px;
        bottom: 0px;
        height: ${SCROLLBAR_WIDTH}px;
        width: ${SCROLLBAR_WIDTH}px;
        border-top: 1px solid #e2e3e3;
        border-left: 1px solid #e2e3e3;
      }
    }

    .o-grid-overlay {
      position: absolute;
      outline: none;
    }
  }

  .o-button {
    border: 1px solid;
    border-radius: 4px;
    font-weight: 500;
    font-size: 14px;
    height: 30px;
    line-height: 16px;
    flex-grow: 1;
    background-color: ${BUTTON_BG};
    border: 1px solid ${GRAY_200};
    color: ${TEXT_BODY};

    &:disabled {
      color: ${DISABLED_TEXT_COLOR};
    }

    &.primary {
      background-color: ${PRIMARY_BUTTON_BG};
      border-color: ${PRIMARY_BUTTON_BG};
      color: #fff;
      &:hover:enabled {
        color: #fff;
        background-color: ${PRIMARY_BUTTON_HOVER_BG};
      }
      &:active:enabled {
        background-color: ${PRIMARY_BUTTON_ACTIVE_BG};
        color: ${PRIMARY_BUTTON_BG};
      }
      &.o-disabled,
      &:disabled {
        opacity: 0.5;
      }
    }

    &:hover:enabled {
      color: ${BUTTON_HOVER_TEXT_COLOR};
      background-color: ${BUTTON_HOVER_BG};
    }
    &:active:enabled {
      color: ${BUTTON_ACTIVE_TEXT_COLOR};
      background-color: ${BUTTON_ACTIVE_BG};
    }

    &.o-disabled,
    &:disabled {
      opacity: 0.8;
    }

    &.o-button-danger:hover {
      color: #ffffff;
      background: ${ALERT_DANGER_BORDER};
    }
  }

  .o-button-link {
    cursor: pointer;
    text-decoration: none;
    color: ${ACTION_COLOR};
    font-weight: 500;
    &:hover,
    &:active {
      color: ${ACTION_COLOR_HOVER};
    }
  }

  .o-button-icon {
    cursor: pointer;
    color: ${TEXT_BODY_MUTED};
    font-weight: 500;
    &:hover,
    &:active {
      color: ${TEXT_BODY};
    }
  }
`;class Spreadsheet extends Component{static template="o-spreadsheet-Spreadsheet";static props={model:Object,notifyUser:{type:Function,optional:true},raiseError:{type:Function,optional:true},askConfirmation:{type:Function,optional:true},};static components={TopBar,Grid,BottomBar,SidePanel,SpreadsheetDashboard,HeaderGroupContainer,};sidePanel;spreadsheetRef=useRef("spreadsheet");spreadsheetRect=useSpreadsheetRect();_focusGrid;keyDownMapping;isViewportTooSmall=false;notificationStore;composerFocusStore;get model(){return this.props.model;}
getStyle(){const properties={};if(this.env.isDashboard()){properties["grid-template-rows"]=`auto`;}
else{properties["grid-template-rows"]=`${TOPBAR_HEIGHT}px auto ${BOTTOMBAR_HEIGHT + 1}px`;}
properties["grid-template-columns"]=`auto ${this.sidePanel.panelSize}px`;return cssPropertiesToCss(properties);}
setup(){const stores=useStoreProvider();stores.inject(ModelStore,this.model);this.notificationStore=useStore(NotificationStore);this.composerFocusStore=useStore(ComposerFocusStore);this.sidePanel=useStore(SidePanelStore);this.keyDownMapping={"CTRL+H":()=>this.sidePanel.toggle("FindAndReplace",{}),"CTRL+F":()=>this.sidePanel.toggle("FindAndReplace",{}),};const fileStore=this.model.config.external.fileStore;useSubEnv({model:this.model,imageProvider:fileStore?new ImageProvider(fileStore):undefined,loadCurrencies:this.model.config.external.loadCurrencies,loadLocales:this.model.config.external.loadLocales,isDashboard:()=>this.model.getters.isDashboard(),openSidePanel:this.sidePanel.open.bind(this.sidePanel),toggleSidePanel:this.sidePanel.toggle.bind(this.sidePanel),clipboard:this.env.clipboard||instantiateClipboard(),startCellEdition:(content)=>this.composerFocusStore.focusActiveComposer({content}),notifyUser:(notification)=>this.notificationStore.notifyUser(notification),askConfirmation:(text,confirm,cancel)=>this.notificationStore.askConfirmation(text,confirm,cancel),raiseError:(text,cb)=>this.notificationStore.raiseError(text,cb),});this.notificationStore.updateNotificationCallbacks({...this.props});useEffect(()=>{if(!this.spreadsheetRef.el.contains(document.activeElement)&&document.activeElement?.contains(this.spreadsheetRef.el)){this.focusGrid();}},()=>[this.env.model.getters.getActiveSheetId()]);useExternalListener(window,"resize",()=>this.render(true));useExternalListener(document.body,"wheel",()=>{});this.bindModelEvents();onWillUpdateProps((nextProps)=>{if(nextProps.model!==this.props.model){throw new Error("Changing the props model is not supported at the moment.");}
if(nextProps.notifyUser!==this.props.notifyUser||nextProps.askConfirmation!==this.props.askConfirmation||nextProps.raiseError!==this.props.raiseError){this.notificationStore.updateNotificationCallbacks({...nextProps});}});const render=batched(this.render.bind(this,true));onMounted(()=>{this.checkViewportSize();stores.on("store-updated",this,render);resizeObserver.observe(this.spreadsheetRef.el);});onWillUnmount(()=>{this.unbindModelEvents();stores.off("store-updated",this);resizeObserver.disconnect();});onPatched(()=>{this.checkViewportSize();});const resizeObserver=new ResizeObserver(()=>{this.sidePanel.changePanelSize(this.sidePanel.panelSize,this.spreadsheetRect.width);});}
bindModelEvents(){this.model.on("update",this,()=>this.render(true));this.model.on("notify-ui",this,(notification)=>this.notificationStore.notifyUser(notification));this.model.on("raise-error-ui",this,({text})=>this.notificationStore.raiseError(text));}
unbindModelEvents(){this.model.off("update",this);this.model.off("notify-ui",this);this.model.off("raise-error-ui",this);}
checkViewportSize(){const{xRatio,yRatio}=this.env.model.getters.getFrozenSheetViewRatio(this.env.model.getters.getActiveSheetId());if(!isFinite(xRatio)||!isFinite(yRatio)){return;}
if(yRatio>MAXIMAL_FREEZABLE_RATIO||xRatio>MAXIMAL_FREEZABLE_RATIO){if(this.isViewportTooSmall){return;}
this.notificationStore.notifyUser({text:_t("The current window is too small to display this sheet properly. Consider resizing your browser window or adjusting frozen rows and columns."),type:"warning",sticky:false,});this.isViewportTooSmall=true;}
else{this.isViewportTooSmall=false;}}
focusGrid(){if(!this._focusGrid){return;}
this._focusGrid();}
onKeydown(ev){let keyDownString="";if(isCtrlKey(ev)){keyDownString+="CTRL+";}
keyDownString+=ev.key.toUpperCase();let handler=this.keyDownMapping[keyDownString];if(handler){ev.preventDefault();ev.stopPropagation();handler();return;}}
get gridHeight(){const{height}=this.env.model.getters.getSheetViewDimension();return height;}
get gridContainerStyle(){const gridColSize=GROUP_LAYER_WIDTH*this.rowLayers.length;const gridRowSize=GROUP_LAYER_WIDTH*this.colLayers.length;return cssPropertiesToCss({"grid-template-columns":`${gridColSize ? gridColSize + 2 : 0}px auto`,"grid-template-rows":`${gridRowSize ? gridRowSize + 2 : 0}px auto`,});}
get rowLayers(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getVisibleGroupLayers(sheetId,"ROW");}
get colLayers(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getVisibleGroupLayers(sheetId,"COL");}}
class LocalTransportService{listeners=[];async sendMessage(message){for(const{callback}of this.listeners){callback(message);}}
onNewMessage(id,callback){this.listeners.push({id,callback});}
leave(id){this.listeners=this.listeners.filter((listener)=>listener.id!==id);}}
function inverseCommand(cmd){return inverseCommandRegistry.get(cmd.type)(cmd);}
class Branch{buildTransformation;operations;constructor(buildTransformation,operations=[]){this.buildTransformation=buildTransformation;this.operations=operations;}
getOperations(){return this.operations;}
getOperation(operationId){const operation=this.operations.find((op)=>op.id===operationId);if(!operation){throw new Error(`Operation ${operationId} not found`);}
return operation;}
getLastOperationId(){return this.operations[this.operations.length-1]?.id;}
getFirstOperationAmong(op1,op2){for(const operation of this.operations){if(operation.id===op1)
return op1;if(operation.id===op2)
return op2;}
throw new Error(`Operation ${op1} and ${op2} not found`);}
contains(operationId){return!!this.operations.find((operation)=>operation.id===operationId);}
prepend(operation){const transformation=this.buildTransformation.with(operation.data);this.operations=[operation,...this.operations.map((operation)=>operation.transformed(transformation)),];}
insert(newOperation,predecessorOpId){const transformation=this.buildTransformation.with(newOperation.data);const{before,operation,after}=this.locateOperation(predecessorOpId);this.operations=[...before,operation,newOperation,...after.map((operation)=>operation.transformed(transformation)),];}
append(operation){this.operations.push(operation);}
appendBranch(branch){this.operations=this.operations.concat(branch.operations);}
fork(operationId){const{after}=this.locateOperation(operationId);return new Branch(this.buildTransformation,after);}
transform(transformation){this.operations=this.operations.map((operation)=>operation.transformed(transformation));}
cutBefore(operationId){this.operations=this.locateOperation(operationId).before;}
cutAfter(operationId){const{before,operation}=this.locateOperation(operationId);this.operations=before.concat([operation]);}
locateOperation(operationId){const operationIndex=this.operations.findIndex((step)=>step.id===operationId);if(operationIndex===-1){throw new Error(`Operation ${operationId} not found`);}
return{before:this.operations.slice(0,operationIndex),operation:this.operations[operationIndex],after:this.operations.slice(operationIndex+1),};}}
class Operation{id;data;constructor(id,data){this.id=id;this.data=data;}
transformed(transformation){return new LazyOperation(this.id,lazy(()=>transformation(this.data)));}}
class LazyOperation{id;lazyData;constructor(id,lazyData){this.id=id;this.lazyData=lazyData;}
get data(){return this.lazyData();}
transformed(transformation){return new LazyOperation(this.id,this.lazyData.map(transformation));}}
class OperationSequence{operations;constructor(operations){this.operations=operations;}
[Symbol.iterator](){return this.operations[Symbol.iterator]();}
stopWith(operationId){function*filter(execution,operationId){for(const step of execution){yield step;if(step.operation.id===operationId){return;}}}
return new OperationSequence(filter(this.operations,operationId));}
stopBefore(operationId){function*filter(execution,operationId){for(const step of execution){if(step.operation.id===operationId){return;}
yield step;}}
return new OperationSequence(filter(this.operations,operationId));}
startAfter(operationId){function*filter(execution,operationId){let skip=true;for(const step of execution){if(!skip){yield step;}
if(step.operation.id===operationId){skip=false;}}}
return new OperationSequence(filter(this.operations,operationId));}}
class Tree{buildTransformation;branches;branchingOperationIds=new Map();constructor(buildTransformation,initialBranch){this.buildTransformation=buildTransformation;this.branches=[initialBranch];}
getLastBranch(){return this.branches[this.branches.length-1];}
execution(branch){return new OperationSequence(linkNext(this._execution(branch),this._execution(branch)));}
revertedExecution(branch){return new OperationSequence(linkNext(this._revertedExecution(branch),this._revertedExecution(branch)));}
insertOperationLast(branch,operation){const insertAfter=branch.getLastOperationId()||this.previousBranch(branch)?.getLastOperationId();branch.append(operation);if(insertAfter){this.insertPrevious(branch,operation,insertAfter);}}
insertOperationAfter(branch,operation,predecessorOpId){branch.insert(operation,predecessorOpId);this.updateNextWith(branch,operation,predecessorOpId);this.insertPrevious(branch,operation,predecessorOpId);}
undo(branch,operation){const transformation=this.buildTransformation.without(operation.data);const branchingId=this.branchingOperationIds.get(branch);this.branchingOperationIds.set(branch,operation.id);const nextBranch=branch.fork(operation.id);if(branchingId){this.branchingOperationIds.set(nextBranch,branchingId);}
this.insertBranchAfter(branch,nextBranch);this.transform(nextBranch,transformation);}
redo(branch){const removedBranch=this.nextBranch(branch);if(!removedBranch)
return;const nextBranch=this.nextBranch(removedBranch);this.removeBranchFromTree(removedBranch);const undoBranchingId=this.branchingOperationIds.get(removedBranch);if(undoBranchingId){this.branchingOperationIds.set(branch,undoBranchingId);}
else{this.branchingOperationIds.delete(branch);}
if(nextBranch){this.rebaseUp(nextBranch);}}
drop(operationId){for(const branch of this.branches){if(branch.contains(operationId)){branch.cutBefore(operationId);}}}
findOperation(branch,operationId){for(const operation of this.revertedExecution(branch)){if(operation.operation.id===operationId){return operation;}}
throw new Error(`Operation ${operationId} not found`);}
rebaseUp(branch){const{previousBranch,branchingOperation}=this.findPreviousBranchingOperation(branch);if(!previousBranch||!branchingOperation)
return;const rebaseTransformation=this.buildTransformation.without(branchingOperation.data);const newBranch=previousBranch.fork(branchingOperation.id);this.branchingOperationIds.set(newBranch,this.branchingOperationIds.get(branch));this.removeBranchFromTree(branch);this.insertBranchAfter(previousBranch,newBranch);newBranch.transform(rebaseTransformation);const nextBranch=this.nextBranch(newBranch);if(nextBranch){this.rebaseUp(nextBranch);}}
removeBranchFromTree(branch){const index=this.branches.findIndex((l)=>l===branch);this.branches.splice(index,1);}
insertBranchAfter(branch,toInsert){const index=this.branches.findIndex((l)=>l===branch);this.branches.splice(index+1,0,toInsert);}
updateNextWith(branch,operation,predecessorOpId){const branchingId=this.branchingOperationIds.get(branch);const nextBranch=this.nextBranch(branch);if(!branchingId||!nextBranch){return;}
if(branch.getFirstOperationAmong(predecessorOpId,branchingId)===branchingId){const transformedOperation=this.addToNextBranch(branch,nextBranch,branchingId,operation,predecessorOpId);this.updateNextWith(nextBranch,transformedOperation,predecessorOpId);}
else{const transformation=this.buildTransformation.with(operation.data);this.transform(nextBranch,transformation);}}
addToNextBranch(branch,nextBranch,branchingId,operation,predecessorOpId){let transformedOperation=operation;if(predecessorOpId===branchingId){transformedOperation=this.getTransformedOperation(branch,branchingId,operation);nextBranch.prepend(transformedOperation);}
else if(nextBranch.contains(predecessorOpId)){transformedOperation=this.getTransformedOperation(branch,branchingId,operation);nextBranch.insert(transformedOperation,predecessorOpId);}
else{nextBranch.append(operation);}
return transformedOperation;}
getTransformedOperation(branch,branchingId,operation){const branchingOperation=branch.getOperation(branchingId);const branchingTransformation=this.buildTransformation.without(branchingOperation.data);return operation.transformed(branchingTransformation);}
shouldExecute(branch,operation){return operation.id!==this.branchingOperationIds.get(branch);}
transform(branch,transformation){branch.transform(transformation);const nextBranch=this.nextBranch(branch);if(nextBranch){this.transform(nextBranch,transformation);}}
insertPrevious(branch,newOperation,insertAfter){const{previousBranch,branchingOperation}=this.findPreviousBranchingOperation(branch);if(!previousBranch||!branchingOperation)
return;const transformation=this.buildTransformation.with(branchingOperation.data);const branchTail=branch.fork(insertAfter);branchTail.transform(transformation);previousBranch.cutAfter(insertAfter);previousBranch.appendBranch(branchTail);const operationToInsert=newOperation.transformed(transformation);this.insertPrevious(previousBranch,operationToInsert,insertAfter);}
findPreviousBranchingOperation(branch){const previousBranch=this.previousBranch(branch);if(!previousBranch)
return{previousBranch:undefined,branchingOperation:undefined};const previousBranchingId=this.branchingOperationIds.get(previousBranch);if(!previousBranchingId)
return{previousBranch:undefined,branchingOperation:undefined};return{previousBranch,branchingOperation:previousBranch.getOperation(previousBranchingId),};}
nextBranch(branch){const index=this.branches.findIndex((l)=>l===branch);if(index===-1){return undefined;}
return this.branches[index+1];}
previousBranch(branch){const index=this.branches.findIndex((l)=>l===branch);if(index===-1){return undefined;}
return this.branches[index-1];}*_revertedExecution(branch){const branchingOperationId=this.branchingOperationIds.get(branch);let afterBranchingPoint=!!branchingOperationId;const operations=branch.getOperations();for(let i=operations.length-1;i>=0;i--){const operation=operations[i];if(operation.id===branchingOperationId){afterBranchingPoint=false;}
if(!afterBranchingPoint){yield{operation:operation,branch:branch,isCancelled:!this.shouldExecute(branch,operation),};}}
const previous=this.previousBranch(branch);yield*previous?this._revertedExecution(previous):[];}*_execution(branch){for(const operation of branch.getOperations()){yield{operation:operation,branch:branch,isCancelled:!this.shouldExecute(branch,operation),};if(operation.id===this.branchingOperationIds.get(branch)){const next=this.nextBranch(branch);yield*next?this._execution(next):[];return;}}
if(!this.branchingOperationIds.get(branch)){const next=this.nextBranch(branch);yield*next?this._execution(next):[];}}}
class SelectiveHistory{HEAD_BRANCH;HEAD_OPERATION;tree;applyOperation;revertOperation;buildEmpty;buildTransformation;constructor(args){this.applyOperation=args.applyOperation;this.revertOperation=args.revertOperation;this.buildEmpty=args.buildEmpty;this.buildTransformation=args.buildTransformation;this.HEAD_BRANCH=new Branch(this.buildTransformation);this.tree=new Tree(this.buildTransformation,this.HEAD_BRANCH);const initialOperationId=args.initialOperationId;const initial=new Operation(initialOperationId,this.buildEmpty(initialOperationId));this.tree.insertOperationLast(this.HEAD_BRANCH,initial);this.HEAD_OPERATION=initial;}
get(operationId){return this.tree.findOperation(this.HEAD_BRANCH,operationId).operation.data;}
append(operationId,data){const operation=new Operation(operationId,data);const branch=this.tree.getLastBranch();this.tree.insertOperationLast(branch,operation);this.HEAD_BRANCH=branch;this.HEAD_OPERATION=operation;}
insert(operationId,data,insertAfter){const operation=new Operation(operationId,data);this.revertTo(insertAfter);this.tree.insertOperationAfter(this.HEAD_BRANCH,operation,insertAfter);this.fastForward();}
undo(operationId,undoId,insertAfter){const{branch,operation}=this.tree.findOperation(this.HEAD_BRANCH,operationId);this.revertBefore(operationId);this.tree.undo(branch,operation);this.fastForward();this.insert(undoId,this.buildEmpty(undoId),insertAfter);}
redo(operationId,redoId,insertAfter){const{branch}=this.tree.findOperation(this.HEAD_BRANCH,operationId);this.revertBefore(operationId);this.tree.redo(branch);this.fastForward();this.insert(redoId,this.buildEmpty(redoId),insertAfter);}
drop(operationId){this.revertBefore(operationId);this.tree.drop(operationId);}
revertBefore(operationId){const execution=this.tree.revertedExecution(this.HEAD_BRANCH).stopWith(operationId);this.revert(execution);}
revertTo(operationId){const execution=operationId?this.tree.revertedExecution(this.HEAD_BRANCH).stopBefore(operationId):this.tree.revertedExecution(this.HEAD_BRANCH);this.revert(execution);}
revert(execution){for(const{next,operation,isCancelled}of execution){if(!isCancelled){this.revertOperation(operation.data);}
if(next){this.HEAD_BRANCH=next.branch;this.HEAD_OPERATION=next.operation;}}}
fastForward(){const operations=this.HEAD_OPERATION?this.tree.execution(this.HEAD_BRANCH).startAfter(this.HEAD_OPERATION.id):this.tree.execution(this.HEAD_BRANCH);for(const{operation:operation,branch,isCancelled}of operations){if(!isCancelled){this.applyOperation(operation.data);}
this.HEAD_OPERATION=operation;this.HEAD_BRANCH=branch;}}}
function buildRevisionLog(args){return new SelectiveHistory({initialOperationId:args.initialRevisionId,applyOperation:(revision)=>{const commands=revision.commands.slice();const{changes}=args.recordChanges(()=>{for(const command of commands){args.dispatch(command);}});revision.setChanges(changes);},revertOperation:(revision)=>revertChanges([revision]),buildEmpty:(id)=>new Revision(id,"empty",[]),buildTransformation:{with:(revision)=>(toTransform)=>{return new Revision(toTransform.id,toTransform.clientId,transformAll(toTransform.commands,revision.commands),toTransform.rootCommand,undefined,toTransform.timestamp);},without:(revision)=>(toTransform)=>{return new Revision(toTransform.id,toTransform.clientId,transformAll(toTransform.commands,revision.commands.map(inverseCommand).flat()),toTransform.rootCommand,undefined,toTransform.timestamp);},},});}
function revertChanges(revisions){for(const revision of revisions.slice().reverse()){for(let i=revision.changes.length-1;i>=0;i--){const change=revision.changes[i];applyChange(change);}}}
function applyChange(change){const target=change.target;const key=change.key;const before=change.before;if(before===undefined){delete target[key];}
else{target[key]=before;}}
class EventStream{observers=new Map();defaultSubscription;mainSubscription;registerAsDefault(owner,callbacks){this.defaultSubscription={owner,callbacks};if(!this.mainSubscription){this.mainSubscription=this.defaultSubscription;}}
observe(owner,callbacks){this.observers.set(owner,{owner,callbacks});}
capture(owner,callbacks){if(this.observers.get(owner)){throw new Error("You are already subscribed forever");}
if(this.mainSubscription?.owner&&this.mainSubscription.owner!==owner){this.mainSubscription.callbacks.release?.();}
this.mainSubscription={owner,callbacks};}
release(owner){if(this.mainSubscription?.owner!==owner||this.observers.get(owner)){return;}
this.mainSubscription=this.defaultSubscription;}
getBackToDefault(){if(this.mainSubscription===this.defaultSubscription){return;}
this.mainSubscription?.callbacks.release?.();this.mainSubscription=this.defaultSubscription;}
isListening(owner){return this.mainSubscription?.owner===owner;}
send(event){this.mainSubscription?.callbacks.handleEvent(event);this.observers.forEach((sub)=>sub.callbacks.handleEvent(event));}}
class SelectionStreamProcessorImpl{getters;stream;anchor;defaultAnchor;constructor(getters){this.getters=getters;this.stream=new EventStream();this.anchor={cell:{col:0,row:0},zone:positionToZone({col:0,row:0})};this.defaultAnchor=this.anchor;}
capture(owner,anchor,callbacks){this.stream.capture(owner,callbacks);this.anchor=anchor;}
registerAsDefault(owner,anchor,callbacks){this.checkAnchorZoneOrThrow(anchor);this.stream.registerAsDefault(owner,callbacks);this.defaultAnchor=anchor;this.capture(owner,anchor,callbacks);}
resetDefaultAnchor(owner,anchor){this.checkAnchorZoneOrThrow(anchor);if(this.stream.isListening(owner)){this.anchor=anchor;}
this.defaultAnchor=anchor;}
resetAnchor(owner,anchor){this.checkAnchorZoneOrThrow(anchor);if(this.stream.isListening(owner)){this.anchor=anchor;}}
observe(owner,callbacks){this.stream.observe(owner,callbacks);}
release(owner){if(this.stream.isListening(owner)){this.stream.release(owner);this.anchor=this.defaultAnchor;}}
getBackToDefault(){this.stream.getBackToDefault();}
getAnchor(){return this.anchor;}
modifyAnchor(anchor,mode,options){const sheetId=this.getters.getActiveSheetId();anchor={...anchor,zone:this.getters.expandZone(sheetId,anchor.zone),};return this.processEvent({options,anchor,mode,});}
selectZone(anchor,options={scrollIntoView:true}){return this.modifyAnchor(anchor,"overrideSelection",options);}
selectCell(col,row){const zone=positionToZone({col,row});return this.selectZone({zone,cell:{col,row}},{scrollIntoView:true});}
moveAnchorCell(direction,step=1){if(step!=="end"&&step<=0){return new DispatchResult("InvalidSelectionStep");}
const{col,row}=this.getNextAvailablePosition(direction,step);return this.selectCell(col,row);}
setAnchorCorner(col,row){const sheetId=this.getters.getActiveSheetId();const{col:anchorCol,row:anchorRow}=this.anchor.cell;const zone={left:Math.min(anchorCol,col),top:Math.min(anchorRow,row),right:Math.max(anchorCol,col),bottom:Math.max(anchorRow,row),};const expandedZone=this.getters.expandZone(sheetId,zone);const anchor={zone:expandedZone,cell:{col:anchorCol,row:anchorRow}};return this.processEvent({mode:"updateAnchor",anchor:anchor,options:{scrollIntoView:false},});}
addCellToSelection(col,row){const sheetId=this.getters.getActiveSheetId();({col,row}=this.getters.getMainCellPosition({sheetId,col,row}));const zone=this.getters.expandZone(sheetId,positionToZone({col,row}));return this.processEvent({options:{scrollIntoView:true},anchor:{zone,cell:{col,row}},mode:"newAnchor",});}
resizeAnchorZone(direction,step=1){if(step!=="end"&&step<=0){return new DispatchResult("InvalidSelectionStep");}
const sheetId=this.getters.getActiveSheetId();const anchor=this.anchor;const{col:anchorCol,row:anchorRow}=anchor.cell;const{left,right,top,bottom}=anchor.zone;const starting=this.getStartingPosition(direction);let[deltaCol,deltaRow]=this.deltaToTarget(starting,direction,step);if(deltaCol===0&&deltaRow===0){return DispatchResult.Success;}
let result=anchor.zone;const expand=(z)=>{z=reorderZone(z);const{left,right,top,bottom}=this.getters.expandZone(sheetId,z);return{left:Math.max(0,left),right:Math.min(this.getters.getNumberCols(sheetId)-1,right),top:Math.max(0,top),bottom:Math.min(this.getters.getNumberRows(sheetId)-1,bottom),};};const{col:refCol,row:refRow}=this.getReferencePosition();let n=0;while(result!==null){n++;if(deltaCol<0){const newRight=this.getNextAvailableCol(deltaCol,right-(n-1),refRow);result=refCol<=right-n?expand({top,left,bottom,right:newRight}):null;}
if(deltaCol>0){const newLeft=this.getNextAvailableCol(deltaCol,left+(n-1),refRow);result=left+n<=refCol?expand({top,left:newLeft,bottom,right}):null;}
if(deltaRow<0){const newBottom=this.getNextAvailableRow(deltaRow,refCol,bottom-(n-1));result=refRow<=bottom-n?expand({top,left,bottom:newBottom,right}):null;}
if(deltaRow>0){const newTop=this.getNextAvailableRow(deltaRow,refCol,top+(n-1));result=top+n<=refRow?expand({top:newTop,left,bottom,right}):null;}
result=result?reorderZone(result):result;if(result&&!isEqual(result,anchor.zone)){return this.processEvent({options:{scrollIntoView:true},mode:"updateAnchor",anchor:{zone:result,cell:{col:anchorCol,row:anchorRow}},});}}
const currentZone={top:anchorRow,bottom:anchorRow,left:anchorCol,right:anchorCol,};const zoneWithDelta=reorderZone({top:this.getNextAvailableRow(deltaRow,refCol,top),left:this.getNextAvailableCol(deltaCol,left,refRow),bottom:this.getNextAvailableRow(deltaRow,refCol,bottom),right:this.getNextAvailableCol(deltaCol,right,refRow),});result=expand(union(currentZone,zoneWithDelta));const newAnchor={zone:result,cell:{col:anchorCol,row:anchorRow}};return this.processEvent({anchor:newAnchor,mode:"updateAnchor",options:{scrollIntoView:true},});}
selectColumn(index,mode){const sheetId=this.getters.getActiveSheetId();const bottom=this.getters.getNumberRows(sheetId)-1;let zone={left:index,right:index,top:0,bottom};const top=this.getters.findFirstVisibleColRowIndex(sheetId,"ROW");let col,row;switch(mode){case"overrideSelection":case"newAnchor":col=index;row=top;break;case"updateAnchor":({col,row}=this.anchor.cell);zone=union(zone,{left:col,right:col,top,bottom});break;}
return this.processEvent({options:{scrollIntoView:false,unbounded:true,},anchor:{zone,cell:{col,row}},mode,});}
selectRow(index,mode){const sheetId=this.getters.getActiveSheetId();const right=this.getters.getNumberCols(sheetId)-1;let zone={top:index,bottom:index,left:0,right};const left=this.getters.findFirstVisibleColRowIndex(sheetId,"COL");let col,row;switch(mode){case"overrideSelection":case"newAnchor":col=left;row=index;break;case"updateAnchor":({col,row}=this.anchor.cell);zone=union(zone,{left,right,top:row,bottom:row});break;}
return this.processEvent({options:{scrollIntoView:false,unbounded:true,},anchor:{zone,cell:{col,row}},mode,});}
loopSelection(){const sheetId=this.getters.getActiveSheetId();const anchor=this.anchor;if(isEqual(this.anchor.zone,this.getters.getSheetZone(sheetId))){return this.modifyAnchor({...anchor,zone:positionToZone(anchor.cell)},"updateAnchor",{scrollIntoView:false,});}
const tableZone=this.getters.getContiguousZone(sheetId,anchor.zone);return!deepEquals(tableZone,anchor.zone)?this.modifyAnchor({...anchor,zone:tableZone},"updateAnchor",{scrollIntoView:false,}):this.selectAll();}
selectTableAroundSelection(){const sheetId=this.getters.getActiveSheetId();const tableZone=this.getters.getContiguousZone(sheetId,this.anchor.zone);return this.modifyAnchor({...this.anchor,zone:tableZone},"updateAnchor",{scrollIntoView:false,});}
selectAll(){const sheetId=this.getters.getActiveSheetId();const bottom=this.getters.getNumberRows(sheetId)-1;const right=this.getters.getNumberCols(sheetId)-1;const zone={left:0,top:0,bottom,right};return this.processEvent({mode:"overrideSelection",anchor:{zone,cell:this.anchor.cell},options:{scrollIntoView:false,},});}
isListening(owner){return this.stream.isListening(owner);}
processEvent(newAnchorEvent){const event={...newAnchorEvent,previousAnchor:deepCopy(this.anchor)};const commandResult=this.checkEventAnchorZone(event);if(commandResult!=="Success"){return new DispatchResult(commandResult);}
this.anchor=event.anchor;this.stream.send(event);return DispatchResult.Success;}
checkEventAnchorZone(event){return this.checkAnchorZone(event.anchor);}
checkAnchorZone(anchor){const{cell,zone}=anchor;if(!isInside(cell.col,cell.row,zone)){return"InvalidAnchorZone";}
const{left,right,top,bottom}=zone;const sheetId=this.getters.getActiveSheetId();const refCol=this.getters.findVisibleHeader(sheetId,"COL",left,right);const refRow=this.getters.findVisibleHeader(sheetId,"ROW",top,bottom);if(refRow===undefined||refCol===undefined){return"SelectionOutOfBound";}
return"Success";}
checkAnchorZoneOrThrow(anchor){const result=this.checkAnchorZone(anchor);if(result==="InvalidAnchorZone"){throw new Error(_t("The provided anchor is invalid. The cell must be part of the zone."));}}
getNextAvailablePosition(direction,step=1){const{col,row}=this.anchor.cell;const delta=this.deltaToTarget({col,row},direction,step);return{col:this.getNextAvailableCol(delta[0],col,row),row:this.getNextAvailableRow(delta[1],col,row),};}
getNextAvailableCol(delta,colIndex,rowIndex){const sheetId=this.getters.getActiveSheetId();const position={col:colIndex,row:rowIndex};const isInPositionMerge=(nextCol)=>this.getters.isInSameMerge(sheetId,colIndex,rowIndex,nextCol,rowIndex);return this.getNextAvailableHeader(delta,"COL",colIndex,position,isInPositionMerge);}
getNextAvailableRow(delta,colIndex,rowIndex){const sheetId=this.getters.getActiveSheetId();const position={col:colIndex,row:rowIndex};const isInPositionMerge=(nextRow)=>this.getters.isInSameMerge(sheetId,colIndex,rowIndex,colIndex,nextRow);return this.getNextAvailableHeader(delta,"ROW",rowIndex,position,isInPositionMerge);}
getNextAvailableHeader(delta,dimension,startingHeaderIndex,position,isInPositionMerge){const sheetId=this.getters.getActiveSheetId();if(delta===0){return startingHeaderIndex;}
const step=Math.sign(delta);let header=startingHeaderIndex+delta;while(isInPositionMerge(header)){header+=step;}
while(this.getters.isHeaderHidden(sheetId,dimension,header)){header+=step;}
const outOfBound=header<0||header>this.getters.getNumberHeaders(sheetId,dimension)-1;if(outOfBound){if(this.getters.isHeaderHidden(sheetId,dimension,startingHeaderIndex)){return this.getNextAvailableHeader(-step,dimension,startingHeaderIndex,position,isInPositionMerge);}
else{return startingHeaderIndex;}}
return header;}
getReferencePosition(){const sheetId=this.getters.getActiveSheetId();const anchor=this.anchor;const{left,right,top,bottom}=anchor.zone;const{col:anchorCol,row:anchorRow}=anchor.cell;return{col:this.getters.isColHidden(sheetId,anchorCol)?this.getters.findVisibleHeader(sheetId,"COL",left,right)||anchorCol:anchorCol,row:this.getters.isRowHidden(sheetId,anchorRow)?this.getters.findVisibleHeader(sheetId,"ROW",top,bottom)||anchorRow:anchorRow,};}
deltaToTarget(position,direction,step){switch(direction){case"up":return step!=="end"?[0,-step]:[0,this.getEndOfCluster(position,"rows",-1)-position.row];case"down":return step!=="end"?[0,step]:[0,this.getEndOfCluster(position,"rows",1)-position.row];case"left":return step!=="end"?[-step,0]:[this.getEndOfCluster(position,"cols",-1)-position.col,0];case"right":return step!=="end"?[step,0]:[this.getEndOfCluster(position,"cols",1)-position.col,0];}}
getStartingPosition(direction){let{col,row}=this.getPosition();const zone=this.anchor.zone;switch(direction){case"down":case"up":row=row===zone.top?zone.bottom:zone.top;break;case"left":case"right":col=col===zone.right?zone.left:zone.right;break;}
return{col,row};}
getEndOfCluster(startPosition,dim,dir){const sheetId=this.getters.getActiveSheetId();let currentPosition=startPosition;const nextCellPosition=this.getNextCellPosition(startPosition,dim,dir);let mode=!this.isCellSkippableInCluster({...currentPosition,sheetId})&&!this.isCellSkippableInCluster({...nextCellPosition,sheetId})?"endOfCluster":"nextCluster";while(true){const nextCellPosition=this.getNextCellPosition(currentPosition,dim,dir);if(currentPosition.col===nextCellPosition.col&&currentPosition.row===nextCellPosition.row){break;}
const isNextCellEmpty=this.isCellSkippableInCluster({...nextCellPosition,sheetId});if(mode==="endOfCluster"&&isNextCellEmpty){break;}
else if(mode==="nextCluster"&&!isNextCellEmpty){currentPosition=nextCellPosition;break;}
currentPosition=nextCellPosition;}
return dim==="cols"?currentPosition.col:currentPosition.row;}
getNextCellPosition(currentPosition,dimension,direction){const dimOfInterest=dimension==="cols"?"col":"row";const startingPosition={...currentPosition};const nextCoord=dimension==="cols"?this.getNextAvailableCol(direction,startingPosition.col,startingPosition.row):this.getNextAvailableRow(direction,startingPosition.col,startingPosition.row);startingPosition[dimOfInterest]=nextCoord;return{col:startingPosition.col,row:startingPosition.row};}
getPosition(){return{...this.anchor.cell};}
isCellSkippableInCluster(position){const mainPosition=this.getters.getMainCellPosition(position);const cell=this.getters.getEvaluatedCell(mainPosition);return(cell.type===CellValueType.empty||(cell.type===CellValueType.text&&cell.value===""));}}
function createEmptyStructure(node){if(typeof node==="string"){return{};}
else if(typeof node==="number"){return[];}
throw new Error(`Cannot create new node`);}
class StateObserver{changes;commands=[];recordChanges(callback){this.changes=[];this.commands=[];callback();return{changes:this.changes,commands:this.commands};}
addCommand(command){this.commands.push(command);}
addChange(...args){const val=args.pop();const root=args[0];let value=root;let key=args.at(-1);const pathLength=args.length-2;for(let pathIndex=1;pathIndex<=pathLength;pathIndex++){const p=args[pathIndex];if(value[p]===undefined){const nextPath=args[pathIndex+1];value[p]=createEmptyStructure(nextPath);}
value=value[p];}
if(value[key]===val){return;}
this.changes?.push({key,target:value,before:value[key],});if(val===undefined){delete value[key];}
else{value[key]=val;}}}
const catAxId=17781237;const secondaryCatAxId=17781238;const valAxId=88853993;const secondaryValAxId=88853994;function createChart(chart,chartSheetIndex,data){const namespaces=[["xmlns:r",RELATIONSHIP_NSR],["xmlns:a",DRAWING_NS_A],["xmlns:c",DRAWING_NS_C],];const chartShapeProperty=shapeProperty({backgroundColor:chart.data.backgroundColor,line:{color:"000000"},});let title=escapeXml``;if(chart.data.title?.text){const color=chart.data.title.color?toXlsxHexColor(chart.data.title.color):chart.data.fontColor;title=escapeXml`
      <c:title>
        ${insertText(chart.data.title.text, color, DEFAULT_CHART_FONT_SIZE, chart.data.title)}
        <c:overlay val="0" />
      </c:title>
    `;}
let plot=escapeXml``;switch(chart.data.type){case"bar":plot=addBarChart(chart.data);break;case"combo":plot=addComboChart(chart.data);break;case"line":plot=addLineChart(chart.data);break;case"scatter":plot=addScatterChart(chart.data);break;case"pie":plot=addDoughnutChart(chart.data,chartSheetIndex,data,{holeSize:0});break;}
let position="t";switch(chart.data.legendPosition){case"bottom":position="b";break;case"left":position="l";break;case"right":position="r";break;case"top":position="t";break;}
const fontColor=chart.data.fontColor;const xml=escapeXml`
    <c:chartSpace ${formatAttributes(namespaces)}>
      <c:roundedCorners val="0" />
      <!-- <manualLayout/> to manually position the chart in the figure container -->
      ${chartShapeProperty}
      <c:chart>
        ${title}
        <c:autoTitleDeleted val="0" />
        <c:plotArea>
          <!-- how the chart element is placed on the chart -->
          <c:layout />
          ${plot}
          ${shapeProperty({ backgroundColor: chart.data.backgroundColor })}
        </c:plotArea>
        ${addLegend(position, fontColor)}
      </c:chart>
    </c:chartSpace>
  `;return parseXML(xml);}
function shapeProperty(params){return escapeXml`
    <c:spPr>
      ${params.backgroundColor ? solidFill(params.backgroundColor) : ""}
      ${params.line ? lineAttributes(params.line) : ""}
    </c:spPr>
  `;}
function solidFill(color){return escapeXml`
    <a:solidFill>
      <a:srgbClr val="${color}"/>
    </a:solidFill>
  `;}
function lineAttributes(params){const attrs=[["cmpd","sng"]];if(params.width){attrs.push(["w",convertDotValueToEMU(params.width)]);}
const lineStyle=params.style?escapeXml`<a:prstDash val="${params.style}"/>`:"";return escapeXml`
    <a:ln ${formatAttributes(attrs)}>
      ${solidFill(params.color)}
      ${lineStyle}
    </a:ln>
  `;}
function insertText(text,fontColor="000000",fontsize=DEFAULT_CHART_FONT_SIZE,style={}){return escapeXml`
    <c:tx>
      <c:rich>
        <a:bodyPr />
        <a:lstStyle />
        <a:p>
          <a:pPr lvl="0">
            <a:defRPr b="${style?.bold ? 1 : 0}" i="${style?.italic ? 1 : 0}">
              ${solidFill(fontColor)}
              <a:latin typeface="+mn-lt"/>
            </a:defRPr>
          </a:pPr>
          <a:r> <!-- Runs -->
            <a:rPr b="${style?.bold ? 1 : 0}" i="${style?.italic ? 1 : 0}" sz="${fontsize * 100}"/>
            <a:t>${text}</a:t>
          </a:r>
        </a:p>
      </c:rich>
    </c:tx>
  `;}
function insertTextProperties(fontsize=12,fontColor="000000",bold=false,italic=false){const defPropertiesAttributes=[["b",bold?"1":"0"],["i",italic?"1":"0"],["sz",fontsize*100],];return escapeXml`
    <c:txPr>
      <a:bodyPr/>
      <a:lstStyle/>
      <a:p>
        <a:pPr lvl="0">
          <a:defRPr ${formatAttributes(defPropertiesAttributes)}>
            ${solidFill(fontColor)}
            <a:latin typeface="+mn-lt"/>
          </a:defRPr>
        </a:pPr>
      </a:p>
    </c:txPr>
  `;}
function extractDataSetLabel(label){if(!label){return escapeXml``;}
if("text"in label&&label.text){return escapeXml`
      <c:tx><c:v>${label.text}</c:v></c:tx>
    `;}
if("reference"in label&&label.reference){return escapeXml`
      <c:tx>
      ${stringRef(label.reference)}
      </c:tx>
    `;}
return escapeXml``;}
function addBarChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({backgroundColor:color,line:{color},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        ${extractDataSetLabel(dataset.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml /*xml*/ `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""} <!-- x-coordinate values -->
        <c:val> <!-- x-coordinate values -->
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `;if(dataset.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
const grouping=chart.stacked?"stacked":"clustered";const overlap=chart.stacked?100:-20;return escapeXml`
  ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:barChart><c:barDir val="col"/><c:grouping val="${grouping}"/><c:overlap val="${overlap}"/><c:gapWidth val="70"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:barChart>${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
  ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:barChart><c:barDir val="col"/><c:grouping val="${grouping}"/><c:overlap val="${overlap}"/><c:gapWidth val="70"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${catAxId + 1}"/><c:axId val="${valAxId + 1}"/></c:barChart>${addAx("b","c:catAx",catAxId+1,valAxId+1,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("r","c:valAx",valAxId+1,catAxId+1,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}`;}
function addComboChart(chart){const dataSets=chart.dataSets;const dataSetsColors=dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(dataSets.length,dataSetsColors);let dataSet=dataSets[0];const firstColor=toXlsxHexColor(colors.next());const useRightAxisForBarSerie=dataSet.rightYAxis??false;const barDataSetNode=escapeXml`
    <c:ser>
      <c:idx val="0"/>
      <c:order val="0"/>
      ${extractDataSetLabel(dataSet.label)}
      ${shapeProperty({
        backgroundColor: firstColor,
        line: { color: firstColor },
    })}
      ${chart.labelRange ? escapeXml /*xml*/ `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""}
      <!-- x-coordinate values -->
      <c:val>
        ${numberRef(dataSet.range)}
      </c:val>
    </c:ser>
  `;const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(let dsIndex=1;dsIndex<dataSets.length;dsIndex++){dataSet=dataSets[dsIndex];const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({backgroundColor:color,line:{color},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${dataShapeProperty}
        </c:marker>
        ${extractDataSetLabel(dataSet.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""}
        <!-- x-coordinate values -->
        <c:val>
          ${numberRef(dataSet.range)}
        </c:val>
      </c:ser>
    `;if(dataSet.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
const overlap=chart.stacked?100:-20;return escapeXml`
    <c:barChart>
      <c:barDir val="col"/>
      <c:grouping val="clustered"/>
      <c:overlap val="${overlap}"/>
      <c:gapWidth val="70"/>
      <!-- each data marker in the series does not have a different color -->
      <c:varyColors val="0"/>
      ${barDataSetNode}
      <c:axId val="${useRightAxisForBarSerie ? secondaryCatAxId : catAxId}" />
      <c:axId val="${useRightAxisForBarSerie ? secondaryValAxId : valAxId}" />
    </c:barChart>
    ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="standard"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:lineChart>`
        : ""}
    ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="standard"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${secondaryCatAxId}"/><c:axId val="${secondaryValAxId}"/></c:lineChart>`
        : ""}
    ${!useRightAxisForBarSerie || leftDataSetsNodes.length
        ? escapeXml /*xml*/ `
${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
    ${useRightAxisForBarSerie || rightDataSetsNodes.length
        ? escapeXml /*xml*/ `
${addAx("b","c:catAx",secondaryCatAxId,secondaryValAxId,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length||!useRightAxisForBarSerie?1:0)}
${addAx("r","c:valAx",secondaryValAxId,secondaryCatAxId,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}
  `;}
function addLineChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({line:{width:2.5,style:"solid",color,},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${shapeProperty({ backgroundColor: color, line: { color } })}
        </c:marker>
        ${extractDataSetLabel(dataset.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""} <!-- x-coordinate values -->
        <c:val> <!-- x-coordinate values -->
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `;if(dataset.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
const grouping=chart.stacked?"stacked":"standard";return escapeXml`
    ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="${grouping}"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:lineChart>${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
    ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="${grouping}"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${catAxId + 1}"/><c:axId val="${valAxId + 1}"/></c:lineChart>${addAx("b","c:catAx",catAxId+1,valAxId+1,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("r","c:valAx",valAxId+1,catAxId+1,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}
  `;}
function addScatterChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:spPr>
          <a:ln w="19050" cap="rnd">
            <a:noFill/>
            <a:round/>
          </a:ln>
          <a:effectLst/>
        </c:spPr>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${shapeProperty({ backgroundColor: color, line: { color } })}
        </c:marker>
        ${extractDataSetLabel(dataset.label)}
        ${chart.labelRange
            ? escapeXml /*xml*/ `<c:xVal><!--x-coordinate values-->${numberRef(chart.labelRange)}</c:xVal>`
            : ""}
        <c:yVal> <!-- y-coordinate values -->
          ${numberRef(dataset.range)}
        </c:yVal>
      </c:ser>
    `;if(dataset.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
return escapeXml`
  ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:scatterChart><!--each data marker in the series does not have a different color--><c:varyColors val="0"/><c:scatterStyle val="lineMarker"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:scatterChart>${addAx("b","c:valAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
  ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:scatterChart><!--each data marker in the series does not have a different color--><c:varyColors val="0"/><c:scatterStyle val="lineMarker"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${catAxId + 1}"/><c:axId val="${valAxId + 1}"/></c:scatterChart>${addAx("b","c:valAx",catAxId+1,valAxId+1,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("r","c:valAx",valAxId+1,catAxId+1,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}`;}
function addDoughnutChart(chart,chartSheetIndex,data,{holeSize}={holeSize:50}){const maxLength=largeMax(chart.dataSets.map((ds)=>getRangeSize(ds.range,chartSheetIndex,data)));const colors=new ColorGenerator(maxLength);const doughnutColors=range(0,maxLength).map(()=>toXlsxHexColor(colors.next()));const dataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets).reverse()){const dsSize=getRangeSize(dataset.range,chartSheetIndex,data);const dataPoints=[];for(const index of range(0,dsSize)){const pointShapeProperty=shapeProperty({backgroundColor:doughnutColors[index],line:{color:"FFFFFF",width:1.5},});dataPoints.push(escapeXml`
        <c:dPt>
          <c:idx val="${index}"/>
          ${pointShapeProperty}
        </c:dPt>
      `);}
dataSetsNodes.push(escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        ${extractDataSetLabel(dataset.label)}
        ${joinXmlNodes(dataPoints)}
        ${insertDataLabels({ showLeaderLines: true })}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""}
        <c:val>
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `);}
return escapeXml`
    <c:doughnutChart>
      <c:varyColors val="1" />
      <c:holeSize val="${holeSize}" />
      ${insertDataLabels()}
      ${joinXmlNodes(dataSetsNodes)}
    </c:doughnutChart>
  `;}
function insertDataLabels({showLeaderLines}={showLeaderLines:false}){return escapeXml`
    <dLbls>
      <c:showLegendKey val="0"/>
      <c:showVal val="0"/>
      <c:showCatName val="0"/>
      <c:showSerName val="0"/>
      <c:showPercent val="0"/>
      <c:showBubbleSize val="0"/>
      <c:showLeaderLines val="${showLeaderLines ? "1" : "0"}"/>
    </dLbls>
  `;}
function addAx(position,axisName,axId,crossAxId,title,defaultFontColor,deleteAxis=0){const color=title?.color?toXlsxHexColor(title.color):defaultFontColor;return escapeXml`
    <${axisName}>
      <c:axId val="${axId}"/>
      <c:crossAx val="${crossAxId}"/> <!-- reference to the other axe of the chart -->
      <c:crosses val="${position === "b" || position === "l" ? "min" : "max"}"/>
      <c:delete val="${deleteAxis}"/> <!-- by default, axis are not displayed -->
      <c:scaling>
        <c:orientation  val="minMax" />
      </c:scaling>
      <c:axPos val="${position}" />
      ${insertMajorGridLines()}
      <c:majorTickMark val="out" />
      <c:minorTickMark val="none" />
      <c:numFmt formatCode="General" sourceLinked="1" />
      <c:title>
        ${insertText(title?.text ?? "", color, 10, title)}
      </c:title>
      ${insertTextProperties(10, defaultFontColor)}
    </${axisName}>
    <!-- <tickLblPos/> omitted -->
  `;}
function addLegend(position,fontColor){return escapeXml`
    <c:legend>
      <c:legendPos val="${position}"/>
      <c:overlay val="0"/>
      ${insertTextProperties(10, fontColor)}
    </c:legend>
  `;}
function insertMajorGridLines(color="B7B7B7"){return escapeXml`
    <c:majorGridlines>
      ${shapeProperty({ line: { color } })}
    </c:majorGridlines>
  `;}
function stringRef(reference){return escapeXml`
    <c:strRef>
      <c:f>${reference}</c:f>
    </c:strRef>
  `;}
function numberRef(reference){return escapeXml`
    <c:numRef>
      <c:f>${reference}</c:f>
      <c:numCache />
    </c:numRef>
  `;}
function addFormula(cell){const formula=cell.content;if(!formula){return{attrs:[],node:escapeXml``};}
const type=getCellType(cell.value);if(type===undefined){return{attrs:[],node:escapeXml``};}
const attrs=[["t",type]];const XlsxFormula=adaptFormulaToExcel(formula);const node=escapeXml`<f>${XlsxFormula}</f><v>${cell.value}</v>`;return{attrs,node};}
function addContent(content,sharedStrings,forceString=false){let value=content;const attrs=[];const clearValue=value.trim().toUpperCase();if(!forceString&&["TRUE","FALSE"].includes(clearValue)){value=clearValue==="TRUE"?"1":"0";attrs.push(["t","b"]);}
else if(forceString||!isNumber(value,DEFAULT_LOCALE)){value=pushElement(content,sharedStrings);attrs.push(["t","s"]);}
return{attrs,node:escapeXml`<v>${value}</v>`};}
function adaptFormulaToExcel(formulaText){if(formulaText[0]==="="){formulaText=formulaText.slice(1);}
let ast;try{ast=parse(formulaText);}
catch(error){return formulaText;}
ast=convertAstNodes(ast,"STRING",convertDateFormat);ast=convertAstNodes(ast,"FUNCALL",(ast)=>{ast={...ast,value:ast.value.toUpperCase()};ast=prependNonRetrocompatibleFunction(ast);ast=addMissingRequiredArgs(ast);return ast;});return ast?astToFormula(ast):formulaText;}
function addMissingRequiredArgs(ast){const formulaName=ast.value.toUpperCase();const args=ast.args;const exportDefaultArgs=FORCE_DEFAULT_ARGS_FUNCTIONS[formulaName];if(exportDefaultArgs){const requiredArgs=functionRegistry.content[formulaName].args.filter((el)=>!el.optional);const diffArgs=requiredArgs.length-ast.args.length;if(diffArgs){for(let i=ast.args.length;i<requiredArgs.length;i++){const currentDefaultArg=exportDefaultArgs[i-diffArgs];args.push({type:currentDefaultArg.type,value:currentDefaultArg.value});}}}
return{...ast,args};}
function prependNonRetrocompatibleFunction(ast){const formulaName=ast.value.toUpperCase();return{...ast,value:NON_RETROCOMPATIBLE_FUNCTIONS.includes(formulaName)?`_xlfn.${formulaName}`:formulaName,};}
function convertDateFormat(ast){const value=ast.value.replace(new RegExp('"',"g"),"");const internalDate=parseDateTime(value,DEFAULT_LOCALE);if(internalDate){let format=[];if(mdyDateRegexp.test(value)||ymdDateRegexp.test(value)){format.push("yyyy-mm-dd");}
if(timeRegexp.test(value)){format.push("hh:mm:ss");}
return{...ast,value:formatValue(internalDate.value,{format:format.join(" "),locale:DEFAULT_LOCALE}),};}
else{return{...ast,value:ast.value.replace(/\\"/g,`""`)};}}
function addConditionalFormatting(dxfs,conditionalFormats){const cfNodes=[];for(const cf of conditionalFormats){switch(cf.rule.type){case"CellIsRule":cfNodes.push(addCellIsRule(cf,cf.rule,dxfs));break;case"ColorScaleRule":cfNodes.push(addColorScaleRule(cf,cf.rule));break;case"IconSetRule":cfNodes.push(addIconSetRule(cf,cf.rule));break;default:console.warn(`Conditional formatting ${cf.rule.type} not implemented`);break;}}
return cfNodes;}
function addCellIsRule(cf,rule,dxfs){const ruleAttributes=commonCfAttributes(cf);const operator=convertOperator(rule.operator);ruleAttributes.push(...cellRuleTypeAttributes(rule),["operator",operator]);const formulas=cellRuleFormula(cf.ranges,rule).map((formula)=>escapeXml`<formula>${formula}</formula>`);const dxf={font:{color:{rgb:rule.style.textColor},bold:rule.style.bold,italic:rule.style.italic,strike:rule.style.strikethrough,underline:rule.style.underline,},};if(rule.style.fillColor){dxf.fill={fgColor:{rgb:rule.style.fillColor}};}
ruleAttributes.push(["dxfId",pushElement(dxf,dxfs)]);return escapeXml`
    <conditionalFormatting sqref="${cf.ranges.join(" ")}">
      <cfRule ${formatAttributes(ruleAttributes)}>
        ${joinXmlNodes(formulas)}
      </cfRule>
    </conditionalFormatting>
  `;}
function cellRuleFormula(ranges,rule){const firstCell=ranges[0].split(":")[0];const values=rule.values;switch(rule.operator){case"ContainsText":return[`NOT(ISERROR(SEARCH("${values[0]}",${firstCell})))`];case"NotContains":return[`ISERROR(SEARCH("${values[0]}",${firstCell}))`];case"BeginsWith":return[`LEFT(${firstCell},LEN("${values[0]}"))="${values[0]}"`];case"EndsWith":return[`RIGHT(${firstCell},LEN("${values[0]}"))="${values[0]}"`];case"IsEmpty":return[`LEN(TRIM(${firstCell}))=0`];case"IsNotEmpty":return[`LEN(TRIM(${firstCell}))>0`];case"Equal":case"NotEqual":case"GreaterThan":case"GreaterThanOrEqual":case"LessThan":case"LessThanOrEqual":return[values[0]];case"Between":case"NotBetween":return[values[0],values[1]];}}
function cellRuleTypeAttributes(rule){const operator=convertOperator(rule.operator);switch(rule.operator){case"ContainsText":case"NotContains":case"BeginsWith":case"EndsWith":return[["type",operator],["text",rule.values[0]],];case"IsEmpty":case"IsNotEmpty":return[["type",operator]];case"Equal":case"NotEqual":case"GreaterThan":case"GreaterThanOrEqual":case"LessThan":case"LessThanOrEqual":case"Between":case"NotBetween":return[["type","cellIs"]];}}
function addColorScaleRule(cf,rule){const ruleAttributes=commonCfAttributes(cf);ruleAttributes.push(["type","colorScale"]);const conditionalFormats=[];for(const range of cf.ranges){const cfValueObject=[];const colors=[];let canExport=true;for(let position of["minimum","midpoint","maximum"]){const threshold=rule[position];if(!threshold){continue;}
if(threshold.type==="formula"){canExport=false;continue;}
cfValueObject.push(thresholdAttributes(threshold,position));colors.push([["rgb",toXlsxHexColor(colorNumberString(threshold.color))]]);}
if(!canExport){console.warn("Conditional formats with formula rules are not supported at the moment. The rule is therefore skipped.");continue;}
const cfValueObjectNodes=cfValueObject.map((attrs)=>escapeXml`<cfvo ${formatAttributes(attrs)}/>`);const cfColorNodes=colors.map((attrs)=>escapeXml`<color ${formatAttributes(attrs)}/>`);conditionalFormats.push(escapeXml`
      <conditionalFormatting sqref="${range}">
        <cfRule ${formatAttributes(ruleAttributes)}>
          <colorScale>
            ${joinXmlNodes(cfValueObjectNodes)}
            ${joinXmlNodes(cfColorNodes)}
          </colorScale>
        </cfRule>
      </conditionalFormatting>
    `);}
return joinXmlNodes(conditionalFormats);}
function addIconSetRule(cf,rule){const ruleAttributes=commonCfAttributes(cf);ruleAttributes.push(["type","iconSet"]);const conditionalFormats=[];for(const range of cf.ranges){const cfValueObject=[[["type","percent"],["val",0],],];let canExport=true;for(let position of["lowerInflectionPoint","upperInflectionPoint"]){if(rule[position].type==="formula"){canExport=false;continue;}
const threshold=rule[position];cfValueObject.push([...thresholdAttributes(threshold,position),["gte",threshold.operator==="ge"?"1":"0"],]);}
if(!canExport){console.warn("Conditional formats with formula rules are not supported at the moment. The rule is therefore skipped.");continue;}
const cfValueObjectNodes=cfValueObject.map((attrs)=>escapeXml`<cfvo ${formatAttributes(attrs)} />`);conditionalFormats.push(escapeXml`
      <conditionalFormatting sqref="${range}">
        <cfRule ${formatAttributes(ruleAttributes)}>
          <iconSet iconSet="${getIconSet(rule.icons)}">
            ${joinXmlNodes(cfValueObjectNodes)}
          </iconSet>
        </cfRule>
      </conditionalFormatting>
    `);}
return joinXmlNodes(conditionalFormats);}
function commonCfAttributes(cf){return[["priority",1],["stopIfTrue",cf.stopIfTrue?1:0],];}
function getIconSet(iconSet){return XLSX_ICONSET_MAP[Object.keys(XLSX_ICONSET_MAP).find((key)=>iconSet.upper.toLowerCase().startsWith(key))||"dots"];}
function thresholdAttributes(threshold,position){const type=getExcelThresholdType(threshold.type,position);const attrs=[["type",type]];if(type!=="min"&&type!=="max"){let val=threshold.value;if(type==="formula"){try{val=adaptFormulaToExcel(threshold.value);}
catch(error){val=threshold.value;}}
attrs.push(["val",val]);}
return attrs;}
function getExcelThresholdType(type,position){switch(type){case"value":return position==="minimum"?"min":"max";case"number":return"num";case"percentage":return"percent";default:return type;}}
function createDrawing(drawingRelIds,sheet,figures){const namespaces=[["xmlns:xdr",NAMESPACE.drawing],["xmlns:r",RELATIONSHIP_NSR],["xmlns:a",DRAWING_NS_A],["xmlns:c",DRAWING_NS_C],];const figuresNodes=[];for(const[figureIndex,figure]of Object.entries(figures)){switch(figure?.tag){case"chart":figuresNodes.push(createChartDrawing(figure,sheet,drawingRelIds[figureIndex]));break;case"image":figuresNodes.push(createImageDrawing(figure,sheet,drawingRelIds[figureIndex]));break;}}
const xml=escapeXml`
    <xdr:wsDr ${formatAttributes(namespaces)}>
      ${joinXmlNodes(figuresNodes)}
    </xdr:wsDr>
  `;return parseXML(xml);}
function convertFigureData(figure,sheet){const{x,y,height,width}=figure;const cols=Object.values(sheet.cols);const rows=Object.values(sheet.rows);const{index:colFrom,offset:offsetColFrom}=figureCoordinates(cols,x);const{index:colTo,offset:offsetColTo}=figureCoordinates(cols,x+width);const{index:rowFrom,offset:offsetRowFrom}=figureCoordinates(rows,y);const{index:rowTo,offset:offsetRowTo}=figureCoordinates(rows,y+height);return{from:{col:colFrom,colOff:offsetColFrom,row:rowFrom,rowOff:offsetRowFrom,},to:{col:colTo,colOff:offsetColTo,row:rowTo,rowOff:offsetRowTo,},};}
function figureCoordinates(headers,position){let currentPosition=0;for(const[headerIndex,header]of headers.entries()){if(currentPosition<=position&&position<currentPosition+header.size){return{index:headerIndex,offset:convertDotValueToEMU(position-currentPosition+FIGURE_BORDER_WIDTH),};}
else if(headerIndex<headers.length-1){currentPosition+=header.size;}}
return{index:headers.length-1,offset:convertDotValueToEMU(position-currentPosition+FIGURE_BORDER_WIDTH),};}
function createChartDrawing(figure,sheet,chartRelId){const{from,to}=convertFigureData(figure,sheet);const chartId=convertChartId(figure.id);const cNvPrAttrs=[["id",chartId],["name",`Chart ${chartId}`],["title","Chart"],];return escapeXml`
    <xdr:twoCellAnchor>
      <xdr:from>
        <xdr:col>${from.col}</xdr:col>
        <xdr:colOff>${from.colOff}</xdr:colOff>
        <xdr:row>${from.row}</xdr:row>
        <xdr:rowOff>${from.rowOff}</xdr:rowOff>
      </xdr:from>
      <xdr:to>
        <xdr:col>${to.col}</xdr:col>
        <xdr:colOff>${to.colOff}</xdr:colOff>
        <xdr:row>${to.row}</xdr:row>
        <xdr:rowOff>${to.rowOff}</xdr:rowOff>
      </xdr:to>
      <xdr:graphicFrame>
        <xdr:nvGraphicFramePr>
          <xdr:cNvPr ${formatAttributes(cNvPrAttrs)} />
          <xdr:cNvGraphicFramePr />
        </xdr:nvGraphicFramePr>
        <xdr:xfrm>
          <a:off x="0" y="0"/>
          <a:ext cx="0" cy="0"/>
        </xdr:xfrm>
        <a:graphic>
          <a:graphicData uri="${DRAWING_NS_C}">
            <c:chart r:id="${chartRelId}" />
          </a:graphicData>
        </a:graphic>
      </xdr:graphicFrame>
      <xdr:clientData fLocksWithSheet="0"/>
    </xdr:twoCellAnchor>
  `;}
function createImageDrawing(figure,sheet,imageRelId){const{from,to}=convertFigureData(figure,sheet);const imageId=convertImageId(figure.id);const cNvPrAttrs=[["id",imageId],["name",`Image ${imageId}`],["title","Image"],];const cx=convertDotValueToEMU(figure.width);const cy=convertDotValueToEMU(figure.height);return escapeXml`
    <xdr:twoCellAnchor editAs="oneCell">
      <xdr:from>
        <xdr:col>${from.col}</xdr:col>
        <xdr:colOff>${from.colOff}</xdr:colOff>
        <xdr:row>${from.row}</xdr:row>
        <xdr:rowOff>${from.rowOff}</xdr:rowOff>
      </xdr:from>
      <xdr:to>
        <xdr:col>${to.col}</xdr:col>
        <xdr:colOff>${to.colOff}</xdr:colOff>
        <xdr:row>${to.row}</xdr:row>
        <xdr:rowOff>${to.rowOff}</xdr:rowOff>
      </xdr:to>
      <xdr:pic>
        <xdr:nvPicPr>
          <xdr:cNvPr ${formatAttributes(cNvPrAttrs)}/>
          <xdr:cNvPicPr preferRelativeResize="0"/>
        </xdr:nvPicPr>
        <xdr:blipFill>
          <a:blip cstate="print" r:embed="${imageRelId}"/>
          <a:stretch>
            <a:fillRect/>
          </a:stretch>
        </xdr:blipFill>
        <xdr:spPr>
          <a:xfrm>
            <a:ext cx="${cx}" cy="${cy}" />
          </a:xfrm>
          <a:prstGeom prst="rect">
            <a:avLst/>
          </a:prstGeom>
          <a:noFill/>
        </xdr:spPr>
      </xdr:pic>
      <xdr:clientData fLocksWithSheet="0"/>
    </xdr:twoCellAnchor>
  `;}
function addNumberFormats(numFmts){const numFmtNodes=[];for(let[index,numFmt]of Object.entries(numFmts)){const numFmtAttrs=[["numFmtId",parseInt(index)+FIRST_NUMFMT_ID],["formatCode",numFmt.format],];numFmtNodes.push(escapeXml`
      <numFmt ${formatAttributes(numFmtAttrs)}/>
    `);}
return escapeXml`
    <numFmts count="${numFmts.length}">
      ${joinXmlNodes(numFmtNodes)}
    </numFmts>
  `;}
function addFont(font){if(isObjectEmptyRecursive(font)){return escapeXml``;}
return escapeXml`
    <font>
      ${font.bold ? escapeXml /*xml*/ `<b/>` : ""}
      ${font.italic ? escapeXml /*xml*/ `<i/>` : ""}
      ${font.underline ? escapeXml /*xml*/ `<u/>` : ""}
      ${font.strike ? escapeXml /*xml*/ `<strike/>` : ""}
      ${font.size ? escapeXml /*xml*/ `<sz val="${font.size}"/>` : ""}
      ${font.color && font.color.rgb
        ? escapeXml /*xml*/ `<color rgb="${toXlsxHexColor(font.color.rgb)}"/>`
        : ""}
      ${font.name ? escapeXml /*xml*/ `<name val="${font.name}"/>` : ""}
    </font>
  `;}
function addFonts(fonts){return escapeXml`
    <fonts count="${fonts.length}">
      ${joinXmlNodes(Object.values(fonts).map(addFont))}
    </fonts>
  `;}
function addFills(fills){const fillNodes=[];for(let fill of Object.values(fills)){if(fill.reservedAttribute!==undefined){fillNodes.push(escapeXml`
        <fill>
          <patternFill patternType="${fill.reservedAttribute}" />
        </fill>
      `);}
else{fillNodes.push(escapeXml`
        <fill>
          <patternFill patternType="solid">
            <fgColor rgb="${toXlsxHexColor(fill.fgColor.rgb)}" />
            <bgColor indexed="64" />
          </patternFill>
        </fill>
      `);}}
return escapeXml`
    <fills count="${fills.length}">
    ${joinXmlNodes(fillNodes)}
    </fills>
  `;}
function addBorders(borders){const borderNodes=[];for(let border of Object.values(borders)){borderNodes.push(escapeXml`
      <border>
        <left ${formatBorderAttribute(border["left"])}>
          ${addBorderColor(border["left"])}
        </left>
        <right ${formatBorderAttribute(border["right"])}>
          ${addBorderColor(border["right"])}
        </right>
        <top ${formatBorderAttribute(border["top"])}>
          ${addBorderColor(border["top"])}
        </top>
        <bottom ${formatBorderAttribute(border["bottom"])}>
          ${addBorderColor(border["bottom"])}
        </bottom>
        <diagonal ${formatBorderAttribute(border["diagonal"])}>
          ${addBorderColor(border["diagonal"])}
        </diagonal>
      </border>
    `);}
return escapeXml`
    <borders count="${borders.length}">
      ${joinXmlNodes(borderNodes)}
    </borders>
  `;}
function formatBorderAttribute(description){if(!description){return escapeXml``;}
return formatAttributes([["style",description.style]]);}
function addBorderColor(description){if(!description){return escapeXml``;}
return escapeXml`
    <color ${formatAttributes([["rgb", toXlsxHexColor(description.color.rgb)]])}/>
  `;}
function addStyles(styles){const styleNodes=[];for(let style of styles){const attributes=[["numFmtId",style.numFmtId],["fillId",style.fillId],["fontId",style.fontId],["borderId",style.borderId],];const alignAttrs=[];if(style.alignment&&style.alignment.vertical){alignAttrs.push(["vertical",style.alignment.vertical]);}
if(style.alignment&&style.alignment.horizontal){alignAttrs.push(["horizontal",style.alignment.horizontal]);}
if(style.alignment&&style.alignment.wrapText){alignAttrs.push(["wrapText","1"]);}
if(alignAttrs.length>0){attributes.push(["applyAlignment","1"]);styleNodes.push(escapeXml`<xf ${formatAttributes(attributes)}>${escapeXml /*xml*/ `<alignment ${formatAttributes(alignAttrs)}/>`}</xf>`);
        }
        else {
            styleNodes.push(escapeXml /*xml*/ `<xf ${formatAttributes(attributes)}/>`);
        }
    }
    return escapeXml /*xml*/ `<cellXfs count="${styles.length}">${joinXmlNodes(styleNodes)}</cellXfs>`;
}
/**
 * DXFS : Differential Formatting Records - Conditional formats
 */
function addCellWiseConditionalFormatting(dxfs // cell-wise CF
) {
    const dxfNodes = [];
    for (const dxf of dxfs) {
        let fontNode = escapeXml ``;
        if (dxf.font) {
            fontNode = addFont(dxf.font);
        }
        let fillNode = escapeXml ``;
        if (dxf.fill) {
            fillNode = escapeXml /*xml*/ `<fill><patternFill><bgColor rgb="${toXlsxHexColor(dxf.fill.fgColor.rgb)}"/></patternFill></fill>`;
        }
        dxfNodes.push(escapeXml /*xml*/ `<dxf>${fontNode}
${fillNode}</dxf>`);
    }
    return escapeXml /*xml*/ `<dxfs count="${dxfs.length}">${joinXmlNodes(dxfNodes)}</dxfs>`;
}

function createTable(table, tableId, sheetData) {
    const tableAttributes = [
        ["id", tableId],
        ["name", `Table${tableId}`],
        ["displayName", `Table${tableId}`],
        ["ref", table.range],
        ["headerRowCount", table.config.numberOfHeaders],
        ["totalsRowCount", table.config.totalRow ? 1 : 0],
        ["xmlns", NAMESPACE.table],
        ["xmlns:xr", NAMESPACE.revision],
        ["xmlns:xr3", NAMESPACE.revision3],
        ["xmlns:mc", NAMESPACE.markupCompatibility],
    ];
    const xml = escapeXml /*xml*/ `<table ${formatAttributes(tableAttributes)}>${table.config.hasFilters?addAutoFilter(table):""}
${addTableColumns(table,sheetData)}
${addTableStyle(table)}</table>`;
    return parseXML(xml);
}
function addAutoFilter(table) {
    const autoFilterAttributes = [["ref", table.range]];
    return escapeXml /*xml*/ `<autoFilter ${formatAttributes(autoFilterAttributes)}>${joinXmlNodes(addFilterColumns(table))}</autoFilter>`;
}
function addFilterColumns(table) {
    const columns = [];
    for (const filter of table.filters) {
        const colXml = escapeXml /*xml*/ `<filterColumn ${formatAttributes([["colId",filter.colId]])}>${addFilter(filter)}</filterColumn>`;
        columns.push(colXml);
    }
    return columns;
}
function addFilter(filter) {
    const filterValues = filter.displayedValues.map((val) => escapeXml /*xml*/ `<filter ${formatAttributes([["val",val]])}/>`);
    const filterAttributes = filter.displayBlanks ? [["blank", 1]] : [];
    return escapeXml /*xml*/ `<filters ${formatAttributes(filterAttributes)}>${joinXmlNodes(filterValues)}</filters>`;
}
function addTableColumns(table, sheetData) {
    const tableZone = toZone(table.range);
    const columns = [];
    for (const i of range(0, zoneToDimension(tableZone).numberOfCols)) {
        const colHeaderXc = toXC(tableZone.left + i, tableZone.top);
        const colName = sheetData.cells[colHeaderXc]?.content || `col${i}`;
        const colAttributes = [
            ["id", i + 1], // id cannot be 0
            ["name", colName],
        ];
        if (table.config.totalRow) {
            // Note: To be 100% complete, we could also add a `totalsRowLabel` attribute for total strings, and a tag
            // `<totalsRowFormula>` for the formula of the total. But those doesn't seem to be mandatory for Excel.
            const colTotalXc = toXC(tableZone.left + i, tableZone.bottom);
            const colTotalContent = sheetData.cells[colTotalXc]?.content;
            if (colTotalContent?.startsWith("=")) {
                colAttributes.push(["totalsRowFunction", "custom"]);
            }
        }
        columns.push(escapeXml /*xml*/ `<tableColumn ${formatAttributes(colAttributes)}/>`);
    }
    return escapeXml /*xml*/ `<tableColumns ${formatAttributes([["count",columns.length]])}>${joinXmlNodes(columns)}</tableColumns>`;
}
function addTableStyle(table) {
    const tableStyleAttrs = [
        ["name", table.config.styleId],
        ["showFirstColumn", table.config.firstColumn ? 1 : 0],
        ["showLastColumn", table.config.lastColumn ? 1 : 0],
        ["showRowStripes", table.config.bandedRows ? 1 : 0],
        ["showColumnStripes", table.config.bandedColumns ? 1 : 0],
    ];
    return escapeXml /*xml*/ `<tableStyleInfo ${formatAttributes(tableStyleAttrs)}/>`;
}

function addColumns(cols) {
    if (!Object.values(cols).length) {
        return escapeXml ``;
    }
    const colNodes = [];
    for (let [id, col] of Object.entries(cols)) {
        // Always force our own col width
        const attributes = [
            ["min", parseInt(id) + 1],
            ["max", parseInt(id) + 1],
            ["width", convertWidthToExcel(col.size || DEFAULT_CELL_WIDTH)],
            ["customWidth", 1],
            ["hidden", col.isHidden ? 1 : 0],
        ];
        if (col.outlineLevel) {
            attributes.push(["outlineLevel", col.outlineLevel]);
        }
        if (col.collapsed) {
            attributes.push(["collapsed", 1]);
        }
        colNodes.push(escapeXml /*xml*/ `<col ${formatAttributes(attributes)}/>`);
    }
    return escapeXml /*xml*/ `<cols>${joinXmlNodes(colNodes)}</cols>`;
}
function addRows(construct, data, sheet) {
    const rowNodes = [];
    for (let r = 0; r < sheet.rowNumber; r++) {
        const rowAttrs = [["r", r + 1]];
        const row = sheet.rows[r] || {};
        if (row.size && row.size !== DEFAULT_CELL_HEIGHT) {
            rowAttrs.push(["ht", convertHeightToExcel(row.size)], ["customHeight", 1]);
        }
        if (row.isHidden) {
            rowAttrs.push(["hidden", 1]);
        }
        if (row.outlineLevel) {
            rowAttrs.push(["outlineLevel", row.outlineLevel]);
        }
        if (row.collapsed) {
            rowAttrs.push(["collapsed", 1]);
        }
        const cellNodes = [];
        for (let c = 0; c < sheet.colNumber; c++) {
            const xc = toXC(c, r);
            const cell = sheet.cells[xc];
            if (cell) {
                const attributes = [["r", xc]];
                // style
                const id = normalizeStyle(construct, extractStyle(cell, data));
                // don't add style if default
                if (id) {
                    attributes.push(["s", id]);
                }
                let additionalAttrs = [];
                let cellNode = escapeXml ``;
                // Either formula or static value inside the cell
                if (cell.isFormula) {
                    const res = addFormula(cell);
                    if (!res) {
                        continue;
                    }
                    ({ attrs: additionalAttrs, node: cellNode } = res);
                }
                else if (cell.content && isMarkdownLink(cell.content)) {
                    const { label } = parseMarkdownLink(cell.content);
                    ({ attrs: additionalAttrs, node: cellNode } = addContent(label, construct.sharedStrings));
                }
                else if (cell.content && cell.content !== "") {
                    const isTableHeader = isCellTableHeader(c, r, sheet);
                    const isTableTotal = isCellTableTotal(c, r, sheet);
                    const isPlainText = !!(cell.format && isTextFormat(data.formats[cell.format]));
                    ({ attrs: additionalAttrs, node: cellNode } = addContent(cell.content, construct.sharedStrings, isTableHeader || isTableTotal || isPlainText));
                }
                attributes.push(...additionalAttrs);
                // prettier-ignore
                cellNodes.push(escapeXml /*xml*/ `<c ${formatAttributes(attributes)}>${cellNode}</c>`);
            }
        }
        if (cellNodes.length ||
            row.size !== DEFAULT_CELL_HEIGHT ||
            row.isHidden ||
            row.outlineLevel ||
            row.collapsed) {
            rowNodes.push(escapeXml /*xml*/ `<row ${formatAttributes(rowAttrs)}>${joinXmlNodes(cellNodes)}</row>`);
        }
    }
    return escapeXml /*xml*/ `<sheetData>${joinXmlNodes(rowNodes)}</sheetData>`;
}
function isCellTableHeader(col, row, sheet) {
    return sheet.tables.some((table) => {
        const zone = toZone(table.range);
        const headerZone = { ...zone, bottom: zone.top };
        return isInside(col, row, headerZone);
    });
}
function isCellTableTotal(col, row, sheet) {
    return sheet.tables.some((table) => {
        if (!table.config.totalRow) {
            return false;
        }
        const zone = toZone(table.range);
        const totalZone = { ...zone, top: zone.bottom };
        return isInside(col, row, totalZone);
    });
}
function addHyperlinks(construct, data, sheetIndex) {
    const sheet = data.sheets[sheetIndex];
    const cells = sheet.cells;
    const linkNodes = [];
    for (const xc in cells) {
        const content = cells[xc]?.content;
        if (content && isMarkdownLink(content)) {
            const { label, url } = parseMarkdownLink(content);
            if (isSheetUrl(url)) {
                const sheetId = parseSheetUrl(url);
                const sheet = data.sheets.find((sheet) => sheet.id === sheetId);
                const position = sheet ? `${sheet.name}!A1` : CellErrorType.InvalidReference;
                const hyperlinkAttributes = [
                    ["display", label],
                    ["location", position],
                    ["ref", xc],
                ];
                linkNodes.push(escapeXml /*xml*/ `<hyperlink ${formatAttributes(hyperlinkAttributes)}/>`);
            }
            else {
                const linkRelId = addRelsToFile(construct.relsFiles, `xl/worksheets/_rels/sheet${sheetIndex}.xml.rels`, {
                    target: withHttps(url),
                    type: XLSX_RELATION_TYPE.hyperlink,
                    targetMode: "External",
                });
                const hyperlinkAttributes = [
                    ["r:id", linkRelId],
                    ["ref", xc],
                ];
                linkNodes.push(escapeXml /*xml*/ `<hyperlink ${formatAttributes(hyperlinkAttributes)}/>`);
            }
        }
    }
    if (!linkNodes.length) {
        return escapeXml ``;
    }
    return escapeXml /*xml*/ `<hyperlinks>${joinXmlNodes(linkNodes)}</hyperlinks>`;
}
function addMerges(merges) {
    if (merges.length) {
        const mergeNodes = merges.map((merge) => escapeXml /*xml*/ `<mergeCell ref="${merge}"/>`);
        return escapeXml /*xml*/ `<mergeCells count="${merges.length}">${joinXmlNodes(mergeNodes)}</mergeCells>`;
    }
    else
        return escapeXml ``;
}
function addSheetViews(sheet) {
    const panes = sheet.panes;
    let splitPanes = escapeXml /*xml*/ ``;
    if (panes && (panes.xSplit || panes.ySplit)) {
        const xc = toXC(panes.xSplit, panes.ySplit);
        //workbookViewId should be defined in the workbook file but it seems like Excel has a default behaviour.
        const xSplit = panes.xSplit ? escapeXml `xSplit="${panes.xSplit}"` : "";
        const ySplit = panes.ySplit ? escapeXml `ySplit="${panes.ySplit}"` : "";
        const topRight = panes.xSplit ? escapeXml `<selection pane="topRight"/>` : "";
        const bottomLeft = panes.ySplit ? escapeXml `<selection pane="bottomLeft"/>` : "";
        const bottomRight = panes.xSplit && panes.ySplit ? escapeXml `<selection pane="bottomRight"/>` : "";
        splitPanes = escapeXml /*xml*/ `<pane
${xSplit}
${ySplit}
topLeftCell="${xc}"
activePane="${panes.xSplit ? (panes.ySplit ? "bottomRight" : "topRight") : "bottomLeft"}"
state="frozen"/>${topRight}
${bottomLeft}
${bottomRight}`;
    }
    const sheetViewAttrs = [
        ["showGridLines", sheet.areGridLinesVisible ? 1 : 0],
        ["workbookViewId", 0],
    ];
    let sheetView = escapeXml /*xml*/ `<sheetViews><sheetView ${formatAttributes(sheetViewAttrs)}>${splitPanes}</sheetView></sheetViews>`;
    return sheetView;
}
function addSheetProperties(sheet) {
    if (!sheet.color) {
        return "";
    }
    let sheetView = escapeXml /*xml*/ `<sheetPr><tabColor ${formatAttributes([["rgb",toXlsxHexColor(sheet.color)]])}/></sheetPr>`;
    return sheetView;
}

/**
 * Return the spreadsheet data in the Office Open XML file format.
 * See ECMA-376 standard.
 * https://www.ecma-international.org/publications-and-standards/standards/ecma-376/
 */
function getXLSX(data) {
    data = fixLengthySheetNames(data);
    data = purgeSingleRowTables(data);
    const files = [];
    const construct = getDefaultXLSXStructure(data);
    files.push(createWorkbook(data, construct));
    files.push(...createWorksheets(data, construct));
    files.push(createStylesSheet(construct));
    files.push(createSharedStrings(construct.sharedStrings));
    files.push(...createRelsFiles(construct.relsFiles));
    files.push(createContentTypes(files));
    files.push(createRelRoot());
    return {
        name: `my_spreadsheet.xlsx`,
        files,
    };
}
function createWorkbook(data, construct) {
    const namespaces = [
        ["xmlns", NAMESPACE["workbook"]],
        ["xmlns:r", RELATIONSHIP_NSR],
    ];
    const sheetNodes = [];
    for (const [index, sheet] of Object.entries(data.sheets)) {
        const attributes = [
            ["state", sheet.isVisible ? "visible" : "hidden"],
            ["name", sheet.name],
            ["sheetId", parseInt(index) + 1],
            ["r:id", `rId${parseInt(index)+1}`],
        ];
        sheetNodes.push(escapeXml /*xml*/ `<sheet ${formatAttributes(attributes)}/>`);
        addRelsToFile(construct.relsFiles, "xl/_rels/workbook.xml.rels", {
            type: XLSX_RELATION_TYPE.sheet,
            target: `worksheets/sheet${index}.xml`,
        });
    }
    const xml = escapeXml /*xml*/ `<workbook ${formatAttributes(namespaces)}><sheets>${joinXmlNodes(sheetNodes)}</sheets></workbook>`;
    return createXMLFile(parseXML(xml), "xl/workbook.xml", "workbook");
}
function createWorksheets(data, construct) {
    const files = [];
    let currentTableIndex = 1;
    for (const [sheetIndex, sheet] of Object.entries(data.sheets)) {
        const namespaces = [
            ["xmlns", NAMESPACE["worksheet"]],
            ["xmlns:r", RELATIONSHIP_NSR],
        ];
        const sheetFormatAttributes = [
            ["defaultRowHeight", convertHeightToExcel(DEFAULT_CELL_HEIGHT)],
            ["defaultColWidth", convertWidthToExcel(DEFAULT_CELL_WIDTH)],
        ];
        const tablesNode = createTablesForSheet(sheet, sheetIndex, currentTableIndex, construct, files);
        currentTableIndex += sheet.tables.length;
        // Figures and Charts
        let drawingNode = escapeXml ``;
        const drawingRelIds = [];
        for (const chart of sheet.charts) {
            const xlsxChartId = convertChartId(chart.id);
            const chartRelId = addRelsToFile(construct.relsFiles, `xl/drawings/_rels/drawing${sheetIndex}.xml.rels`, {
                target: `../charts/chart${xlsxChartId}.xml`,
                type: XLSX_RELATION_TYPE.chart,
            });
            drawingRelIds.push(chartRelId);
            files.push(createXMLFile(createChart(chart, sheetIndex, data), `xl/charts/chart${xlsxChartId}.xml`, "chart"));
        }
        for (const image of sheet.images) {
            const mimeType = image.data.mimetype;
            if (mimeType === undefined)
                continue;
            const extension = IMAGE_MIMETYPE_TO_EXTENSION_MAPPING[mimeType];
            // only support exporting images with mimetypes specified in the mapping
            if (extension === undefined)
                continue;
            const xlsxImageId = convertImageId(image.id);
            let imageFileName = `image${xlsxImageId}.${extension}`;
            const imageRelId = addRelsToFile(construct.relsFiles, `xl/drawings/_rels/drawing${sheetIndex}.xml.rels`, {
                target: `../media/${imageFileName}`,
                type: XLSX_RELATION_TYPE.image,
            });
            drawingRelIds.push(imageRelId);
            files.push({
                path: `xl/media/${imageFileName}`,
                imageSrc: image.data.path,
            });
        }
        const drawings = [...sheet.charts, ...sheet.images];
        if (drawings.length) {
            const drawingRelId = addRelsToFile(construct.relsFiles, `xl/worksheets/_rels/sheet${sheetIndex}.xml.rels`, {
                target: `../drawings/drawing${sheetIndex}.xml`,
                type: XLSX_RELATION_TYPE.drawing,
            });
            files.push(createXMLFile(createDrawing(drawingRelIds, sheet, drawings), `xl/drawings/drawing${sheetIndex}.xml`, "drawing"));
            drawingNode = escapeXml /*xml*/ `<drawing r:id="${drawingRelId}"/>`;
        }
        const sheetXml = escapeXml /*xml*/ `<worksheet ${formatAttributes(namespaces)}>${addSheetProperties(sheet)}
${addSheetViews(sheet)}<sheetFormatPr ${formatAttributes(sheetFormatAttributes)}/>${addColumns(sheet.cols)}
${addRows(construct,data,sheet)}
${addMerges(sheet.merges)}
${joinXmlNodes(addConditionalFormatting(construct.dxfs,sheet.conditionalFormats))}
${addHyperlinks(construct,data,sheetIndex)}
${drawingNode}
${tablesNode}</worksheet>`;
        files.push(createXMLFile(parseXML(sheetXml), `xl/worksheets/sheet${sheetIndex}.xml`, "sheet"));
    }
    addRelsToFile(construct.relsFiles, "xl/_rels/workbook.xml.rels", {
        type: XLSX_RELATION_TYPE.sharedStrings,
        target: "sharedStrings.xml",
    });
    addRelsToFile(construct.relsFiles, "xl/_rels/workbook.xml.rels", {
        type: XLSX_RELATION_TYPE.styles,
        target: "styles.xml",
    });
    return files;
}
/**
 * Create xlsx files for each tables contained in the given sheet, and add them to the XLSXStructure ans XLSXExportFiles.
 *
 * Return an XML string that should be added in the sheet to link these table to the sheet.
 */
function createTablesForSheet(sheetData, sheetId, startingTableId, construct, files) {
    let currentTableId = startingTableId;
    if (!sheetData.tables.length)
        return new XMLString("");
    const sheetRelFile = `xl/worksheets/_rels/sheet${sheetId}.xml.rels`;
    const tableParts = [];
    for (const table of sheetData.tables) {
        const tableRelId = addRelsToFile(construct.relsFiles, sheetRelFile, {
            target: `../tables/table${currentTableId}.xml`,
            type: XLSX_RELATION_TYPE.table,
        });
        files.push(createXMLFile(createTable(table, currentTableId, sheetData), `xl/tables/table${currentTableId}.xml`, "table"));
        tableParts.push(escapeXml /*xml*/ `<tablePart r:id="${tableRelId}"/>`);
        currentTableId++;
    }
    return escapeXml /*xml*/ `<tableParts count="${sheetData.tables.length}">${joinXmlNodes(tableParts)}</tableParts>`;
}
function createStylesSheet(construct) {
    const namespaces = [
        ["xmlns", NAMESPACE["styleSheet"]],
        ["xmlns:r", RELATIONSHIP_NSR],
    ];
    const styleXml = escapeXml /*xml*/ `<styleSheet ${formatAttributes(namespaces)}>${addNumberFormats(construct.numFmts)}
${addFonts(construct.fonts)}
${addFills(construct.fills)}
${addBorders(construct.borders)}
${addStyles(construct.styles)}
${addCellWiseConditionalFormatting(construct.dxfs)}</styleSheet>`;
    return createXMLFile(parseXML(styleXml), "xl/styles.xml", "styles");
}
function createSharedStrings(strings) {
    const namespaces = [
        ["xmlns", NAMESPACE["sst"]],
        ["count", strings.length],
        ["uniqueCount", strings.length],
    ];
    const stringNodes = strings.map((string) => escapeXml /*xml*/ `<si><t>${string}</t></si>`);
    const xml = escapeXml /*xml*/ `<sst ${formatAttributes(namespaces)}>${joinXmlNodes(stringNodes)}</sst>`;
    return createXMLFile(parseXML(xml), "xl/sharedStrings.xml", "sharedStrings");
}
function createRelsFiles(relsFiles) {
    const XMLRelsFiles = [];
    for (const relFile of relsFiles) {
        const relationNodes = [];
        for (const rel of relFile.rels) {
            const attributes = [
                ["Id", rel.id],
                ["Target", rel.target],
                ["Type", rel.type],
            ];
            if (rel.targetMode) {
                attributes.push(["TargetMode", rel.targetMode]);
            }
            relationNodes.push(escapeXml /*xml*/ `<Relationship ${formatAttributes(attributes)}/>`);
        }
        const xml = escapeXml /*xml*/ `<Relationships xmlns="${NAMESPACE["Relationships"]}">${joinXmlNodes(relationNodes)}</Relationships>`;
        XMLRelsFiles.push(createXMLFile(parseXML(xml), relFile.path));
    }
    return XMLRelsFiles;
}
function createContentTypes(files) {
    const overrideNodes = [];
    // hard-code supported image mimetypes
    const imageDefaultNodes = Object.entries(IMAGE_MIMETYPE_TO_EXTENSION_MAPPING).map(([mimetype, extension]) => createDefaultXMLElement(extension, mimetype));
    for (const file of files) {
        if ("contentType" in file && file.contentType) {
            overrideNodes.push(createOverride("/" + file.path, CONTENT_TYPES[file.contentType]));
        }
    }
    const relsAttributes = [
        ["Extension", "rels"],
        ["ContentType", "application/vnd.openxmlformats-package.relationships+xml"],
    ];
    const xmlAttributes = [
        ["Extension", "xml"],
        ["ContentType", "application/xml"],
    ];
    const xml = escapeXml /*xml*/ `<Types xmlns="${NAMESPACE["Types"]}">${joinXmlNodes(Object.values(imageDefaultNodes))}<Default ${formatAttributes(relsAttributes)}/><Default ${formatAttributes(xmlAttributes)}/>${joinXmlNodes(overrideNodes)}</Types>`;
    return createXMLFile(parseXML(xml), "[Content_Types].xml");
}
function createRelRoot() {
    const attributes = [
        ["Id", "rId1"],
        ["Type", XLSX_RELATION_TYPE.document],
        ["Target", "xl/workbook.xml"],
    ];
    const xml = escapeXml /*xml*/ `<Relationships xmlns="${NAMESPACE["Relationships"]}"><Relationship ${formatAttributes(attributes)}/></Relationships>`;
    return createXMLFile(parseXML(xml), "_rels/.rels");
}
/**
 * Excel sheet names are maximum 31 characters while o-spreadsheet do not have this limit.
 * This method converts the sheet names to be within the 31 characters limit.
 * The cells/charts referencing this sheet will be updated accordingly.
 */
function fixLengthySheetNames(data) {
    const nameMapping = {};
    const newNames = new Set();
    for (const sheet of data.sheets) {
        let newName = sheet.name.slice(0, 31);
        let i = 1;
        while (newNames.has(newName)) {
            newName = newName.slice(0, 31 - String(i).length) + i++;
        }
        newNames.add(newName);
        if (newName !== sheet.name) {
            nameMapping[sheet.name] = newName;
            sheet.name = newName;
        }
    }
    if (!Object.keys(nameMapping).length) {
        return data;
    }
    const sheetWithNewNames = Object.keys(nameMapping).sort((a, b) => b.length - a.length);
    let stringifiedData = JSON.stringify(data);
    for (const sheetName of sheetWithNewNames) {
        const regex = new RegExp(`'?${escapeRegExp(sheetName)}'?!`, "g");
        stringifiedData = stringifiedData.replaceAll(regex, (match) => {
            const newName = nameMapping[sheetName];
            return match.replace(sheetName, newName);
        });
    }
    return JSON.parse(stringifiedData);
}
/** Excel files do not support tables with a single row the defined range
 * Since those tables are not really useful (no filtering/limited styling)
 * This function filters out all tables with a single row.
 */
function purgeSingleRowTables(data) {
    for (const sheet of data.sheets) {
        sheet.tables = sheet.tables.filter((table) => zoneToDimension(toZone(table.range)).numberOfRows > 1);
    }
    return data;
}

var Status;
(function (Status) {
    Status[Status["Ready"] = 0] = "Ready";
    Status[Status["Running"] = 1] = "Running";
    Status[Status["RunningCore"] = 2] = "RunningCore";
    Status[Status["Finalizing"] = 3] = "Finalizing";
})(Status || (Status = {}));
class Model extends EventBus {
    corePlugins = [];
    featurePlugins = [];
    statefulUIPlugins = [];
    coreViewsPlugins = [];
    range;
    session;
    /**
     * In a collaborative context, some commands can be replayed, we have to ensure
     * that these commands are not replayed on the UI plugins.
     */
    isReplayingCommand = false;
    /**
     * A plugin can draw some contents on the canvas. But even better: it can do
     * so multiple times.  The order of the render calls will determine a list of
     * "layers" (i.e., earlier calls will be obviously drawn below later calls).
     * This list simply keeps the renderers+layer information so the drawing code
     * can just iterate on it
     */
    renderers = {};
    /**
     * Internal status of the model. Important for command handling coordination
     */
    status = 0 /* Status.Ready */;
    /**
     * The config object contains some configuration flag and callbacks
     */
    config;
    corePluginConfig;
    uiPluginConfig;
    state;
    selection;
    /**
     * Getters are the main way the rest of the UI read data from the model. Also,
     * it is shared between all plugins, so they can also communicate with each
     * other.
     */
    getters;
    /**
     * Getters that are accessible from the core plugins. It's a subset of `getters`,
     * without the UI getters
     */
    coreGetters;
    uuidGenerator;
    handlers = [];
    uiHandlers = [];
    coreHandlers = [];
    constructor(data = {}, config = {}, stateUpdateMessages = [], uuidGenerator = new UuidGenerator(), verboseImport = false) {
        const start = performance.now();
        console.group("Model creation");
        super();
        setDefaultTranslationMethod();
        stateUpdateMessages = repairInitialMessages(data, stateUpdateMessages);
        const workbookData = load(data, verboseImport);
        this.state = new StateObserver();
        this.uuidGenerator = uuidGenerator;
        this.config = this.setupConfig(config);
        this.session = this.setupSession(workbookData.revisionId);
        this.coreGetters = {};
        this.range = new RangeAdapter(this.coreGetters);
        this.coreGetters.getRangeString = this.range.getRangeString.bind(this.range);
        this.coreGetters.getRangeFromSheetXC = this.range.getRangeFromSheetXC.bind(this.range);
        this.coreGetters.createAdaptedRanges = this.range.createAdaptedRanges.bind(this.range);
        this.coreGetters.getRangeDataFromXc = this.range.getRangeDataFromXc.bind(this.range);
        this.coreGetters.getRangeDataFromZone = this.range.getRangeDataFromZone.bind(this.range);
        this.coreGetters.getRangeFromRangeData = this.range.getRangeFromRangeData.bind(this.range);
        this.coreGetters.getRangeFromZone = this.range.getRangeFromZone.bind(this.range);
        this.coreGetters.recomputeRanges = this.range.recomputeRanges.bind(this.range);
        this.coreGetters.isRangeValid = this.range.isRangeValid.bind(this.range);
        this.coreGetters.extendRange = this.range.extendRange.bind(this.range);
        this.coreGetters.getRangesUnion = this.range.getRangesUnion.bind(this.range);
        this.coreGetters.removeRangesSheetPrefix = this.range.removeRangesSheetPrefix.bind(this.range);
        this.getters = {
            isReadonly: () => this.config.mode === "readonly" || this.config.mode === "dashboard",
            isDashboard: () => this.config.mode === "dashboard",
        };
        // Initiate stream processor
        this.selection = new SelectionStreamProcessorImpl(this.getters);
        this.coreHandlers.push(this.range);
        this.handlers.push(this.range);
        this.corePluginConfig = this.setupCorePluginConfig();
        this.uiPluginConfig = this.setupUiPluginConfig();
        // registering plugins
        for (let Plugin of corePluginRegistry.getAll()) {
            this.setupCorePlugin(Plugin, workbookData);
        }
        Object.assign(this.getters, this.coreGetters);
        this.session.loadInitialMessages(stateUpdateMessages);
        for (let Plugin of coreViewsPluginRegistry.getAll()) {
            const plugin = this.setupUiPlugin(Plugin);
            this.coreViewsPlugins.push(plugin);
            this.handlers.push(plugin);
            this.uiHandlers.push(plugin);
            this.coreHandlers.push(plugin);
        }
        for (let Plugin of statefulUIPluginRegistry.getAll()) {
            const plugin = this.setupUiPlugin(Plugin);
            this.statefulUIPlugins.push(plugin);
            this.handlers.push(plugin);
            this.uiHandlers.push(plugin);
        }
        for (let Plugin of featurePluginRegistry.getAll()) {
            const plugin = this.setupUiPlugin(Plugin);
            this.featurePlugins.push(plugin);
            this.handlers.push(plugin);
            this.uiHandlers.push(plugin);
        }
        this.uuidGenerator.setIsFastStrategy(false);
        // starting plugins
        this.dispatch("START");
        // Model should be the last permanent subscriber in the list since he should render
        // after all changes have been applied to the other subscribers (plugins)
        this.selection.observe(this, {
            handleEvent: () => this.trigger("update"),
        });
        // This should be done after construction of LocalHistory due to order of
        // events
        this.setupSessionEvents();
        this.joinSession();
        if (config.snapshotRequested) {
            const startSnapshot = performance.now();
            console.info("Snapshot requested");
            this.session.snapshot(this.exportData());
            this.garbageCollectExternalResources();
            console.info("Snapshot taken in", performance.now() - startSnapshot, "ms");
        }
        // mark all models as "raw", so they will not be turned into reactive objects
        // by owl, since we do not rely on reactivity
        markRaw(this);
        console.info("Model created in", performance.now() - start, "ms");
        console.groupEnd();
    }
    joinSession() {
        this.session.join(this.config.client);
    }
    async leaveSession() {
        await this.session.leave(lazy(() => this.exportData()));
    }
    setupUiPlugin(Plugin) {
        const plugin = new Plugin(this.uiPluginConfig);
        for (let name of Plugin.getters) {
            if (!(name in plugin)) {
                throw new Error(`Invalid getter name:${name}for plugin ${plugin.constructor}`);
            }
            if (name in this.getters) {
                throw new Error(`Getter"${name}"is already defined.`);
            }
            this.getters[name] = plugin[name].bind(plugin);
        }
        for (const layer of Plugin.layers) {
            if (!this.renderers[layer]) {
                this.renderers[layer] = [];
            }
            this.renderers[layer].push(plugin);
        }
        return plugin;
    }
    /**
     * Initialize and properly configure a plugin.
     *
     * This method is private for now, but if the need arise, there is no deep
     * reason why the model could not add dynamically a plugin while it is running.
     */
    setupCorePlugin(Plugin, data) {
        const plugin = new Plugin(this.corePluginConfig);
        for (let name of Plugin.getters) {
            if (!(name in plugin)) {
                throw new Error(`Invalid getter name:${name}for plugin ${plugin.constructor}`);
            }
            if (name in this.coreGetters) {
                throw new Error(`Getter"${name}"is already defined.`);
            }
            this.coreGetters[name] = plugin[name].bind(plugin);
        }
        plugin.import(data);
        this.corePlugins.push(plugin);
        this.coreHandlers.push(plugin);
        this.handlers.push(plugin);
    }
    onRemoteRevisionReceived({ commands }) {
        for (let command of commands) {
            const previousStatus = this.status;
            this.status = 2 /* Status.RunningCore */;
            this.dispatchToHandlers(this.statefulUIPlugins, command);
            this.status = previousStatus;
        }
        this.finalize();
    }
    setupSession(revisionId) {
        const session = new Session(buildRevisionLog({
            initialRevisionId: revisionId,
            recordChanges: this.state.recordChanges.bind(this.state),
            dispatch: (command) => {
                const result = this.checkDispatchAllowed(command);
                if (!result.isSuccessful) {
                    return;
                }
                this.isReplayingCommand = true;
                this.dispatchToHandlers(this.coreHandlers, command);
                this.isReplayingCommand = false;
            },
        }), this.config.transportService, revisionId);
        return session;
    }
    setupSessionEvents() {
        this.session.on("remote-revision-received", this, this.onRemoteRevisionReceived);
        this.session.on("revision-undone", this, ({ commands }) => {
            this.dispatchFromCorePlugin("UNDO", { commands });
            this.finalize();
        });
        this.session.on("revision-redone", this, ({ commands }) => {
            this.dispatchFromCorePlugin("REDO", { commands });
            this.finalize();
        });
        // How could we improve communication between the session and UI?
        // It feels weird to have the model piping specific session events to its own bus.
        this.session.on("unexpected-revision-id", this, () => this.trigger("unexpected-revision-id"));
        this.session.on("collaborative-event-received", this, () => {
            this.trigger("update");
        });
    }
    setupConfig(config) {
        const client = config.client || {
            id: this.uuidGenerator.uuidv4(),
            name: _t("Anonymous").toString(),
        };
        const transportService = config.transportService || new LocalTransportService();
        return {
            ...config,
            mode: config.mode || "normal",
            custom: config.custom || {},
            external: this.setupExternalConfig(config.external || {}),
            transportService,
            client,
            moveClient: () => { },
            snapshotRequested: false,
            notifyUI: (payload) => this.trigger("notify-ui", payload),
            raiseBlockingErrorUI: (text) => this.trigger("raise-error-ui", { text }),
            customColors: config.customColors || [],
        };
    }
    setupExternalConfig(external) {
        const loadLocales = external.loadLocales || (() => Promise.resolve(DEFAULT_LOCALES));
        return {
            ...external,
            loadLocales,
        };
    }
    setupCorePluginConfig() {
        return {
            getters: this.coreGetters,
            stateObserver: this.state,
            range: this.range,
            dispatch: this.dispatchFromCorePlugin,
            canDispatch: this.canDispatch,
            uuidGenerator: this.uuidGenerator,
            custom: this.config.custom,
            external: this.config.external,
        };
    }
    setupUiPluginConfig() {
        return {
            getters: this.getters,
            stateObserver: this.state,
            dispatch: this.dispatch,
            canDispatch: this.canDispatch,
            selection: this.selection,
            moveClient: this.session.move.bind(this.session),
            custom: this.config.custom,
            uiActions: this.config,
            session: this.session,
            defaultCurrency: this.config.defaultCurrency,
            customColors: this.config.customColors || [],
        };
    }
    // ---------------------------------------------------------------------------
    // Command Handling
    // ---------------------------------------------------------------------------
    /**
     * Check if the given command is allowed by all the plugins and the history.
     */
    checkDispatchAllowed(command) {
        const results = isCoreCommand(command)
            ? this.checkDispatchAllowedCoreCommand(command)
            : this.checkDispatchAllowedLocalCommand(command);
        if (results.some((r) => r !== "Success" /* CommandResult.Success */)) {
            return new DispatchResult(results.flat());
        }
        return DispatchResult.Success;
    }
    checkDispatchAllowedCoreCommand(command) {
        const results = this.corePlugins.map((handler) => handler.allowDispatch(command));
        results.push(this.range.allowDispatch(command));
        return results;
    }
    checkDispatchAllowedLocalCommand(command) {
        const results = this.uiHandlers.map((handler) => handler.allowDispatch(command));
        return results;
    }
    finalize() {
        this.status = 3 /* Status.Finalizing */;
        for (const h of this.handlers) {
            h.finalize();
        }
        this.status = 0 /* Status.Ready */;
        this.trigger("command-finalized");
    }
    /**
     * Check if a command can be dispatched, and returns a DispatchResult object with the possible
     * reasons the dispatch failed.
     */
    canDispatch = (type, payload) => {
        return this.checkDispatchAllowed(createCommand(type, payload));
    };
    /**
     * The dispatch method is the only entry point to manipulate data in the model.
     * This is through this method that commands are dispatched most of the time
     * recursively until no plugin want to react anymore.
     *
     * CoreCommands dispatched from this function are saved in the history.
     *
     * Small technical detail: it is defined as an arrow function.  There are two
     * reasons for this:
     * 1. this means that the dispatch method can be "detached" from the model,
     *    which is done when it is put in the environment (see the Spreadsheet
     *    component)
     * 2. This allows us to define its type by using the interface CommandDispatcher
     */
    dispatch = (type, payload) => {
        const command = createCommand(type, payload);
        let status = this.status;
        if (this.getters.isReadonly() && !canExecuteInReadonly(command)) {
            return new DispatchResult("Readonly" /* CommandResult.Readonly */);
        }
        if (!this.session.canApplyOptimisticUpdate()) {
            return new DispatchResult("WaitingSessionConfirmation" /* CommandResult.WaitingSessionConfirmation */);
        }
        switch (status) {
            case 0 /* Status.Ready */:
                const result = this.checkDispatchAllowed(command);
                if (!result.isSuccessful) {
                    this.trigger("update");
                    return result;
                }
                this.status = 1 /* Status.Running */;
                const { changes, commands } = this.state.recordChanges(() => {
                    const start = performance.now();
                    if (isCoreCommand(command)) {
                        this.state.addCommand(command);
                    }
                    this.dispatchToHandlers(this.handlers, command);
                    this.finalize();
                    const time = performance.now() - start;
                    if (time > 5) {
                        console.info(type, time, "ms");
                    }
                });
                this.session.save(command, commands, changes);
                this.status = 0 /* Status.Ready */;
                this.trigger("update");
                break;
            case 1 /* Status.Running */:
                if (isCoreCommand(command)) {
                    const dispatchResult = this.checkDispatchAllowed(command);
                    if (!dispatchResult.isSuccessful) {
                        return dispatchResult;
                    }
                    this.state.addCommand(command);
                }
                this.dispatchToHandlers(this.handlers, command);
                break;
            case 3 /* Status.Finalizing */:
                throw new Error("Cannot dispatch commands in the finalize state");
            case 2 /* Status.RunningCore */:
                if (isCoreCommand(command)) {
                    throw new Error(`A UI plugin cannot dispatch ${type}while handling a core command`);
                }
                this.dispatchToHandlers(this.handlers, command);
        }
        return DispatchResult.Success;
    };
    /**
     * Dispatch a command from a Core Plugin (or the History).
     * A command dispatched from this function is not added to the history.
     */
    dispatchFromCorePlugin = (type, payload) => {
        const command = createCommand(type, payload);
        const previousStatus = this.status;
        this.status = 2 /* Status.RunningCore */;
        const handlers = this.isReplayingCommand ? this.coreHandlers : this.handlers;
        this.dispatchToHandlers(handlers, command);
        this.status = previousStatus;
        return DispatchResult.Success;
    };
    /**
     * Dispatch the given command to the given handlers.
     * It will call `beforeHandle` and `handle`*/dispatchToHandlers(handlers,command){const isCommandCore=isCoreCommand(command);for(const handler of handlers){if(!isCommandCore&&handler instanceof CorePlugin){continue;}
handler.beforeHandle(command);}
for(const handler of handlers){if(!isCommandCore&&handler instanceof CorePlugin){continue;}
handler.handle(command);}
this.trigger("command-dispatched",command);}
drawLayer(context,layer){const renderers=this.renderers[layer];if(!renderers){return;}
for(const renderer of renderers){context.ctx.save();renderer.drawLayer(context,layer);context.ctx.restore();}}
exportData(){let data=createEmptyWorkbookData();for(let handler of this.handlers){if(handler instanceof CorePlugin){handler.export(data);}}
data.revisionId=this.session.getRevisionId()||DEFAULT_REVISION_ID;data=deepCopy(data);return data;}
updateMode(mode){this.config.mode=mode;this.trigger("update");}
exportXLSX(){this.dispatch("EVALUATE_CELLS");let data=createEmptyExcelWorkbookData();for(let handler of this.handlers){if(handler instanceof BasePlugin){handler.exportForExcel(data);}}
data=deepCopy(data);return getXLSX(data);}
garbageCollectExternalResources(){for(const plugin of this.corePlugins){plugin.garbageCollectExternalResources();}}}
function createCommand(type,payload={}){const command=deepCopy(payload);command.type=type;return command;}
const __info__={};const SPREADSHEET_DIMENSIONS={MIN_ROW_HEIGHT,MIN_COL_WIDTH,HEADER_HEIGHT,HEADER_WIDTH,TOPBAR_HEIGHT,BOTTOMBAR_HEIGHT,DEFAULT_CELL_WIDTH,DEFAULT_CELL_HEIGHT,SCROLLBAR_WIDTH,};const registries={autoCompleteProviders,autofillModifiersRegistry,autofillRulesRegistry,cellMenuRegistry,colMenuRegistry,errorTypes,linkMenuRegistry,functionRegistry,featurePluginRegistry,iconsOnCellRegistry,statefulUIPluginRegistry,coreViewsPluginRegistry,corePluginRegistry,rowMenuRegistry,sidePanelRegistry,figureRegistry,chartSidePanelComponentRegistry,chartComponentRegistry,chartRegistry,chartSubtypeRegistry,topbarMenuRegistry,topbarComponentRegistry,clickableCellRegistry,otRegistry,inverseCommandRegistry,urlRegistry,cellPopoverRegistry,numberFormatMenuRegistry,repeatLocalCommandTransformRegistry,repeatCommandTransformRegistry,clipboardHandlersRegistries,pivotRegistry,pivotTimeAdapterRegistry,pivotSidePanelRegistry,pivotNormalizationValueRegistry,supportedPivotPositionalFormulaRegistry,pivotToFunctionValueRegistry,migrationStepRegistry,};const helpers={arg,isEvaluationError,toBoolean,toJsDate,toNumber,toString,toNormalizedPivotValue,toXC,toZone,toUnboundedZone,toCartesian,numberToLetters,lettersToNumber,UuidGenerator,formatValue,createCurrencyFormat,ColorGenerator,computeTextWidth,createEmptyWorkbookData,createEmptySheet,createEmptyExcelSheet,getDefaultChartJsRuntime,chartFontColor,getChartAxisTitleRuntime,getChartAxisType,getTrendDatasetForBarChart,getTrendDatasetForLineChart,getFillingMode,rgbaToHex,colorToRGBA,positionToZone,isDefined,isMatrix,lazy,genericRepeat,createAction,createActions,transformRangeData,deepEquals,overlap,union,isInside,deepCopy,expandZoneOnInsertion,reduceZoneOnDeletion,unquote,getMaxObjectId,getFunctionsFromTokens,getFirstPivotFunction,getNumberOfPivotFunctions,parseDimension,isDateOrDatetimeField,makeFieldProposal,insertTokenAfterArgSeparator,insertTokenAfterLeftParenthesis,mergeContiguousZones,getPivotHighlights,pivotTimeAdapter,UNDO_REDO_PIVOT_COMMANDS,createPivotFormula,areDomainArgsFieldsValid,splitReference,formatTickValue,};const links={isMarkdownLink,parseMarkdownLink,markdownLink,openLink,urlRepresentation,};const components={Checkbox,Section,RoundColorPicker,ChartDataSeries,ChartErrorSection,ChartLabelRange,ChartTitle,ChartPanel,ChartFigure,ChartJsComponent,Grid,GridOverlay,ScorecardChart,LineConfigPanel,BarConfigPanel,PieChartDesignPanel,GenericChartConfigPanel,ChartWithAxisDesignPanel,GaugeChartConfigPanel,GaugeChartDesignPanel,ScorecardChartConfigPanel,ScorecardChartDesignPanel,ChartTypePicker,FigureComponent,Menu,Popover,SelectionInput,ValidationMessages,AddDimensionButton,PivotDimensionGranularity,PivotDimensionOrder,PivotDimension,PivotLayoutConfigurator,EditableName,PivotDeferUpdate,PivotTitleSection,CogWheelMenu,TextInput,SidePanelCollapsible,};const hooks={useDragAndDropListItems,useHighlights,useHighlightsOnHover,};const stores={useStoreProvider,DependencyContainer,CellPopoverStore,ComposerFocusStore,CellComposerStore,FindAndReplaceStore,HighlightStore,HoveredCellStore,ModelStore,NotificationStore,RendererStore,SelectionInputStore,SpreadsheetStore,useStore,useLocalStore,SidePanelStore,PivotSidePanelStore,PivotMeasureDisplayPanelStore,};function addFunction(functionName,functionDescription){functionRegistry.add(functionName,functionDescription);return{addFunction:(fName,fDescription)=>addFunction(fName,fDescription),};}
const constants={DEFAULT_LOCALE,HIGHLIGHT_COLOR,PIVOT_TABLE_CONFIG,TREND_LINE_XAXIS_ID,CHART_AXIS_CHOICES,};Object.assign(__exports,{AbstractCellClipboardHandler,AbstractChart,AbstractFigureClipboardHandler,CellErrorType,CommandResult,CorePlugin,DispatchResult,EvaluationError,Model,PivotRuntimeDefinition,Registry,Revision,SPREADSHEET_DIMENSIONS,Spreadsheet,SpreadsheetPivotTable,UIPlugin,__info__,addFunction,addRenderingLayer,astToFormula,compile,compileTokens,components,constants,convertAstNodes,coreTypes,findCellInNewZone,functionCache,helpers,hooks,invalidateCFEvaluationCommands,invalidateDependenciesCommands,invalidateEvaluationCommands,iterateAstNodes,links,load,parse,parseTokens,readonlyAllowedCommands,registries,setDefaultSheetViewSize,setTranslationMethod,stores,tokenColors,tokenize});__info__.version="18.0.1";__info__.date="2024-10-14T07:59:32.388Z";__info__.hash="1771f68b4";return __exports;});;

/* /spreadsheet_account/static/src/accounting_functions.js */
odoo.define('@spreadsheet_account/accounting_functions',['@web/core/l10n/translation','@web/core/utils/strings','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const spreadsheet=require("@odoo/o-spreadsheet");const{EvaluationError}=require("@odoo/o-spreadsheet");const{functionRegistry}=spreadsheet.registries;const{arg,toBoolean,toString,toNumber,toJsDate}=spreadsheet.helpers;const QuarterRegexp=/^q([1-4])\/(\d{4})$/i;const MonthRegexp=/^0?([1-9]|1[0-2])\/(\d{4})$/i;function parseAccountingQuarter(dateRange){const found=toString(dateRange?.value).trim().match(QuarterRegexp);return found?{rangeType:"quarter",year:Number(found[2]),quarter:Number(found[1]),}:undefined;}
function parseAccountingMonth(dateRange,locale){if(typeof dateRange?.value==="number"&&dateRange.format?.includes("m")&&!dateRange.format?.includes("d")){const date=toJsDate(dateRange.value,locale);return{rangeType:"month",year:date.getFullYear(),month:date.getMonth()+1,};}
const found=toString(dateRange?.value).trim().match(MonthRegexp);return found?{rangeType:"month",year:Number(found[2]),month:Number(found[1]),}:undefined;}
function parseAccountingYear(dateRange,locale){const dateNumber=toNumber(dateRange?.value,locale);if(dateNumber<3000){return{rangeType:"year",year:dateNumber};}
return undefined;}
function parseAccountingDay(dateRange,locale){const dateNumber=toNumber(dateRange?.value,locale);return{rangeType:"day",year:functionRegistry.get("YEAR").compute.bind({locale})(dateNumber),month:functionRegistry.get("MONTH").compute.bind({locale})(dateNumber),day:functionRegistry.get("DAY").compute.bind({locale})(dateNumber),};}
__exports.parseAccountingDate=parseAccountingDate;function parseAccountingDate(dateRange,locale){try{return(parseAccountingQuarter(dateRange)||parseAccountingMonth(dateRange,locale)||parseAccountingYear(dateRange,locale)||parseAccountingDay(dateRange,locale));}catch{throw new EvaluationError(sprintf(_t(`'%s' is not a valid period. Supported formats are "21/12/2022", "Q1/2022", "12/2022", and "2022".`),dateRange?.value));}}
const ODOO_FIN_ARGS=()=>[arg("account_codes (string)",_t("The prefix of the accounts.")),arg("date_range (string, date)",_t(`The date range. Supported formats are "21/12/2022", "Q1/2022", "12/2022", and "2022".`)),arg("offset (number, default=0)",_t("Year offset applied to date_range.")),arg("company_id (number, optional)",_t("The company to target (Advanced).")),arg("include_unposted (boolean, default=FALSE)",_t("Set to TRUE to include unposted entries.")),];functionRegistry.add("ODOO.CREDIT",{description:_t("Get the total credit for the specified account(s) and period."),args:ODOO_FIN_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=companyId?.value;const _includeUnposted=toBoolean(includeUnposted);return{value:this.getters.getAccountPrefixCredit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted),format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00",};},});functionRegistry.add("ODOO.DEBIT",{description:_t("Get the total debit for the specified account(s) and period."),args:ODOO_FIN_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=companyId?.value;const _includeUnposted=toBoolean(includeUnposted);return{value:this.getters.getAccountPrefixDebit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted),format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00",};},});functionRegistry.add("ODOO.BALANCE",{description:_t("Get the total balance for the specified account(s) and period."),args:ODOO_FIN_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=companyId?.value;const _includeUnposted=toBoolean(includeUnposted);const value=this.getters.getAccountPrefixDebit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted)-
this.getters.getAccountPrefixCredit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted);return{value,format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00"};},});functionRegistry.add("ODOO.FISCALYEAR.START",{description:_t("Returns the starting date of the fiscal year encompassing the provided date."),args:[arg("day (date)",_t("The day from which to extract the fiscal year start.")),arg("company_id (number, optional)",_t("The company.")),],category:"Odoo",returns:["NUMBER"],compute:function(date,companyId={value:null}){const startDate=this.getters.getFiscalStartDate(toJsDate(date,this.locale),companyId.value===null?null:toNumber(companyId,this.locale));return{value:toNumber(startDate,this.locale),format:this.locale.dateFormat,};},});functionRegistry.add("ODOO.FISCALYEAR.END",{description:_t("Returns the ending date of the fiscal year encompassing the provided date."),args:[arg("day (date)",_t("The day from which to extract the fiscal year end.")),arg("company_id (number, optional)",_t("The company.")),],category:"Odoo",returns:["NUMBER"],compute:function(date,companyId={value:null}){const endDate=this.getters.getFiscalEndDate(toJsDate(date,this.locale),companyId.value===null?null:toNumber(companyId,this.locale));return{value:toNumber(endDate,this.locale),format:this.locale.dateFormat,};},});functionRegistry.add("ODOO.ACCOUNT.GROUP",{description:_t("Returns the account ids of a given group."),args:[arg("type (string)",_t("The account type (income, expense, asset_current,...)."))],category:"Odoo",returns:["NUMBER"],compute:function(accountType){const accountTypes=this.getters.getAccountGroupCodes(toString(accountType));return accountTypes.join(",");},});return __exports;});;

/* /spreadsheet_account/static/src/index.js */
odoo.define('@spreadsheet_account',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet_account/plugins/accounting_plugin','@spreadsheet_account/utils','@spreadsheet_account/accounting_functions','@spreadsheet/helpers/helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{AccountingPlugin}=require("@spreadsheet_account/plugins/accounting_plugin");const{getFirstAccountFunction,getNumberOfAccountFormulas}=require("@spreadsheet_account/utils");const{parseAccountingDate}=require("@spreadsheet_account/accounting_functions");const{camelToSnakeObject}=require("@spreadsheet/helpers/helpers");const{cellMenuRegistry,featurePluginRegistry}=spreadsheet.registries;const{astToFormula}=spreadsheet;const{isEvaluationError,toString,toBoolean}=spreadsheet.helpers;featurePluginRegistry.add("odooAccountingAggregates",AccountingPlugin);cellMenuRegistry.add("move_lines_see_records",{name:_t("See records"),sequence:176,async execute(env){const position=env.model.getters.getActivePosition();const sheetId=position.sheetId;const cell=env.model.getters.getCell(position);const{args}=getFirstAccountFunction(cell.compiledFormula.tokens);let[codes,date_range,offset,companyId,includeUnposted]=args.map(astToFormula).map((arg)=>env.model.getters.evaluateFormulaResult(sheetId,arg));codes=toString(codes?.value).split(",");const locale=env.model.getters.getLocale();const dateRange=parseAccountingDate(date_range,locale);offset=parseInt(offset?.value)||0;dateRange.year+=offset||0;companyId=parseInt(companyId?.value)||null;try{includeUnposted=toBoolean(includeUnposted.value);}catch{includeUnposted=false;}
const action=await env.services.orm.call("account.account","spreadsheet_move_line_action",[camelToSnakeObject({dateRange,companyId,codes,includeUnposted})]);await env.services.action.doAction(action);},isVisible:(env)=>{const position=env.model.getters.getActivePosition();const evaluatedCell=env.model.getters.getEvaluatedCell(position);const cell=env.model.getters.getCell(position);return(!isEvaluationError(evaluatedCell.value)&&evaluatedCell.value!==""&&cell&&cell.isFormula&&getNumberOfAccountFormulas(cell.compiledFormula.tokens)===1);},});return __exports;});;

/* /spreadsheet_account/static/src/plugins/accounting_plugin.js */
odoo.define('@spreadsheet_account/plugins/accounting_plugin',['@odoo/o-spreadsheet','@spreadsheet/plugins','@web/core/l10n/translation','@web/core/utils/objects','@spreadsheet/helpers/helpers'],function(require){'use strict';let __exports={};const{EvaluationError}=require("@odoo/o-spreadsheet");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{_t}=require("@web/core/l10n/translation");const{deepCopy}=require("@web/core/utils/objects");const{camelToSnakeObject,toServerDateString}=require("@spreadsheet/helpers/helpers");const AccountingPlugin=__exports.AccountingPlugin=class AccountingPlugin extends OdooUIPlugin{static getters=(["getAccountPrefixCredit","getAccountPrefixDebit","getAccountGroupCodes","getFiscalStartDate","getFiscalEndDate",]);constructor(config){super(config);this._serverData=config.custom.odooDataProvider?.serverData;}
get serverData(){if(!this._serverData){throw new Error("'serverData' is not defined, please make sure a 'OdooDataProvider' instance is provided to the model.");}
return this._serverData;}
getAccountPrefixCredit(codes,dateRange,offset,companyId,includeUnposted){const data=this._fetchAccountData(codes,dateRange,offset,companyId,includeUnposted);return data.credit;}
getAccountPrefixDebit(codes,dateRange,offset,companyId,includeUnposted){const data=this._fetchAccountData(codes,dateRange,offset,companyId,includeUnposted);return data.debit;}
getFiscalStartDate(date,companyId){return this._fetchCompanyData(date,companyId).start;}
getFiscalEndDate(date,companyId){return this._fetchCompanyData(date,companyId).end;}
getAccountGroupCodes(accountType){return this.serverData.batch.get("account.account","get_account_group",accountType);}
_fetchAccountData(codes,dateRange,offset,companyId,includeUnposted){dateRange=deepCopy(dateRange);dateRange.year+=offset;if(dateRange.year<1900){throw new EvaluationError(_t("%s is not a valid year.",dateRange.year));}
return this.serverData.batch.get("account.account","spreadsheet_fetch_debit_credit",camelToSnakeObject({dateRange,codes,companyId,includeUnposted}));}
_fetchCompanyData(date,companyId){const result=this.serverData.batch.get("res.company","get_fiscal_dates",{date:toServerDateString(date),company_id:companyId,});if(result===false){throw new EvaluationError(_t("The company fiscal year could not be found."));}
return result;}}
return __exports;});;

/* /spreadsheet_account/static/src/utils.js */
odoo.define('@spreadsheet_account/utils',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{helpers}=require("@odoo/o-spreadsheet");const{getFunctionsFromTokens}=helpers;__exports.getNumberOfAccountFormulas=getNumberOfAccountFormulas;function getNumberOfAccountFormulas(tokens){return getFunctionsFromTokens(tokens,["ODOO.BALANCE","ODOO.CREDIT","ODOO.DEBIT"]).length;}
__exports.getFirstAccountFunction=getFirstAccountFunction;function getFirstAccountFunction(tokens){return getFunctionsFromTokens(tokens,["ODOO.BALANCE","ODOO.CREDIT","ODOO.DEBIT"])[0];}
return __exports;});;

/* /spreadsheet/static/src/actions/helpers.js */
odoo.define('@spreadsheet/actions/helpers',[],function(require){'use strict';let __exports={};__exports.navigateTo=navigateTo;async function navigateTo(env,actionXmlId,actionDescription,options){const actionService=env.services.action;let navigateActionDescription;const{views,view_mode,domain,context,name,res_model,res_id}=actionDescription;try{navigateActionDescription=await actionService.loadAction(actionXmlId,context);const filteredViews=views.map(([v,viewType])=>navigateActionDescription.views.find(([,type])=>viewType===type)||[v,viewType,]);navigateActionDescription={...navigateActionDescription,context,domain,name,res_model,res_id,view_mode,target:"current",views:filteredViews,};}catch{navigateActionDescription={type:"ir.actions.act_window",name,res_model,res_id,views,target:"current",domain,context,view_mode,};}finally{await actionService.doAction(JSON.parse(JSON.stringify(navigateActionDescription)),options);}}
return __exports;});;

/* /spreadsheet/static/src/actions/spreadsheet_component.js */
odoo.define('@spreadsheet/actions/spreadsheet_component',['@spreadsheet/hooks','@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const{useSpreadsheetNotificationStore}=require("@spreadsheet/hooks");const{Spreadsheet,Model}=require("@odoo/o-spreadsheet");const{Component}=require("@odoo/owl");const SpreadsheetComponent=__exports.SpreadsheetComponent=class SpreadsheetComponent extends Component{static template="spreadsheet.SpreadsheetComponent";static components={Spreadsheet};static props={model:Model,};get model(){return this.props.model;}
setup(){useSpreadsheetNotificationStore();}}
return __exports;});;

/* /spreadsheet/static/src/actions/spreadsheet_download_action.js */
odoo.define('@spreadsheet/actions/spreadsheet_download_action',['@web/core/network/download','@web/core/registry','@spreadsheet/helpers/model'],function(require){'use strict';let __exports={};const{download}=require("@web/core/network/download");const{registry}=require("@web/core/registry");const{createSpreadsheetModel,waitForDataLoaded}=require("@spreadsheet/helpers/model");async function downloadSpreadsheet(env,action){let{name,data,stateUpdateMessages,xlsxData}=action.params;if(!xlsxData){const model=await createSpreadsheetModel({env,data,revisions:stateUpdateMessages});await waitForDataLoaded(model);xlsxData=model.exportXLSX();}
await download({url:"/spreadsheet/xlsx",data:{zip_name:`${name}.xlsx`,files:JSON.stringify(xlsxData.files),},});}
registry.category("actions").add("action_download_spreadsheet",downloadSpreadsheet,{force:true});return __exports;});;

/* /spreadsheet/static/src/chart/data_source/chart_data_source.js */
odoo.define('@spreadsheet/chart/data_source/chart_data_source',['@spreadsheet/data_sources/odoo_views_data_source','@web/core/l10n/translation','@web/views/graph/graph_model'],function(require){'use strict';let __exports={};const{OdooViewsDataSource}=require("@spreadsheet/data_sources/odoo_views_data_source");const{_t}=require("@web/core/l10n/translation");const{GraphModel:ChartModel}=require("@web/views/graph/graph_model");const ChartDataSource=__exports.ChartDataSource=class ChartDataSource extends OdooViewsDataSource{constructor(services,params){super(services,params);}
async _load(){await super._load();const metaData={fieldAttrs:{},...this._metaData,};this._model=new ChartModel({_t,},metaData,{orm:this._orm,});await this._model.load(this._searchParams);}
getData(){if(!this.isReady()){this.load();return{datasets:[],labels:[]};}
if(!this._isValid){return{datasets:[],labels:[]};}
return this._model.data;}}
return __exports;});;

/* /spreadsheet/static/src/chart/index.js */
odoo.define('@spreadsheet/chart',['@odoo/o-spreadsheet','@spreadsheet/chart/plugins/odoo_chart_core_plugin','@spreadsheet/chart/plugins/chart_odoo_menu_plugin','@spreadsheet/chart/plugins/odoo_chart_ui_plugin'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{chartComponentRegistry}=spreadsheet.registries;const{ChartJsComponent}=spreadsheet.components;chartComponentRegistry.add("odoo_bar",ChartJsComponent);chartComponentRegistry.add("odoo_line",ChartJsComponent);chartComponentRegistry.add("odoo_pie",ChartJsComponent);const{OdooChartCorePlugin}=require("@spreadsheet/chart/plugins/odoo_chart_core_plugin");const{ChartOdooMenuPlugin}=require("@spreadsheet/chart/plugins/chart_odoo_menu_plugin");const{OdooChartUIPlugin}=require("@spreadsheet/chart/plugins/odoo_chart_ui_plugin");Object.assign(__exports,{OdooChartCorePlugin,ChartOdooMenuPlugin,OdooChartUIPlugin});return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_bar_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_bar_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{chartRegistry}=spreadsheet.registries;const{getDefaultChartJsRuntime,getChartAxisTitleRuntime,chartFontColor,ColorGenerator,getTrendDatasetForBarChart,formatTickValue}=spreadsheet.helpers;const{TREND_LINE_XAXIS_ID}=spreadsheet.constants;const OdooBarChart=__exports.OdooBarChart=class OdooBarChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.verticalAxisPosition=definition.verticalAxisPosition;this.stacked=definition.stacked;this.axesDesign=definition.axesDesign;this.trend=definition.trend;}
getDefinition(){return{...super.getDefinition(),verticalAxisPosition:this.verticalAxisPosition,stacked:this.stacked,axesDesign:this.axesDesign,trend:this.trend,};}}
chartRegistry.add("odoo_bar",{match:(type)=>type==="odoo_bar",createChart:(definition,sheetId,getters)=>new OdooBarChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooBarChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooBarChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooBarChart.getDefinitionFromContextCreation(),name:_t("Bar"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const locale=getters.getLocale();const chartJsConfig=getBarConfiguration(chart,labels,locale);chartJsConfig.options={...chartJsConfig.options,...getters.getChartDatasetActionCallbacks(chart),};const colors=new ColorGenerator(datasets.length);const trendDatasets=[];for(const{label,data}of datasets){const color=colors.next();const dataset={label,data,borderColor:"#FFFFFF",borderWidth:1,backgroundColor:color,};chartJsConfig.data.datasets.push(dataset);const trend=chart.getDefinition().trend;if(!trend?.display||chart.horizontal){continue;}
const trendDataset=getTrendDatasetForBarChart(trend,dataset);if(trendDataset){trendDatasets.push(trendDataset);}}
if(trendDatasets.length){const maxLength=Math.max(...trendDatasets.map((trendDataset)=>trendDataset.data.length));chartJsConfig.options.scales[TREND_LINE_XAXIS_ID]={...chartJsConfig.options.scales.x,labels:Array(maxLength).fill(""),offset:false,display:false,};trendDatasets.forEach((x)=>chartJsConfig.data.datasets.push(x));const originalTooltipTitle=chartJsConfig.options.plugins.tooltip.callbacks.title;chartJsConfig.options.plugins.tooltip.callbacks.title=function(tooltipItems){if(tooltipItems.some((item)=>item.dataset.xAxisID!==TREND_LINE_XAXIS_ID)){return originalTooltipTitle?.(tooltipItems);}
return"";};}
return{background,chartJsConfig};}
function getBarConfiguration(chart,labels,locale){const color=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,color,{locale});config.type=chart.type.replace("odoo_","");const legend={...config.options.legend,display:chart.legendPosition!=="none",labels:{color},};legend.position=chart.legendPosition;config.options.plugins=config.options.plugins||{};config.options.plugins.legend=legend;config.options.layout={padding:{left:20,right:20,top:chart.title?10:25,bottom:10},};config.options.scales={x:{ticks:{maxRotation:60,minRotation:15,padding:5,labelOffset:2,color,},title:getChartAxisTitleRuntime(chart.axesDesign?.x),},y:{position:chart.verticalAxisPosition,ticks:{color},beginAtZero:true,title:getChartAxisTitleRuntime(chart.axesDesign?.y),},};if(chart.stacked){config.options.scales.x.stacked=true;config.options.scales.y.stacked=true;}
config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,background:chart.background,horizontal:chart.horizontal,callback:formatTickValue({locale}),};return config;}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_chart',['@odoo/o-spreadsheet','@spreadsheet/chart/data_source/chart_data_source'],function(require){'use strict';let __exports={};const{AbstractChart,CommandResult}=require("@odoo/o-spreadsheet");const{ChartDataSource}=require("@spreadsheet/chart/data_source/chart_data_source");const OdooChart=__exports.OdooChart=class OdooChart extends AbstractChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.type=definition.type;this.metaData={...definition.metaData,mode:this.type.replace("odoo_",""),cumulated:definition.cumulative,cumulatedStart:definition.cumulative,};this.searchParams=definition.searchParams;this.legendPosition=definition.legendPosition;this.background=definition.background;this.dataSource=undefined;this.actionXmlId=definition.actionXmlId;this.showValues=definition.showValues;}
static transformDefinition(definition){return definition;}
static validateChartDefinition(validator,definition){return CommandResult.Success;}
static getDefinitionFromContextCreation(){throw new Error("It's not possible to convert an Odoo chart to a native chart");}
getDefinitionForDataSource(){return{metaData:this.metaData,searchParams:this.searchParams,};}
getDefinition(){return{title:this.title,background:this.background,legendPosition:this.legendPosition,metaData:this.metaData,searchParams:this.searchParams,type:this.type,actionXmlId:this.actionXmlId,showValues:this.showValues,};}
getDefinitionForExcel(){return undefined;}
updateRanges(){return this;}
copyForSheetId(){return this;}
copyInSheetId(){return this;}
getContextCreation(){return{};}
getSheetIdsUsedInChartRanges(){return[];}
setDataSource(dataSource){if(dataSource instanceof ChartDataSource){this.dataSource=dataSource;}else{throw new Error("Only ChartDataSources can be added.");}}}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_line_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_line_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{chartRegistry}=spreadsheet.registries;const{getDefaultChartJsRuntime,getChartAxisTitleRuntime,chartFontColor,ColorGenerator,getFillingMode,colorToRGBA,rgbaToHex,getTrendDatasetForLineChart,getChartAxisType,formatTickValue,}=spreadsheet.helpers;const{TREND_LINE_XAXIS_ID}=spreadsheet.constants;const LINE_FILL_TRANSPARENCY=0.4;const OdooLineChart=__exports.OdooLineChart=class OdooLineChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.verticalAxisPosition=definition.verticalAxisPosition;this.stacked=definition.stacked;this.cumulative=definition.cumulative;this.axesDesign=definition.axesDesign;this.fillArea=definition.fillArea;this.trend=definition.trend;}
getDefinition(){return{...super.getDefinition(),verticalAxisPosition:this.verticalAxisPosition,stacked:this.stacked,cumulative:this.cumulative,axesDesign:this.axesDesign,fillArea:this.fillArea,trend:this.trend,};}}
chartRegistry.add("odoo_line",{match:(type)=>type==="odoo_line",createChart:(definition,sheetId,getters)=>new OdooLineChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooLineChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooLineChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooLineChart.getDefinitionFromContextCreation(),name:_t("Line"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const locale=getters.getLocale();const chartJsConfig=getLineConfiguration(chart,labels,locale);const colors=new ColorGenerator(datasets.length);let maxLength=0;const trendDatasets=[];const axisType=getChartAxisType(chart,getters);for(const index in datasets){let{label,data,cumulatedStart}=datasets[index];const color=colors.next();let backgroundColor=color;if(chart.fillArea){const backgroundRGBA=colorToRGBA(color);backgroundRGBA.a=LINE_FILL_TRANSPARENCY;backgroundColor=rgbaToHex(backgroundRGBA);}
if(chart.cumulative){let accumulator=cumulatedStart;data=data.map((value)=>{accumulator+=value;return accumulator;});}
const dataset={label,data,lineTension:0,borderColor:color,backgroundColor,pointBackgroundColor:color,fill:chart.fillArea?getFillingMode(parseInt(index),chart.stacked):false,};chartJsConfig.data.datasets.push(dataset);const trend=chart.getDefinition().trend;if(!trend?.display){continue;}
const trendDataset=getTrendDatasetForLineChart(trend,dataset,axisType,locale);if(trendDataset){maxLength=Math.max(maxLength,trendDataset.data.length);trendDatasets.push(trendDataset);}}
if(trendDatasets.length){chartJsConfig.options.scales[TREND_LINE_XAXIS_ID]={...chartJsConfig.options.scales.x,type:"category",labels:Array(maxLength).fill(""),offset:false,display:false,};trendDatasets.forEach((x)=>chartJsConfig.data.datasets.push(x));const originalTooltipTitle=chartJsConfig.options.plugins.tooltip.callbacks.title;chartJsConfig.options.plugins.tooltip.callbacks.title=function(tooltipItems){if(tooltipItems.some((item)=>item.dataset.xAxisID!==TREND_LINE_XAXIS_ID)){return originalTooltipTitle?.(tooltipItems);}
return"";};}
return{background,chartJsConfig};}
function getLineConfiguration(chart,labels,locale){const fontColor=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,fontColor,{locale});config.type=chart.type.replace("odoo_","");const legend={...config.options.legend,display:chart.legendPosition!=="none",};legend.position=chart.legendPosition;config.options.plugins=config.options.plugins||{};config.options.plugins.legend=legend;config.options.layout={padding:{left:20,right:20,top:chart.title?10:25,bottom:10},};config.options.scales={x:{ticks:{maxRotation:60,minRotation:15,padding:5,labelOffset:2,color:fontColor,},title:getChartAxisTitleRuntime(chart.axesDesign?.x),},y:{position:chart.verticalAxisPosition,ticks:{color:fontColor,},title:getChartAxisTitleRuntime(chart.axesDesign?.y),},};if(chart.stacked){config.options.scales.y.stacked=true;}
config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,background:chart.background,callback:formatTickValue({locale}),};return config;}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_pie_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_pie_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{chartRegistry}=spreadsheet.registries;const{getDefaultChartJsRuntime,chartFontColor,ColorGenerator,formatTickValue}=spreadsheet.helpers;chartRegistry.add("odoo_pie",{match:(type)=>type==="odoo_pie",createChart:(definition,sheetId,getters)=>new OdooChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooChart.getDefinitionFromContextCreation(),name:_t("Pie"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const locale=getters.getLocale();const chartJsConfig=getPieConfiguration(chart,labels,locale);chartJsConfig.options={...chartJsConfig.options,...getters.getChartDatasetActionCallbacks(chart),};const dataSetsLength=Math.max(0,...datasets.map((ds)=>ds?.data?.length??0));const colors=new ColorGenerator(dataSetsLength);for(const{label,data}of datasets){const backgroundColor=getPieColors(colors,datasets);const dataset={label,data,borderColor:"#FFFFFF",backgroundColor,hoverOffset:30,};chartJsConfig.data.datasets.push(dataset);}
return{background,chartJsConfig};}
function getPieConfiguration(chart,labels,locale){const color=chartFontColor(chart.background);const config=getDefaultChartJsRuntime(chart,labels,color,{locale});config.type=chart.type.replace("odoo_","");const legend={...config.options.legend,display:chart.legendPosition!=="none",labels:{color},};legend.position=chart.legendPosition;config.options.plugins=config.options.plugins||{};config.options.plugins.legend=legend;config.options.layout={padding:{left:20,right:20,top:chart.title?10:25,bottom:10},};config.options.plugins.tooltip={callbacks:{title:function(tooltipItem){return tooltipItem.label;},},};config.options.plugins.chartShowValuesPlugin={showValues:chart.showValues,callback:formatTickValue({locale}),};return config;}
function getPieColors(colors,dataSetsValues){const pieColors=[];const maxLength=Math.max(...dataSetsValues.map((ds)=>ds.data.length));for(let i=0;i<=maxLength;i++){pieColors.push(colors.next());}
return pieColors;}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_menu/figure_component.js */
odoo.define('@spreadsheet/chart/odoo_menu/figure_component',['@web/core/utils/patch','@odoo/o-spreadsheet','@web/core/utils/hooks','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const spreadsheet=require("@odoo/o-spreadsheet");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");patch(spreadsheet.components.FigureComponent.prototype,{setup(){super.setup();this.menuService=useService("menu");this.actionService=useService("action");this.notificationService=useService("notification");},async navigateToOdooMenu(){const menu=this.env.model.getters.getChartOdooMenu(this.props.figure.id);if(!menu){throw new Error(`Cannot find any menu associated with the chart`);}
if(!menu.actionID){this.notificationService.add(_t("The menu linked to this chart doesn't have an corresponding action. Please link the chart to another menu."),{type:"danger"});return;}
await this.actionService.doAction(menu.actionID);},get hasOdooMenu(){return this.env.model.getters.getChartOdooMenu(this.props.figure.id)!==undefined;},async onClick(){if(this.env.isDashboard()&&this.hasOdooMenu){this.navigateToOdooMenu();}},});return __exports;});;

/* /spreadsheet/static/src/chart/plugins/chart_odoo_menu_plugin.js */
odoo.define('@spreadsheet/chart/plugins/chart_odoo_menu_plugin',['@spreadsheet/plugins','@odoo/o-spreadsheet','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{OdooCorePlugin}=require("@spreadsheet/plugins");const{coreTypes,helpers}=require("@odoo/o-spreadsheet");const{omit}=require("@web/core/utils/objects");const{deepEquals}=helpers;const ChartOdooMenuPlugin=__exports.ChartOdooMenuPlugin=class ChartOdooMenuPlugin extends OdooCorePlugin{static getters=(["getChartOdooMenu"]);constructor(config){super(config);this.odooMenuReference={};}
handle(cmd){switch(cmd.type){case"LINK_ODOO_MENU_TO_CHART":this.history.update("odooMenuReference",cmd.chartId,cmd.odooMenuId);break;case"DELETE_FIGURE":this.history.update("odooMenuReference",cmd.id,undefined);break;case"DUPLICATE_SHEET":this.updateOnDuplicateSheet(cmd.sheetId,cmd.sheetIdTo);break;}}
updateOnDuplicateSheet(sheetIdFrom,sheetIdTo){for(const oldChartId of this.getters.getChartIds(sheetIdFrom)){if(!this.odooMenuReference[oldChartId]){continue;}
const oldChartDefinition=this.getters.getChartDefinition(oldChartId);const oldFigure=this.getters.getFigure(sheetIdFrom,oldChartId);const newChartId=this.getters.getChartIds(sheetIdTo).find((newChartId)=>{const newChartDefinition=this.getters.getChartDefinition(newChartId);const newFigure=this.getters.getFigure(sheetIdTo,newChartId);return(deepEquals(oldChartDefinition,newChartDefinition)&&deepEquals(omit(newFigure,"id"),omit(oldFigure,"id")));});if(newChartId){this.history.update("odooMenuReference",newChartId,this.odooMenuReference[oldChartId]);}}}
getChartOdooMenu(chartId){const menuId=this.odooMenuReference[chartId];return menuId?this.getters.getIrMenu(menuId):undefined;}
import(data){if(data.chartOdooMenusReferences){this.odooMenuReference=data.chartOdooMenusReferences;}}
export(data){data.chartOdooMenusReferences=this.odooMenuReference;}}
coreTypes.add("LINK_ODOO_MENU_TO_CHART");return __exports;});;

/* /spreadsheet/static/src/chart/plugins/odoo_chart_core_plugin.js */
odoo.define('@spreadsheet/chart/plugins/odoo_chart_core_plugin',['@spreadsheet/global_filters/plugins/global_filters_core_plugin','@spreadsheet/global_filters/helpers','@spreadsheet/o_spreadsheet/cancelled_reason','@web/core/domain','@spreadsheet/plugins','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{checkFilterFieldMatching}=require("@spreadsheet/global_filters/helpers");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{Domain}=require("@web/core/domain");const{OdooCorePlugin}=require("@spreadsheet/plugins");const{_t}=require("@web/core/l10n/translation");const CHART_PLACEHOLDER_DISPLAY_NAME={odoo_bar:_t("Odoo Bar Chart"),odoo_line:_t("Odoo Line Chart"),odoo_pie:_t("Odoo Pie Chart"),};const OdooChartCorePlugin=__exports.OdooChartCorePlugin=class OdooChartCorePlugin extends OdooCorePlugin{static getters=(["getOdooChartIds","getChartFieldMatch","getOdooChartDisplayName","getOdooChartFieldMatching",]);constructor(config){super(config);this.charts={};globalFiltersFieldMatchers["chart"]={getIds:()=>this.getters.getOdooChartIds(),getDisplayName:(chartId)=>this.getters.getOdooChartDisplayName(chartId),getFieldMatching:(chartId,filterId)=>this.getOdooChartFieldMatching(chartId,filterId),getModel:(chartId)=>this.getters.getChart(chartId).getDefinitionForDataSource().metaData.resModel,};}
allowDispatch(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.chart){return checkFilterFieldMatching(cmd.chart);}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"CREATE_CHART":{switch(cmd.definition.type){case"odoo_pie":case"odoo_bar":case"odoo_line":this._addOdooChart(cmd.id);break;}
break;}
case"DELETE_FIGURE":{const charts={...this.charts};delete charts[cmd.id];this.history.update("charts",charts);break;}
case"REMOVE_GLOBAL_FILTER":this._onFilterDeletion(cmd.id);break;case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.chart){this._setOdooChartFieldMatching(cmd.filter.id,cmd.chart);}
break;}}
getOdooChartIds(){return Object.keys(this.charts);}
getChartFieldMatch(chartId){return this.charts[chartId].fieldMatching;}
getOdooChartDisplayName(chartId){const{title,type}=this.getters.getChart(chartId);const name=title.text||CHART_PLACEHOLDER_DISPLAY_NAME[type];return`(#${this.getOdooChartIds().indexOf(chartId) + 1}) ${name}`;}
import(data){for(const sheet of data.sheets){if(sheet.figures){for(const figure of sheet.figures){if(figure.tag==="chart"&&figure.data.type.startsWith("odoo_")){this._addOdooChart(figure.id,figure.data.fieldMatching);}}}}}
export(data){for(const sheet of data.sheets){if(sheet.figures){for(const figure of sheet.figures){if(figure.tag==="chart"&&figure.data.type.startsWith("odoo_")){figure.data.fieldMatching=this.getChartFieldMatch(figure.id);figure.data.searchParams.domain=new Domain(figure.data.searchParams.domain).toJson();}}}}}
getOdooChartFieldMatching(chartId,filterId){return this.charts[chartId].fieldMatching[filterId];}
_setOdooChartFieldMatching(filterId,chartFieldMatches){const charts={...this.charts};for(const[chartId,fieldMatch]of Object.entries(chartFieldMatches)){charts[chartId].fieldMatching[filterId]=fieldMatch;}
this.history.update("charts",charts);}
_onFilterDeletion(filterId){const charts={...this.charts};for(const chartId in charts){this.history.update("charts",chartId,"fieldMatching",filterId,undefined);}}
_addOdooChart(chartId,fieldMatching=undefined){const charts={...this.charts};if(!fieldMatching){const model=this.getters.getChartDefinition(chartId).metaData.resModel;fieldMatching=this.getters.getFieldMatchingForModel(model);}
charts[chartId]={fieldMatching,};this.history.update("charts",charts);}}
return __exports;});;

/* /spreadsheet/static/src/chart/plugins/odoo_chart_ui_plugin.js */
odoo.define('@spreadsheet/chart/plugins/odoo_chart_ui_plugin',['@web/core/domain','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@spreadsheet/chart/data_source/chart_data_source','@web/core/utils/strings','@web/core/l10n/translation','@spreadsheet/plugins','@spreadsheet/actions/helpers'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{ChartDataSource}=require("@spreadsheet/chart/data_source/chart_data_source");const{sprintf}=require("@web/core/utils/strings");const{_t}=require("@web/core/l10n/translation");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{navigateTo}=require("@spreadsheet/actions/helpers");const OdooChartUIPlugin=__exports.OdooChartUIPlugin=class OdooChartUIPlugin extends OdooUIPlugin{static getters=(["getChartDataSource","getChartDatasetActionCallbacks",]);constructor(config){super(config);this.custom=config.custom;this.charts={};globalFiltersFieldMatchers["chart"]={...globalFiltersFieldMatchers["chart"],getTag:async(chartId)=>{const model=await this.getChartDataSource(chartId).getModelLabel();return sprintf(_t("Chart - %s"),model);},waitForReady:()=>this._getOdooChartsWaitForReady(),getFields:(chartId)=>this.getChartDataSource(chartId).getFields(),};}
beforeHandle(cmd){switch(cmd.type){case"START":for(const chartId of this.getters.getOdooChartIds()){this._setupChartDataSource(chartId);}
this._addDomains();break;}}
handle(cmd){switch(cmd.type){case"CREATE_CHART":{switch(cmd.definition.type){case"odoo_pie":case"odoo_bar":case"odoo_line":this._setupChartDataSource(cmd.id);break;}
break;}
case"UPDATE_CHART":{switch(cmd.definition.type){case"odoo_pie":case"odoo_bar":case"odoo_line":{const dataSource=this.getChartDataSource(cmd.id);if(dataSource.getInitialDomainString()!==new Domain(cmd.definition.searchParams.domain).toString()){this._resetChartDataSource(cmd.id);}
this._setChartDataSource(cmd.id);break;}}
break;}
case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":case"REMOVE_GLOBAL_FILTER":case"SET_GLOBAL_FILTER_VALUE":case"CLEAR_GLOBAL_FILTER_VALUE":this._addDomains();break;case"UNDO":case"REDO":{if(cmd.commands.find((command)=>["ADD_GLOBAL_FILTER","EDIT_GLOBAL_FILTER","REMOVE_GLOBAL_FILTER",].includes(command.type))){this._addDomains();}
const domainEditionCommands=cmd.commands.filter((cmd)=>cmd.type==="UPDATE_CHART"||cmd.type==="CREATE_CHART");for(const cmd of domainEditionCommands){if(!this.getters.getOdooChartIds().includes(cmd.id)){continue;}
const dataSource=this.getChartDataSource(cmd.id);if(dataSource.getInitialDomainString()!==new Domain(cmd.definition.searchParams.domain).toString()){this._resetChartDataSource(cmd.id);}}
break;}
case"REFRESH_ALL_DATA_SOURCES":this._refreshOdooCharts();break;}}
getChartDataSource(chartId){const dataSourceId=this._getOdooChartDataSourceId(chartId);return this.charts[dataSourceId];}
getChartDatasetActionCallbacks(chart){const{datasets,labels}=chart.dataSource.getData();const env=this.custom.env;return{onClick:async(event,items)=>{if(!items.length){return;}
if(!env){return;}
const{datasetIndex,index}=items[0];const dataset=datasets[datasetIndex];let name=labels[index];if(dataset.label){name+=` / ${dataset.label}`;}
await navigateTo(env,chart.actionXmlId,{name,type:"ir.actions.act_window",res_model:chart.metaData.resModel,views:[[false,"list"],[false,"form"],],domain:dataset.domains[index],},{viewType:"list"});},onHover:(event,items)=>{if(items.length>0){event.native.target.style.cursor="pointer";}else{event.native.target.style.cursor="";}},};}
_addDomain(chartId){const domainList=[];for(const[filterId,fieldMatch]of Object.entries(this.getters.getChartFieldMatch(chartId))){domainList.push(this.getters.getGlobalFilterDomain(filterId,fieldMatch));}
const domain=Domain.combine(domainList,"AND").toString();this.getChartDataSource(chartId).addDomain(domain);}
_addDomains(){for(const chartId of this.getters.getOdooChartIds()){this._addDomain(chartId);}}
_setupChartDataSource(chartId){const dataSourceId=this._getOdooChartDataSourceId(chartId);if(!(dataSourceId in this.charts)){this._resetChartDataSource(chartId);}
this._setChartDataSource(chartId);}
_resetChartDataSource(chartId){const definition=this.getters.getChart(chartId).getDefinitionForDataSource();const dataSourceId=this._getOdooChartDataSourceId(chartId);this.charts[dataSourceId]=new ChartDataSource(this.custom,definition);}
_setChartDataSource(chartId){const chart=this.getters.getChart(chartId);chart.setDataSource(this.getChartDataSource(chartId));}
_getOdooChartsWaitForReady(){return this.getters.getOdooChartIds().map((chartId)=>this.getChartDataSource(chartId).loadMetadata());}
_getOdooChartDataSourceId(chartId){return`chart-${chartId}`;}
_refreshOdooChart(chartId){this.getChartDataSource(chartId).load({reload:true});}
_refreshOdooCharts(){for(const chartId of this.getters.getOdooChartIds()){this._refreshOdooChart(chartId);}}}
return __exports;});;

/* /spreadsheet/static/src/chart/plugins/operational_transform.js */
odoo.define('@spreadsheet/chart/plugins/operational_transform',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{inverseCommandRegistry,otRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
otRegistry.addTransformation("DELETE_FIGURE",["LINK_ODOO_MENU_TO_CHART"],(toTransform,executed)=>{if(executed.id===toTransform.chartId){return undefined;}
return toTransform;});inverseCommandRegistry.add("LINK_ODOO_MENU_TO_CHART",identity);return __exports;});;

/* /spreadsheet/static/src/components/share_button/share_button.js */
odoo.define('@spreadsheet/components/share_button/share_button',['@odoo/owl','@web/core/browser/browser','@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/copy_button/copy_button','@spreadsheet/helpers/model','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{CopyButton}=require("@web/core/copy_button/copy_button");const{waitForDataLoaded,freezeOdooData}=require("@spreadsheet/helpers/model");const{Model}=require("@odoo/o-spreadsheet");const SpreadsheetShareButton=__exports.SpreadsheetShareButton=class SpreadsheetShareButton extends Component{static template="spreadsheet.ShareButton";static components={Dropdown,DropdownItem,CopyButton};static props={model:{type:Model,optional:true},onSpreadsheetShared:Function,togglerClass:{type:String,optional:true},};setup(){this.copiedText=_t("Copied");this.state=useState({url:undefined});}
get togglerClass(){return["btn",this.props.togglerClass].join(" ");}
async onOpened(){const model=this.props.model;await waitForDataLoaded(model);const data=await freezeOdooData(model);if(!this.isChanged(data)){return;}
const url=await this.props.onSpreadsheetShared(data,model.exportXLSX());this.state.url=url;setTimeout(async()=>{try{await browser.navigator.clipboard.writeText(url);}catch(error){browser.console.warn(error);}});}
isChanged(data){const contentsChanged=data.revisionId!==this.lastRevisionId;let globalFilterChanged=this.lastGlobalFilters===undefined;const newCells=data.sheets[data.sheets.length-1].cells;if(this.lastGlobalFilters!==undefined){for(const key of Object.keys(newCells)){if(this.lastGlobalFilters[key]?.content!==newCells[key].content){globalFilterChanged=true;break;}}}
const localeChanged=data.settings.locale.code!==this.lastLocale;if(!(localeChanged||globalFilterChanged||contentsChanged)){return false;}
this.lastRevisionId=data.revisionId;this.lastGlobalFilters=newCells;this.lastLocale=data.settings.locale.code;return true;}}
return __exports;});;

/* /spreadsheet/static/src/currency/formulas.js */
odoo.define('@spreadsheet/currency/formulas',['@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{arg,toString,toJsDate,toNumber}=spreadsheet.helpers;const{functionRegistry}=spreadsheet.registries;functionRegistry.add("ODOO.CURRENCY.RATE",{description:_t("This function takes in two currency codes as arguments, and returns the exchange rate from the first currency to the second as float."),category:"Odoo",compute:function(currencyFrom,currencyTo,date,companyId){const from=toString(currencyFrom);const to=toString(currencyTo);const _date=date?toJsDate(date,this.locale):undefined;const _companyId=companyId?toNumber(companyId):undefined;return this.getters.getCurrencyRate(from,to,_date,_companyId);},args:[arg("currency_from (string)",_t("First currency code.")),arg("currency_to (string)",_t("Second currency code.")),arg("date (date, optional)",_t("Date of the rate.")),arg("company_id (number, optional)",_t("The company to take the exchange rate from.")),],returns:["NUMBER"],});return __exports;});;

/* /spreadsheet/static/src/currency/helpers.js */
odoo.define('@spreadsheet/currency/helpers',[],function(require){'use strict';let __exports={};__exports.createDefaultCurrency=createDefaultCurrency;function createDefaultCurrency(currency){if(!currency){return undefined;}
return{symbol:currency.symbol,position:currency.position,decimalPlaces:currency.decimalPlaces,};}
return __exports;});;

/* /spreadsheet/static/src/currency/plugins/currency.js */
odoo.define('@spreadsheet/currency/plugins/currency',['@odoo/o-spreadsheet','@spreadsheet/plugins','@spreadsheet/helpers/helpers','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{EvaluationError,helpers,registries}=require("@odoo/o-spreadsheet");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{toServerDateString}=require("@spreadsheet/helpers/helpers");const{_t}=require("@web/core/l10n/translation");const{featurePluginRegistry}=registries;const{createCurrencyFormat}=helpers;const CurrencyPlugin=__exports.CurrencyPlugin=class CurrencyPlugin extends OdooUIPlugin{static getters=(["getCurrencyRate","computeFormatFromCurrency","getCompanyCurrencyFormat",]);constructor(config){super(config);this.currentCompanyCurrency=config.defaultCurrency;this._serverData=config.custom.odooDataProvider?.serverData;}
get serverData(){if(!this._serverData){throw new Error("'serverData' is not defined, please make sure a 'OdooDataProvider' instance is provided to the model.");}
return this._serverData;}
getCurrencyRate(from,to,date,companyId){const data=this.serverData.batch.get("res.currency.rate","get_rates_for_spreadsheet",{from,to,date:date?toServerDateString(date):undefined,company_id:companyId,});const rate=data!==undefined?data.rate:undefined;if(rate===false){throw new EvaluationError(_t("Currency rate unavailable."));}
return rate;}
computeFormatFromCurrency(currency){if(!currency){return undefined;}
return createCurrencyFormat({symbol:currency.symbol,position:currency.position,decimalPlaces:currency.decimalPlaces,});}
getCompanyCurrencyFormat(companyId){if(!companyId&&this.currentCompanyCurrency){return this.computeFormatFromCurrency(this.currentCompanyCurrency);}
const currency=this.serverData.get("res.currency","get_company_currency_for_spreadsheet",[companyId]);if(currency===false){throw new EvaluationError(_t("Currency not available for this company."));}
return this.computeFormatFromCurrency(currency);}}
featurePluginRegistry.add("odooCurrency",CurrencyPlugin);return __exports;});;

/* /spreadsheet/static/src/data_sources/data_source.js */
odoo.define('@spreadsheet/data_sources/data_source',['@spreadsheet/o_spreadsheet/errors','@web/core/network/rpc','@web/core/utils/concurrency','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{LoadingDataError}=require("@spreadsheet/o_spreadsheet/errors");const{RPCError}=require("@web/core/network/rpc");const{KeepLast}=require("@web/core/utils/concurrency");const{CellErrorType,EvaluationError}=require("@odoo/o-spreadsheet");const LoadableDataSource=__exports.LoadableDataSource=class LoadableDataSource{constructor({odooDataProvider}){this.odooDataProvider=odooDataProvider;this._lastUpdate=undefined;this._concurrency=new KeepLast();this._loadPromise=undefined;this._isFullyLoaded=false;this._isValid=true;this._loadError=undefined;}
get _orm(){return this.odooDataProvider.orm;}
get serverData(){return this.odooDataProvider.serverData;}
async load(params){if(params&&params.reload){this.odooDataProvider.cancelPromise(this._loadPromise);this._loadPromise=undefined;}
if(!this._loadPromise){this._isFullyLoaded=false;this._isValid=true;this._loadError=undefined;this._loadPromise=this._concurrency.add(this._load()).catch((e)=>{this._isValid=false;this._loadError=Object.assign(new EvaluationError(e instanceof RPCError?e.data.message:e.message),{cause:e});}).finally(()=>{this._lastUpdate=Date.now();this._isFullyLoaded=true;});await this.odooDataProvider.notifyWhenPromiseResolves(this._loadPromise);}
return this._loadPromise;}
get lastUpdate(){return this._lastUpdate;}
isReady(){return this._isFullyLoaded;}
isLoading(){return!!this._loadPromise&&!this.isReady();}
isValid(){return this.isReady()&&this._isValid;}
assertIsValid({throwOnError}={throwOnError:true}){if(!this._isFullyLoaded){this.load();if(throwOnError){throw LOADING_ERROR;}
return LOADING_ERROR;}
if(!this._isValid){if(throwOnError){throw this._loadError;}
return{value:CellErrorType.GenericError,message:this._loadError.message};}}
async _load(){}}
const LOADING_ERROR=__exports.LOADING_ERROR=new LoadingDataError();return __exports;});;

/* /spreadsheet/static/src/data_sources/odoo_data_provider.js */
odoo.define('@spreadsheet/data_sources/odoo_data_provider',['@odoo/owl','@spreadsheet/data_sources/server_data'],function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const{ServerData}=require("@spreadsheet/data_sources/server_data");const OdooDataProvider=__exports.OdooDataProvider=class OdooDataProvider extends EventBus{constructor(env){super();this.orm=env.services.orm.silent;this.serverData=new ServerData(this.orm,{whenDataStartLoading:(promise)=>this.notifyWhenPromiseResolves(promise),});this.pendingPromises=new Set();}
cancelPromise(promise){this.pendingPromises.delete(promise);}
async notifyWhenPromiseResolves(promise){this.pendingPromises.add(promise);await promise.then(()=>{this.pendingPromises.delete(promise);this.notify();}).catch(()=>{this.pendingPromises.delete(promise);this.notify();});}
notify(){if(this.pendingPromises.size){if(!this.nextTriggerTimeOutId){this.nextTriggerTimeOutId=setTimeout(()=>{this.nextTriggerTimeOutId=undefined;if(this.pendingPromises.size){this.trigger("data-source-updated");}},10000);}
return;}
this.trigger("data-source-updated");}}
return __exports;});;

/* /spreadsheet/static/src/data_sources/odoo_views_data_source.js */
odoo.define('@spreadsheet/data_sources/odoo_views_data_source',['@spreadsheet/data_sources/data_source','@web/core/domain','@web/core/user','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{LOADING_ERROR,LoadableDataSource}=require("@spreadsheet/data_sources/data_source");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{omit}=require("@web/core/utils/objects");const OdooViewsDataSource=__exports.OdooViewsDataSource=class OdooViewsDataSource extends LoadableDataSource{constructor(services,params){super(services);this._metaData=JSON.parse(JSON.stringify(params.metaData));this._initialSearchParams=JSON.parse(JSON.stringify(params.searchParams));const userContext=user.context;this._initialSearchParams.context=omit(this._initialSearchParams.context||{},...Object.keys(userContext));this._customDomain=this._initialSearchParams.domain;this._metaDataLoaded=false;}
get _searchParams(){return{...this._initialSearchParams,domain:this.getComputedDomain(),};}
async loadMetadata(){if(!this._metaData.fields){this._metaData.fields=await this.serverData.fetch(this._metaData.resModel,"fields_get");}
this._metaDataLoaded=true;}
_assertMetaDataLoaded(){if(!this._metaDataLoaded){this.loadMetadata();throw LOADING_ERROR;}}
getFields(){this._assertMetaDataLoaded();return this._metaData.fields;}
getField(field){this._assertMetaDataLoaded();return this._metaData.fields[field];}
async _load(){await this.loadMetadata();}
isMetaDataLoaded(){return this._metaData.fields!==undefined;}
getComputedDomain(){const userContext=user.context;return new Domain(this._customDomain).toList({...this._initialSearchParams.context,...userContext,});}
getInitialDomainString(){return new Domain(this._initialSearchParams.domain).toString();}
addDomain(domain){const newDomain=Domain.and([this._initialSearchParams.domain,domain]).toString();if(newDomain.toString()===new Domain(this._customDomain).toString()){return;}
this._customDomain=newDomain;if(this._loadPromise===undefined){return;}
this.load({reload:true});}
async getModelLabel(){const model=this._metaData.resModel;const result=await this.serverData.fetch("ir.model","display_name_for",[[model]]);return(result[0]&&result[0].display_name)||"";}}
return __exports;});;

/* /spreadsheet/static/src/data_sources/server_data.js */
odoo.define('@spreadsheet/data_sources/server_data',['@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/errors'],function(require){'use strict';let __exports={};const{EvaluationError}=require("@odoo/o-spreadsheet");const{LoadingDataError,isLoadingError}=require("@spreadsheet/o_spreadsheet/errors");function removeDuplicates(array){return[...new Set(array.map((el)=>JSON.stringify(el)))].map((el)=>JSON.parse(el));}
const Request=__exports.Request=class Request{constructor(resModel,method,args){this.resModel=resModel;this.method=method;this.args=args;this.key=`${resModel}/${method}(${JSON.stringify(args)})`;}}
class ListRequestBatch{constructor(resModel,method,requests=[]){this.resModel=resModel;this.method=method;this.requests=requests;}
get payload(){const payload=removeDuplicates(this.requests.map((request)=>request.args).flat());return[payload];}
add(request){if(request.resModel!==this.resModel||request.method!==this.method){throw new Error(`Request ${request.resModel}/${request.method} cannot be added to the batch ${this.resModel}/${this.method}`);}
this.requests.push(request);}
splitResponse(results){const split=new Map();for(let i=0;i<this.requests.length;i++){split.set(this.requests[i],results[i]);}
return split;}}
const ServerData=__exports.ServerData=class ServerData{constructor(orm,{whenDataStartLoading}){this.orm=orm;this.startLoadingCallback=whenDataStartLoading??(()=>{});this.cache={};this.asyncCache={};this.batchEndpoints={};}
get batch(){return{get:(resModel,method,args)=>this._getBatchItem(resModel,method,args)};}
_getBatchItem(resModel,method,args){const request=new Request(resModel,method,[args]);if(!(request.key in this.cache)){const error=new LoadingDataError();this.cache[request.key]=error;this._batch(request);throw error;}
return this._getOrThrowCachedResponse(request);}
get(resModel,method,args){const request=new Request(resModel,method,args);if(!(request.key in this.cache)){const error=new LoadingDataError();this.cache[request.key]=error;const promise=this.orm.call(resModel,method,args).then((result)=>(this.cache[request.key]=result)).catch((error)=>(this.cache[request.key]=new EvaluationError(error.data?.message||error.message)));this.startLoadingCallback(promise);throw error;}
return this._getOrThrowCachedResponse(request);}
async fetch(resModel,method,args){const request=new Request(resModel,method,args);if(!(request.key in this.asyncCache)){this.asyncCache[request.key]=this.orm.call(resModel,method,args);}
return this.asyncCache[request.key];}
_batch(request){const endpoint=this._getBatchEndPoint(request.resModel,request.method);endpoint.call(request);}
_getOrThrowCachedResponse(request){const data=this.cache[request.key];if(data instanceof Error||isLoadingError({value:data})){throw data;}
return data;}
_getBatchEndPoint(resModel,method){if(!this.batchEndpoints[resModel]||!this.batchEndpoints[resModel][method]){this.batchEndpoints[resModel]={...this.batchEndpoints[resModel],[method]:this._createBatchEndpoint(resModel,method),};}
return this.batchEndpoints[resModel][method];}
_createBatchEndpoint(resModel,method){return new BatchEndpoint(this.orm,resModel,method,{whenDataStartLoading:(promise)=>this.startLoadingCallback(promise),successCallback:(request,result)=>{this.cache[request.key]=result;},failureCallback:(request,error)=>(this.cache[request.key]=new EvaluationError(error.data?.message||error.message)),});}}
const BatchEndpoint=__exports.BatchEndpoint=class BatchEndpoint{constructor(orm,resModel,method,{successCallback,failureCallback,whenDataStartLoading}){this.orm=orm;this.resModel=resModel;this.method=method;this.successCallback=successCallback;this.failureCallback=failureCallback;this.batchStartsLoadingCallback=whenDataStartLoading;this._isScheduled=false;this._pendingBatch=new ListRequestBatch(resModel,method);}
call(request){this._pendingBatch.add(request);this._scheduleNextBatch();}
_notifyResults(batchResult){for(const[request,result]of batchResult){if(result instanceof Error){this.failureCallback(request,result);}else{this.successCallback(request,result);}}}
_scheduleNextBatch(){if(this._isScheduled||this._pendingBatch.requests.length===0){return;}
this._isScheduled=true;queueMicrotask(async()=>{this._isScheduled=false;const batch=this._pendingBatch;const{resModel,method}=batch;this._pendingBatch=new ListRequestBatch(resModel,method);const promise=this.orm.call(resModel,method,batch.payload).then((result)=>batch.splitResponse(result)).catch(()=>this._retryOneByOne(batch)).then((batchResults)=>this._notifyResults(batchResults));this.batchStartsLoadingCallback(promise);});}
async _retryOneByOne(batch){const mergedResults=new Map();const{resModel,method}=batch;const singleRequestBatches=batch.requests.map((request)=>new ListRequestBatch(resModel,method,[request]));const proms=[];for(const batch of singleRequestBatches){const request=batch.requests[0];const prom=this.orm.call(resModel,method,batch.payload).then((result)=>mergedResults.set(request,batch.splitResponse(result).get(request))).catch((error)=>mergedResults.set(request,error));proms.push(prom);}
await Promise.allSettled(proms);return mergedResults;}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filter_date_from_to_value/filter_date_from_to_value.js */
odoo.define('@spreadsheet/global_filters/components/filter_date_from_to_value/filter_date_from_to_value',['@odoo/owl','@web/core/datetime/datetime_input','@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{serializeDate,deserializeDate}=require("@web/core/l10n/dates");const DateFromToValue=__exports.DateFromToValue=class DateFromToValue extends Component{static template="spreadsheet.DateFromToValue";static components={DateTimeInput};static props={onFromToChanged:Function,from:{type:String,optional:true},to:{type:String,optional:true},};onDateFromChanged(dateFrom){this.props.onFromToChanged({from:dateFrom?serializeDate(dateFrom.startOf("day")):undefined,to:this.props.to,});}
onDateToChanged(dateTo){this.props.onFromToChanged({from:this.props.from,to:dateTo?serializeDate(dateTo.endOf("day")):undefined,});}
get dateFrom(){return this.props.from&&deserializeDate(this.props.from);}
get dateTo(){return this.props.to&&deserializeDate(this.props.to);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filter_date_value/filter_date_value.js */
odoo.define('@spreadsheet/global_filters/components/filter_date_value/filter_date_value',['@odoo/owl','@web/core/datetime/datetime_input','@spreadsheet/assets_backend/constants','@web/search/utils/dates'],function(require){'use strict';let __exports={};const{Component,onWillUpdateProps}=require("@odoo/owl");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{monthsOptions}=require("@spreadsheet/assets_backend/constants");const{QUARTER_OPTIONS}=require("@web/search/utils/dates");const{DateTime}=luxon;const DateFilterValue=__exports.DateFilterValue=class DateFilterValue extends Component{static template="spreadsheet_edition.DateFilterValue";static components={DateTimeInput};static props={onTimeRangeChanged:Function,yearOffset:{type:Number,optional:true},period:{type:String,optional:true},disabledPeriods:{type:Array,optional:true},};setup(){this._setStateFromProps(this.props);this.dateOptions=this.getDateOptions(this.props);onWillUpdateProps((nextProps)=>{this._setStateFromProps(nextProps);this.dateOptions=this.getDateOptions(nextProps);});}
_setStateFromProps(props){this.period=props.period;this.yearOffset=props.yearOffset;this.date=this.yearOffset!==undefined?DateTime.local().plus({year:this.yearOffset}):undefined;}
getDateOptions(props){const quarterOptions=Object.values(QUARTER_OPTIONS);const disabledPeriods=props.disabledPeriods||[];const dateOptions=[];if(!disabledPeriods.includes("quarter")){dateOptions.push(...quarterOptions);}
if(!disabledPeriods.includes("month")){dateOptions.push(...monthsOptions);}
return dateOptions;}
isSelected(periodId){return this.period===periodId;}
onPeriodChanged(ev){this.period=ev.target.value;this._updateFilter();}
onYearChanged(date){this.date=date;this.yearOffset=date.year-DateTime.now().year;this._updateFilter();}
_updateFilter(){this.props.onTimeRangeChanged({yearOffset:this.yearOffset||0,period:this.period,});}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filter_text_value/filter_text_value.js */
odoo.define('@spreadsheet/global_filters/components/filter_text_value/filter_text_value',['@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const TextFilterValue=__exports.TextFilterValue=class TextFilterValue extends Component{static template="spreadsheet.TextFilterValue";static props={label:{type:String,optional:true},onValueChanged:Function,value:{type:String,optional:true},options:{type:Array,element:{type:Object,shape:{value:String,formattedValue:String},optional:true,},},};translate(label){return _t(label);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filter_value/filter_value.js */
odoo.define('@spreadsheet/global_filters/components/filter_value/filter_value',['@web/core/record_selectors/multi_record_selector','@spreadsheet/helpers/constants','@spreadsheet/global_filters/components/filter_date_value/filter_date_value','@spreadsheet/global_filters/components/filter_date_from_to_value/filter_date_from_to_value','@odoo/owl','@web/core/l10n/translation','@web/core/utils/hooks','@web/core/domain','@web/core/user','@spreadsheet/global_filters/components/filter_text_value/filter_text_value'],function(require){'use strict';let __exports={};const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const{RELATIVE_DATE_RANGE_TYPES}=require("@spreadsheet/helpers/constants");const{DateFilterValue}=require("@spreadsheet/global_filters/components/filter_date_value/filter_date_value");const{DateFromToValue}=require("@spreadsheet/global_filters/components/filter_date_from_to_value/filter_date_from_to_value");const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{TextFilterValue}=require("@spreadsheet/global_filters/components/filter_text_value/filter_text_value");const FilterValue=__exports.FilterValue=class FilterValue extends Component{static template="spreadsheet_edition.FilterValue";static components={DateFilterValue,DateFromToValue,MultiRecordSelector,TextFilterValue};static props={filter:Object,model:Object,};setup(){this.getters=this.props.model.getters;this.relativeDateRangesTypes=RELATIVE_DATE_RANGE_TYPES;this.nameService=useService("name");}
get filter(){return this.props.filter;}
get filterValue(){return this.getters.getGlobalFilterValue(this.filter.id);}
get textAllowedValues(){return this.getters.getTextFilterOptions(this.filter.id);}
get relationalAllowedDomain(){const domain=this.props.filter.domainOfAllowedValues;if(domain){return new Domain(domain).toList(user.context);}
return[];}
onDateInput(id,value){this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id,value});}
onTextInput(id,value){this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id,value});}
async onTagSelected(id,resIds){if(!resIds.length){this.clear(id);}else{const displayNames=await this.nameService.loadDisplayNames(this.filter.modelName,resIds);this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id,value:resIds,displayNames:Object.values(displayNames),});}}
translate(text){return _t(text);}
clear(id){this.props.model.dispatch("CLEAR_GLOBAL_FILTER_VALUE",{id});}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/helpers.js */
odoo.define('@spreadsheet/global_filters/helpers',['@web/core/l10n/dates','@web/core/domain','@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/helpers/constants','@spreadsheet/assets_backend/constants','@web/search/utils/dates'],function(require){'use strict';let __exports={};const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{Domain}=require("@web/core/domain");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{RELATIVE_DATE_RANGE_TYPES}=require("@spreadsheet/helpers/constants");const{monthsOptions}=require("@spreadsheet/assets_backend/constants");const{QUARTER_OPTIONS}=require("@web/search/utils/dates");const monthsOptionsIds=monthsOptions.map((option)=>option.id);const quarterOptionsIds=Object.values(QUARTER_OPTIONS).map((option)=>option.id);__exports.checkFilterValueIsValid=checkFilterValueIsValid;function checkFilterValueIsValid(filter,value){const{type}=filter;if(value!==undefined){switch(type){case"text":if(typeof value!=="string"){return false;}
break;case"date":{return checkDateFilterValueIsValid(filter,value);}
case"relation":if(value==="current_user"){return true;}
if(!Array.isArray(value)){return false;}
break;}}
return true;}
function checkDateFilterValueIsValid(filter,value){if(!value){return true;}
switch(filter.rangeType){case"fixedPeriod":{const period=value.period;if(!filter.disabledPeriods||!filter.disabledPeriods.length){return true;}
if(filter.disabledPeriods.includes("month")){return value!=="this_month"&&!monthsOptionsIds.includes(period);}
if(filter.disabledPeriods.includes("quarter")){return value!=="this_quarter"&&!quarterOptionsIds.includes(period);}
return true;}
case"relative":{const expectedValues=RELATIVE_DATE_RANGE_TYPES.map((val)=>val.type);expectedValues.push("this_month","this_quarter","this_year");return expectedValues.includes(value);}
case"from_to":return typeof value==="object";}
return true;}
__exports.checkFilterFieldMatching=checkFilterFieldMatching;function checkFilterFieldMatching(fieldMatchings){for(const fieldMatch of Object.values(fieldMatchings)){if(fieldMatch.offset&&(!fieldMatch.chain||!fieldMatch.type)){return CommandResult.InvalidFieldMatch;}}
return CommandResult.Success;}
__exports.getRelativeDateDomain=getRelativeDateDomain;function getRelativeDateDomain(now,offset,rangeType,fieldName,fieldType){const startOfNextDay=now.plus({days:1}).startOf("day");let endDate=now.endOf("day");let startDate=endDate;switch(rangeType){case"year_to_date":{const offsetParam={years:offset};startDate=now.startOf("year").plus(offsetParam);endDate=now.endOf("day").plus(offsetParam);break;}
case"last_week":{const offsetParam={days:7*offset};endDate=endDate.plus(offsetParam);startDate=startOfNextDay.minus({days:7}).plus(offsetParam);break;}
case"last_month":{const offsetParam={days:30*offset};endDate=endDate.plus(offsetParam);startDate=startOfNextDay.minus({days:30}).plus(offsetParam);break;}
case"last_three_months":{const offsetParam={days:90*offset};endDate=endDate.plus(offsetParam);startDate=startOfNextDay.minus({days:90}).plus(offsetParam);break;}
case"last_six_months":{const offsetParam={days:180*offset};endDate=endDate.plus(offsetParam);startDate=startOfNextDay.minus({days:180}).plus(offsetParam);break;}
case"last_year":{const offsetParam={days:365*offset};endDate=endDate.plus(offsetParam);startDate=startOfNextDay.minus({days:365}).plus(offsetParam);break;}
case"last_three_years":{const offsetParam={days:3*365*offset};endDate=endDate.plus(offsetParam);startDate=startOfNextDay.minus({days:3*365}).plus(offsetParam);break;}
default:return undefined;}
let leftBound,rightBound;if(fieldType==="date"){leftBound=serializeDate(startDate);rightBound=serializeDate(endDate);}else{leftBound=serializeDateTime(startDate);rightBound=serializeDateTime(endDate);}
return new Domain(["&",[fieldName,">=",leftBound],[fieldName,"<=",rightBound]]);}
return __exports;});;

/* /spreadsheet/static/src/global_filters/index.js */
odoo.define('@spreadsheet/global_filters',['@odoo/o-spreadsheet','@spreadsheet/global_filters/plugins/global_filters_ui_plugin','@spreadsheet/global_filters/plugins/global_filters_core_plugin'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{GlobalFiltersUIPlugin}=require("@spreadsheet/global_filters/plugins/global_filters_ui_plugin");const{GlobalFiltersCorePlugin}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{inverseCommandRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
const{coreTypes,invalidateEvaluationCommands,readonlyAllowedCommands}=spreadsheet;coreTypes.add("ADD_GLOBAL_FILTER");coreTypes.add("EDIT_GLOBAL_FILTER");coreTypes.add("REMOVE_GLOBAL_FILTER");coreTypes.add("MOVE_GLOBAL_FILTER");invalidateEvaluationCommands.add("ADD_GLOBAL_FILTER");invalidateEvaluationCommands.add("EDIT_GLOBAL_FILTER");invalidateEvaluationCommands.add("REMOVE_GLOBAL_FILTER");invalidateEvaluationCommands.add("SET_GLOBAL_FILTER_VALUE");invalidateEvaluationCommands.add("CLEAR_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("SET_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("SET_MANY_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("CLEAR_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("UPDATE_OBJECT_DOMAINS");inverseCommandRegistry.add("EDIT_GLOBAL_FILTER",identity).add("ADD_GLOBAL_FILTER",(cmd)=>{return[{type:"REMOVE_GLOBAL_FILTER",id:cmd.filter.id,},];}).add("REMOVE_GLOBAL_FILTER",(cmd)=>{return[{type:"ADD_GLOBAL_FILTER",filter:{},},];}).add("MOVE_GLOBAL_FILTER",(cmd)=>{return[{type:"MOVE_GLOBAL_FILTER",id:cmd.id,delta:cmd.delta*-1,},];});Object.assign(__exports,{GlobalFiltersCorePlugin,GlobalFiltersUIPlugin});return __exports;});;

/* /spreadsheet/static/src/global_filters/plugins/global_filters_core_plugin.js */
odoo.define('@spreadsheet/global_filters/plugins/global_filters_core_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/global_filters/helpers','@web/core/l10n/translation','@web/core/utils/strings','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const globalFiltersFieldMatchers=__exports.globalFiltersFieldMatchers={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{checkFilterValueIsValid}=require("@spreadsheet/global_filters/helpers");const{_t}=require("@web/core/l10n/translation");const{escapeRegExp}=require("@web/core/utils/strings");const{OdooCorePlugin}=require("@spreadsheet/plugins");const GlobalFiltersCorePlugin=__exports.GlobalFiltersCorePlugin=class GlobalFiltersCorePlugin extends OdooCorePlugin{static getters=(["getGlobalFilter","getGlobalFilters","getGlobalFilterDefaultValue","getGlobalFilterLabel","getFieldMatchingForModel",]);constructor(config){super(config);this.globalFilters=[];}
allowDispatch(cmd){switch(cmd.type){case"EDIT_GLOBAL_FILTER":if(!this.getGlobalFilter(cmd.filter.id)){return CommandResult.FilterNotFound;}else if(this._isDuplicatedLabel(cmd.filter.id,cmd.filter.label)){return CommandResult.DuplicatedFilterLabel;}
if(!checkFilterValueIsValid(cmd.filter,cmd.filter.defaultValue)){return CommandResult.InvalidValueTypeCombination;}
break;case"REMOVE_GLOBAL_FILTER":if(!this.getGlobalFilter(cmd.id)){return CommandResult.FilterNotFound;}
break;case"ADD_GLOBAL_FILTER":if(this._isDuplicatedLabel(cmd.filter.id,cmd.filter.label)){return CommandResult.DuplicatedFilterLabel;}
if(!checkFilterValueIsValid(cmd.filter,cmd.filter.defaultValue)){return CommandResult.InvalidValueTypeCombination;}
break;case"MOVE_GLOBAL_FILTER":{const index=this.globalFilters.findIndex((filter)=>filter.id===cmd.id);if(index===-1){return CommandResult.FilterNotFound;}
const targetIndex=index+cmd.delta;if(targetIndex<0||targetIndex>=this.globalFilters.length){return CommandResult.InvalidFilterMove;}
break;}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":{const filter={...cmd.filter};if(filter.type==="text"&&filter.rangeOfAllowedValues){filter.rangeOfAllowedValues=this.getters.getRangeFromRangeData(filter.rangeOfAllowedValues);}
this.history.update("globalFilters",[...this.globalFilters,filter]);break;}
case"EDIT_GLOBAL_FILTER":{this._editGlobalFilter(cmd.filter);break;}
case"REMOVE_GLOBAL_FILTER":{const filters=this.globalFilters.filter((filter)=>filter.id!==cmd.id);this.history.update("globalFilters",filters);break;}
case"MOVE_GLOBAL_FILTER":this._onMoveFilter(cmd.id,cmd.delta);break;}}
adaptRanges(applyChange){for(const filterIndex in this.globalFilters){const filter=this.globalFilters[filterIndex];if(filter.type==="text"&&filter.rangeOfAllowedValues){const change=applyChange(filter.rangeOfAllowedValues);switch(change.changeType){case"REMOVE":{this.history.update("globalFilters",filterIndex,"rangeOfAllowedValues",undefined);break;}
case"RESIZE":case"MOVE":case"CHANGE":{this.history.update("globalFilters",filterIndex,"rangeOfAllowedValues",change.range);}}}}}
getGlobalFilter(id){return this.globalFilters.find((filter)=>filter.id===id);}
getGlobalFilterLabel(label){return this.globalFilters.find((filter)=>_t(filter.label)===_t(label));}
getGlobalFilters(){return[...this.globalFilters];}
getGlobalFilterDefaultValue(id){return this.getGlobalFilter(id).defaultValue;}
getFieldMatchingForModel(newModel){const globalFilters=this.getGlobalFilters();if(globalFilters.length===0){return{};}
for(const matcher of Object.values(globalFiltersFieldMatchers)){for(const dataSourceId of matcher.getIds()){const model=matcher.getModel(dataSourceId);if(model===newModel){const fieldMatching={};for(const filter of globalFilters){const matchedField=matcher.getFieldMatching(dataSourceId,filter.id);if(matchedField){fieldMatching[filter.id]={chain:matchedField.chain,type:matchedField.type,};}}
return fieldMatching;}}}
return{};}
_editGlobalFilter(cmdFilter){const rangeOfAllowedValues=cmdFilter.type==="text"&&cmdFilter.rangeOfAllowedValues?this.getters.getRangeFromRangeData(cmdFilter.rangeOfAllowedValues):undefined;const newFilter=cmdFilter.type==="text"?{...cmdFilter,rangeOfAllowedValues}:{...cmdFilter};const id=newFilter.id;const currentLabel=this.getGlobalFilter(id).label;const index=this.globalFilters.findIndex((filter)=>filter.id===id);if(index===-1){return;}
this.history.update("globalFilters",index,newFilter);const newLabel=this.getGlobalFilter(id).label;if(currentLabel!==newLabel){this._updateFilterLabelInFormulas(currentLabel,newLabel);}}
import(data){for(const globalFilter of data.globalFilters||[]){if(globalFilter.type==="text"&&globalFilter.rangeOfAllowedValues){globalFilter.rangeOfAllowedValues=this.getters.getRangeFromSheetXC(data.sheets[0].id,globalFilter.rangeOfAllowedValues);}
this.globalFilters.push(globalFilter);}}
export(data){data.globalFilters=this.globalFilters.map((filter)=>{const filterData={...filter};if(filter.type==="text"&&filter.rangeOfAllowedValues){filterData.rangeOfAllowedValues=this.getters.getRangeString(filter.rangeOfAllowedValues,"");}
return filterData;});}
_updateFilterLabelInFormulas(currentLabel,newLabel){const sheetIds=this.getters.getSheetIds();currentLabel=escapeRegExp(currentLabel);for(const sheetId of sheetIds){for(const cell of Object.values(this.getters.getCells(sheetId))){if(cell.isFormula){const newContent=cell.content.replace(new RegExp(`FILTER\\.VALUE\\(\\s*"${currentLabel}"\\s*\\)`,"g"),`FILTER.VALUE("${newLabel}")`);if(newContent!==cell.content){const{col,row}=this.getters.getCellPosition(cell.id);this.dispatch("UPDATE_CELL",{sheetId,content:newContent,col,row,});}}}}}
_isDuplicatedLabel(filterId,label){return(this.globalFilters.findIndex((filter)=>(!filterId||filter.id!==filterId)&&filter.label===label)>-1);}
_onMoveFilter(filterId,delta){const filters=[...this.globalFilters];const currentIndex=filters.findIndex((s)=>s.id===filterId);const filter=filters[currentIndex];const targetIndex=currentIndex+delta;filters.splice(currentIndex,1);filters.splice(targetIndex,0,filter);this.history.update("globalFilters",filters);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/plugins/global_filters_ui_plugin.js */
odoo.define('@spreadsheet/global_filters/plugins/global_filters_ui_plugin',['@web/core/l10n/translation','@web/core/utils/strings','@web/core/domain','@web/core/user','@web/search/utils/dates','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/helpers/helpers','@spreadsheet/assets_backend/constants','@spreadsheet/global_filters/helpers','@spreadsheet/helpers/constants','@spreadsheet/plugins','@spreadsheet/helpers/model','@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{constructDateRange,QUARTER_OPTIONS}=require("@web/search/utils/dates");const{EvaluationError,helpers}=require("@odoo/o-spreadsheet");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{isEmpty}=require("@spreadsheet/helpers/helpers");const{FILTER_DATE_OPTION}=require("@spreadsheet/assets_backend/constants");const{checkFilterValueIsValid,getRelativeDateDomain,}=require("@spreadsheet/global_filters/helpers");const{RELATIVE_DATE_RANGE_TYPES}=require("@spreadsheet/helpers/constants");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{getItemId}=require("@spreadsheet/helpers/model");const{serializeDateTime,serializeDate}=require("@web/core/l10n/dates");const{DateTime}=luxon;const MONTHS={january:{value:1,granularity:"month"},february:{value:2,granularity:"month"},march:{value:3,granularity:"month"},april:{value:4,granularity:"month"},may:{value:5,granularity:"month"},june:{value:6,granularity:"month"},july:{value:7,granularity:"month"},august:{value:8,granularity:"month"},september:{value:9,granularity:"month"},october:{value:10,granularity:"month"},november:{value:11,granularity:"month"},december:{value:12,granularity:"month"},};const{UuidGenerator,createEmptyExcelSheet,createEmptySheet,toXC,toNumber}=helpers;const uuidGenerator=new UuidGenerator();const GlobalFiltersUIPlugin=__exports.GlobalFiltersUIPlugin=class GlobalFiltersUIPlugin extends OdooUIPlugin{static getters=(["exportSheetWithActiveFilters","getFilterDisplayValue","getGlobalFilterDomain","getGlobalFilterValue","getActiveFilterCount","isGlobalFilterActive","getTextFilterOptions","getTextFilterOptionsFromRange",]);constructor(config){super(config);this.orm=config.custom.env?.services.orm;this.odooDataProvider=config.custom.odooDataProvider;this.recordsDisplayName={};this.values={};}
allowDispatch(cmd){switch(cmd.type){case"SET_GLOBAL_FILTER_VALUE":{const filter=this.getters.getGlobalFilter(cmd.id);if(!filter){return CommandResult.FilterNotFound;}
if(!checkFilterValueIsValid(filter,cmd.value)){return CommandResult.InvalidValueTypeCombination;}
break;}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":this.recordsDisplayName[cmd.filter.id]=cmd.filter.type==="relation"?cmd.filter.defaultValueDisplayNames:undefined;break;case"EDIT_GLOBAL_FILTER":{const filter=cmd.filter;const id=filter.id;if(filter.type==="date"&&this.values[id]&&this.values[id].rangeType!==filter.rangeType){delete this.values[id];}else if(!checkFilterValueIsValid(filter,this.values[id]?.value)){delete this.values[id];}
this.recordsDisplayName[id]=filter.type==="relation"?filter.defaultValueDisplayNames:undefined;break;}
case"SET_GLOBAL_FILTER_VALUE":this.recordsDisplayName[cmd.id]=cmd.displayNames;if(!cmd.value){this._clearGlobalFilterValue(cmd.id);}else{this._setGlobalFilterValue(cmd.id,cmd.value);}
break;case"SET_MANY_GLOBAL_FILTER_VALUE":for(const filter of cmd.filters){if(filter.value!==undefined){this.dispatch("SET_GLOBAL_FILTER_VALUE",{id:filter.filterId,value:filter.value,});}else{this.dispatch("CLEAR_GLOBAL_FILTER_VALUE",{id:filter.filterId});}}
break;case"REMOVE_GLOBAL_FILTER":delete this.recordsDisplayName[cmd.id];delete this.values[cmd.id];break;case"CLEAR_GLOBAL_FILTER_VALUE":this.recordsDisplayName[cmd.id]=[];this._clearGlobalFilterValue(cmd.id);break;}}
getGlobalFilterDomain(filterId,fieldMatching){const filter=this.getters.getGlobalFilter(filterId);if(!filter){return new Domain();}
switch(filter.type){case"text":return this._getTextDomain(filter,fieldMatching);case"date":return this._getDateDomain(filter,fieldMatching);case"relation":return this._getRelationDomain(filter,fieldMatching);}}
getGlobalFilterValue(filterId){const filter=this.getters.getGlobalFilter(filterId);const value=filterId in this.values?this.values[filterId].value:undefined;const preventAutomaticValue=this.values[filterId]?.value?.preventAutomaticValue;if(filter.type==="date"&&filter.rangeType==="from_to"){return value||{from:undefined,to:undefined};}
const defaultValue=(!preventAutomaticValue&&filter.defaultValue)||undefined;if(filter.type==="date"&&preventAutomaticValue){return undefined;}
if(filter.type==="date"&&isEmpty(value)&&defaultValue){return this._getValueOfCurrentPeriod(filterId);}
if(filter.type==="relation"&&preventAutomaticValue){return[];}
if(filter.type==="relation"&&isEmpty(value)&&defaultValue==="current_user"){return[user.userId];}
if(filter.type==="text"&&preventAutomaticValue){return"";}
return value||defaultValue;}
isGlobalFilterActive(id){const{type}=this.getters.getGlobalFilter(id);const value=this.getGlobalFilterValue(id);switch(type){case"text":return value;case"date":return(value&&(typeof value==="string"||value.yearOffset!==undefined||value.period||value.from||value.to));case"relation":return value&&value.length;}}
getActiveFilterCount(){return this.getters.getGlobalFilters().filter((filter)=>this.isGlobalFilterActive(filter.id)).length;}
getFilterDisplayValue(filterName){const filter=this.getters.getGlobalFilterLabel(filterName);if(!filter){throw new EvaluationError(sprintf(_t(`Filter "%s" not found`),filterName));}
const value=this.getGlobalFilterValue(filter.id);switch(filter.type){case"text":return[[{value:value||""}]];case"date":{if(filter.rangeType==="from_to"){const locale=this.getters.getLocale();const from={value:value.from?toNumber(value.from,locale):"",format:locale.dateFormat,};const to={value:value.to?toNumber(value.to,locale):"",format:locale.dateFormat,};return[[from],[to]];}
if(value&&typeof value==="string"){const type=RELATIVE_DATE_RANGE_TYPES.find((type)=>type.type===value);if(!type){return[[{value:""}]];}
return[[{value:type.description.toString()}]];}
if(!value||value.yearOffset===undefined){return[[{value:""}]];}
const year=String(DateTime.local().year+value.yearOffset);const period=QUARTER_OPTIONS[value.period];let periodStr=period&&period.description;if(!period){periodStr=MONTHS[value.period]&&String(MONTHS[value.period].value).padStart(2,"0");}
return[[{value:periodStr?periodStr+"/"+year:year}]];}
case"relation":if(!value?.length||!this.orm){return[[{value:""}]];}
if(!this.recordsDisplayName[filter.id]){const promise=this.orm.call(filter.modelName,"read",[value,["display_name"]]).then((result)=>{const names=result.map(({display_name})=>display_name);this.recordsDisplayName[filter.id]=names;});this.odooDataProvider.notifyWhenPromiseResolves(promise);return[[{value:""}]];}
return[[{value:this.recordsDisplayName[filter.id].join(", ")}]];}}
getTextFilterOptions(filterId){const filter=this.getters.getGlobalFilter(filterId);if(filter.type!=="text"||!filter.rangeOfAllowedValues){return[];}
const additionOptions=[this.getGlobalFilterValue(filterId),filter.defaultValue,];const options=this.getTextFilterOptionsFromRange(filter.rangeOfAllowedValues,additionOptions);return options;}
getTextFilterOptionsFromRange(range,additionalOptionValues=[]){const cells=this.getters.getEvaluatedCellsInZone(range.sheetId,range.zone);const uniqueFormattedValues=new Set();const uniqueValues=new Set();const allowedValues=cells.filter((cell)=>!["empty","error"].includes(cell.type)&&cell.value!=="").map((cell)=>({value:cell.value.toString(),formattedValue:cell.formattedValue,})).filter((cell)=>{if(uniqueFormattedValues.has(cell.formattedValue)){return false;}
uniqueFormattedValues.add(cell.formattedValue);uniqueValues.add(cell.value);return true;});const additionalOptions=additionalOptionValues.map((value)=>({value,formattedValue:value})).filter((cell)=>{if(cell.value===undefined||cell.value===""||uniqueValues.has(cell.value)){return false;}
uniqueValues.add(cell.value);return true;});return allowedValues.concat(additionalOptions);}
_setGlobalFilterValue(id,value){const filter=this.getters.getGlobalFilter(id);this.values[id]={value:value,rangeType:filter.type==="date"?filter.rangeType:undefined,};}
_getValueOfCurrentPeriod(filterId){const filter=this.getters.getGlobalFilter(filterId);switch(filter.defaultValue){case"this_year":return{yearOffset:0};case"this_month":{const month=new Date().getMonth()+1;const period=Object.entries(MONTHS).find((item)=>item[1].value===month)[0];return{yearOffset:0,period};}
case"this_quarter":{const quarter=Math.floor(new Date().getMonth()/3);const period=FILTER_DATE_OPTION.quarter[quarter];return{yearOffset:0,period};}}
return filter.defaultValue;}
_clearGlobalFilterValue(id){const filter=this.getters.getGlobalFilter(id);let value;switch(filter.type){case"text":value={preventAutomaticValue:true};break;case"date":value={preventAutomaticValue:true};break;case"relation":value={preventAutomaticValue:true};break;}
this.values[id]={value,rangeType:filter.type==="date"?filter.rangeType:undefined,};}
_getDateDomain(filter,fieldMatching){let granularity;const value=this.getGlobalFilterValue(filter.id);if(!value||!fieldMatching.chain){return new Domain();}
const field=fieldMatching.chain;const type=(fieldMatching.type);const offset=fieldMatching.offset||0;const now=DateTime.local();if(filter.rangeType==="from_to"){const serialize=type==="datetime"?serializeDateTime:serializeDate;const from=value.from&&serialize(DateTime.fromISO(value.from).startOf("day"));const to=value.to&&serialize(DateTime.fromISO(value.to).endOf("day"));if(from&&to){return new Domain(["&",[field,">=",from],[field,"<=",to]]);}
if(from){return new Domain([[field,">=",from]]);}
if(to){return new Domain([[field,"<=",to]]);}
return new Domain();}
if(filter.rangeType==="relative"){return getRelativeDateDomain(now,offset,value,field,type);}
const noPeriod=!value.period||value.period==="empty";const noYear=value.yearOffset===undefined;if(noPeriod&&noYear){return new Domain();}
const setParam={year:now.year};const yearOffset=value.yearOffset||0;const plusParam={years:yearOffset};if(noPeriod){granularity="year";plusParam.years+=offset;}else{granularity=value.period.endsWith("_quarter")?"quarter":"month";switch(granularity){case"month":setParam.month=MONTHS[value.period].value;plusParam.month=offset;break;case"quarter":setParam.quarter=QUARTER_OPTIONS[value.period].setParam.quarter;plusParam.quarter=offset;break;}}
return constructDateRange({referenceMoment:now,fieldName:field,fieldType:type,granularity,setParam,plusParam,}).domain;}
_getTextDomain(filter,fieldMatching){const value=this.getGlobalFilterValue(filter.id);if(!value||!fieldMatching.chain){return new Domain();}
const field=fieldMatching.chain;return new Domain([[field,"ilike",value]]);}
_getRelationDomain(filter,fieldMatching){const values=this.getGlobalFilterValue(filter.id);if(!values||values.length===0||!fieldMatching.chain){return new Domain();}
const field=fieldMatching.chain;const operator=filter.includeChildren?"child_of":"in";return new Domain([[field,operator,values]]);}
exportForExcel(data){if(this.getters.getGlobalFilters().length===0){return;}
this.exportSheetWithActiveFilters(data);data.sheets[data.sheets.length-1]={...createEmptyExcelSheet(uuidGenerator.uuidv4(),_t("Active Filters")),...data.sheets.at(-1),};}
exportSheetWithActiveFilters(data){if(this.getters.getGlobalFilters().length===0){return;}
const styleId=getItemId({bold:true},data.styles);const cells={};cells["A1"]={content:"Filter",style:styleId};cells["B1"]={content:"Value",style:styleId};let numberOfCols=2;let filterRowIndex=1;for(const filter of this.getters.getGlobalFilters()){cells[`A${filterRowIndex + 1}`]={content:filter.label};const result=this.getFilterDisplayValue(filter.label);for(const colIndex in result){numberOfCols=Math.max(numberOfCols,Number(colIndex)+2);for(const rowIndex in result[colIndex]){const cell=result[colIndex][rowIndex];if(cell.value===undefined){continue;}
const xc=toXC(Number(colIndex)+1,Number(rowIndex)+filterRowIndex);cells[xc]={content:cell.value.toString()};if(cell.format){const formatId=getItemId(cell.format,data.formats);cells[xc].format=formatId;}}}
filterRowIndex+=result[0].length;}
const sheet={...createEmptySheet(uuidGenerator.uuidv4(),_t("Active Filters")),cells,colNumber:numberOfCols,rowNumber:filterRowIndex,};data.sheets.push(sheet);}}
return __exports;});;

/* /spreadsheet/static/src/helpers/constants.js */
odoo.define('@spreadsheet/helpers/constants',['@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const DEFAULT_LINES_NUMBER=__exports.DEFAULT_LINES_NUMBER=20;const UNTITLED_SPREADSHEET_NAME=__exports.UNTITLED_SPREADSHEET_NAME=_t("Untitled spreadsheet");const RELATIVE_DATE_RANGE_TYPES=__exports.RELATIVE_DATE_RANGE_TYPES=[{type:"year_to_date",description:_t("Year to Date")},{type:"last_week",description:_t("Last 7 Days")},{type:"last_month",description:_t("Last 30 Days")},{type:"last_three_months",description:_t("Last 90 Days")},{type:"last_six_months",description:_t("Last 180 Days")},{type:"last_year",description:_t("Last 365 Days")},{type:"last_three_years",description:_t("Last 3 Years")},];return __exports;});;

/* /spreadsheet/static/src/helpers/helpers.js */
odoo.define('@spreadsheet/helpers/helpers',[],function(require){'use strict';let __exports={};__exports.intersect=intersect;function intersect(a,b){return a.filter((x)=>b.includes(x));}
__exports.toServerDateString=toServerDateString;function toServerDateString(value){return`${value.getFullYear()}-${value.getMonth() + 1}-${value.getDate()}`;}
__exports.sum=sum;function sum(array){return array.reduce((acc,n)=>acc+n,0);}
function camelToSnakeKey(word){const result=word.replace(/(.){1}([A-Z])/g,"$1 $2");return result.split(" ").join("_").toLowerCase();}
__exports.camelToSnakeObject=camelToSnakeObject;function camelToSnakeObject(obj){const result={};for(const[key,value]of Object.entries(obj)){const isPojo=typeof value==="object"&&value!==null&&value.constructor===Object;result[camelToSnakeKey(key)]=isPojo?camelToSnakeObject(value):value;}
return result;}
__exports.isEmpty=isEmpty;function isEmpty(item){if(!item){return true;}
if(typeof item==="object"){if(Object.values(item).length===0||Object.values(item).every((val)=>val===undefined)){return true;}}
return false;}
__exports.containsReferences=containsReferences;function containsReferences(cell){if(!cell.isFormula){return false;}
return cell.compiledFormula.tokens.some((token)=>token.type==="REFERENCE");}
return __exports;});;

/* /spreadsheet/static/src/helpers/model.js */
odoo.define('@spreadsheet/helpers/model',['@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/errors','@web/core/assets','@spreadsheet/model','@spreadsheet/data_sources/odoo_data_provider','@spreadsheet/ir_ui_menu/odoo_menu_link_cell'],function(require){'use strict';let __exports={};const{parse,helpers,iterateAstNodes}=require("@odoo/o-spreadsheet");const{isLoadingError}=require("@spreadsheet/o_spreadsheet/errors");const{loadBundle}=require("@web/core/assets");const{OdooSpreadsheetModel}=require("@spreadsheet/model");const{OdooDataProvider}=require("@spreadsheet/data_sources/odoo_data_provider");const{formatValue,isDefined,toCartesian,toXC}=helpers;const{isMarkdownViewUrl,isMarkdownIrMenuIdUrl,isIrMenuXmlUrl,}=require("@spreadsheet/ir_ui_menu/odoo_menu_link_cell");__exports.fetchSpreadsheetModel=fetchSpreadsheetModel;async function fetchSpreadsheetModel(env,resModel,resId){const{data,revisions}=await env.services.orm.call(resModel,"join_spreadsheet_session",[resId,]);return createSpreadsheetModel({env,data,revisions});}
__exports.createSpreadsheetModel=createSpreadsheetModel;function createSpreadsheetModel({env,data,revisions}){const odooDataProvider=new OdooDataProvider(env);const model=new OdooSpreadsheetModel(data,{custom:{odooDataProvider}},revisions);return model;}
__exports.waitForOdooSources=waitForOdooSources;async function waitForOdooSources(model){const promises=model.getters.getOdooChartIds().map((chartId)=>model.getters.getChartDataSource(chartId).load());promises.push(...model.getters.getPivotIds().filter((pivotId)=>model.getters.getPivotCoreDefinition(pivotId).type==="ODOO").map((pivotId)=>model.getters.getPivot(pivotId)).map((pivot)=>pivot.load()));promises.push(...model.getters.getListIds().map((listId)=>model.getters.getListDataSource(listId)).map((list)=>list.load()));await Promise.all(promises);}
__exports.waitForDataLoaded=waitForDataLoaded;async function waitForDataLoaded(model){await waitForOdooSources(model);const odooDataProvider=model.config.custom.odooDataProvider;if(!odooDataProvider){return;}
await new Promise((resolve,reject)=>{function check(){model.dispatch("EVALUATE_CELLS");if(isLoaded(model)){odooDataProvider.removeEventListener("data-source-updated",check);resolve();}}
odooDataProvider.addEventListener("data-source-updated",check);check();});}
function containsLinkToOdoo(link){if(link&&link.url){return(isMarkdownViewUrl(link.url)||isIrMenuXmlUrl(link.url)||isMarkdownIrMenuIdUrl(link.url));}}
__exports.freezeOdooData=freezeOdooData;async function freezeOdooData(model){await waitForDataLoaded(model);const data=model.exportData();for(const sheet of Object.values(data.sheets)){for(const[xc,cell]of Object.entries(sheet.cells)){const{col,row}=toCartesian(xc);const sheetId=sheet.id;const position={sheetId,col,row};const evaluatedCell=model.getters.getEvaluatedCell(position);if(containsOdooFunction(cell.content)){const pivotId=model.getters.getPivotIdFromPosition(position);if(pivotId&&model.getters.getPivotCoreDefinition(pivotId).type!=="ODOO"){continue;}
cell.content=evaluatedCell.value.toString();if(evaluatedCell.format){cell.format=getItemId(evaluatedCell.format,data.formats);}
const spreadZone=model.getters.getSpreadZone(position);if(spreadZone){const{left,right,top,bottom}=spreadZone;for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){const xc=toXC(col,row);const evaluatedCell=model.getters.getEvaluatedCell({sheetId,col,row});sheet.cells[xc]={...sheet.cells[xc],content:evaluatedCell.value.toString(),};if(evaluatedCell.format){sheet.cells[xc].format=getItemId(evaluatedCell.format,data.formats);}}}}}
if(containsLinkToOdoo(evaluatedCell.link)){cell.content=evaluatedCell.link.label;}}
for(const figure of sheet.figures){if(figure.tag==="chart"&&figure.data.type.startsWith("odoo_")){await loadBundle("web.chartjs_lib");const img=odooChartToImage(model,figure);figure.tag="image";figure.data={path:img,size:{width:figure.width,height:figure.height},};}}}
if(data.pivots){data.pivots=Object.fromEntries(Object.entries(data.pivots).filter(([id,def])=>def.type!=="ODOO"));}
data.lists={};exportGlobalFiltersToSheet(model,data);return data;}
function exportGlobalFiltersToSheet(model,data){model.getters.exportSheetWithActiveFilters(data);const locale=model.getters.getLocale();for(const filter of data.globalFilters){const content=model.getters.getFilterDisplayValue(filter.label);filter["value"]=content.flat().filter(isDefined).map(({value,format})=>formatValue(value,{format,locale})).filter((formattedValue)=>formattedValue!=="").join(", ");}}
__exports.getItemId=getItemId;function getItemId(item,itemsDic){for(const[key,value]of Object.entries(itemsDic)){if(value===item){return parseInt(key,10);}}
const ids=Object.keys(itemsDic);const maxId=ids.length===0?0:Math.max(...ids.map((id)=>parseInt(id,10)));itemsDic[maxId+1]=item;return maxId+1;}
function containsOdooFunction(content){if(!content||!content.startsWith("=")||(!content.toUpperCase().includes("ODOO.")&&!content.toUpperCase().includes("_T")&&!content.toUpperCase().includes("PIVOT"))){return false;}
try{const ast=parse(content);return iterateAstNodes(ast).some((ast)=>ast.type==="FUNCALL"&&(ast.value.toUpperCase().startsWith("ODOO.")||ast.value.toUpperCase().startsWith("_T")||ast.value.toUpperCase().startsWith("PIVOT")));}catch{return false;}}
function isLoaded(model){for(const sheetId of model.getters.getSheetIds()){for(const cell of Object.values(model.getters.getEvaluatedCells(sheetId))){if(cell.type==="error"&&isLoadingError(cell)){return false;}}}
return true;}
function odooChartToImage(model,figure){const runtime=model.getters.getChartRuntime(figure.id);const div=document.createElement("div");div.style.width=`${figure.width}px`;div.style.height=`${figure.height}px`;const canvas=document.createElement("canvas");div.append(canvas);canvas.setAttribute("width",figure.width);canvas.setAttribute("height",figure.height);document.body.append(div);if(!("chartJsConfig"in runtime)){return"";}
runtime.chartJsConfig.plugins=[backgroundColorPlugin];const chart=new Chart(canvas,runtime.chartJsConfig);const img=chart.toBase64Image();chart.destroy();div.remove();return img;}
const backgroundColorPlugin={id:"customCanvasBackgroundColor",beforeDraw:(chart,args,options)=>{const{ctx}=chart;ctx.save();ctx.globalCompositeOperation="destination-over";ctx.fillStyle="#ffffff";ctx.fillRect(0,0,chart.width,chart.height);ctx.restore();},};return __exports;});;

/* /spreadsheet/static/src/helpers/odoo_functions_helpers.js */
odoo.define('@spreadsheet/helpers/odoo_functions_helpers',[],function(require){'use strict';let __exports={};__exports.extractDataSourceId=extractDataSourceId;function extractDataSourceId(tokenAtCursor){const idAst=tokenAtCursor.functionContext?.args[0];if(!idAst||!["STRING","NUMBER"].includes(idAst.type)){return;}
return idAst.value;}
return __exports;});;

/* /spreadsheet/static/src/hooks.js */
odoo.define('@spreadsheet/hooks',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@odoo/o-spreadsheet','@odoo/owl','@web/core/assets'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{stores}=require("@odoo/o-spreadsheet");const{useEffect,useExternalListener,useState}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{useStore,useStoreProvider,NotificationStore}=stores;__exports.useSpreadsheetPrint=useSpreadsheetPrint;function useSpreadsheetPrint(model){let frozenPrintState=undefined;const printState=useState({active:false});useExternalListener(window,"keydown",async(ev)=>{const isMeta=ev.metaKey||ev.ctrlKey;if(ev.key==="p"&&isMeta){if(!model()){return;}
ev.preventDefault();ev.stopImmediatePropagation();await preparePrint();}},{capture:true});useExternalListener(window,"afterprint",afterPrint);useEffect(()=>{if(printState.active){window.print();}},()=>[printState.active]);function getPrintRect(){const sheetId=model().getters.getActiveSheetId();const{bottom,right}=model().getters.getSheetZone(sheetId);const{end:width}=model().getters.getColDimensions(sheetId,right);const{end:height}=model().getters.getRowDimensions(sheetId,bottom);return{x:0,y:0,width,height};}
async function preparePrint(){if(!model()){return;}
await loadBundle("spreadsheet.assets_print");const{width,height}=model().getters.getSheetViewDimension();const{width:widthAndHeader,height:heightAndHeader}=model().getters.getSheetViewDimension();const viewRect={x:widthAndHeader-width,y:heightAndHeader-height,width,height,};frozenPrintState={viewRect,offset:model().getters.getActiveSheetDOMScrollInfo(),mode:model().config.mode,};model().updateMode("dashboard");model().dispatch("SET_VIEWPORT_OFFSET",{offsetX:0,offsetY:0});model().dispatch("RESIZE_SHEETVIEW",{...getPrintRect(),});printState.active=true;}
function afterPrint(){if(!model()){return;}
if(frozenPrintState){model().dispatch("RESIZE_SHEETVIEW",frozenPrintState.viewRect);const{scrollX:offsetX,scrollY:offsetY}=frozenPrintState.offset;model().dispatch("SET_VIEWPORT_OFFSET",{offsetX,offsetY});model().updateMode(frozenPrintState.mode);frozenPrintState=undefined;}
printState.active=false;}
return preparePrint;}
__exports.useSpreadsheetNotificationStore=useSpreadsheetNotificationStore;function useSpreadsheetNotificationStore(){function askConfirmation(body,confirm){dialog.add(ConfirmationDialog,{title:_t("Odoo Spreadsheet"),body,confirm,cancel:()=>{},confirmLabel:_t("Confirm"),});}
function notifyUser(notification){notifications.add(notification.text,{type:notification.type,sticky:notification.sticky,});}
function raiseError(body,callBack){dialog.add(ConfirmationDialog,{title:_t("Odoo Spreadsheet"),body,},{onClose:callBack,});}
const dialog=useService("dialog");const notifications=useService("notification");useStoreProvider();const notificationStore=useStore(NotificationStore);notificationStore.updateNotificationCallbacks({notifyUser:notifyUser,raiseError:raiseError,askConfirmation:askConfirmation,});}
return __exports;});;

/* /spreadsheet/static/src/index.js */
odoo.define('@spreadsheet',['@odoo/o-spreadsheet','@spreadsheet/global_filters','@spreadsheet/pivot','@spreadsheet/list','@spreadsheet/chart','@spreadsheet/pivot/plugins/pivot_core_global_filter_plugin','@spreadsheet/pivot/plugins/pivot_odoo_ui_plugin'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{corePluginRegistry,coreViewsPluginRegistry}=spreadsheet.registries;const{GlobalFiltersCorePlugin,GlobalFiltersUIPlugin}=require("@spreadsheet/global_filters");const{PivotOdooCorePlugin,PivotUIGlobalFilterPlugin}=require("@spreadsheet/pivot");const{ListCorePlugin,ListUIPlugin}=require("@spreadsheet/list");const{ChartOdooMenuPlugin,OdooChartCorePlugin,OdooChartUIPlugin,}=require("@spreadsheet/chart");const{PivotCoreGlobalFilterPlugin}=require("@spreadsheet/pivot/plugins/pivot_core_global_filter_plugin");const{PivotOdooUIPlugin}=require("@spreadsheet/pivot/plugins/pivot_odoo_ui_plugin");corePluginRegistry.add("OdooGlobalFiltersCorePlugin",GlobalFiltersCorePlugin);corePluginRegistry.add("PivotOdooCorePlugin",PivotOdooCorePlugin);corePluginRegistry.add("OdooPivotGlobalFiltersCorePlugin",PivotCoreGlobalFilterPlugin);corePluginRegistry.add("OdooListCorePlugin",ListCorePlugin);corePluginRegistry.add("odooChartCorePlugin",OdooChartCorePlugin);corePluginRegistry.add("chartOdooMenuPlugin",ChartOdooMenuPlugin);coreViewsPluginRegistry.add("OdooGlobalFiltersUIPlugin",GlobalFiltersUIPlugin);coreViewsPluginRegistry.add("OdooPivotGlobalFilterUIPlugin",PivotUIGlobalFilterPlugin);coreViewsPluginRegistry.add("OdooListUIPlugin",ListUIPlugin);coreViewsPluginRegistry.add("odooChartUIPlugin",OdooChartUIPlugin);coreViewsPluginRegistry.add("odooPivotUIPlugin",PivotOdooUIPlugin);return __exports;});;

/* /spreadsheet/static/src/ir_ui_menu/index.js */
odoo.define('@spreadsheet/ir_ui_menu',['@web/core/registry','@odoo/o-spreadsheet','@spreadsheet/ir_ui_menu/ir_ui_menu_plugin','@spreadsheet/ir_ui_menu/odoo_menu_link_cell','@web/core/l10n/translation','@web/core/utils/strings','@spreadsheet/actions/helpers'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const spreadsheet=require("@odoo/o-spreadsheet");const{IrMenuPlugin}=require("@spreadsheet/ir_ui_menu/ir_ui_menu_plugin");const{isMarkdownIrMenuIdUrl,isIrMenuXmlUrl,isMarkdownViewUrl,parseIrMenuXmlUrl,parseViewLink,parseIrMenuIdLink,}=require("@spreadsheet/ir_ui_menu/odoo_menu_link_cell");const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const{navigateTo}=require("@spreadsheet/actions/helpers");const{urlRegistry,corePluginRegistry,errorTypes}=spreadsheet.registries;const{EvaluationError}=spreadsheet;corePluginRegistry.add("ir_ui_menu_plugin",IrMenuPlugin);const LINK_ERROR="#LINK";errorTypes.add(LINK_ERROR);class BadOdooLinkError extends EvaluationError{constructor(menuId){super(sprintf(_t("Menu %s not found. You may not have the required access rights."),menuId),LINK_ERROR);}}
const spreadsheetLinkMenuCellService=__exports.spreadsheetLinkMenuCellService={dependencies:["menu"],start(env){function _getIrMenuByXmlId(xmlId){const menu=env.services.menu.getAll().find((menu)=>menu.xmlid===xmlId);if(!menu){throw new BadOdooLinkError(xmlId);}
return menu;}
urlRegistry.add("OdooMenuIdLink",{sequence:65,match:isMarkdownIrMenuIdUrl,createLink(url,label){const menuId=parseIrMenuIdLink(url);const menu=env.services.menu.getMenu(menuId);if(!menu){throw new BadOdooLinkError(menuId);}
return{url,label:_t(label),isExternal:false,isUrlEditable:false,};},urlRepresentation(url){const menuId=parseIrMenuIdLink(url);return env.services.menu.getMenu(menuId).name;},open(url){const menuId=parseIrMenuIdLink(url);const menu=env.services.menu.getMenu(menuId);env.services.action.doAction(menu.actionID);},}).add("OdooMenuXmlLink",{sequence:66,match:isIrMenuXmlUrl,createLink(url,label){const xmlId=parseIrMenuXmlUrl(url);_getIrMenuByXmlId(xmlId);return{url,label:_t(label),isExternal:false,isUrlEditable:false,};},urlRepresentation(url){const xmlId=parseIrMenuXmlUrl(url);const menuId=_getIrMenuByXmlId(xmlId).id;return env.services.menu.getMenu(menuId).name;},open(url){const xmlId=parseIrMenuXmlUrl(url);const menuId=_getIrMenuByXmlId(xmlId).id;const menu=env.services.menu.getMenu(menuId);env.services.action.doAction(menu.actionID);},}).add("OdooViewLink",{sequence:67,match:isMarkdownViewUrl,createLink(url,label){return{url,label:_t(label),isExternal:false,isUrlEditable:false,};},urlRepresentation(url){const actionDescription=parseViewLink(url);return actionDescription.name;},async open(url,env){const{viewType,action,name}=parseViewLink(url);await navigateTo(env,action.xmlId,{type:"ir.actions.act_window",name:name,res_model:action.modelName,views:action.views,target:"current",domain:action.domain,context:action.context,},{viewType});},});return true;},};registry.category("services").add("spreadsheetLinkMenuCell",spreadsheetLinkMenuCellService);return __exports;});;

/* /spreadsheet/static/src/ir_ui_menu/ir_ui_menu_plugin.js */
odoo.define('@spreadsheet/ir_ui_menu/ir_ui_menu_plugin',['@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{OdooCorePlugin}=require("@spreadsheet/plugins");const IrMenuPlugin=__exports.IrMenuPlugin=class IrMenuPlugin extends OdooCorePlugin{static getters=(["getIrMenu"]);constructor(config){super(config);this.env=config.custom.env;}
getIrMenu(menuId){let menu=this.env.services.menu.getMenu(menuId);if(!menu){menu=this.env.services.menu.getAll().find((menu)=>menu.xmlid===menuId);}
return menu;}}
return __exports;});;

/* /spreadsheet/static/src/ir_ui_menu/odoo_menu_link_cell.js */
odoo.define('@spreadsheet/ir_ui_menu/odoo_menu_link_cell',[],function(require){'use strict';let __exports={};const VIEW_PREFIX="odoo://view/";const IR_MENU_ID_PREFIX="odoo://ir_menu_id/";const IR_MENU_XML_ID_PREFIX="odoo://ir_menu_xml_id/";__exports.isMarkdownViewUrl=isMarkdownViewUrl;function isMarkdownViewUrl(url){return url.startsWith(VIEW_PREFIX);}
__exports.parseViewLink=parseViewLink;function parseViewLink(viewLink){if(viewLink.startsWith(VIEW_PREFIX)){return JSON.parse(viewLink.substring(VIEW_PREFIX.length));}
throw new Error(`${viewLink} is not a valid view link`);}
__exports.buildViewLink=buildViewLink;function buildViewLink(viewDescription){return`${VIEW_PREFIX}${JSON.stringify(viewDescription)}`;}
__exports.isMarkdownIrMenuIdUrl=isMarkdownIrMenuIdUrl;function isMarkdownIrMenuIdUrl(url){return url.startsWith(IR_MENU_ID_PREFIX);}
__exports.parseIrMenuIdLink=parseIrMenuIdLink;function parseIrMenuIdLink(irMenuLink){if(irMenuLink.startsWith(IR_MENU_ID_PREFIX)){return parseInt(irMenuLink.substring(IR_MENU_ID_PREFIX.length),10);}
throw new Error(`${irMenuLink} is not a valid menu id link`);}
__exports.buildIrMenuIdLink=buildIrMenuIdLink;function buildIrMenuIdLink(menuId){return`${IR_MENU_ID_PREFIX}${menuId}`;}
__exports.isIrMenuXmlUrl=isIrMenuXmlUrl;function isIrMenuXmlUrl(url){return url.startsWith(IR_MENU_XML_ID_PREFIX);}
__exports.parseIrMenuXmlUrl=parseIrMenuXmlUrl;function parseIrMenuXmlUrl(irMenuUrl){if(irMenuUrl.startsWith(IR_MENU_XML_ID_PREFIX)){return irMenuUrl.substring(IR_MENU_XML_ID_PREFIX.length);}
throw new Error(`${irMenuUrl} is not a valid menu xml link`);}
__exports.buildIrMenuXmlLink=buildIrMenuXmlLink;function buildIrMenuXmlLink(menuXmlId){return`${IR_MENU_XML_ID_PREFIX}${menuXmlId}`;}
return __exports;});;

/* /spreadsheet/static/src/list/index.js */
odoo.define('@spreadsheet/list',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/list/list_functions','@spreadsheet/list/plugins/list_core_plugin','@spreadsheet/list/plugins/list_ui_plugin','@spreadsheet/list/list_actions'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");require("@spreadsheet/list/list_functions");const{ListCorePlugin}=require("@spreadsheet/list/plugins/list_core_plugin");const{ListUIPlugin}=require("@spreadsheet/list/plugins/list_ui_plugin");const{SEE_RECORD_LIST,SEE_RECORD_LIST_VISIBLE}=require("@spreadsheet/list/list_actions");const{inverseCommandRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
const{coreTypes,invalidateEvaluationCommands}=spreadsheet;const{cellMenuRegistry}=spreadsheet.registries;coreTypes.add("INSERT_ODOO_LIST");coreTypes.add("RENAME_ODOO_LIST");coreTypes.add("REMOVE_ODOO_LIST");coreTypes.add("RE_INSERT_ODOO_LIST");coreTypes.add("UPDATE_ODOO_LIST_DOMAIN");coreTypes.add("UPDATE_ODOO_LIST");coreTypes.add("ADD_LIST_DOMAIN");coreTypes.add("DUPLICATE_ODOO_LIST");invalidateEvaluationCommands.add("UPDATE_ODOO_LIST_DOMAIN");invalidateEvaluationCommands.add("UPDATE_ODOO_LIST");invalidateEvaluationCommands.add("INSERT_ODOO_LIST");invalidateEvaluationCommands.add("REMOVE_ODOO_LIST");cellMenuRegistry.add("list_see_record",({name:_t("See record"),sequence:200,execute:async(env)=>{const position=env.model.getters.getActivePosition();await SEE_RECORD_LIST(position,env);},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return SEE_RECORD_LIST_VISIBLE(position,env.model.getters);},icon:"o-spreadsheet-Icon.SEE_RECORDS",}));inverseCommandRegistry.add("INSERT_ODOO_LIST",identity).add("UPDATE_ODOO_LIST_DOMAIN",identity).add("UPDATE_ODOO_LIST",identity).add("RE_INSERT_ODOO_LIST",identity).add("RENAME_ODOO_LIST",identity).add("REMOVE_ODOO_LIST",identity);Object.assign(__exports,{ListCorePlugin,ListUIPlugin});return __exports;});;

/* /spreadsheet/static/src/list/list_actions.js */
odoo.define('@spreadsheet/list/list_actions',['@odoo/o-spreadsheet','@spreadsheet/list/list_helpers','@spreadsheet/actions/helpers'],function(require){'use strict';let __exports={};const{astToFormula,helpers}=require("@odoo/o-spreadsheet");const{getFirstListFunction,getNumberOfListFormulas}=require("@spreadsheet/list/list_helpers");const{navigateTo}=require("@spreadsheet/actions/helpers");const{isMatrix}=helpers;const SEE_RECORD_LIST=__exports.SEE_RECORD_LIST=async(position,env)=>{const cell=env.model.getters.getCorrespondingFormulaCell(position);const sheetId=position.sheetId;if(!cell||!cell.isFormula){return;}
const{args}=getFirstListFunction(cell.compiledFormula.tokens);const evaluatedArgs=args.map(astToFormula).map((arg)=>env.model.getters.evaluateFormula(sheetId,arg));const listId=env.model.getters.getListIdFromPosition(position);const{model,actionXmlId,context}=env.model.getters.getListDefinition(listId);const dataSource=await env.model.getters.getAsyncListDataSource(listId);let index=evaluatedArgs[1];if(isMatrix(index)){const mainPosition=env.model.getters.getCellPosition(cell.id);const rowOffset=position.row-mainPosition.row;const colOffset=position.col-mainPosition.col;index=index[colOffset][rowOffset];}
if(typeof index!=="number"){return;}
const recordId=dataSource.getIdFromPosition(index-1);if(!recordId){return;}
await navigateTo(env,actionXmlId,{type:"ir.actions.act_window",res_model:model,res_id:recordId,views:[[false,"form"]],context,},{viewType:"form"});};const SEE_RECORD_LIST_VISIBLE=__exports.SEE_RECORD_LIST_VISIBLE=(position,getters)=>{const evaluatedCell=getters.getEvaluatedCell(position);const cell=getters.getCorrespondingFormulaCell(position);return!!(evaluatedCell.type!=="empty"&&evaluatedCell.type!=="error"&&evaluatedCell.value!==""&&cell&&cell.isFormula&&getNumberOfListFormulas(cell.compiledFormula.tokens)===1&&getFirstListFunction(cell.compiledFormula.tokens).functionName==="ODOO.LIST");};return __exports;});;

/* /spreadsheet/static/src/list/list_data_source.js */
odoo.define('@spreadsheet/list/list_data_source',['@spreadsheet/data_sources/odoo_views_data_source','@odoo/o-spreadsheet','@web/core/l10n/translation','@web/core/l10n/dates','@web/search/utils/order_by','@spreadsheet/data_sources/data_source'],function(require){'use strict';let __exports={};const{OdooViewsDataSource}=require("@spreadsheet/data_sources/odoo_views_data_source");const{EvaluationError}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{formatDateTime,deserializeDateTime,formatDate,deserializeDate,}=require("@web/core/l10n/dates");const{orderByToString}=require("@web/search/utils/order_by");const spreadsheet=require("@odoo/o-spreadsheet");const{LOADING_ERROR}=require("@spreadsheet/data_sources/data_source");const{toNumber}=spreadsheet.helpers;const{DEFAULT_LOCALE}=spreadsheet.constants;const ListDataSource=__exports.ListDataSource=class ListDataSource extends OdooViewsDataSource{constructor(services,params){super(services,params);this.maxPosition=0;this.maxPositionFetched=0;this.data=[];this.fieldsToFetch=new Set();}
increaseMaxPosition(position){this.maxPosition=Math.max(this.maxPosition,position);}
addFieldToFetch(fieldName){if(this.data.length&&fieldName in this.data[0]){return;}
this.fieldsToFetch.add(fieldName);}
async load(params){if(this._fetchingPromise){await this._fetchingPromise;await this._loadPromise;return;}
return super.load(params);}
async _load(){await super._load();if(this.maxPosition===0){this.data=[];return;}
const{domain,orderBy,context}=this._searchParams;const{records}=await this._orm.webSearchRead(this._metaData.resModel,domain,{specification:this._getReadSpec(),order:orderByToString(orderBy),limit:this.maxPosition,context,});this.data=records;this.maxPositionFetched=this.maxPosition;}
_getReadSpec(){const spec={};const fields=[...this.fieldsToFetch].map((f)=>this.getField(f)).filter(Boolean);for(const field of fields){switch(field.type){case"monetary":spec[field.name]={};spec[field.currency_field]={fields:{...spec[field.currency_field]?.fields,name:{},symbol:{},decimal_places:{},position:{},},};break;case"many2one":case"many2many":case"one2many":spec[field.name]={fields:{display_name:{},...spec[field.name]?.fields,},};break;default:spec[field.name]={};break;}}
return spec;}
getIdFromPosition(position){this.assertIsValid();const record=this.data[position];return record?record.id:undefined;}
getListHeaderValue(fieldName){if(!this.isMetaDataLoaded()){this._triggerFetching();return LOADING_ERROR;}
this.assertIsValid();const field=this.getField(fieldName);return field?field.string:fieldName;}
getListCellValue(position,fieldName){if(this.isLoading()){return LOADING_ERROR;}
if(!this._isValid){return this._loadError;}
if(position>=this.maxPositionFetched){this.increaseMaxPosition(position+1);this._triggerFetching();return LOADING_ERROR;}
const record=this.data[position];if(!record){return"";}
const field=this.getField(fieldName);if(!field){return new EvaluationError(_t("The field %s does not exist or you do not have access to that field",fieldName));}
if(!(fieldName in record)){this.addFieldToFetch(fieldName);this._triggerFetching();return LOADING_ERROR;}
this.assertIsValid();switch(field.type){case"many2one":return record[fieldName].display_name??"";case"one2many":case"many2many":{const labels=record[fieldName].map(({display_name})=>display_name).filter((displayName)=>displayName!==undefined);return labels.join(", ");}
case"selection":{const key=record[fieldName];const value=field.selection.find((array)=>array[0]===key);return value?value[1]:"";}
case"boolean":return record[fieldName]?true:false;case"date":return record[fieldName]?toNumber(this._formatDate(record[fieldName]),DEFAULT_LOCALE):"";case"datetime":return record[fieldName]?toNumber(this._formatDateTime(record[fieldName]),DEFAULT_LOCALE):"";case"properties":{const properties=record[fieldName]||[];return properties.map((property)=>property.string).join(", ");}
case"json":return new EvaluationError(_t('Fields of type "%s" are not supported',"json"));default:return record[fieldName]||"";}}
getListCurrency(position,currencyFieldName){this.assertIsValid();const currency=this.data[position]?.[currencyFieldName];if(!currency){return undefined;}
return{code:currency.name,symbol:currency.symbol,decimalPlaces:currency.decimal_places,position:currency.position,};}
_formatDateTime(dateValue){const date=deserializeDateTime(dateValue);return formatDateTime(date.reconfigure({numberingSystem:"latn"}),{format:"yyyy-MM-dd HH:mm:ss",});}
_formatDate(dateValue){const date=deserializeDate(dateValue);return formatDate(date.reconfigure({numberingSystem:"latn"}),{format:"yyyy-MM-dd",});}
_triggerFetching(){if(this._fetchingPromise){return;}
this._fetchingPromise=Promise.resolve().then(()=>{return new Promise((resolve)=>{this._fetchingPromise=undefined;this.load({reload:true});resolve();});});}}
return __exports;});;

/* /spreadsheet/static/src/list/list_functions.js */
odoo.define('@spreadsheet/list/list_functions',['@web/core/l10n/translation','@odoo/o-spreadsheet','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{helpers,registries,EvaluationError}=require("@odoo/o-spreadsheet");const{sprintf}=require("@web/core/utils/strings");const{arg,toString,toNumber}=helpers;const{functionRegistry}=registries;function assertListsExists(listId,getters){if(!getters.isExistingList(listId)){throw new EvaluationError(sprintf(_t('There is no list with id "%s"'),listId));}}
const ODOO_LIST={description:_t("Get the value from a list."),args:[arg("list_id (string)",_t("ID of the list.")),arg("index (string)",_t("Position of the record in the list.")),arg("field_name (string)",_t("Name of the field.")),],category:"Odoo",compute:function(listId,index,fieldName){const id=toString(listId);const position=toNumber(index,this.locale)-1;const _fieldName=toString(fieldName);assertListsExists(id,this.getters);return this.getters.getListCellValueAndFormat(id,position,_fieldName);},returns:["NUMBER","STRING"],};const ODOO_LIST_HEADER={description:_t("Get the header of a list."),args:[arg("list_id (string)",_t("ID of the list.")),arg("field_name (string)",_t("Name of the field.")),],category:"Odoo",compute:function(listId,fieldName){const id=toString(listId);const field=toString(fieldName);assertListsExists(id,this.getters);return this.getters.getListHeaderValue(id,field);},returns:["NUMBER","STRING"],};functionRegistry.add("ODOO.LIST",ODOO_LIST);functionRegistry.add("ODOO.LIST.HEADER",ODOO_LIST_HEADER);return __exports;});;

/* /spreadsheet/static/src/list/list_helpers.js */
odoo.define('@spreadsheet/list/list_helpers',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{helpers}=require("@odoo/o-spreadsheet");const{getFunctionsFromTokens}=helpers;__exports.getNumberOfListFormulas=getNumberOfListFormulas;function getNumberOfListFormulas(tokens){return getFunctionsFromTokens(tokens,["ODOO.LIST","ODOO.LIST.HEADER"]).length;}
__exports.getFirstListFunction=getFirstListFunction;function getFirstListFunction(tokens){return getFunctionsFromTokens(tokens,["ODOO.LIST","ODOO.LIST.HEADER"])[0];}
return __exports;});;

/* /spreadsheet/static/src/list/plugins/list_core_plugin.js */
odoo.define('@spreadsheet/list/plugins/list_core_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@web/core/utils/strings','@spreadsheet/global_filters/helpers','@web/core/domain','@web/core/utils/objects','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{helpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{sprintf}=require("@web/core/utils/strings");const{checkFilterFieldMatching}=require("@spreadsheet/global_filters/helpers");const{Domain}=require("@web/core/domain");const{deepCopy}=require("@web/core/utils/objects");const{OdooCorePlugin}=require("@spreadsheet/plugins");const{getMaxObjectId}=helpers;const ListCorePlugin=__exports.ListCorePlugin=class ListCorePlugin extends OdooCorePlugin{static getters=(["getListDisplayName","getListDefinition","getListModelDefinition","getListIds","getListName","getNextListId","isExistingList","getListFieldMatch","getListFieldMatching",]);constructor(config){super(config);this.nextId=1;this.lists={};globalFiltersFieldMatchers["list"]={getIds:()=>this.getters.getListIds(),getDisplayName:(listId)=>this.getters.getListName(listId),getTag:(listId)=>sprintf(_t("List #%s"),listId),getFieldMatching:(listId,filterId)=>this.getListFieldMatching(listId,filterId),getModel:(listId)=>this.getListDefinition(listId).model,};}
allowDispatch(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":if(cmd.id!==this.nextId.toString()){return CommandResult.InvalidNextId;}
if(this.lists[cmd.id]){return CommandResult.ListIdDuplicated;}
break;case"DUPLICATE_ODOO_LIST":if(!this.lists[cmd.listId]){return CommandResult.ListIdNotFound;}
if(cmd.newListId!==this.nextId.toString()){return CommandResult.InvalidNextId;}
break;case"RENAME_ODOO_LIST":if(!(cmd.listId in this.lists)){return CommandResult.ListIdNotFound;}
if(cmd.name===""){return CommandResult.EmptyName;}
break;case"UPDATE_ODOO_LIST":case"UPDATE_ODOO_LIST_DOMAIN":if(!(cmd.listId in this.lists)){return CommandResult.ListIdNotFound;}
break;case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.list){return checkFilterFieldMatching(cmd.list);}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":{const{sheetId,col,row,id,definition,linesNumber,columns}=cmd;const anchor=[col,row];this._addList(id,definition);this._insertList(sheetId,anchor,id,linesNumber,columns);this.history.update("nextId",parseInt(id,10)+1);break;}
case"DUPLICATE_ODOO_LIST":{const{listId,newListId}=cmd;this._addList(newListId,deepCopy(this.lists[listId].definition));this.history.update("nextId",parseInt(newListId,10)+1);break;}
case"RE_INSERT_ODOO_LIST":{const{sheetId,col,row,id,linesNumber,columns}=cmd;const anchor=[col,row];this._insertList(sheetId,anchor,id,linesNumber,columns);break;}
case"RENAME_ODOO_LIST":{this.history.update("lists",cmd.listId,"definition","name",cmd.name);break;}
case"REMOVE_ODOO_LIST":{const lists={...this.lists};delete lists[cmd.listId];this.history.update("lists",lists);break;}
case"UPDATE_ODOO_LIST_DOMAIN":{this.history.update("lists",cmd.listId,"definition","searchParams","domain",cmd.domain);break;}
case"UPDATE_ODOO_LIST":{this.history.update("lists",cmd.listId,"definition",cmd.list);break;}
case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.list){this._setListFieldMatching(cmd.filter.id,cmd.list);}
break;case"REMOVE_GLOBAL_FILTER":this._onFilterDeletion(cmd.id);break;}}
getListDisplayName(id){return`(#${id}) ${this.getListName(id)}`;}
getListName(id){return _t(this.lists[id].definition.name);}
getListFieldMatch(id){return this.lists[id].fieldMatching;}
getListIds(){return Object.keys(this.lists);}
getNextListId(){return this.nextId.toString();}
getListDefinition(id){const def=this.lists[id].definition;return{columns:[...def.metaData.columns],domain:def.searchParams.domain,model:def.metaData.resModel,context:{...def.searchParams.context},orderBy:[...def.searchParams.orderBy],id,name:def.name,actionXmlId:def.actionXmlId,};}
getListModelDefinition(id){return this.lists[id].definition;}
isExistingList(id){return id in this.lists;}
getListFieldMatching(listId,filterId){return this.lists[listId].fieldMatching[filterId];}
_setListFieldMatching(filterId,listFieldMatches){const lists={...this.lists};for(const[listId,fieldMatch]of Object.entries(listFieldMatches)){lists[listId].fieldMatching[filterId]=fieldMatch;}
this.history.update("lists",lists);}
_onFilterDeletion(filterId){const lists={...this.lists};for(const listId in lists){this.history.update("lists",listId,"fieldMatching",filterId,undefined);}}
_addList(id,definition,fieldMatching=undefined){const lists={...this.lists};if(!fieldMatching){const model=definition.metaData.resModel;fieldMatching=this.getters.getFieldMatchingForModel(model);}
lists[id]={id,definition,fieldMatching,};this.history.update("lists",lists);}
_insertList(sheetId,anchor,id,linesNumber,columns){this._resizeSheet(sheetId,anchor,columns.length,linesNumber+1);this._insertHeaders(sheetId,anchor,id,columns);this._insertValues(sheetId,anchor,id,columns,linesNumber);}
_insertHeaders(sheetId,anchor,id,columns){let[col,row]=anchor;for(const column of columns){this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=ODOO.LIST.HEADER(${id},"${column.name}")`,});col++;}}
_insertValues(sheetId,anchor,id,columns,linesNumber){let col=anchor[0];let row=anchor[1]+1;for(let i=1;i<=linesNumber;i++){col=anchor[0];for(const column of columns){this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=ODOO.LIST(${id},${i},"${column.name}")`,});col++;}
row++;}}
_resizeSheet(sheetId,anchor,columns,rows){const numberCols=this.getters.getNumberCols(sheetId);const deltaCol=numberCols-anchor[0];if(deltaCol<columns){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:numberCols-1,sheetId:sheetId,quantity:columns-deltaCol,position:"after",});}
const numberRows=this.getters.getNumberRows(sheetId);const deltaRow=numberRows-anchor[1];if(deltaRow<rows){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:numberRows-1,sheetId:sheetId,quantity:rows-deltaRow,position:"after",});}}
import(data){if(data.lists){for(const[id,list]of Object.entries(data.lists)){const definition={metaData:{resModel:list.model,columns:list.columns,},searchParams:{domain:list.domain,context:list.context,orderBy:list.orderBy,},name:list.name,};this._addList(id,definition,list.fieldMatching);}}
this.nextId=data.listNextId||getMaxObjectId(this.lists)+1;}
export(data){data.lists={};for(const id in this.lists){data.lists[id]=JSON.parse(JSON.stringify(this.getListDefinition(id)));data.lists[id].domain=new Domain(data.lists[id].domain).toJson();data.lists[id].fieldMatching=this.lists[id].fieldMatching;}
data.listNextId=this.nextId;}}
return __exports;});;

/* /spreadsheet/static/src/list/plugins/list_ui_plugin.js */
odoo.define('@spreadsheet/list/plugins/list_ui_plugin',['@odoo/o-spreadsheet','@spreadsheet/list/list_helpers','@web/core/domain','@spreadsheet/list/list_data_source','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{getFirstListFunction}=require("@spreadsheet/list/list_helpers");const{Domain}=require("@web/core/domain");const{ListDataSource}=require("@spreadsheet/list/list_data_source");const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{astToFormula,constants}=spreadsheet;const{isEvaluationError}=spreadsheet.helpers;const{PIVOT_TABLE_CONFIG}=constants;const ListUIPlugin=__exports.ListUIPlugin=class ListUIPlugin extends OdooUIPlugin{static getters=(["getListComputedDomain","getListHeaderValue","getListIdFromPosition","getListCellValueAndFormat","getListDataSource","getAsyncListDataSource","isListUnused",]);constructor(config){super(config);this.env=config.custom.env;this.lists={};this.custom=config.custom;globalFiltersFieldMatchers["list"]={...globalFiltersFieldMatchers["list"],getFields:(listId)=>this.getListDataSource(listId).getFields(),waitForReady:()=>this.getListsWaitForReady(),};}
beforeHandle(cmd){switch(cmd.type){case"START":for(const listId of this.getters.getListIds()){this._setupListDataSource(listId,0);}
this._addDomains();break;}}
handle(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":{const{id,linesNumber}=cmd;this._setupListDataSource(id,linesNumber);break;}
case"INSERT_ODOO_LIST_WITH_TABLE":{this.dispatch("INSERT_ODOO_LIST",cmd);this._addTable(cmd);break;}
case"RE_INSERT_ODOO_LIST_WITH_TABLE":{this.dispatch("RE_INSERT_ODOO_LIST",cmd);this._addTable(cmd);break;}
case"DUPLICATE_ODOO_LIST":{this._setupListDataSource(cmd.newListId,0);break;}
case"REFRESH_ALL_DATA_SOURCES":this._refreshOdooLists();break;case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":case"REMOVE_GLOBAL_FILTER":case"SET_GLOBAL_FILTER_VALUE":case"CLEAR_GLOBAL_FILTER_VALUE":this._addDomains();break;case"UPDATE_ODOO_LIST":case"UPDATE_ODOO_LIST_DOMAIN":{const listDefinition=this.getters.getListModelDefinition(cmd.listId);const dataSourceId=this._getListDataSourceId(cmd.listId);this.lists[dataSourceId]=new ListDataSource(this.custom,listDefinition);break;}
case"DELETE_SHEET":this.unusedLists=undefined;break;case"UPDATE_CELL":this.unusedLists=undefined;break;case"UNDO":case"REDO":{this.unusedLists=undefined;if(cmd.commands.find((command)=>["ADD_GLOBAL_FILTER","EDIT_GLOBAL_FILTER","REMOVE_GLOBAL_FILTER",].includes(command.type))){this._addDomains();}
const updateCommands=cmd.commands.filter((cmd)=>cmd.type==="UPDATE_ODOO_LIST_DOMAIN"||cmd.type==="UPDATE_ODOO_LIST"||cmd.type==="INSERT_ODOO_LIST");for(const cmd of updateCommands){if(!this.getters.isExistingList(cmd.listId)){continue;}
const listDefinition=this.getters.getListModelDefinition(cmd.listId);const dataSourceId=this._getListDataSourceId(cmd.listId);this.lists[dataSourceId]=new ListDataSource(this.custom,listDefinition);}
break;}}}
_setupListDataSource(listId,limit,definition){const dataSourceId=this._getListDataSourceId(listId);definition=definition||this.getters.getListModelDefinition(listId);if(!(dataSourceId in this.lists)){this.lists[dataSourceId]=new ListDataSource(this.custom,{...definition,limit});}}
_addDomain(listId){const domainList=[];for(const[filterId,fieldMatch]of Object.entries(this.getters.getListFieldMatch(listId))){domainList.push(this.getters.getGlobalFilterDomain(filterId,fieldMatch));}
const domain=Domain.combine(domainList,"AND").toString();this.getters.getListDataSource(listId).addDomain(domain);}
_addDomains(){for(const listId of this.getters.getListIds()){this._addDomain(listId);}}
_refreshOdooList(listId){this.getters.getListDataSource(listId).load({reload:true});}
_refreshOdooLists(){for(const listId of this.getters.getListIds()){this._refreshOdooList(listId);}}
_getListDataSourceId(listId){return`list-${listId}`;}
_getUnusedLists(){if(this.unusedLists!==undefined){return this.unusedLists;}
const unusedLists=new Set(this.getters.getListIds());for(const sheetId of this.getters.getSheetIds()){for(const cellId in this.getters.getCells(sheetId)){const position=this.getters.getCellPosition(cellId);const listId=this.getListIdFromPosition(position);if(listId){unusedLists.delete(listId);if(!unusedLists.size){this.unusedLists=[];return this.unusedLists;}}}}
this.unusedLists=[...unusedLists];return this.unusedLists;}
_getListFormat(listId,position,field){const locale=this.getters.getLocale();switch(field?.type){case"integer":return"0";case"float":return"#,##0.00";case"monetary":{const currency=this.getListCurrency(listId,position,field.currency_field);if(!currency){return"#,##0.00";}
return this.getters.computeFormatFromCurrency(currency);}
case"date":return locale.dateFormat;case"datetime":return locale.dateFormat+" "+locale.timeFormat;case"char":case"text":return"@";default:return undefined;}}
_addTable({sheetId,col,row,linesNumber,columns}){const zone={left:col,right:col+columns.length-1,top:row,bottom:row+linesNumber,};this.dispatch("CREATE_TABLE",{tableType:"static",sheetId,ranges:[this.getters.getRangeDataFromZone(sheetId,zone)],config:{...PIVOT_TABLE_CONFIG,firstColumn:false},});}
getListComputedDomain(listId){return this.getters.getListDataSource(listId).getComputedDomain();}
getListIdFromPosition(position){const cell=this.getters.getCorrespondingFormulaCell(position);const sheetId=position.sheetId;if(cell&&cell.isFormula){const listFunction=getFirstListFunction(cell.compiledFormula.tokens);if(listFunction){const content=astToFormula(listFunction.args[0]);return this.getters.evaluateFormula(sheetId,content)?.toString();}}
return undefined;}
getListHeaderValue(listId,fieldName){return this.getters.getListDataSource(listId).getListHeaderValue(fieldName);}
getListCellValueAndFormat(listId,position,fieldName){const dataSource=this.getters.getListDataSource(listId);dataSource.addFieldToFetch(fieldName);const value=dataSource.getListCellValue(position,fieldName);if(typeof value==="object"&&isEvaluationError(value.value)){return value;}
const field=dataSource.getField(fieldName);const format=this._getListFormat(listId,position,field);return{value,format};}
getListCurrency(listId,position,fieldName){return this.getters.getListDataSource(listId).getListCurrency(position,fieldName);}
getListDataSource(id){const dataSourceId=this._getListDataSourceId(id);return this.lists[dataSourceId];}
async getAsyncListDataSource(id){const dataSource=this.getListDataSource(id);await dataSource.load();return dataSource;}
getListsWaitForReady(){return this.getters.getListIds().map((listId)=>this.getListDataSource(listId).loadMetadata());}
isListUnused(listId){return this._getUnusedLists().includes(listId);}}
return __exports;});;

/* /spreadsheet/static/src/model.js */
odoo.define('@spreadsheet/model',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Model}=require("@odoo/o-spreadsheet");const OdooSpreadsheetModel=__exports.OdooSpreadsheetModel=Model;return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/cancelled_reason.js */
odoo.define('@spreadsheet/o_spreadsheet/cancelled_reason',[],function(require){'use strict';let __exports={};const CommandResult=__exports.CommandResult={Success:"Success",FilterNotFound:"FilterNotFound",InvalidFilterMove:"InvalidFilterMove",DuplicatedFilterLabel:"DuplicatedFilterLabel",PivotCacheNotLoaded:"PivotCacheNotLoaded",InvalidValueTypeCombination:"InvalidValueTypeCombination",ListIdDuplicated:"ListIdDuplicated",InvalidNextId:"InvalidNextId",ListIdNotFound:"ListIdNotFound",EmptyName:"EmptyName",PivotIdNotFound:"PivotIdNotFound",InvalidFieldMatch:"InvalidFieldMatch",};return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/errors.js */
odoo.define('@spreadsheet/o_spreadsheet/errors',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,EvaluationError}=require("@odoo/o-spreadsheet");const LOADING_ERROR="Loading...";registries.errorTypes.add(LOADING_ERROR);__exports.isLoadingError=isLoadingError;function isLoadingError(valueOrError){return valueOrError.value===LOADING_ERROR;}
const LoadingDataError=__exports.LoadingDataError=class LoadingDataError extends EvaluationError{constructor(){super("",LOADING_ERROR);}}
return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/init_callbacks.js */
odoo.define('@spreadsheet/o_spreadsheet/init_callbacks',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Registry}=require("@odoo/o-spreadsheet");const initCallbackRegistry=__exports.initCallbackRegistry=new Registry();return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/migration.js */
odoo.define('@spreadsheet/o_spreadsheet/migration',['@odoo/o-spreadsheet','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{OdooCorePlugin}=require("@spreadsheet/plugins");const{tokenize,parse,convertAstNodes,astToFormula}=spreadsheet;const{corePluginRegistry,migrationStepRegistry}=spreadsheet.registries;const ODOO_VERSION=__exports.ODOO_VERSION=12;const MAP_V1={PIVOT:"ODOO.PIVOT","PIVOT.HEADER":"ODOO.PIVOT.HEADER","PIVOT.POSITION":"ODOO.PIVOT.POSITION","FILTER.VALUE":"ODOO.FILTER.VALUE",LIST:"ODOO.LIST","LIST.HEADER":"ODOO.LIST.HEADER",};const MAP_FN_NAMES_V10={"ODOO.PIVOT":"PIVOT.VALUE","ODOO.PIVOT.HEADER":"PIVOT.HEADER","ODOO.PIVOT.TABLE":"PIVOT",};const dmyRegex=/^([0|1|2|3][1-9])\/(0[1-9]|1[0-2])\/(\d{4})$/i;migrationStepRegistry.add("odoo_migration",{versionFrom:"16.1",migrate(data){return migrateOdooData(data);},});function migrateOdooData(data){const version=data.odooVersion||0;if(version<1){data=migrate0to1(data);}
if(version<2){data=migrate1to2(data);}
if(version<3){data=migrate2to3(data);}
if(version<4){data=migrate3to4(data);}
if(version<5){data=migrate4to5(data);}
if(version<6){data=migrate5to6(data);}
if(version<7){data=migrate6to7(data);}
if(version<8){data=migrate7to8(data);}
if(version<9){data=migrate8to9(data);}
if(version<10){data=migrate9to10(data);}
if(version<11){data=migrate10to11(data);}
if(version<12){data=migrate11to12(data);}
return data;}
function parseDimension(dimension){const[name,granularity]=dimension.split(":");if(granularity){return{name,granularity};}
return{name};}
function renameFunctions(data,map){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")){const tokens=tokenize(cell.content);for(const token of tokens){if(token.type==="SYMBOL"&&token.value.toUpperCase()in map){token.value=map[token.value.toUpperCase()];}}
cell.content=tokensToString(tokens);}}}
return data;}
function tokensToString(tokens){return tokens.reduce((acc,token)=>acc+token.value,"");}
function migrate0to1(data){return renameFunctions(data,MAP_V1);}
function migrate1to2(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")){try{cell.content=migratePivotDaysParameters(cell.content);}catch{continue;}}}}
return data;}
function migrate2to3(data){if(data.globalFilters){for(const gf of data.globalFilters){if(gf.fields){gf.pivotFields=gf.fields;delete gf.fields;}
if(gf.type==="date"&&typeof gf.defaultValue==="object"&&"year"in gf.defaultValue){switch(gf.defaultValue.year){case"last_year":gf.defaultValue.yearOffset=-1;break;case"antepenultimate_year":gf.defaultValue.yearOffset=-2;break;case"this_year":case undefined:gf.defaultValue.yearOffset=0;break;}
delete gf.defaultValue.year;}
if(!gf.listFields){gf.listFields={};}
if(!gf.graphFields){gf.graphFields={};}}}
return data;}
function migrate3to4(data){if(data.lists){for(const list of Object.values(data.lists)){list.name=list.name||list.model;}}
if(data.pivots){for(const pivot of Object.values(data.pivots)){pivot.name=pivot.name||pivot.model;}}
return data;}
function migrate4to5(data){for(const filter of data.globalFilters||[]){for(const[id,fm]of Object.entries(filter.pivotFields||{})){if(!(data.pivots&&id in data.pivots)){delete filter.pivotFields[id];continue;}
if(!data.pivots[id].fieldMatching){data.pivots[id].fieldMatching={};}
data.pivots[id].fieldMatching[filter.id]={chain:fm.field,type:fm.type};if("offset"in fm){data.pivots[id].fieldMatching[filter.id].offset=fm.offset;}}
delete filter.pivotFields;for(const[id,fm]of Object.entries(filter.listFields||{})){if(!(data.lists&&id in data.lists)){delete filter.listFields[id];continue;}
if(!data.lists[id].fieldMatching){data.lists[id].fieldMatching={};}
data.lists[id].fieldMatching[filter.id]={chain:fm.field,type:fm.type};if("offset"in fm){data.lists[id].fieldMatching[filter.id].offset=fm.offset;}}
delete filter.listFields;const findFigureFromId=(id)=>{for(const sheet of data.sheets){const fig=sheet.figures.find((f)=>f.id===id);if(fig){return fig;}}
return undefined;};for(const[id,fm]of Object.entries(filter.graphFields||{})){const figure=findFigureFromId(id);if(!figure){delete filter.graphFields[id];continue;}
if(!figure.data.fieldMatching){figure.data.fieldMatching={};}
figure.data.fieldMatching[filter.id]={chain:fm.field,type:fm.type};if("offset"in fm){figure.data.fieldMatching[filter.id].offset=fm.offset;}}
delete filter.graphFields;}
return data;}
function migratePivotDaysParameters(formulaString){const ast=parse(formulaString);const convertedAst=convertAstNodes(ast,"FUNCALL",(ast)=>{if(["ODOO.PIVOT","ODOO.PIVOT.HEADER"].includes(ast.value.toUpperCase())){for(const subAst of ast.args){if(subAst.type==="STRING"){const date=subAst.value.match(dmyRegex);if(date){subAst.value=`${[date[2], date[1], date[3]].join("/")}`;}}}}
return ast;});return"="+astToFormula(convertedAst);}
function migrate5to6(data){if(!data.globalFilters?.length){return data;}
for(const filter of data.globalFilters){if(filter.type==="date"&&["year","quarter","month"].includes(filter.rangeType)){if(filter.defaultsToCurrentPeriod){filter.defaultValue=`this_${filter.rangeType}`;}
filter.rangeType="fixedPeriod";}
delete filter.defaultsToCurrentPeriod;}
return data;}
function migrate6to7(data){if(data.pivots){for(const[id,definition]of Object.entries(data.pivots)){definition.measures=definition.measures.map((measure)=>measure.field);const fieldMatching=definition.fieldMatching;delete definition.fieldMatching;data.pivots[id]={type:"ODOO",definition,fieldMatching,};}}
return data;}
function migrate7to8(data){if(data.pivots){for(const[id,pivot]of Object.entries(data.pivots)){data.pivots[id]={type:pivot.type,fieldMatching:pivot.fieldMatching,...pivot.definition,};}}
return data;}
function migrate8to9(data){if(data.pivots){for(const id of Object.keys(data.pivots)){data.pivots[id].formulaId=id;}}
return data;}
function migrate9to10(data){return renameFunctions(data,MAP_FN_NAMES_V10);}
function migrate10to11(data){if(data.pivots){for(const pivot of Object.values(data.pivots)){pivot.measures=pivot.measures.map((measure)=>({name:measure,}));pivot.columns=pivot.colGroupBys.map(parseDimension);delete pivot.colGroupBys;pivot.rows=pivot.rowGroupBys.map(parseDimension);delete pivot.rowGroupBys;}}
return data;}
function migrate11to12(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")&&cell.content.includes("ODOO.PIVOT.POSITION")){const tokens=tokenize(cell.content);for(let i=2;i<tokens.length-7;i++){const token=tokens[i];if(token.type==="SYMBOL"&&token.value.toUpperCase()==="ODOO.PIVOT.POSITION"){const order=tokens[i+6];tokens[i-2].value='"#'+tokens[i-2].value.slice(1);tokens.splice(i,7);tokens[i]=order;cell.content=tokensToString(tokens);}}}}}
return data;}
const OdooVersion=__exports.OdooVersion=class OdooVersion extends OdooCorePlugin{static getters=([]);export(data){data.odooVersion=ODOO_VERSION;}}
corePluginRegistry.add("odooMigration",OdooVersion);return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/odoo_module.js */
odoo.define("@odoo/o-spreadsheet",["@web/core/l10n/translation","@spreadsheet/o_spreadsheet/o_spreadsheet"],function(require){"use strict";const{_t,translationLoaded,translatedTerms}=require("@web/core/l10n/translation");const spreadsheet=require("@spreadsheet/o_spreadsheet/o_spreadsheet");window.o_spreadsheet=spreadsheet;spreadsheet.setTranslationMethod(_t,()=>translatedTerms[translationLoaded]);return spreadsheet;});;

/* /spreadsheet/static/src/o_spreadsheet/translation.js */
odoo.define('@spreadsheet/o_spreadsheet/translation',['@odoo/o-spreadsheet','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{arg,toString}=spreadsheet.helpers;const{functionRegistry}=spreadsheet.registries;functionRegistry.add("_t",{description:_t("Get the translated value of the given string"),args:[arg("value (string)",_t("Value to translate."))],compute:function(value){return _t(toString(value));},returns:["STRING"],hidden:true,});return __exports;});;

/* /spreadsheet/static/src/pivot/index.js */
odoo.define('@spreadsheet/pivot',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_actions','@spreadsheet/pivot/plugins/pivot_odoo_core_plugin','@spreadsheet/pivot/plugins/pivot_ui_global_filter_plugin'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{SEE_RECORDS_PIVOT,SEE_RECORDS_PIVOT_VISIBLE}=require("@spreadsheet/pivot/pivot_actions");const{PivotOdooCorePlugin}=require("@spreadsheet/pivot/plugins/pivot_odoo_core_plugin");const{PivotUIGlobalFilterPlugin}=require("@spreadsheet/pivot/plugins/pivot_ui_global_filter_plugin");const{coreTypes,invalidateEvaluationCommands}=spreadsheet;const{cellMenuRegistry}=spreadsheet.registries;const{inverseCommandRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
coreTypes.add("UPDATE_ODOO_PIVOT_DOMAIN");invalidateEvaluationCommands.add("UPDATE_ODOO_PIVOT_DOMAIN");cellMenuRegistry.add("pivot_see_records",{name:_t("See records"),sequence:175,execute:async(env)=>{const position=env.model.getters.getActivePosition();await SEE_RECORDS_PIVOT(position,env);},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return SEE_RECORDS_PIVOT_VISIBLE(position,env.model.getters);},icon:"o-spreadsheet-Icon.SEE_RECORDS",});inverseCommandRegistry.add("UPDATE_ODOO_PIVOT_DOMAIN",identity);Object.assign(__exports,{PivotOdooCorePlugin,PivotUIGlobalFilterPlugin});return __exports;});;

/* /spreadsheet/static/src/pivot/odoo_pivot.js */
odoo.define('@spreadsheet/pivot/odoo_pivot',['@web/core/domain','@web/core/l10n/translation','@web/core/user','@spreadsheet/pivot/pivot_model','@odoo/o-spreadsheet','@spreadsheet/data_sources/data_source','@web/core/utils/objects','@spreadsheet/pivot/odoo_pivot_loader'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");const{user}=require("@web/core/user");const{NO_RECORD_AT_THIS_POSITION,OdooPivotModel}=require("@spreadsheet/pivot/pivot_model");const{EvaluationError,PivotRuntimeDefinition,registries,helpers}=require("@odoo/o-spreadsheet");const{LOADING_ERROR}=require("@spreadsheet/data_sources/data_source");const{omit}=require("@web/core/utils/objects");const{OdooPivotLoader}=require("@spreadsheet/pivot/odoo_pivot_loader");const{pivotRegistry,supportedPivotPositionalFormulaRegistry}=registries;const{pivotTimeAdapter,toString,areDomainArgsFieldsValid,toNormalizedPivotValue,deepEquals}=helpers;const OdooPivot=__exports.OdooPivot=class OdooPivot{constructor(services,{definition,getters}){this.type="ODOO";this.coreDefinition=definition;this.needsReevaluation=false;this.runtimeDefinition=undefined;this.model=undefined;this.getters=getters;this.loader=new OdooPivotLoader(services.odooDataProvider,this._load.bind(this));this._fields=undefined;this.odooDataProvider=services.odooDataProvider;this.context=omit(definition.context,...Object.keys(user.context),"pivot_measures","pivot_row_groupby","pivot_column_groupby");this.domainWithGlobalFilters=this.coreDefinition.domain;}
onDefinitionChange(nextDefinition){this.context=omit(nextDefinition.context,...Object.keys(user.context));this.domainWithGlobalFilters=nextDefinition.domain;const actualDefinition=this.coreDefinition;this.coreDefinition=nextDefinition;if(deepEquals(actualDefinition.columns,nextDefinition.columns)&&deepEquals(actualDefinition.rows,nextDefinition.rows)&&deepEquals(actualDefinition.sortedColumn,nextDefinition.sortedColumn)&&deepEquals(actualDefinition.domain,nextDefinition.domain)&&deepEquals(actualDefinition.context,nextDefinition.context)&&deepEquals(actualDefinition.actionXmlId,nextDefinition.actionXmlId)&&deepEquals(actualDefinition.model,nextDefinition.model)){if(deepEquals(actualDefinition.measures,nextDefinition.measures)){return;}
if(this.isMeasuresTheSameForData(actualDefinition.measures,nextDefinition.measures)){this.coreDefinition=nextDefinition;const runtimeDefinition=new OdooPivotRuntimeDefinition(this.coreDefinition,this.getFields());this.model.updateMeasures(runtimeDefinition.measures);return;}}
this.load({reload:true});}
isMeasuresTheSameForData(actualMeasures,nextMeasures){if(actualMeasures.length!==nextMeasures.length){return false;}
for(const measure of actualMeasures){const updatedMeasure=nextMeasures.find((m)=>m.id===measure.id);if(!updatedMeasure||updatedMeasure.fieldName!==measure.fieldName||updatedMeasure.aggregator!==measure.aggregator){return false;}}
return true;}
async loadMetadata(){this._fields=await this.loader.getFields(this.coreDefinition.model);}
async getModelLabel(){return this.loader.getModelLabel(this.coreDefinition.model);}
getFields(){return this._fields||{};}
init(options){this.load(options);}
async load(options){return this.loader.load(options);}
async createModelAndDefinition(){await this.loadMetadata();const definition=new OdooPivotRuntimeDefinition(this.coreDefinition,this.getFields());const model=new OdooPivotModel({_t},{fields:this.getFields(),definition,searchParams:{context:this.context,domain:this.coreDefinition.domain,},},{orm:this.odooDataProvider.orm,serverData:this.odooDataProvider.serverData,});return{model,definition};}
async _load(){const{model,definition}=await this.createModelAndDefinition();this.model=model;this.runtimeDefinition=definition;await this.model.load({context:this.context,domain:this.getDomainWithGlobalFilters()});}
get definition(){if(!this.runtimeDefinition){throw LOADING_ERROR;}
return this.runtimeDefinition;}
parseArgsToPivotDomain(args){const domain=[];const stringArgs=args.map(toString);for(let i=0;i<stringArgs.length;i+=2){const nameWithGranularity=stringArgs[i];if(nameWithGranularity==="measure"){domain.push({field:nameWithGranularity,value:stringArgs[i+1],type:"char"});continue;}
const{dimensionWithGranularity,isPositional,field}=this.parseGroupField(nameWithGranularity);if(isPositional){const previousDomain=[...domain,{field:nameWithGranularity,value:stringArgs[i+1],type:"number"},];domain.push({field:dimensionWithGranularity,value:this.getLastPivotGroupValue(previousDomain),type:field.type,});}else{const normalizedValue=toNormalizedPivotValue(this.definition.getDimension(dimensionWithGranularity),args[i+1]);domain.push({field:dimensionWithGranularity,value:normalizedValue,type:field.type,});}}
return domain;}
areDomainArgsFieldsValid(args){let dimensions=args.filter((_,index)=>index%2===0).map(toString).map((arg)=>arg==="measure"?"measure":this.parseGroupField(arg).dimensionWithGranularity);if(dimensions.length&&dimensions.at(-1)==="measure"){dimensions=dimensions.slice(0,-1);}
return areDomainArgsFieldsValid(dimensions,this.definition);}
getPivotMeasureValue(name){this.assertIsValid();return{value:this.getMeasure(name).displayName,};}
getPivotHeaderValueAndFormat(domain){this.assertIsValid();const lastNode=domain.at(-1);if(!lastNode){return{value:_t("Total")};}
if(lastNode.field==="measure"){const measureId=lastNode.value;return{value:this.getMeasure(measureId).displayName};}
const value=this.model.getGroupByCellValue(lastNode.field,lastNode.value);const format=this._getPivotFieldFormat(lastNode.field,lastNode.value);return{value,format};}
getMeasure(id){const measures=this.definition.measures;const measure=measures.find((m)=>m.id===id);if(!measure){throw new EvaluationError(_t("Field %s does not exist",id));}
return measure;}
getLastPivotGroupValue(domain){this.assertIsValid();return this.model.getLastPivotGroupValue(domain);}
getTableStructure(){this.assertIsValid();return this.model.getTableStructure();}
_getPivotFieldFormat(fieldName,value){const{field,granularity}=this.parseGroupField(fieldName);switch(field.type){case"integer":return"0";case"float":return"#,##0.00";case"monetary":return this.getters.getCompanyCurrencyFormat()||"#,##0.00";case"date":case"datetime":{const timeAdapter=pivotTimeAdapter(granularity);return timeAdapter.toValueAndFormat(value,this.getters.getLocale()).format;}
default:return undefined;}}
getPivotCellValueAndFormat(measureId,domain){this.assertIsValid();if(domain.filter((node)=>node.value===NO_RECORD_AT_THIS_POSITION).length){return{value:""};}
const measure=this.getMeasure(measureId);const value=this.model.getPivotCellValue(measure,domain);let format;switch(measure.aggregator){case"count":case"count_distinct":format="0";break;default:format=measure.fieldName==="__count"?"0":this._getPivotFieldFormat(measure.fieldName,value);}
return{value,format};}
parseGroupField(groupFieldString){this.assertIsValid();return this.model.parseGroupField(groupFieldString);}
getPivotCellDomain(domain){this.assertIsValid();return this.model.getPivotCellDomain(domain);}
getPossibleFieldValues(dimension){this.assertIsValid();return this.model.getPossibleFieldValues(dimension);}
async copyModelWithOriginalDomain(){const{model}=await this.createModelAndDefinition();const domain=new Domain(this.coreDefinition.domain).toList({...this.context,...user.context,});const searchParams={context:this.context,domain};await model.load(searchParams);return model;}
get lastUpdate(){return this.loader.lastUpdate;}
isValid(){return this.loader.isValid();}
assertIsValid({throwOnError}={throwOnError:true}){return this.loader.assertIsValid({throwOnError});}
addGlobalFilterDomain(globalFilterDomain){const domain=Domain.and([this.coreDefinition.domain,globalFilterDomain]).toString();if(domain.toString()===new Domain(this.domainWithGlobalFilters).toString()){return;}
this.domainWithGlobalFilters=domain;if(!this.loader.hasEverBeenLoaded()){return;}
this.load({reload:true});}
getDomainWithGlobalFilters(){return new Domain(this.domainWithGlobalFilters).toList({...this.context,...user.context,});}}
const OdooPivotRuntimeDefinition=__exports.OdooPivotRuntimeDefinition=class OdooPivotRuntimeDefinition extends PivotRuntimeDefinition{constructor(definition,fields){super(definition,fields);this._domain=new Domain(definition.domain);this._context=definition.context;this._model=definition.model;this._sortedColumn=definition.sortedColumn;for(const dimension of this.columns.concat(this.rows)){if((dimension.type==="date"||dimension.type==="datetime")&&!dimension.granularity){dimension.granularity="month";dimension.nameWithGranularity=`${dimension.fieldName}:month`;}}}
get sortedColumn(){return this._sortedColumn;}
get domain(){return this._domain;}
get context(){return this._context;}
get model(){return this._model;}
getDefinitionForPivotModel(fields){return{searchParams:{domain:this.domain,context:this.context,groupBy:[],orderBy:[],},metaData:{sortedColumn:this.sortedColumn,activeMeasures:this.measures.filter((m)=>!m.computedBy).map((m)=>m.fieldName),resModel:this.model,colGroupBys:this.columns.map((c)=>c.nameWithGranularity),rowGroupBys:this.rows.map((r)=>r.nameWithGranularity),fieldAttrs:{},fields,},};}}
const MEASURES_TYPES=["integer","float","monetary"];const granularities=["year","quarter_number","quarter","month_number","month","iso_week_number","week","day_of_month","day","day_of_week",];pivotRegistry.add("ODOO",{ui:OdooPivot,definition:OdooPivotRuntimeDefinition,externalData:true,onIterationEndEvaluation:()=>{},dateGranularities:[...granularities],datetimeGranularities:[...granularities,"hour_number","minute_number","second_number"],isMeasureCandidate:(field)=>((MEASURES_TYPES.includes(field.type)&&field.aggregator)||field.type==="many2one")&&field.name!=="id"&&field.store,isGroupable:(field)=>field.groupable,});supportedPivotPositionalFormulaRegistry.add("ODOO",true);return __exports;});;

/* /spreadsheet/static/src/pivot/odoo_pivot_loader.js */
odoo.define('@spreadsheet/pivot/odoo_pivot_loader',['@odoo/o-spreadsheet','@web/core/network/rpc','@web/core/utils/concurrency','@spreadsheet/data_sources/data_source'],function(require){'use strict';let __exports={};const{EvaluationError,CellErrorType}=require("@odoo/o-spreadsheet");const{RPCError}=require("@web/core/network/rpc");const{KeepLast}=require("@web/core/utils/concurrency");const{LOADING_ERROR}=require("@spreadsheet/data_sources/data_source");const OdooPivotLoader=__exports.OdooPivotLoader=class OdooPivotLoader{constructor(odooDataProvider,load){this.odooDataProvider=odooDataProvider;this.loadFn=load;this.lastUpdate=undefined;this.concurrency=new KeepLast();this.loadPromise=undefined;this.isFullyLoaded=false;this._isValid=true;this.loadError=undefined;}
async load(options){if(options&&options.reload){this.odooDataProvider.cancelPromise(this.loadPromise);this.loadPromise=undefined;}
if(!this.loadPromise){this.isFullyLoaded=false;this._isValid=true;this.loadError=undefined;this.loadPromise=this.concurrency.add(this.loadFn()).catch((e)=>{this._isValid=false;this.loadError=Object.assign(new EvaluationError(e instanceof RPCError?e.data.message:e.message),{cause:e});}).finally(()=>{this.lastUpdate=Date.now();this.isFullyLoaded=true;});await this.odooDataProvider.notifyWhenPromiseResolves(this.loadPromise);}
return this.loadPromise;}
async getFields(model){return await this.odooDataProvider.serverData.fetch(model,"fields_get");}
async getModelLabel(model){const result=await this.odooDataProvider.serverData.fetch("ir.model","display_name_for",[[model]]);return(result[0]&&result[0].display_name)||"";}
isValid(){return this.isFullyLoaded&&this._isValid;}
hasEverBeenLoaded(){return this.loadPromise!==undefined;}
assertIsValid({throwOnError}={throwOnError:true}){if(!this.isFullyLoaded){this.load();if(throwOnError){throw LOADING_ERROR;}
return LOADING_ERROR;}
if(!this.isValid()){if(throwOnError){throw this.loadError;}
return{value:CellErrorType.GenericError,message:this.loadError.message};}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_actions.js */
odoo.define('@spreadsheet/pivot/pivot_actions',['@spreadsheet/actions/helpers','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{navigateTo}=require("@spreadsheet/actions/helpers");const{helpers}=require("@odoo/o-spreadsheet");const{getNumberOfPivotFunctions}=helpers;const SEE_RECORDS_PIVOT=__exports.SEE_RECORDS_PIVOT=async(position,env)=>{const pivotId=env.model.getters.getPivotIdFromPosition(position);const pivot=env.model.getters.getPivot(pivotId);await pivot.load();const{model}=pivot.definition;const{actionXmlId,context}=env.model.getters.getPivotCoreDefinition(pivotId);const pivotCell=env.model.getters.getPivotCellFromPosition(position);const domain=pivot.getPivotCellDomain(pivotCell.domain);const name=await pivot.getModelLabel();await navigateTo(env,actionXmlId,{type:"ir.actions.act_window",name,res_model:model,views:[[false,"list"],[false,"form"],],target:"current",domain,context,},{viewType:"list"});};const SEE_RECORDS_PIVOT_VISIBLE=__exports.SEE_RECORDS_PIVOT_VISIBLE=(position,getters)=>{const cell=getters.getCorrespondingFormulaCell(position);const evaluatedCell=getters.getEvaluatedCell(position);const pivotId=getters.getPivotIdFromPosition(position);const pivotCell=getters.getPivotCellFromPosition(position);return!!(pivotId&&evaluatedCell.type!=="empty"&&evaluatedCell.type!=="error"&&evaluatedCell.value!==""&&pivotCell.type!=="EMPTY"&&cell&&cell.isFormula&&getNumberOfPivotFunctions(cell.compiledFormula.tokens)===1&&getters.getPivotCoreDefinition(pivotId).type==="ODOO"&&getters.getPivot(pivotId).getPivotCellDomain(pivotCell.domain));};__exports.SET_FILTER_MATCHING_CONDITION=SET_FILTER_MATCHING_CONDITION;function SET_FILTER_MATCHING_CONDITION(position,getters){if(!SEE_RECORDS_PIVOT_VISIBLE(position,getters)){return false;}
const pivotId=getters.getPivotIdFromPosition(position);const pivotCell=getters.getPivotCellFromPosition(position);if(pivotCell.type==="EMPTY"){return false;}
const matchingFilters=getters.getFiltersMatchingPivotArgs(pivotId,pivotCell.domain);return matchingFilters.length>0&&pivotCell.type==="HEADER";}
__exports.SET_FILTER_MATCHING=SET_FILTER_MATCHING;function SET_FILTER_MATCHING(position,env){const pivotId=env.model.getters.getPivotIdFromPosition(position);const domain=env.model.getters.getPivotCellFromPosition(position).domain;const filters=env.model.getters.getFiltersMatchingPivotArgs(pivotId,domain);env.model.dispatch("SET_MANY_GLOBAL_FILTER_VALUE",{filters});}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_functions.js */
odoo.define('@spreadsheet/pivot/pivot_functions',['@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{arg,toString}=spreadsheet.helpers;const{functionRegistry}=spreadsheet.registries;const ODOO_FILTER_VALUE=({description:_t("Return the current value of a spreadsheet filter."),args:[arg("filter_name (string)",_t("The label of the filter whose value to return."))],category:"Odoo",compute:function(filterName){const unEscapedFilterName=toString(filterName).replaceAll('\\"','"');return this.getters.getFilterDisplayValue(unEscapedFilterName);},returns:["STRING"],});functionRegistry.add("ODOO.FILTER.VALUE",ODOO_FILTER_VALUE);return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_helpers.js */
odoo.define('@spreadsheet/pivot/pivot_helpers',['@web/core/l10n/translation','@odoo/o-spreadsheet','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{EvaluationError,helpers}=require("@odoo/o-spreadsheet");const{sprintf}=require("@web/core/utils/strings");const{isDateOrDatetimeField}=helpers;const pivotFormulaRegex=__exports.pivotFormulaRegex=/^=.*PIVOT/;const AGGREGATOR_NAMES={count:_t("Count"),count_distinct:_t("Count Distinct"),bool_and:_t("Boolean And"),bool_or:_t("Boolean Or"),max:_t("Maximum"),min:_t("Minimum"),avg:_t("Average"),sum:_t("Sum"),};const NUMBER_AGGREGATORS=["max","min","avg","sum","count_distinct","count"];const DATE_AGGREGATORS=["max","min","count_distinct","count"];const AGGREGATORS_BY_FIELD_TYPE={integer:NUMBER_AGGREGATORS,float:NUMBER_AGGREGATORS,monetary:NUMBER_AGGREGATORS,date:DATE_AGGREGATORS,datetime:DATE_AGGREGATORS,boolean:["count_distinct","count","bool_and","bool_or"],char:["count_distinct","count"],many2one:["count_distinct","count"],reference:["count_distinct","count"],};const ODOO_AGGREGATORS=__exports.ODOO_AGGREGATORS={};for(const type in AGGREGATORS_BY_FIELD_TYPE){ODOO_AGGREGATORS[type]={};for(const aggregator of AGGREGATORS_BY_FIELD_TYPE[type]){ODOO_AGGREGATORS[type][aggregator]=AGGREGATOR_NAMES[aggregator];}}
__exports.parseGroupField=parseGroupField;function parseGroupField(allFields,groupFieldString){let fieldName=groupFieldString;let granularity=undefined;const index=groupFieldString.indexOf(":");if(index!==-1){fieldName=groupFieldString.slice(0,index);granularity=groupFieldString.slice(index+1);}
const isPositional=fieldName.startsWith("#");fieldName=isPositional?fieldName.substring(1):fieldName;const field=allFields[fieldName];if(field===undefined){throw new EvaluationError(sprintf(_t("Field %s does not exist"),fieldName));}
if(isDateOrDatetimeField(field)){granularity=granularity||"month";}
const dimensionWithGranularity=granularity?`${fieldName}:${granularity}`:fieldName;return{isPositional,field,granularity,dimensionWithGranularity,};}
__exports.domainHasNoRecordAtThisPosition=domainHasNoRecordAtThisPosition;function domainHasNoRecordAtThisPosition(domain){return domain.some((node)=>node.value==="NO_RECORD_AT_THIS_POSITION");}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_model.js */
odoo.define('@spreadsheet/pivot/pivot_model',['@web/core/l10n/translation','@web/core/domain','@web/core/utils/strings','@web/views/pivot/pivot_model','@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{sprintf}=require("@web/core/utils/strings");const{PivotModel}=require("@web/views/pivot/pivot_model");const{helpers,constants,EvaluationError,SpreadsheetPivotTable}=require("@odoo/o-spreadsheet");const{parseGroupField}=require("@spreadsheet/pivot/pivot_helpers");const{toNormalizedPivotValue,toNumber,isDateOrDatetimeField,pivotTimeAdapter}=helpers;const{DEFAULT_LOCALE}=constants;const NO_RECORD_AT_THIS_POSITION=__exports.NO_RECORD_AT_THIS_POSITION="__NO_RECORD_AT_THIS_POSITION__";const OdooPivotModel=__exports.OdooPivotModel=class OdooPivotModel extends PivotModel{constructor(env,params,services){super(env,params,services);this._displayNames={};this._displayLabels={};this.serverData=services.serverData;}
setup(params,services){const p=params.definition.getDefinitionForPivotModel(params.fields);p.searchParams={...p.searchParams,...params.searchParams,};super.setup(p);this.definition=params.definition;}
updateMeasures(measures){for(const measure of this.definition.measures){const updatedMeasure=measures.find((m)=>m.id===measure.id);if(!updatedMeasure||updatedMeasure.fieldName!==measure.fieldName||updatedMeasure.aggregator!==measure.aggregator){throw new Error("Measures fieldName or aggregator cannot be updated");}}
this.definition.measures=measures;this.resetTableStructure();}
getDefinition(){return this.definition;}
async load(searchParams){searchParams.groupBy=[];searchParams.orderBy=[];await super.load(searchParams);}
getPivotCellValue(measure,domain){if(domain.some((node)=>node.value===NO_RECORD_AT_THIS_POSITION)){return"";}
const{cols,rows}=this._getColsRowsValuesFromDomain(domain);const group=JSON.stringify([rows,cols]);const values=this.data.measurements[group];const measurementId=this._computeMeasurementId(measure);if(values&&(values[0][measurementId]||values[0][measurementId]===0)){return values[0][measurementId];}
return"";}
getGroupByCellValue(groupFieldString,groupValueString){if(groupValueString===NO_RECORD_AT_THIS_POSITION){return"";}
const{field,granularity,dimensionWithGranularity}=this.parseGroupField(groupFieldString);const dimension=this.definition.getDimension(dimensionWithGranularity);const value=toNormalizedPivotValue(dimension,groupValueString);const undef=_t("None");if(isDateOrDatetimeField(field)){const adapter=pivotTimeAdapter(granularity);return adapter.toValueAndFormat(value).value;}
if(field.relation){if(value===false){return undef;}
return this._getRelationalDisplayName(field.relation,value);}
const label=this._displayLabels[field.name]?.[value];if(!label){return undef;}
return label;}
getLastPivotGroupValue(domain){const lastNode=domain.at(-1);if(!lastNode){throw new Error("Domain size should be at least 1");}
if(lastNode.field.startsWith("#")){if(domain.filter((node)=>node.value===NO_RECORD_AT_THIS_POSITION).length){return NO_RECORD_AT_THIS_POSITION;}
const{dimensionWithGranularity}=this.parseGroupField(lastNode.field);const{cols,rows}=this._getColsRowsValuesFromDomain(domain);return this._isCol(dimensionWithGranularity)?cols.at(-1):rows.at(-1);}
return lastNode.value;}
getPivotCellDomain(domain){if(domain.some((node)=>node.value===NO_RECORD_AT_THIS_POSITION)){return undefined;}
const{cols,rows}=this._getColsRowsValuesFromDomain(domain);const key=JSON.stringify([rows,cols]);const domains=this.data.groupDomains[key];return domains?domains[0]:Domain.FALSE.toList();}
resetTableStructure(){this._tableStructure=undefined;}
getTableStructure(){if(this._tableStructure===undefined){this._tableStructure=this._buildTableStructure();}
return this._tableStructure;}
getPossibleFieldValues(dimension){const valuesWithLabels=[];const valuesUniqueness=new Set();const isCol=this._isCol(dimension.nameWithGranularity);const groupBys=isCol?this.definition.columns:this.definition.rows;const tree=isCol?this.data.colGroupTree:this.data.rowGroupTree;const groupByIndex=groupBys.findIndex((d)=>d.nameWithGranularity===dimension.nameWithGranularity);const visitTree=(tree)=>{const{values,labels}=tree.root;const value=values[groupByIndex];if(value!==undefined&&!valuesUniqueness.has(value)){valuesUniqueness.add(value);valuesWithLabels.push({value:value,label:labels[groupByIndex].toString(),});}
[...tree.directSubTrees.values()].forEach((subTree)=>{visitTree(subTree);});};visitTree(tree);return valuesWithLabels;}
_buildTableStructure(){const cols=this._getSpreadsheetCols();const rows=this._getSpreadsheetRows(this.data.rowGroupTree);rows.push(rows.shift());const measures=this.getDefinition().measures.filter((measure)=>!measure.isHidden).map((measure)=>measure.id);const fieldsType={};for(const columns of this.getDefinition().columns){fieldsType[columns.fieldName]=columns.type;}
for(const row of this.getDefinition().rows){fieldsType[row.fieldName]=row.type;}
return new SpreadsheetPivotTable(cols,rows,measures,fieldsType);}
async _loadData(config){this.parseGroupField=parseGroupField.bind(null,this.metaData.fields);const prune=false;await super._loadData(config,prune);const registerLabels=(tree,groupBys)=>{const group=tree.root;if(!tree.directSubTrees.size){for(let i=0;i<group.values.length;i++){const{field}=this.parseGroupField(groupBys[i]);if(!field.relation){this._registerDisplayLabel(field.name,group.values[i],group.labels[i]);}else{const id=group.values[i];const displayName=group.labels[i];this._registerDisplayName(field.relation,id,displayName);}}}
[...tree.directSubTrees.values()].forEach((subTree)=>{registerLabels(subTree,groupBys);});};registerLabels(this.data.colGroupTree,this.metaData.fullColGroupBys);registerLabels(this.data.rowGroupTree,this.metaData.fullRowGroupBys);}
_registerDisplayLabel(fieldName,value,label){if(!this._displayLabels[fieldName]){this._displayLabels[fieldName]={};}
this._displayLabels[fieldName][value]=label;}
_registerDisplayName(resModel,resId,displayName){if(!this._displayNames[resModel]){this._displayNames[resModel]={};}
this._displayNames[resModel][resId]=displayName;}
_getRelationalDisplayName(resModel,resId){const displayName=this._displayNames[resModel]?.[resId]||this.serverData.batch.get("spreadsheet.mixin","get_display_names_for_spreadsheet",{model:resModel,id:resId,});if(!displayName){throw new EvaluationError(_t("Unable to fetch the label of %(id)s of model %(model)s",{id:resId,model:resModel,}));}
return displayName;}
_getGroupValues(group,groupBys){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);const{field,granularity}=this.parseGroupField(gb);if(isDateOrDatetimeField(field)){return pivotTimeAdapter(granularity).normalizeServerValue(groupBy,field,group);}
return this._sanitizeValue(group[groupBy]);});}
_isCol(nameWithGranularity){return this.metaData.fullColGroupBys.includes(nameWithGranularity);}
_isRow(nameWithGranularity){return this.metaData.fullRowGroupBys.includes(nameWithGranularity);}
_parsePivotFormulaWithPosition(dimensionWithGranularity,groupValueString,cols,rows){const position=toNumber(groupValueString,DEFAULT_LOCALE)-1;let tree;if(this._isCol(dimensionWithGranularity)){tree=this.data.colGroupTree;for(const col of cols){tree=tree&&tree.directSubTrees.get(col);}}else{tree=this.data.rowGroupTree;for(const row of rows){tree=tree&&tree.directSubTrees.get(row);}}
if(tree){const treeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];const sortedKey=treeKeys[position];return sortedKey!==undefined?sortedKey:NO_RECORD_AT_THIS_POSITION;}
return NO_RECORD_AT_THIS_POSITION;}
_getColsRowsValuesFromDomain(domain){const rows=[];const cols=[];for(const node of domain){const{isPositional,dimensionWithGranularity}=this.parseGroupField(node.field);let value;if(isPositional){value=this._parsePivotFormulaWithPosition(dimensionWithGranularity,node.value,cols,rows);}else{const dimension=this.definition.getDimension(dimensionWithGranularity);value=toNormalizedPivotValue(dimension,node.value);}
if(this._isCol(dimensionWithGranularity)){cols.push(value);}else if(this._isRow(dimensionWithGranularity)){rows.push(value);}else{throw new EvaluationError(sprintf(_t("Dimension %s is not a group by"),dimensionWithGranularity));}}
return{rows,cols};}
_getSpreadsheetRows(tree){const rows=[];const group=tree.root;const indent=group.labels.length;const rowGroupBys=this.metaData.fullRowGroupBys;rows.push({fields:rowGroupBys.slice(0,indent),values:group.values.map((val)=>val.toString()),indent,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows.push(...this._getSpreadsheetRows(subTree));});return rows;}
_getSpreadsheetCols(){const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length;const measures=this.getDefinition().measures.filter((measure)=>!measure.isHidden);const measureCount=measures.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);const headers=new Array(height).fill(0).map(()=>[]);function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;if(rowIndex!==0){const row=headers[rowIndex-1];const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={fields:colGroupBys.slice(0,rowIndex),values:group.values.map((val)=>val.toString()),width:leafCount*measureCount,};row.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);const hasColGroupBys=this.metaData.colGroupBys.length;const measureRow=[];if(hasColGroupBys){headers[headers.length-1].forEach((cell)=>{measures.forEach((measure)=>{const measureCell={fields:[...cell.fields,"measure"],values:[...cell.values,measure.id],width:1,};measureRow.push(measureCell);});});}
measures.forEach((measure)=>{const measureCell={fields:["measure"],values:[measure.id],width:1,};measureRow.push(measureCell);});headers.push(measureRow);if(headers.length===1){headers.unshift([]);}
headers[headers.length-2].push({fields:[],values:[],width:measures.length,});return headers;}
_getMeasureSpecs(){return this.getDefinition().measures.filter((measure)=>!measure.computedBy).map((measure)=>{const measurementId=`${measure.fieldName}_${measure.aggregator}_id`;if(measure.type==="many2one"&&!measure.aggregator){return`${measure.fieldName}:count_distinct`;}
if(measure.fieldName==="__count"){return"__count";}
return measure.aggregator?`${measurementId}:${measure.aggregator}(${measure.fieldName})`:measure.fieldName;});}
_getSubGroups(groupBys,params){const{columns,rows}=this.getDefinition();const order=columns.concat(rows).filter((dimension)=>dimension.order&&groupBys.includes(dimension.nameWithGranularity)).map((dimension)=>`${dimension.nameWithGranularity} ${dimension.order}`).join(",");params.kwargs.orderby=order;return super._getSubGroups(groupBys,params);}
_computeMeasurementId(measure){if(measure.fieldName==="__count"){return"__count";}
if(measure.aggregator){return`${measure.fieldName}_${measure.aggregator}_id`;}
return measure.fieldName;}
_getMeasurements(group){return this.getDefinition().measures.filter((measure)=>!measure.computedBy).reduce((measurements,measure)=>{const measurementId=this._computeMeasurementId(measure);var measurement=group[measurementId];if(measurement instanceof Array){measurement=1;}
if(measure.type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
measurements[measurementId]=measurement;return measurements;},{});}
_getCellValue(groupId,measureName,originIndexes,config){const measure=this.getDefinition().measures.find((m)=>m.fieldName===measureName);const measurementId=this._computeMeasurementId(measure);var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>{return config.data.measurements[key][originIndex][measurementId];});return values[0];}}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_time_adapters.js */
odoo.define('@spreadsheet/pivot/pivot_time_adapters',['@odoo/o-spreadsheet','@web/core/l10n/dates','@web/core/l10n/translation','@web/core/user'],function(require){'use strict';let __exports={};const{registries,helpers,constants}=require("@odoo/o-spreadsheet");const{deserializeDate}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{user}=require("@web/core/user");const{pivotTimeAdapterRegistry}=registries;const{formatValue,toNumber,toJsDate,toString}=helpers;const{DEFAULT_LOCALE}=constants;const{DateTime}=luxon;const odooNumberDateAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return normalizedValue+step;},};const odooDayAdapter={normalizeServerValue(groupBy,field,readGroupResult){const serverDayValue=getGroupStartingDay(field,groupBy,readGroupResult);return toNumber(serverDayValue,DEFAULT_LOCALE);},increment(normalizedValue,step){return normalizedValue+step;},};const odooWeekAdapter={normalizeFunctionValue(value){const[week,year]=toString(value).split("/");return`${Number(week)}/${Number(year)}`;},toValueAndFormat(normalizedValue,locale){const[week,year]=normalizedValue.split("/");return{value:_t("W%(week)s %(year)s",{week,year}),};},toFunctionValue(normalizedValue){return`"${normalizedValue}"`;},normalizeServerValue(groupBy,field,readGroupResult){const weekValue=readGroupResult[groupBy];const{week,year}=parseServerWeekHeader(weekValue);return`${week}/${year}`;},increment(normalizedValue,step){const[week,year]=normalizedValue.split("/");const weekNumber=Number(week);const yearNumber=Number(year);const date=DateTime.fromObject({weekNumber,weekYear:yearNumber});const nextWeek=date.plus({weeks:step});return`${nextWeek.weekNumber}/${nextWeek.weekYear}`;},};const odooMonthAdapter={normalizeFunctionValue(value){const date=toNumber(value,DEFAULT_LOCALE);return formatValue(date,{locale:DEFAULT_LOCALE,format:"mm/yyyy"});},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"mmmm yyyy",};},toFunctionValue(normalizedValue){return`"${normalizedValue}"`;},normalizeServerValue(groupBy,field,readGroupResult){const firstOfTheMonth=getGroupStartingDay(field,groupBy,readGroupResult);const date=deserializeDate(firstOfTheMonth).reconfigure({numberingSystem:"latn"});return date.toFormat("MM/yyyy");},increment(normalizedValue,step){return DateTime.fromFormat(normalizedValue,"MM/yyyy",{numberingSystem:"latn"}).plus({months:step}).toFormat("MM/yyyy");},};const NORMALIZED_QUARTER_REGEXP=/^[1-4]\/\d{4}$/;const odooQuarterAdapter={normalizeFunctionValue(value){if(typeof value==="string"&&NORMALIZED_QUARTER_REGEXP.test(value)){return value;}
const dateTime=toJsDate(value,DEFAULT_LOCALE);return`${dateTime.getQuarter()}/${dateTime.getFullYear()}`;},toValueAndFormat(normalizedValue){const[quarter,year]=normalizedValue.split("/");return{value:_t("Q%(quarter)s %(year)s",{quarter,year}),};},toFunctionValue(normalizedValue){return`"${normalizedValue}"`;},normalizeServerValue(groupBy,field,readGroupResult){const firstOfTheQuarter=getGroupStartingDay(field,groupBy,readGroupResult);const date=deserializeDate(firstOfTheQuarter);return`${date.quarter}/${date.year}`;},increment(normalizedValue,step){const[quarter,year]=normalizedValue.split("/");const date=DateTime.fromObject({year:Number(year),month:Number(quarter)*3});const nextQuarter=date.plus({quarters:step});return`${nextQuarter.quarter}/${nextQuarter.year}`;},};const odooDayOfWeekAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy])+1;},increment(normalizedValue,step){return(normalizedValue+step)%7;},};const odooHourNumberAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return(normalizedValue+step)%24;},};const odooMinuteNumberAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return(normalizedValue+step)%60;},};const odooSecondNumberAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return(normalizedValue+step)%60;},};function falseHandlerDecorator(adapter){return{normalizeServerValue(groupBy,field,readGroupResult){if(readGroupResult[groupBy]===false){return false;}
return adapter.normalizeServerValue(groupBy,field,readGroupResult);},increment(normalizedValue,step){if(normalizedValue===false||(typeof normalizedValue==="string"&&normalizedValue.toLowerCase()==="false")){return false;}
return adapter.increment(normalizedValue,step);},normalizeFunctionValue(value){if(value.toLowerCase()==="false"){return false;}
return adapter.normalizeFunctionValue(value);},toValueAndFormat(normalizedValue,locale){if(normalizedValue===false||(typeof normalizedValue==="string"&&normalizedValue.toLowerCase()==="false")){return{value:_t("None")};}
return adapter.toValueAndFormat(normalizedValue,locale);},toFunctionValue(value){if(value===false){return"FALSE";}
return adapter.toFunctionValue(value);},};}
function extendSpreadsheetAdapter(granularity,adapter){const originalAdapter=pivotTimeAdapterRegistry.get(granularity);pivotTimeAdapterRegistry.add(granularity,falseHandlerDecorator({...originalAdapter,...adapter,}));}
pivotTimeAdapterRegistry.add("week",falseHandlerDecorator(odooWeekAdapter));pivotTimeAdapterRegistry.add("month",falseHandlerDecorator(odooMonthAdapter));pivotTimeAdapterRegistry.add("quarter",falseHandlerDecorator(odooQuarterAdapter));extendSpreadsheetAdapter("day",odooDayAdapter);extendSpreadsheetAdapter("year",odooNumberDateAdapter);extendSpreadsheetAdapter("day_of_month",odooNumberDateAdapter);extendSpreadsheetAdapter("day",odooDayAdapter);extendSpreadsheetAdapter("iso_week_number",odooNumberDateAdapter);extendSpreadsheetAdapter("month_number",odooNumberDateAdapter);extendSpreadsheetAdapter("quarter_number",odooNumberDateAdapter);extendSpreadsheetAdapter("day_of_week",odooDayOfWeekAdapter);extendSpreadsheetAdapter("hour_number",odooHourNumberAdapter);extendSpreadsheetAdapter("minute_number",odooMinuteNumberAdapter);extendSpreadsheetAdapter("second_number",odooSecondNumberAdapter);function getGroupStartingDay(field,groupBy,readGroup){if(!readGroup["__range"]||!readGroup["__range"][groupBy]){return undefined;}
const sqlValue=readGroup["__range"][groupBy].from;if(field.type==="date"){return sqlValue;}
const userTz=user.tz||luxon.Settings.defaultZone.name;return DateTime.fromSQL(sqlValue,{zone:"utc"}).setZone(userTz).toISODate();}
function parseServerWeekHeader(value){const[week,year]=value.split(" ");return{week:Number(week.slice(1)),year:Number(year)};}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_to_function_values.js */
odoo.define('@spreadsheet/pivot/pivot_to_function_values',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,helpers,constants}=require("@odoo/o-spreadsheet");const{DEFAULT_LOCALE}=constants;const{pivotToFunctionValueRegistry}=registries;const{toString,toNumber}=helpers;const toFunctionValueDateTime=pivotToFunctionValueRegistry.get("date");function isFalseValue(value){return value===false||(typeof value==="string"&&value.toLowerCase()==="false");}
function _toDate(value,granularity){if(isFalseValue(value)){return"FALSE";}
if(!granularity){granularity="month";}
return toFunctionValueDateTime(value,granularity);}
function _toString(value){if(isFalseValue(value)){return"FALSE";}
return`"${toString(value).replace(/"/g, '\\"')}"`;}
function _toNumber(value){if(isFalseValue(value)){return"FALSE";}
return`${toNumber(value, DEFAULT_LOCALE)}`;}
pivotToFunctionValueRegistry.add("text",_toString).add("selection",_toString).add("char",_toString).add("integer",_toNumber).add("monetary",_toNumber).add("many2one",_toNumber).add("many2many",_toNumber).add("float",_toNumber).add("date",_toDate).add("datetime",_toDate);return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_values_normalizers.js */
odoo.define('@spreadsheet/pivot/pivot_values_normalizers',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,helpers,constants}=require("@odoo/o-spreadsheet");const{DEFAULT_LOCALE}=constants;const{pivotNormalizationValueRegistry}=registries;const{toString,toNumber}=helpers;pivotNormalizationValueRegistry.add("text",(value)=>toString(value)).add("selection",(value)=>toString(value)).add("monetary",(value)=>toNumber(value,DEFAULT_LOCALE)).add("many2one",(value)=>toNumber(value,DEFAULT_LOCALE)).add("many2many",(value)=>toNumber(value,DEFAULT_LOCALE)).add("float",(value)=>toNumber(value,DEFAULT_LOCALE));return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_core_global_filter_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_core_global_filter_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@web/core/l10n/translation','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@web/core/utils/strings','@spreadsheet/global_filters/helpers','@web/core/utils/objects','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{_t}=require("@web/core/l10n/translation");const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{sprintf}=require("@web/core/utils/strings");const{checkFilterFieldMatching}=require("@spreadsheet/global_filters/helpers");const{deepCopy}=require("@web/core/utils/objects");const{OdooCorePlugin}=require("@spreadsheet/plugins");const PivotCoreGlobalFilterPlugin=__exports.PivotCoreGlobalFilterPlugin=class PivotCoreGlobalFilterPlugin extends OdooCorePlugin{static getters=(["getPivotFieldMatch","getPivotFieldMatching"]);constructor(config){super(config);this.pivots={};globalFiltersFieldMatchers["pivot"]={getIds:()=>this.getters.getPivotIds().filter((id)=>this.getters.getPivotCoreDefinition(id).type==="ODOO"&&id in this.pivots),getDisplayName:(pivotId)=>this.getters.getPivotName(pivotId),getTag:(pivotId)=>sprintf(_t("Pivot #%s"),this.getters.getPivotFormulaId(pivotId)),getFieldMatching:(pivotId,filterId)=>this.getPivotFieldMatching(pivotId,filterId),getModel:(pivotId)=>{const pivot=this.getters.getPivotCoreDefinition(pivotId);return pivot.type==="ODOO"&&pivot.model;},};}
allowDispatch(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.pivot){return checkFilterFieldMatching(cmd.pivot);}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"ADD_PIVOT":{if(cmd.pivot.type==="ODOO"){this._addPivot(cmd.pivotId,undefined);}
break;}
case"REMOVE_PIVOT":{this.history.update("pivots",cmd.pivotId,undefined);break;}
case"DUPLICATE_PIVOT":{const{pivotId,newPivotId}=cmd;const pivotDefinition=this.getters.getPivotCoreDefinition(pivotId);if(pivotDefinition.type!=="ODOO"){break;}
const pivot=deepCopy(this.pivots[pivotId]);this._addPivot(newPivotId,pivot.fieldMatching);break;}
case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.pivot){this._setPivotFieldMatching(cmd.filter.id,cmd.pivot);}
break;case"REMOVE_GLOBAL_FILTER":this._onFilterDeletion(cmd.id);break;}}
getPivotFieldMatch(id){const pivot=this.getters.getPivotCoreDefinition(id);if(pivot.type!=="ODOO"){return{};}
return this.pivots[id].fieldMatching;}
getPivotFieldMatching(pivotId,filterId){return this.getPivotFieldMatch(pivotId)[filterId];}
_setPivotFieldMatching(filterId,pivotFieldMatches){const pivots={...this.pivots};for(const[pivotId,fieldMatch]of Object.entries(pivotFieldMatches)){const pivot=this.getters.getPivotCoreDefinition(pivotId);if(pivot.type!=="ODOO"){continue;}
this.pivots[pivotId].fieldMatching[filterId]=fieldMatch;}
this.history.update("pivots",pivots);}
_onFilterDeletion(filterId){const pivots={...this.pivots};for(const pivotId in pivots){this.history.update("pivots",pivotId,"fieldMatching",filterId,undefined);}}
_addPivot(id,fieldMatching=undefined){const pivot=this.getters.getPivotCoreDefinition(id);if(pivot.type==="ODOO"){const pivots={...this.pivots};const model=pivot.model;pivots[id]={id,fieldMatching:fieldMatching||this.getters.getFieldMatchingForModel(model),};this.history.update("pivots",pivots);}}
import(data){if(data.pivots){for(const[id,pivot]of Object.entries(data.pivots)){this._addPivot(id,pivot.fieldMatching);}}}
export(data){for(const id in this.pivots){const pivot=this.getters.getPivotCoreDefinition(id);data.pivots[id].fieldMatching=pivot.type==="ODOO"?this.pivots[id].fieldMatching:{};}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_odoo_core_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_odoo_core_plugin',['@web/core/domain','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{OdooCorePlugin}=require("@spreadsheet/plugins");const PivotOdooCorePlugin=__exports.PivotOdooCorePlugin=class PivotOdooCorePlugin extends OdooCorePlugin{handle(cmd){switch(cmd.type){case"UPDATE_ODOO_PIVOT_DOMAIN":this.dispatch("UPDATE_PIVOT",{pivotId:cmd.pivotId,pivot:{...this.getters.getPivotCoreDefinition(cmd.pivotId),domain:cmd.domain,},});break;}}
export(data){if(data.pivots){for(const id in data.pivots){if(data.pivots[id].type==="ODOO"){data.pivots[id].domain=new Domain(data.pivots[id].domain).toJson();}}}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_odoo_ui_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_odoo_ui_plugin',['@spreadsheet/plugins','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{OdooUIPlugin}=require("@spreadsheet/plugins");const{helpers}=require("@odoo/o-spreadsheet");const{UNDO_REDO_PIVOT_COMMANDS}=helpers;UNDO_REDO_PIVOT_COMMANDS.push("UPDATE_ODOO_PIVOT_DOMAIN");const PivotOdooUIPlugin=__exports.PivotOdooUIPlugin=class PivotOdooUIPlugin extends OdooUIPlugin{static getters=([]);handle(cmd){switch(cmd.type){case"REFRESH_ALL_DATA_SOURCES":this.refreshAllPivots();break;}}
refreshAllPivots(){for(const pivotId of this.getters.getPivotIds()){this.dispatch("REFRESH_PIVOT",{id:pivotId});}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_ui_global_filter_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_ui_global_filter_plugin',['@spreadsheet/assets_backend/constants','@web/core/domain','@spreadsheet/pivot/pivot_model','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{FILTER_DATE_OPTION,monthsOptions}=require("@spreadsheet/assets_backend/constants");const{Domain}=require("@web/core/domain");const{NO_RECORD_AT_THIS_POSITION}=require("@spreadsheet/pivot/pivot_model");const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{DateTime}=luxon;function pivotPeriodToFilterValue(timeRange,value){if(typeof value==="number"){value=value.toString(10);}
if(value==="false"||typeof value!=="string"){return undefined;}
const yearValue=Number.parseInt(value.split("/").at(-1),10);if(isNaN(yearValue)){return undefined;}
const yearOffset=yearValue-DateTime.now().year;switch(timeRange){case"year":return{yearOffset,};case"month":{const month=value.includes("/")?Number.parseInt(value.split("/")[0]):-1;if(!(month in monthsOptions)){return{yearOffset,period:undefined};}
return{yearOffset,period:monthsOptions[month-1].id,};}
case"quarter":{const quarter=value.includes("/")?Number.parseInt(value.split("/")[0]):-1;if(!(quarter in FILTER_DATE_OPTION.quarter)){return{yearOffset,period:undefined};}
return{yearOffset,period:FILTER_DATE_OPTION.quarter[quarter-1],};}}}
const PivotUIGlobalFilterPlugin=__exports.PivotUIGlobalFilterPlugin=class PivotUIGlobalFilterPlugin extends OdooUIPlugin{static getters=(["getPivotComputedDomain","getFiltersMatchingPivotArgs",]);constructor(config){super(config);this.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});globalFiltersFieldMatchers["pivot"]={...globalFiltersFieldMatchers["pivot"],waitForReady:()=>this._getPivotsWaitForReady(),getFields:(pivotId)=>this.getters.getPivot(pivotId).getFields(),};}
handleEvent(event){if(!this.getters.isDashboard()){return;}
switch(event.type){case"ZonesSelected":{const sheetId=this.getters.getActiveSheetId();const{col,row}=event.anchor.cell;const cell=this.getters.getCell({sheetId,col,row});if(cell!==undefined&&cell.content.startsWith("=PIVOT.HEADER(")){const filters=this._getFiltersMatchingPivot(sheetId,cell.compiledFormula.tokens);this.dispatch("SET_MANY_GLOBAL_FILTER_VALUE",{filters});}
break;}}}
beforeHandle(cmd){switch(cmd.type){case"START":this._addDomains();break;}}
handle(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":case"REMOVE_GLOBAL_FILTER":case"SET_GLOBAL_FILTER_VALUE":case"CLEAR_GLOBAL_FILTER_VALUE":this._addDomains();break;case"UNDO":case"REDO":{if(cmd.commands.find((command)=>["ADD_GLOBAL_FILTER","EDIT_GLOBAL_FILTER","REMOVE_GLOBAL_FILTER",].includes(command.type))){this._addDomains();}
break;}}}
getPivotComputedDomain(pivotId){return this.getters.getPivot(pivotId).getDomainWithGlobalFilters();}
_getFiltersMatchingPivot(sheetId,tokens){const functionDescription=this.getters.getFirstPivotFunction(sheetId,tokens);if(!functionDescription){return[];}
const{args}=functionDescription;if(args.length<=2){return[];}
const formulaId=args[0];const pivotId=this.getters.getPivotId(formulaId);const index=functionDescription.functionName==="PIVOT.HEADER"?1:2;const pivot=this.getters.getPivot(pivotId);const domainArgs=args.slice(index).map((value)=>({value}));const domain=pivot.parseArgsToPivotDomain(domainArgs);return this.getFiltersMatchingPivotArgs(pivotId,domain);}
getFiltersMatchingPivotArgs(pivotId,PivotDomain){const lastNode=PivotDomain.at(-1);if(!lastNode||lastNode.field==="measure"){return[];}
const filters=this.getters.getGlobalFilters();const matchingFilters=[];for(const filter of filters){const dataSource=this.getters.getPivot(pivotId);const{type}=this.getters.getPivotCoreDefinition(pivotId);if(type!=="ODOO"){continue;}
const{field,granularity:time}=dataSource.parseGroupField(lastNode.field);const pivotFieldMatching=this.getters.getPivotFieldMatching(pivotId,filter.id);if(pivotFieldMatching&&pivotFieldMatching.chain===field.name){let value=dataSource.getLastPivotGroupValue(PivotDomain.slice(-1));if(value===NO_RECORD_AT_THIS_POSITION){continue;}
let transformedValue;const currentValue=this.getters.getGlobalFilterValue(filter.id);switch(filter.type){case"date":if(filter.rangeType==="fixedPeriod"&&time){if(value==="false"){transformedValue=undefined;}else{transformedValue=pivotPeriodToFilterValue(time,value);if(JSON.stringify(transformedValue)===JSON.stringify(currentValue)){transformedValue=undefined;}}}else{continue;}
break;case"relation":if(typeof value=="string"){value=Number(value);if(Number.isNaN(value)){break;}}
if(JSON.stringify(currentValue)!==`[${value}]`){transformedValue=[value];}
break;case"text":if(currentValue!==value){transformedValue=value;}
break;}
matchingFilters.push({filterId:filter.id,value:transformedValue});}}
return matchingFilters;}
_addDomain(pivotId){const domainList=[];for(const[filterId,fieldMatch]of Object.entries(this.getters.getPivotFieldMatch(pivotId))){domainList.push(this.getters.getGlobalFilterDomain(filterId,fieldMatch));}
const domain=Domain.combine(domainList,"AND").toString();this.getters.getPivot(pivotId).addGlobalFilterDomain(domain);}
_addDomains(){for(const pivotId of this.getters.getPivotIds().filter((pivotId)=>this.getters.getPivot(pivotId).type==="ODOO")){this._addDomain(pivotId);}}
_getPivotsWaitForReady(){return this.getters.getPivotIds().map((pivotId)=>this.getters.getPivot(pivotId)).filter((pivot)=>pivot.type==="ODOO").map((pivot)=>pivot.loadMetadata());}}
return __exports;});;

/* /spreadsheet/static/src/plugins.js */
odoo.define('@spreadsheet/plugins',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{CorePlugin,UIPlugin}=require("@odoo/o-spreadsheet");const OdooCorePlugin=__exports.OdooCorePlugin=CorePlugin;const OdooUIPlugin=__exports.OdooUIPlugin=UIPlugin;return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_action',['@web/core/registry','@web/search/control_panel/control_panel','@spreadsheet_dashboard/bundle/dashboard_action/dashboard_loader','@spreadsheet/actions/spreadsheet_component','@web/search/action_hook','@spreadsheet_dashboard/bundle/dashboard_action/mobile_search_panel/mobile_search_panel','@spreadsheet_dashboard/bundle/dashboard_action/mobile_figure_container/mobile_figure_container','@spreadsheet/global_filters/components/filter_value/filter_value','@web/core/utils/hooks','@web/webclient/actions/action_service','@spreadsheet/components/share_button/share_button','@spreadsheet/hooks','@odoo/o-spreadsheet','@web/core/browser/router','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{DashboardLoader,Status}=require("@spreadsheet_dashboard/bundle/dashboard_action/dashboard_loader");const{SpreadsheetComponent}=require("@spreadsheet/actions/spreadsheet_component");const{useSetupAction}=require("@web/search/action_hook");const{DashboardMobileSearchPanel}=require("@spreadsheet_dashboard/bundle/dashboard_action/mobile_search_panel/mobile_search_panel");const{MobileFigureContainer}=require("@spreadsheet_dashboard/bundle/dashboard_action/mobile_figure_container/mobile_figure_container");const{FilterValue}=require("@spreadsheet/global_filters/components/filter_value/filter_value");const{useService}=require("@web/core/utils/hooks");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{SpreadsheetShareButton}=require("@spreadsheet/components/share_button/share_button");const{useSpreadsheetPrint}=require("@spreadsheet/hooks");const{Registry}=require("@odoo/o-spreadsheet");const{router}=require("@web/core/browser/router");const{Component,onWillStart,useState,useEffect}=require("@odoo/owl");const dashboardActionRegistry=__exports.dashboardActionRegistry=new Registry();const SpreadsheetDashboardAction=__exports.SpreadsheetDashboardAction=class SpreadsheetDashboardAction extends Component{static template="spreadsheet_dashboard.DashboardAction";static components={ControlPanel,SpreadsheetComponent,FilterValue,DashboardMobileSearchPanel,MobileFigureContainer,SpreadsheetShareButton,};static props={...standardActionServiceProps};setup(){this.Status=Status;this.controlPanelDisplay={};this.orm=useService("orm");this.actionService=useService("action");this.loader=useState(new DashboardLoader(this.env,this.env.services.orm));onWillStart(async()=>{if(this.props.state&&this.props.state.dashboardLoader){const{groups,dashboards}=this.props.state.dashboardLoader;this.loader.restoreFromState(groups,dashboards);}else{await this.loader.load();}
const activeDashboardId=this.getInitialActiveDashboard();if(activeDashboardId){this.openDashboard(activeDashboardId);}});useEffect(()=>router.pushState({dashboard_id:this.activeDashboardId}),()=>[this.activeDashboardId]);useEffect(()=>{const dashboard=this.state.activeDashboard;if(dashboard&&dashboard.status===Status.Loaded){const render=()=>this.render(true);dashboard.model.on("update",this,render);return()=>dashboard.model.off("update",this,render);}},()=>{const dashboard=this.state.activeDashboard;return[dashboard?.model,dashboard?.status];});useSetupAction({getLocalState:()=>{return{activeDashboardId:this.activeDashboardId,dashboardLoader:this.loader.getState(),};},});useSpreadsheetPrint(()=>this.state.activeDashboard?.model);this.state=useState({activeDashboard:undefined,sidebarExpanded:true});}
get dashboardButton(){return dashboardActionRegistry.getAll()[0];}
get activeDashboardId(){return this.state.activeDashboard?this.state.activeDashboard.id:undefined;}
get filters(){const dashboard=this.state.activeDashboard;if(!dashboard||dashboard.status!==Status.Loaded){return[];}
return dashboard.model.getters.getGlobalFilters();}
getInitialActiveDashboard(){if(this.props.state&&this.props.state.activeDashboardId){return this.props.state.activeDashboardId;}
const params=this.props.action.params||this.props.action.context.params;if(params&&params.dashboard_id){return params.dashboard_id;}
const[firstSection]=this.getDashboardGroups();if(firstSection&&firstSection.dashboards.length){return firstSection.dashboards[0].id;}}
getDashboardGroups(){return this.loader.getDashboardGroups();}
openDashboard(dashboardId){this.state.activeDashboard=this.loader.getDashboard(dashboardId);}
async editDashboard(id){const action=await this.env.services.orm.call("spreadsheet.dashboard","action_edit_dashboard",[id]);this.actionService.doAction(action);}
async shareSpreadsheet(data,excelExport){const url=await this.orm.call("spreadsheet.dashboard.share","action_get_share_url",[{dashboard_id:this.activeDashboardId,spreadsheet_data:JSON.stringify(data),excel_files:excelExport.files,},]);return url;}
toggleSidebar(){this.state.sidebarExpanded=!this.state.sidebarExpanded;}
get activeDashboardGroupName(){return this.getDashboardGroups().find((group)=>group.dashboards.some((d)=>d.id===this.activeDashboardId))?.name;}}
registry.category("actions").add("action_spreadsheet_dashboard",SpreadsheetDashboardAction,{force:true});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_loader.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_loader',['@odoo/o-spreadsheet','@spreadsheet/data_sources/odoo_data_provider','@spreadsheet/currency/helpers'],function(require){'use strict';let __exports={};const{Model}=require("@odoo/o-spreadsheet");const{OdooDataProvider}=require("@spreadsheet/data_sources/odoo_data_provider");const{createDefaultCurrency}=require("@spreadsheet/currency/helpers");const Status=__exports.Status={NotLoaded:"NotLoaded",Loading:"Loading",Loaded:"Loaded",Error:"Error",};const DashboardLoader=__exports.DashboardLoader=class DashboardLoader{constructor(env,orm){this.env=env;this.orm=orm;this.groups=[];this.dashboards={};}
restoreFromState(groups,dashboards){this.groups=groups;this.dashboards=dashboards;}
getState(){return{groups:this.groups,dashboards:this.dashboards,};}
async load(){const groups=await this._fetchGroups();this.groups=groups.filter((group)=>group.published_dashboard_ids.length).map((group)=>({id:group.id,name:group.name,dashboards:group.published_dashboard_ids,}));const dashboards=this.groups.map((group)=>group.dashboards).flat();for(const dashboard of dashboards){this.dashboards[dashboard.id]={id:dashboard.id,displayName:dashboard.name,status:Status.NotLoaded,};}}
getDashboard(dashboardId){const dashboard=this._getDashboard(dashboardId);if(dashboard.status===Status.NotLoaded){dashboard.promise=this._loadDashboardData(dashboardId);}
return dashboard;}
getDashboardGroups(){return this.groups.map((section)=>({id:section.id,name:section.name,dashboards:section.dashboards.map((dashboard)=>({id:dashboard.id,displayName:dashboard.name,status:this._getDashboard(dashboard.id).status,})),}));}
async _fetchGroups(){const groups=await this.orm.webSearchRead("spreadsheet.dashboard.group",[["published_dashboard_ids","!=",false]],{specification:{name:{},published_dashboard_ids:{fields:{name:{}}},},});return groups.records;}
_getDashboard(id){if(!this.dashboards[id]){this.dashboards[id]={status:Status.NotLoaded,id,displayName:""};}
return this.dashboards[id];}
async _loadDashboardData(dashboardId){const dashboard=this._getDashboard(dashboardId);dashboard.status=Status.Loading;try{const{snapshot,revisions,default_currency,is_sample}=await this.orm.call("spreadsheet.dashboard","get_readonly_dashboard",[dashboardId]);dashboard.model=this._createSpreadsheetModel(snapshot,revisions,default_currency);dashboard.status=Status.Loaded;dashboard.isSample=is_sample;}catch(error){dashboard.error=error;dashboard.status=Status.Error;throw error;}}
_activateFirstSheet(model){const sheetId=model.getters.getActiveSheetId();const firstSheetId=model.getters.getSheetIds()[0];if(firstSheetId!==sheetId){model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:sheetId,sheetIdTo:firstSheetId,});}}
_createSpreadsheetModel(snapshot,revisions=[],currency){const odooDataProvider=new OdooDataProvider(this.env);const model=new Model(snapshot,{custom:{env:this.env,orm:this.orm,odooDataProvider},mode:"dashboard",defaultCurrency:createDefaultCurrency(currency),},revisions);this._activateFirstSheet(model);odooDataProvider.addEventListener("data-source-updated",()=>model.dispatch("EVALUATE_CELLS"));return model;}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/mobile_figure_container/mobile_figure_container.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/mobile_figure_container/mobile_figure_container',['@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{Component,useSubEnv}=require("@odoo/owl");const{registries}=spreadsheet;const{figureRegistry}=registries;const MobileFigureContainer=__exports.MobileFigureContainer=class MobileFigureContainer extends Component{static template="documents_spreadsheet.MobileFigureContainer";static props={spreadsheetModel:Object,};setup(){useSubEnv({model:this.props.spreadsheetModel,isDashboard:()=>this.props.spreadsheetModel.getters.isDashboard(),openSidePanel:()=>{},});}
get figures(){const sheetId=this.props.spreadsheetModel.getters.getActiveSheetId();return this.props.spreadsheetModel.getters.getFigures(sheetId).sort((f1,f2)=>(this.isBefore(f1,f2)?-1:1)).map((figure)=>({...figure,width:window.innerWidth,height:300,}));}
getFigureComponent(figure){return figureRegistry.get(figure.tag).Component;}
isBefore(f1,f2){return f1.x<f2.x?f1.y<f2.y:f1.y<f2.y;}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/mobile_search_panel/mobile_search_panel.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/mobile_search_panel/mobile_search_panel',['@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useState}=require("@odoo/owl");const DashboardMobileSearchPanel=__exports.DashboardMobileSearchPanel=class DashboardMobileSearchPanel extends Component{static template="spreadsheet_dashboard.DashboardMobileSearchPanel";static props={onDashboardSelected:Function,groups:Object,activeDashboard:{type:Object,optional:true,},};setup(){this.state=useState({isOpen:false});}
get searchBarText(){return this.props.activeDashboard?this.props.activeDashboard.displayName:_t("Choose a dashboard....");}
onDashboardSelected(dashboardId){this.props.onDashboardSelected(dashboardId);this.state.isOpen=false;}
openDashboardSelection(){const dashboards=this.props.groups.map((group)=>group.dashboards).flat();if(dashboards.length>1){this.state.isOpen=true;}}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/list/clickable_cell.js */
odoo.define('@spreadsheet_dashboard/bundle/list/clickable_cell',['@spreadsheet/list/list_actions','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{SEE_RECORD_LIST,SEE_RECORD_LIST_VISIBLE}=require("@spreadsheet/list/list_actions");const spreadsheet=require("@odoo/o-spreadsheet");const{clickableCellRegistry}=spreadsheet.registries;clickableCellRegistry.add("list",{condition:SEE_RECORD_LIST_VISIBLE,execute:SEE_RECORD_LIST,sequence:10,});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/pivot/clickable_cell.js */
odoo.define('@spreadsheet_dashboard/bundle/pivot/clickable_cell',['@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_actions'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{SEE_RECORDS_PIVOT,SEE_RECORDS_PIVOT_VISIBLE,SET_FILTER_MATCHING,SET_FILTER_MATCHING_CONDITION,}=require("@spreadsheet/pivot/pivot_actions");const{clickableCellRegistry}=spreadsheet.registries;clickableCellRegistry.add("pivot",{condition:SEE_RECORDS_PIVOT_VISIBLE,execute:SEE_RECORDS_PIVOT,sequence:3,});clickableCellRegistry.add("pivot_set_filter_matching",{condition:SET_FILTER_MATCHING_CONDITION,execute:SET_FILTER_MATCHING,sequence:2,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/actions/abstract_spreadsheet_action.js */
odoo.define('@spreadsheet_edition/bundle/actions/abstract_spreadsheet_action',['@web/core/l10n/translation','@odoo/owl','@web/core/utils/hooks','@web/search/action_hook','@web/core/network/download','@web/core/user','@web/webclient/actions/action_service','@spreadsheet/helpers/constants','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/init_callbacks','@spreadsheet_edition/bundle/image/record_file_store','@spreadsheet_edition/bundle/hooks','@spreadsheet/hooks','@spreadsheet_edition/bundle/actions/input_dialog/input_dialog','@spreadsheet/data_sources/odoo_data_provider','@spreadsheet_edition/bundle/comments/comments_store','@spreadsheet/helpers/model','@spreadsheet/currency/helpers','@spreadsheet_edition/bundle/components/spreadsheet_navbar/spreadsheet_navbar','@spreadsheet/actions/spreadsheet_component'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{onMounted,onWillStart,useState,Component,useSubEnv,onWillUnmount}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{useSetupAction}=require("@web/search/action_hook");const{downloadFile}=require("@web/core/network/download");const{user}=require("@web/core/user");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{UNTITLED_SPREADSHEET_NAME,DEFAULT_LINES_NUMBER}=require("@spreadsheet/helpers/constants");const spreadsheet=require("@odoo/o-spreadsheet");const{initCallbackRegistry}=require("@spreadsheet/o_spreadsheet/init_callbacks");const{RecordFileStore}=require("@spreadsheet_edition/bundle/image/record_file_store");const{useSpreadsheetCurrencies,useSpreadsheetLocales,useSpreadsheetThumbnail}=require("@spreadsheet_edition/bundle/hooks");const{useSpreadsheetPrint}=require("@spreadsheet/hooks");const{InputDialog}=require("@spreadsheet_edition/bundle/actions/input_dialog/input_dialog");const{OdooDataProvider}=require("@spreadsheet/data_sources/odoo_data_provider");const{CommentsStore}=require("@spreadsheet_edition/bundle/comments/comments_store");const{waitForDataLoaded}=require("@spreadsheet/helpers/model");const{createDefaultCurrency}=require("@spreadsheet/currency/helpers");const{SpreadsheetNavbar}=require("@spreadsheet_edition/bundle/components/spreadsheet_navbar/spreadsheet_navbar");const{SpreadsheetComponent}=require("@spreadsheet/actions/spreadsheet_component");const uuidGenerator=new spreadsheet.helpers.UuidGenerator();const{Model}=spreadsheet;const{useStoreProvider,ModelStore,SidePanelStore}=spreadsheet.stores;const AbstractSpreadsheetAction=__exports.AbstractSpreadsheetAction=class AbstractSpreadsheetAction extends Component{static template="";static props={...standardActionServiceProps};static components={SpreadsheetComponent,SpreadsheetNavbar,};static target="fullscreen";setup(){if(!this.props.action.params){this.params=this.props.action.context;}else{this.params=this.props.action.params;}
this.isEmptySpreadsheet=this.params.is_new_spreadsheet||false;this.resId=this.params.resId||this.params.spreadsheet_id||this.params.active_id||(this.props.state&&this.props.state.resId);this.shareId=this.params.share_id||this.props.state?.shareId;this.accessToken=this.params.access_token||this.props.state?.accessToken;this.actionService=useService("action");this.notifications=useService("notification");this.dialog=useService("dialog");this.orm=useService("orm");this.http=useService("http");this.ui=useService("ui");this.loadLocales=useSpreadsheetLocales();this.loadCurrencies=useSpreadsheetCurrencies();this.getThumbnail=useSpreadsheetThumbnail();this.fileStore=new RecordFileStore(this.resModel,this.resId,this.http,this.orm);this.spreadsheetService=useService("spreadsheet_collaborative");this.stores=useStoreProvider();this.threadId=this.params?.thread_id;useSetupAction({beforeLeave:this._leaveSpreadsheet.bind(this),beforeUnload:this._leaveSpreadsheet.bind(this),getLocalState:()=>{return{resId:this.resId,shareId:this.shareId,accessToken:this.accessToken,data:this.data,model:this.model,};},});const print=useSpreadsheetPrint(()=>this.model);useSubEnv({download:this.download.bind(this),downloadAsJson:this.downloadAsJson.bind(this),showHistory:this.showHistory.bind(this),insertThreadInSheet:this.insertThreadInSheet.bind(this),print,getLinesNumber:this._getLinesNumber.bind(this),getUserLocale:()=>this.data&&this.data.user_locale,});this.state=useState({spreadsheetName:UNTITLED_SPREADSHEET_NAME,});onWillStart(async()=>{if(this.props.state?.model&&this.props.state?.data){this._initializeWith(this.props.state.data);this.model=this.props.state.model;this.model.joinSession();this.stores.inject(ModelStore,this.model);}else{await this.fetchData();this.createModel();this.stores.inject(ModelStore,this.model);await this.execInitCallbacks();}});onMounted(()=>{const commentsStore=this.stores.get(CommentsStore);this.props.updateActionState({resId:this.resId,access_token:this.accessToken,share_id:this.shareId,});this.env.config.setDisplayName(this.state.spreadsheetName);this.model.on("unexpected-revision-id",this,this.onUnexpectedRevisionId.bind(this));if(this.threadId){setTimeout(()=>commentsStore.openCommentThread(this.threadId),0);const sidePanel=this.stores.get(SidePanelStore);sidePanel.open("Comments");}});onWillUnmount(()=>{this.model.off("unexpected-revision-id",this);});}
get navbarProps(){return{isReadonly:this.isReadonly,onSpreadsheetNameChanged:this._onSpreadSheetNameChanged.bind(this),spreadsheetName:this.state.spreadsheetName,};}
async fetchData(){if(!this.props.state){await this._setupPreProcessingCallbacks();}
const data=await this._fetchData();this._initializeWith(data);}
createModel(){this.model=new Model(this.spreadsheetData,this.getModelConfig(),this.stateUpdateMessages);if(this.env.debug){spreadsheet.__DEBUG__=spreadsheet.__DEBUG__||{};spreadsheet.__DEBUG__.model=this.model;}}
getModelConfig(){const transportService=this.spreadsheetService.makeCollaborativeChannel(this.resModel,this.resId,this.shareId,this.accessToken);const odooDataProvider=new OdooDataProvider(this.env);odooDataProvider.addEventListener("data-source-updated",()=>{this.model.dispatch("EVALUATE_CELLS");});return{custom:{env:this.env,orm:this.orm,odooDataProvider},external:{fileStore:this.fileStore,loadCurrencies:this.loadCurrencies,loadLocales:this.loadLocales,},defaultCurrency:createDefaultCurrency(this.data.default_currency),transportService,client:{id:uuidGenerator.uuidv4(),name:user.name,userId:user.userId,},mode:this.isReadonly?"readonly":"normal",snapshotRequested:this.snapshotRequested,customColors:this.data.company_colors,};}
async execInitCallbacks(){if(this.asyncInitCallback){await this.asyncInitCallback(this.model,this.stores);}
if(this.initCallback){this.initCallback(this.model,this.stores);}}
async _setupPreProcessingCallbacks(){if(this.params.preProcessingAction){const initCallbackGenerator=initCallbackRegistry.get(this.params.preProcessingAction).bind(this);this.initCallback=await initCallbackGenerator(this.params.preProcessingActionData);}
if(this.params.preProcessingAsyncAction){const initCallbackGenerator=initCallbackRegistry.get(this.params.preProcessingAsyncAction).bind(this);this.asyncInitCallback=await initCallbackGenerator(this.params.preProcessingAsyncActionData);}}
_initializeWith(data){this.state.spreadsheetName=data.name;this.spreadsheetData=data.data;this.stateUpdateMessages=data.revisions;this.snapshotRequested=data.snapshot_requested;this.isReadonly=data.isReadonly;this.data=data;}
async makeCopy(){const thumbnail=this.getThumbnail();const data=this.model.exportData();const defaultValues={spreadsheet_data:JSON.stringify(data),spreadsheet_snapshot:false,spreadsheet_revision_ids:[],thumbnail,};const ids=await this.orm.call(this.resModel,"copy",[[this.resId]],{default:defaultValues,});const id=ids[0];this._openSpreadsheet(id);}
async _leaveSpreadsheet(){await this.model.leaveSession();this.model.off("update",this);if(!this.isReadonly){return this.onSpreadsheetLeft();}}
async _onSpreadSheetNameChanged(detail){const{name}=detail;if(name&&name!==this.state.spreadsheetName){this.state.spreadsheetName=name;this.env.config.setDisplayName(this.state.spreadsheetName);if(this.data.writable_rec_name_field){await this.orm.write(this.resModel,[this.resId],{[this.data.writable_rec_name_field]:name,});}}}
async createNewSpreadsheet(){throw new Error("not implemented by children");}
async onSpreadsheetLeft(){if(this.accessToken){return;}
await this.orm.write(this.resModel,[this.resId],this.onSpreadsheetLeftUpdateVals());}
onSpreadsheetLeftUpdateVals(){return{thumbnail:this.getThumbnail()};}
async _fetchData(){return this.orm.call(this.resModel,"join_spreadsheet_session",[this.resId,this.accessToken,]);}
_notifyCreation(){this.notifications.add(this.notificationMessage,{type:"info",sticky:false,});}
_openSpreadsheet(spreadsheetId){this._notifyCreation();this.actionService.doAction({type:"ir.actions.client",tag:this.props.action.tag,params:{spreadsheet_id:spreadsheetId},},{clear_breadcrumbs:true});}
showHistory(){this.actionService.doAction({type:"ir.actions.client",tag:"action_open_spreadsheet_history",params:{spreadsheet_id:this.resId,res_model:this.resModel,},},{clear_breadcrumbs:true});}
onUnexpectedRevisionId(){this.actionService.doAction("reload_context");}
async download(){this.ui.block();try{await waitForDataLoaded(this.model);await this.actionService.doAction({type:"ir.actions.client",tag:"action_download_spreadsheet",params:{name:this.state.spreadsheetName,xlsxData:this.model.exportXLSX(),},});}finally{this.ui.unblock();}}
async downloadAsJson(){this.ui.block();try{const data=JSON.stringify(this.model.exportData());await downloadFile(data,`${this.state.spreadsheetName}.osheet.json`,"application/json");}finally{this.ui.unblock();}}
_getLinesNumber(callback){this.dialog.add(InputDialog,{body:_t("Select the number of records to insert"),confirm:callback,title:_t("Re-insert list"),inputValue:DEFAULT_LINES_NUMBER,inputType:"number",});}
async insertThreadInSheet({sheetId,col,row}){const[threadId]=await this.env.services.orm.create("spreadsheet.cell.thread",[{[this.threadField]:this.resId},]);this.model.dispatch("ADD_COMMENT_THREAD",{sheetId,col,row,threadId,});return threadId;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/actions/control_panel/spreadsheet_name.js */
odoo.define('@spreadsheet_edition/bundle/actions/control_panel/spreadsheet_name',['@spreadsheet/helpers/constants','@odoo/owl'],function(require){'use strict';let __exports={};const{UNTITLED_SPREADSHEET_NAME}=require("@spreadsheet/helpers/constants");const{Component,onMounted,useState,useRef,onWillUpdateProps}=require("@odoo/owl");const WIDTH_MARGIN=3;const PADDING_RIGHT=5;const PADDING_LEFT=PADDING_RIGHT-WIDTH_MARGIN;const SpreadsheetName=__exports.SpreadsheetName=class SpreadsheetName extends Component{static template="spreadsheet_edition.SpreadsheetName";static props={name:String,isReadonly:Boolean,onSpreadsheetNameChanged:{type:Function,optional:true},};static defaultProps={onSpreadsheetNameChanged:()=>{},};setup(){this.placeholder=UNTITLED_SPREADSHEET_NAME;this.state=useState({inputSize:1,isUntitled:this._isUntitled(this.props.name),name:this.props.name,});this.input=useRef("speadsheetNameInput");onMounted(()=>{this._setInputSize(this.state.name);});onWillUpdateProps((nextProps)=>{if(nextProps.name!==this.props.name){this.state.name=nextProps.name;this.state.isUntitled=this._isUntitled(nextProps.name);}});}
_setInputSize(text){const{fontFamily,fontSize}=window.getComputedStyle(this.input.el);const font=`${fontSize} ${fontFamily}`;this.state.inputSize=this._computeTextWidth(text||this.placeholder,font)+PADDING_RIGHT+PADDING_LEFT;}
_computeTextWidth(text,font){const canvas=document.createElement("canvas");const context=canvas.getContext("2d");context.font=font;const width=context.measureText(text).width;return Math.ceil(width)+WIDTH_MARGIN;}
_isUntitled(name){name=name.trim();return!name||name===UNTITLED_SPREADSHEET_NAME.toString();}
_onFocus(ev){if(this._isUntitled(ev.target.value)){ev.target.value=this.placeholder;ev.target.select();}}
_onInput(ev){const value=ev.target.value;this.state.isUntitled=this._isUntitled(value);this.state.name=value;this._setInputSize(value);}
_onNameChanged(ev){const value=ev.target.value.trim();this.state.name=value||this.props.name;this._setInputSize(this.state.name);this.props.onSpreadsheetNameChanged({name:this.state.name,});ev.target.blur();}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/actions/input_dialog/input_dialog.js */
odoo.define('@spreadsheet_edition/bundle/actions/input_dialog/input_dialog',['@odoo/owl','@web/core/dialog/dialog','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const InputDialog=__exports.InputDialog=class InputDialog extends Component{static components={Dialog};static props={close:Function,body:String,inputType:{type:String,optional:true},inputValue:{type:[String,Number],optional:true},confirm:{type:Function,optional:true},title:{type:String,optional:true},};static template="spreadsheet_edition.InputDialog";setup(){this.state=useState({inputValue:this.props.inputValue,error:"",});}
get defaultTitle(){return _t("Odoo Spreadsheet");}
confirm(){const convertedValue=this.convertInputValue(this.state.inputValue);if(this.props.inputType==="number"&&isNaN(convertedValue)){this.state.error=_t("Please enter a valid number.");return;}
this.props.close();this.props.confirm?.(convertedValue);}
convertInputValue(value){if(this.props.inputType==="number"){return parseInt(value,10);}
return value;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/actions/version_history/version_history_action.js */
odoo.define('@spreadsheet_edition/bundle/actions/version_history/version_history_action',['@odoo/owl','@web/core/utils/hooks','@web/webclient/actions/action_service','@web/core/l10n/translation','@web/core/l10n/utils','@web/core/registry','@spreadsheet/helpers/constants','@odoo/o-spreadsheet','@spreadsheet/assets_backend/helpers','@web/core/confirmation_dialog/confirmation_dialog','@spreadsheet/actions/spreadsheet_component','@spreadsheet_edition/bundle/actions/control_panel/spreadsheet_name','@spreadsheet_edition/bundle/hooks','@spreadsheet_edition/bundle/helpers/misc','@web/core/browser/router','@spreadsheet_edition/bundle/version_history/restore_version_dialog/restore_version_dialog','@spreadsheet/data_sources/odoo_data_provider','@spreadsheet_edition/bundle/components/spreadsheet_navbar/spreadsheet_navbar'],function(require){'use strict';let __exports={};const{onMounted,onWillStart,useState,Component,useSubEnv}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{_t}=require("@web/core/l10n/translation");const{pyToJsLocale}=require("@web/core/l10n/utils");const{registry}=require("@web/core/registry");const{UNTITLED_SPREADSHEET_NAME}=require("@spreadsheet/helpers/constants");const spreadsheet=require("@odoo/o-spreadsheet");const{Model,stores}=require("@odoo/o-spreadsheet");const{loadSpreadsheetDependencies}=require("@spreadsheet/assets_backend/helpers");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{SpreadsheetComponent}=require("@spreadsheet/actions/spreadsheet_component");const{SpreadsheetName}=require("@spreadsheet_edition/bundle/actions/control_panel/spreadsheet_name");const{useSpreadsheetCurrencies,useSpreadsheetLocales,useSpreadsheetThumbnail,}=require("@spreadsheet_edition/bundle/hooks");const{formatToLocaleString}=require("@spreadsheet_edition/bundle/helpers/misc");const{router}=require("@web/core/browser/router");const{RestoreVersionConfirmationDialog}=require("@spreadsheet_edition/bundle/version_history/restore_version_dialog/restore_version_dialog");const{OdooDataProvider}=require("@spreadsheet/data_sources/odoo_data_provider");const{SpreadsheetNavbar}=require("@spreadsheet_edition/bundle/components/spreadsheet_navbar/spreadsheet_navbar");const{ModelStore,useStoreProvider,SidePanelStore}=stores;const VersionHistoryAction=__exports.VersionHistoryAction=class VersionHistoryAction extends Component{static template="spreadsheet_edition.VersionHistoryAction";static components={SpreadsheetComponent,SpreadsheetName,SpreadsheetNavbar,};static props={...standardActionServiceProps};static target="fullscreen";setup(){this.params=this.props.action.params;this.orm=useService("orm");this.dialog=useService("dialog");this.actionService=useService("action");this.resId=this.params.spreadsheet_id||(this.props.state&&this.props.state.resId);this.resModel=this.params.res_model||(this.props.state&&this.props.state.remoModel);this.fromSnapshot=this.params.from_snapshot||(this.props.state&&this.props.state.fromSnapshot);this.loadLocales=useSpreadsheetLocales();this.loadCurrencies=useSpreadsheetCurrencies();this.getThumbnail=useSpreadsheetThumbnail();useSubEnv({historyManager:{getRevisions:this.getRevisions.bind(this),forkHistory:this.forkHistory.bind(this),restoreRevision:this.restoreRevision.bind(this),renameRevision:this.renameRevision.bind(this),},});this.state=useState({spreadsheetName:UNTITLED_SPREADSHEET_NAME,revisions:[],restorableRevisions:[],});const stores=useStoreProvider();onWillStart(async()=>{await this.fetchData();this.createModel();stores.inject(ModelStore,this.model);});onMounted(()=>{router.pushState({spreadsheet_id:this.resId,res_model:this.resModel,from_snapshot:this.fromSnapshot,});this.env.config.setDisplayName(this.state.spreadsheetName);const sidePanel=stores.get(SidePanelStore);sidePanel.open("VersionHistory",{onCloseSidePanel:async()=>{const action=await this.env.services.orm.call(this.resModel,"action_open_spreadsheet",[this.resId]);this.env.services.action.doAction(action,{clearBreadcrumbs:true,});},});});}
getRevisions(){return this.state.restorableRevisions;}
async renameRevision(revisionId,name){this.state.revisions.find((el)=>el.id===revisionId).name=name;this.generateRestorableRevisions();await this.orm.call(this.resModel,"rename_revision",[this.resId,revisionId,name]);}
async forkHistory(revisionId){const data=this.model.exportData();const revision=this.state.restorableRevisions.find((rev)=>rev.id===revisionId);data.revisionId=revision.nextRevisionId;const code=pyToJsLocale(this.model.getters.getLocale().code);const timestamp=formatToLocaleString(revision.timestamp,code);const name=_t("%(name)s (restored from %(timestamp)s)",{name:this.state.spreadsheetName,timestamp,});const defaultValues={thumbnail:this.getThumbnail(),name,};const action=await this.orm.call(this.resModel,"fork_history",[this.resId],{revision_id:revisionId,spreadsheet_snapshot:data,default:defaultValues,});this.actionService.doAction(action,{clearBreadcrumbs:true});}
async restoreRevision(revisionId){const revision=this.state.restorableRevisions.find((rev)=>rev.id===revisionId);const code=pyToJsLocale(this.model.getters.getLocale().code);const timestamp=formatToLocaleString(revision.timestamp,code);this.dialog.add(RestoreVersionConfirmationDialog,{title:_t("Heads up!"),body:_t("If you go ahead, your document will go back to the version from %s.\nAny changes you've made after that time will disappear. Ready to proceed?",timestamp),makeACopy:()=>this.forkHistory(revisionId),confirm:async()=>{const data=this.model.exportData();const action=await this.orm.call(this.resModel,"restore_spreadsheet_version",[this.resId],{revision_id:revisionId,spreadsheet_snapshot:data,});this.actionService.doAction(action,{clearBreadcrumbs:true});},cancel:()=>{},});}
async fetchData(){const[spreadsheetHistoryData]=await Promise.all([this._fetchData(),loadSpreadsheetDependencies(),]);this.spreadsheetData=spreadsheetHistoryData.data;this.spreadsheetDataLastDate=spreadsheetHistoryData.initial_date;this.state.revisions=spreadsheetHistoryData.revisions;this.generateRestorableRevisions();this.state.spreadsheetName=spreadsheetHistoryData.name;this.currentRevisionId=spreadsheetHistoryData.revisions.at(-1)?.nextRevisionId||spreadsheetHistoryData.data.revisionId||"START_REVISION";this.odooDataProvider=new OdooDataProvider(this.env);}
generateRestorableRevisions(){const revs=this.state.revisions.slice().filter((el)=>el.type!=="SNAPSHOT_CREATED").reverse();const firstRevision=revs.at(-1);if(firstRevision){revs.push({id:0,nextRevisionId:firstRevision.serverRevisionId,name:_t("Original data"),timestamp:this.spreadsheetDataLastDate,});}
this.state.restorableRevisions=revs;}
async _fetchData(){const record=await this.orm.call(this.resModel,"get_spreadsheet_history",[this.resId,!!this.fromSnapshot,]);return record;}
_dataSourceBind(){const sheetId=this.model.getters.getActiveSheetId();this.model.dispatch("EVALUATE_CELLS",{sheetId});}
reloadFromSnapshot(){this.actionService.doAction({type:"ir.actions.client",tag:this.props.action.tag,params:{spreadsheet_id:this.resId,res_model:this.resModel,from_snapshot:true,},},{clearBreadcrumbs:true});}
async loadEditAction(){const action=await this.env.services.orm.call(this.resModel,"action_open_spreadsheet",[this.resId,]);this.actionService.doAction(action,{clearBreadcrumbs:true,});}
createModel(){this.odooDataProvider.addEventListener("data-source-updated",this._dataSourceBind.bind(this));const data=this.spreadsheetData;this.model=new Model(data,{custom:{env:this.env,orm:this.orm,odooDataProvider:this.odooDataProvider,},external:{loadCurrencies:this.loadCurrencies,loadLocales:this.loadLocales,},mode:"readonly",},this.state.revisions);if(this.model.session.serverRevisionId!==this.currentRevisionId){this.model=new Model({});if(!this.fromSnapshot){this.dialog.add(ConfirmationDialog,{title:_t("Odoo Spreadsheet"),body:_t("There are missing revisions that prevent to restore the whole edition history.\n\
Would you like to load the more recent modifications?"),confirm:()=>{this.reloadFromSnapshot();},close:()=>{this.loadEditAction();},});}else{this.dialog.add(ConfirmationDialog,{title:_t("Odoo Spreadsheet"),body:_t("The history of your spreadsheet is corrupted and you are likely missing recent revisions. This feature cannot be used."),confirm:()=>{this.loadEditAction();},});}}
if(this.env.debug){spreadsheet.__DEBUG__=spreadsheet.__DEBUG__||{};spreadsheet.__DEBUG__.model=this.model;}}}
registry.category("actions").add("action_open_spreadsheet_history",VersionHistoryAction,{force:true,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/clipboard_handlers/field_matching_clipboard_handler.js */
odoo.define('@spreadsheet_edition/bundle/chart/clipboard_handlers/field_matching_clipboard_handler',['@spreadsheet/global_filters/plugins/global_filters_core_plugin','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{AbstractFigureClipboardHandler,registries}=require("@odoo/o-spreadsheet");const{clipboardHandlersRegistries}=registries;class OdooChartFieldMatchingClipboardHandler extends AbstractFigureClipboardHandler{copy({figureId}){if(!this.getters.getChart(figureId)?.type.startsWith("odoo")){return;}
return{odooChartFieldMatching:this.getters.getChartFieldMatch(figureId),};}
paste(target,clippedContent,options){const{figureId:newFigureId}=target;const clippedMatchings=clippedContent.odooChartFieldMatching;if(!clippedMatchings){return;}
const odooChartIds=globalFiltersFieldMatchers["chart"].getIds();for(const filterId in clippedMatchings){const copiedFieldMatching=clippedMatchings[filterId];const filter=this.getters.getGlobalFilter(filterId);const currentChartMatchings={};for(const chartId of odooChartIds){currentChartMatchings[chartId]=this.getters.getOdooChartFieldMatching(chartId,filterId);}
if(options?.isCutOperation){delete currentChartMatchings[clippedContent.figureId];}
if(copiedFieldMatching.chain===currentChartMatchings[newFigureId]?.chain){continue;}
currentChartMatchings[newFigureId]=copiedFieldMatching;this.dispatch("EDIT_GLOBAL_FILTER",{filter,chart:currentChartMatchings,});}}}
clipboardHandlersRegistries.figureHandlers.add("odoo_chart_field_matching",OdooChartFieldMatchingClipboardHandler);return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/clipboard_handlers/odoo_menu_link_clipboard_handler.js */
odoo.define('@spreadsheet_edition/bundle/chart/clipboard_handlers/odoo_menu_link_clipboard_handler',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{AbstractFigureClipboardHandler,registries}=require("@odoo/o-spreadsheet");const{clipboardHandlersRegistries}=registries;class OdooLinkClipboardHandler extends AbstractFigureClipboardHandler{copy(data){const sheetId=this.getters.getActiveSheetId();const figure=this.getters.getFigure(sheetId,data.figureId);if(!figure){throw new Error(`No figure for the given id: ${data.figureId}`);}
if(figure.tag!=="chart"){return;}
const odooMenuId=this.getters.getChartOdooMenu(data.figureId);if(odooMenuId){return{odooMenuId};}}
paste(target,clippedContent,options){if(!target.figureId||!clippedContent.odooMenuId){return;}
const{figureId}=target;const{odooMenuId}=clippedContent;this.dispatch("LINK_ODOO_MENU_TO_CHART",{chartId:figureId,odooMenuId:odooMenuId.xmlid||odooMenuId.id,});}}
clipboardHandlersRegistries.figureHandlers.add("odoo_menu_link",OdooLinkClipboardHandler);return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/odoo_chart_insertion.js */
odoo.define('@spreadsheet_edition/bundle/chart/odoo_chart_insertion',['@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/init_callbacks','@web/core/domain'],function(require){'use strict';let __exports={};const{helpers,stores}=require("@odoo/o-spreadsheet");const{initCallbackRegistry}=require("@spreadsheet/o_spreadsheet/init_callbacks");const{Domain}=require("@web/core/domain");const uuidGenerator=new helpers.UuidGenerator();const{SidePanelStore}=stores;__exports.insertChart=insertChart;function insertChart(chartData){const chartType=`odoo_${chartData.metaData.mode}`;const definition={metaData:{groupBy:chartData.metaData.groupBy,measure:chartData.metaData.measure,order:chartData.metaData.order,resModel:chartData.metaData.resModel,},searchParams:{...chartData.searchParams,domain:new Domain(chartData.searchParams.domain).toJson(),},stacked:chartData.metaData.stacked,fillArea:chartType==="odoo_line",cumulative:chartData.metaData.cumulated,title:{text:chartData.name},background:"#FFFFFF",legendPosition:"top",verticalAxisPosition:"left",type:chartType,dataSourceId:uuidGenerator.uuidv4(),id:uuidGenerator.uuidv4(),actionXmlId:chartData.actionXmlId,};return(model,stores)=>{model.dispatch("CREATE_CHART",{sheetId:model.getters.getActiveSheetId(),id:definition.id,position:{x:10,y:10,},definition,});const sidePanel=stores.get(SidePanelStore);sidePanel.open("ChartPanel",{figureId:definition.id});};}
initCallbackRegistry.add("insertChart",insertChart);return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.js */
odoo.define('@spreadsheet_edition/bundle/chart/odoo_menu/chart_panel',['@web/core/utils/patch','@odoo/o-spreadsheet','@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const spreadsheet=require("@odoo/o-spreadsheet");const{IrMenuSelector}=require("@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector");const{GenericChartConfigPanel,ScorecardChartConfigPanel,GaugeChartConfigPanel,Section}=spreadsheet.components;function patchChartPanelWithMenu(PanelComponent){patch(PanelComponent.prototype,{get odooMenuId(){const menu=this.env.model.getters.getChartOdooMenu(this.props.figureId);return menu?menu.id:undefined;},updateOdooLink(odooMenuId){if(!odooMenuId){this.env.model.dispatch("LINK_ODOO_MENU_TO_CHART",{chartId:this.props.figureId,odooMenuId:undefined,});return;}
const menu=this.env.model.getters.getIrMenu(odooMenuId);this.env.model.dispatch("LINK_ODOO_MENU_TO_CHART",{chartId:this.props.figureId,odooMenuId:menu.xmlid||menu.id,});},});PanelComponent.components={...PanelComponent.components,IrMenuSelector,Section,};}
patchChartPanelWithMenu(GenericChartConfigPanel);patchChartPanelWithMenu(GaugeChartConfigPanel);patchChartPanelWithMenu(ScorecardChartConfigPanel);return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/side_panels/common/config_panel.js */
odoo.define('@spreadsheet_edition/bundle/chart/side_panels/common/config_panel',['@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector','@web/core/domain','@web/core/domain_selector/domain_selector','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/utils/hooks','@web/core/l10n/translation','@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const{IrMenuSelector}=require("@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector");const{Domain}=require("@web/core/domain");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{components}=require("@odoo/o-spreadsheet");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{Section}=components;const CommonOdooChartConfigPanel=__exports.CommonOdooChartConfigPanel=class CommonOdooChartConfigPanel extends Component{static template="spreadsheet_edition.CommonOdooChartConfigPanel";static components={IrMenuSelector,DomainSelector,Section};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};setup(){this.dialog=useService("dialog");const loadData=async(figureId)=>{const dataSource=this.env.model.getters.getChartDataSource(figureId);this.modelDisplayName=await dataSource.getModelLabel();};onWillStart(()=>loadData(this.props.figureId));onWillUpdateProps((nextProps)=>loadData(nextProps.figureId));}
get model(){const definition=this.env.model.getters.getChartDefinition(this.props.figureId);return definition.metaData.resModel;}
get domain(){const definition=this.env.model.getters.getChartDefinition(this.props.figureId);return new Domain(definition.searchParams.domain).toString();}
onNameChanged(title){const definition={...this.env.model.getters.getChartDefinition(this.props.figureId),title,};this.env.model.dispatch("UPDATE_CHART",{id:this.props.figureId,sheetId:this.env.model.getters.getFigureSheetId(this.props.figureId),definition,});}
getLastUpdate(){const dataSource=this.env.model.getters.getChartDataSource(this.props.figureId);const lastUpdate=dataSource.lastUpdate;if(lastUpdate){return new Date(lastUpdate).toLocaleTimeString();}
return _t("never");}
openDomainEdition(){this.dialog.add(DomainSelectorDialog,{resModel:this.model,domain:new Domain(this.domain).toString(),isDebugMode:!!this.env.debug,onConfirm:(domain)=>{const definition=this.env.model.getters.getChartDefinition(this.props.figureId);const updatedDefinition={...definition,searchParams:{...definition.searchParams,domain:new Domain(domain).toJson(),},};this.env.model.dispatch("UPDATE_CHART",{id:this.props.figureId,sheetId:this.env.model.getters.getFigureSheetId(this.props.figureId),definition:updatedDefinition,});},});}
get odooMenuId(){const menu=this.env.model.getters.getChartOdooMenu(this.props.figureId);return menu?menu.id:undefined;}
updateOdooLink(odooMenuId){if(!odooMenuId){this.env.model.dispatch("LINK_ODOO_MENU_TO_CHART",{chartId:this.props.figureId,odooMenuId:undefined,});return;}
const menu=this.env.model.getters.getIrMenu(odooMenuId);this.env.model.dispatch("LINK_ODOO_MENU_TO_CHART",{chartId:this.props.figureId,odooMenuId:menu.xmlid||menu.id,});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/side_panels/index.js */
odoo.define('@spreadsheet_edition/bundle/chart/side_panels',['@odoo/o-spreadsheet','@spreadsheet_edition/bundle/chart/side_panels/common/config_panel','@spreadsheet_edition/bundle/chart/side_panels/odoo_bar/odoo_bar_config_panel','@spreadsheet_edition/bundle/chart/side_panels/odoo_line/odoo_line_config_panel','@spreadsheet_edition/bundle/chart/side_panels/odoo_chart_with_axis/design_panel','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{CommonOdooChartConfigPanel}=require("@spreadsheet_edition/bundle/chart/side_panels/common/config_panel");const{OdooBarChartConfigPanel}=require("@spreadsheet_edition/bundle/chart/side_panels/odoo_bar/odoo_bar_config_panel");const{OdooLineChartConfigPanel}=require("@spreadsheet_edition/bundle/chart/side_panels/odoo_line/odoo_line_config_panel");const{OdooChartWithAxisDesignPanel}=require("@spreadsheet_edition/bundle/chart/side_panels/odoo_chart_with_axis/design_panel");const{_t}=require("@web/core/l10n/translation");const{chartSidePanelComponentRegistry,chartSubtypeRegistry}=spreadsheet.registries;const{PieChartDesignPanel}=spreadsheet.components;chartSidePanelComponentRegistry.add("odoo_line",{configuration:OdooLineChartConfigPanel,design:OdooChartWithAxisDesignPanel,}).add("odoo_bar",{configuration:OdooBarChartConfigPanel,design:OdooChartWithAxisDesignPanel,}).add("odoo_pie",{configuration:CommonOdooChartConfigPanel,design:PieChartDesignPanel,});chartSubtypeRegistry.add("odoo_line",{matcher:(definition)=>definition.type==="odoo_line"&&!definition.stacked&&!definition.fillArea,subtypeDefinition:{stacked:false,fillArea:false},displayName:_t("Line"),chartSubtype:"odoo_line",chartType:"odoo_line",category:"line",preview:"o-spreadsheet-ChartPreview.LINE_CHART",});chartSubtypeRegistry.add("odoo_stacked_line",{matcher:(definition)=>definition.type==="odoo_line"&&definition.stacked&&!definition.fillArea,subtypeDefinition:{stacked:true,fillArea:false},displayName:_t("Stacked Line"),chartSubtype:"odoo_stacked_line",chartType:"odoo_line",category:"line",preview:"o-spreadsheet-ChartPreview.STACKED_LINE_CHART",});chartSubtypeRegistry.add("odoo_area",{matcher:(definition)=>definition.type==="odoo_line"&&!definition.stacked&&definition.fillArea,subtypeDefinition:{stacked:false,fillArea:true},displayName:_t("Area"),chartSubtype:"odoo_area",chartType:"odoo_line",category:"area",preview:"o-spreadsheet-ChartPreview.AREA_CHART",});chartSubtypeRegistry.add("odoo_stacked_area",{matcher:(definition)=>definition.type==="odoo_line"&&definition.stacked&&definition.fillArea,subtypeDefinition:{stacked:true,fillArea:true},displayName:_t("Stacked Area"),chartSubtype:"odoo_stacked_area",chartType:"odoo_line",category:"area",preview:"o-spreadsheet-ChartPreview.STACKED_AREA_CHART",});chartSubtypeRegistry.add("odoo_bar",{matcher:(definition)=>definition.type==="odoo_bar"&&!definition.stacked,subtypeDefinition:{stacked:false},displayName:_t("Column"),chartSubtype:"odoo_bar",chartType:"odoo_bar",category:"column",preview:"o-spreadsheet-ChartPreview.COLUMN_CHART",});chartSubtypeRegistry.add("odoo_stacked_bar",{matcher:(definition)=>definition.type==="odoo_bar"&&definition.stacked,subtypeDefinition:{stacked:true},displayName:_t("Stacked Column"),chartSubtype:"odoo_stacked_bar",chartType:"odoo_bar",category:"column",preview:"o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART",});chartSubtypeRegistry.add("odoo_pie",{displayName:_t("Pie"),chartSubtype:"odoo_pie",chartType:"odoo_pie",category:"pie",preview:"o-spreadsheet-ChartPreview.PIE_CHART",});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/side_panels/main_side_panel_chart.js */
odoo.define('@spreadsheet_edition/bundle/chart/side_panels/main_side_panel_chart',['@web/core/utils/patch','@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const spreadsheet=require("@odoo/o-spreadsheet");const{onWillUpdateProps}=require("@odoo/owl");const{chartSubtypeRegistry}=spreadsheet.registries;const{ChartTypePicker}=spreadsheet.components;patch(ChartTypePicker.prototype,{setup(){super.setup();this.updateChartTypeByCategories(this.props);onWillUpdateProps((nexProps)=>this.updateChartTypeByCategories(nexProps));},getChartTypes(isOdoo){const result={};for(const key of chartSubtypeRegistry.getKeys()){if((isOdoo&&key.startsWith("odoo_"))||(!isOdoo&&!key.startsWith("odoo_"))){result[key]=chartSubtypeRegistry.get(key).name;}}
return result;},onTypeChange(type){if(this.getChartDefinition(this.props.figureId).type.startsWith("odoo_")){const newChartInfo=chartSubtypeRegistry.get(type);const definition={verticalAxisPosition:"left",...this.env.model.getters.getChartDefinition(this.props.figureId),...newChartInfo.subtypeDefinition,type:newChartInfo.chartType,};this.env.model.dispatch("UPDATE_CHART",{definition,id:this.props.figureId,sheetId:this.env.model.getters.getActiveSheetId(),});this.closePopover();}else{super.onTypeChange(type);}},updateChartTypeByCategories(props){const definition=this.env.model.getters.getChartDefinition(props.figureId);const isOdoo=definition.type.startsWith("odoo_");const registryItems=chartSubtypeRegistry.getAll().filter((item)=>{return isOdoo?item.chartType.startsWith("odoo_"):!item.chartType.startsWith("odoo_");});this.chartTypeByCategories={};for(const chartInfo of registryItems){if(this.chartTypeByCategories[chartInfo.category]){this.chartTypeByCategories[chartInfo.category].push(chartInfo);}else{this.chartTypeByCategories[chartInfo.category]=[chartInfo];}}},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/side_panels/odoo_bar/odoo_bar_config_panel.js */
odoo.define('@spreadsheet_edition/bundle/chart/side_panels/odoo_bar/odoo_bar_config_panel',['@spreadsheet_edition/bundle/chart/side_panels/common/config_panel','@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{CommonOdooChartConfigPanel}=require("@spreadsheet_edition/bundle/chart/side_panels/common/config_panel");const{_t}=require("@web/core/l10n/translation");const{components}=require("@odoo/o-spreadsheet");const{Checkbox}=components;const OdooBarChartConfigPanel=__exports.OdooBarChartConfigPanel=class OdooBarChartConfigPanel extends CommonOdooChartConfigPanel{static template="spreadsheet_edition.OdooBarChartConfigPanel";static components={...CommonOdooChartConfigPanel.components,Checkbox,};get stackedLabel(){return _t("Stacked linechart");}
onUpdateStacked(stacked){this.props.updateChart(this.props.figureId,{stacked,});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/side_panels/odoo_chart_with_axis/design_panel.js */
odoo.define('@spreadsheet_edition/bundle/chart/side_panels/odoo_chart_with_axis/design_panel',['@odoo/o-spreadsheet','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{components,constants}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{ChartWithAxisDesignPanel}=components;const{CHART_AXIS_CHOICES}=constants;const OdooChartWithAxisDesignPanel=__exports.OdooChartWithAxisDesignPanel=class OdooChartWithAxisDesignPanel extends ChartWithAxisDesignPanel{static template="spreadsheet_edition.OdooChartWithAxisDesignPanel";axisChoices=CHART_AXIS_CHOICES;get axesList(){return[{id:"x",name:_t("Horizontal axis")},{id:"y",name:_t("Vertical axis")},];}
updateVerticalAxisPosition(verticalAxisPosition){this.props.updateChart(this.props.figureId,{verticalAxisPosition,});}
toggleDataTrend(display){const trend={type:"polynomial",order:1,...this.props.definition.trend,display,};this.props.updateChart(this.props.figureId,{trend});}
getTrendLineConfiguration(){return this.props.definition.trend;}
getTrendType(config){if(!config){return"";}
return config.type==="polynomial"&&config.order===1?"linear":config.type;}
onChangeTrendType(ev){const type=ev.target.value;let config;switch(type){case"linear":case"polynomial":config={type:"polynomial",order:type==="linear"?1:2,};break;case"exponential":case"logarithmic":config={type};break;default:return;}
this.updateTrendLineValue(config);}
onChangePolynomialDegree(ev){const element=ev.target;const order=parseInt(element.value||"1");if(order<2){element.value=`${this.getTrendLineConfiguration()?.order ?? 2}`;return;}
this.updateTrendLineValue({order});}
updateTrendLineValue(config){const trend={...this.props.definition.trend,...config,};this.props.updateChart(this.props.figureId,{trend});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/chart/side_panels/odoo_line/odoo_line_config_panel.js */
odoo.define('@spreadsheet_edition/bundle/chart/side_panels/odoo_line/odoo_line_config_panel',['@spreadsheet_edition/bundle/chart/side_panels/common/config_panel','@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{CommonOdooChartConfigPanel}=require("@spreadsheet_edition/bundle/chart/side_panels/common/config_panel");const{_t}=require("@web/core/l10n/translation");const{components}=require("@odoo/o-spreadsheet");const{Checkbox}=components;const OdooLineChartConfigPanel=__exports.OdooLineChartConfigPanel=class OdooLineChartConfigPanel extends CommonOdooChartConfigPanel{static template="spreadsheet_edition.OdooLineChartConfigPanel";static components={...CommonOdooChartConfigPanel.components,Checkbox,};get stackedLabel(){return _t("Stacked linechart");}
get cumulativeLabel(){return _t("Cumulative data");}
onUpdateStacked(stacked){this.props.updateChart(this.props.figureId,{stacked,});}
onUpdateCumulative(cumulative){this.props.updateChart(this.props.figureId,{cumulative,});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/clipboard_handler.js */
odoo.define('@spreadsheet_edition/bundle/comments/clipboard_handler',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{AbstractCellClipboardHandler,helpers}=require("@odoo/o-spreadsheet");const{isInside}=helpers;const CellThreadsClipboardHandler=__exports.CellThreadsClipboardHandler=class CellThreadsClipboardHandler extends AbstractCellClipboardHandler{copy(data){if(!data.zones.length){return;}
const zones=data.zones;const sheetId=this.getters.getActiveSheetId();const sheetThreads=this.getters.getSpreadsheetThreads([sheetId]);const threads=sheetThreads.filter((thread)=>isInside(thread.col,thread.row,zones[0]));return{threads,zones};}
paste(target,content,options){if(!content.threads?.length||!target.zones.length){return;}
if(options?.isCutOperation&&!options?.pasteOption){const zones=target.zones;const sheetId=this.getters.getActiveSheetId();this.pasteFromCut(sheetId,zones,content);}}
pasteFromCut(sheetId,target,content){const cutZone=content.zones[0];const deltaCol=target[0].left-cutZone.left;const deltaRow=target[0].top-cutZone.top;for(const thread of content.threads){this.dispatch("DELETE_COMMENT_THREAD",{sheetId:thread.sheetId,col:thread.col,row:thread.row,threadId:thread.threadId,});this.dispatch("ADD_COMMENT_THREAD",{sheetId,col:thread.col+deltaCol,row:thread.row+deltaRow,threadId:thread.threadId,});}}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/comments_store.js */
odoo.define('@spreadsheet_edition/bundle/comments/comments_store',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{helpers,stores}=require("@odoo/o-spreadsheet");const{positionToZone,isInside}=helpers;const{SpreadsheetStore,CellPopoverStore}=stores;const ACTIVE_BACKGROUND_COLOR="#FFD73333";const CommentsStore=__exports.CommentsStore=class CommentsStore extends SpreadsheetStore{mutators=["toggleComments","openCommentThread"];selectedThreadId=undefined;areCommentsActive=true;cellPopoverStore=this.get(CellPopoverStore);drawResolvedBackground=false;constructor(get){super(get);this.model.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});}
handle(cmd){switch(cmd.type){case"SET_VIEWPORT_OFFSET":if(this.cellPopoverStore.persistentCellPopover?.type==="OdooCellComment"){this.cellPopoverStore.close();}
break;}}
get renderingLayers(){return["Triangle"];}
handleEvent(event){if(this.getters.isGridSelectionActive()&&!this.getters.isReadonly()){this.drawResolvedBackground=false;const position=this.getters.getActivePosition();const threads=this.getters.getCellThreads(position);if(threads&&threads.length){const thread=threads.find((thread)=>thread.threadId===this.selectedThreadId)||threads.at(-1);this.selectedThreadId=thread.threadId;if(!thread.isResolved){this.cellPopoverStore.open(position,"OdooCellComment");this.drawResolvedBackground=true;}else{if(this.cellPopoverStore.persistentCellPopover?.type==="OdooCellComment"){this.cellPopoverStore.close();}}}else{this.selectedThreadId=undefined;}}}
toggleComments(){this.areCommentsActive=!this.areCommentsActive;if(!this.areCommentsActive&&this.cellPopoverStore.persistentCellPopover?.type==="OdooCellComment"){this.cellPopoverStore.close();this.selectedThreadId=undefined;}}
openCommentThread(threadId){const threadInfo=this.getters.getThreadInfo(threadId);if(!threadInfo||this.getters.isReadonly()){return;}
this.areCommentsActive=true;const{sheetId,col,row}=threadInfo;const activeSheetId=this.getters.getActiveSheetId();if(sheetId!==activeSheetId){this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:sheetId,});}
this.selectedThreadId=threadId;this.model.selection.selectCell(col,row);this.drawResolvedBackground=true;}
drawLayer({ctx},layer){if(!this.areCommentsActive||layer!=="Triangle"||this.getters.isReadonly()){return;}
const sheetId=this.getters.getActiveSheetId();const threadInfos=this.getters.getThreadInfosInSheet(sheetId);for(const{col,row,isResolved}of threadInfos){const zone=this.getters.expandZone(sheetId,positionToZone({col,row}));if(zone.left!==col||zone.top!==row){continue;}
const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width>0&&height>0){const{col:activeCol,row:activeRow}=this.getters.getActivePosition();if(isInside(activeCol,activeRow,zone)&&(this.drawResolvedBackground||!isResolved)){ctx.fillStyle=ACTIVE_BACKGROUND_COLOR;ctx.fillRect(x,y,width,height);}
if(!isResolved){ctx.fillStyle="orange";ctx.beginPath();ctx.moveTo(x+5,y);ctx.lineTo(x,y+5);ctx.lineTo(x,y);ctx.fill();}}}}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/components/cell_thread.js */
odoo.define('@spreadsheet_edition/bundle/comments/components/cell_thread',['@odoo/owl','@web/core/utils/hooks','@mail/core/common/thread','@mail/core/common/composer','@spreadsheet_edition/bundle/comments/components/spreadsheet_comment_composer'],function(require){'use strict';let __exports={};const{Component,useState,onWillUpdateProps,useChildSubEnv,onWillStart}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{Thread}=require("@mail/core/common/thread");const{Composer}=require("@mail/core/common/composer");const{SpreadsheetCommentComposer}=require("@spreadsheet_edition/bundle/comments/components/spreadsheet_comment_composer");const CellThread=__exports.CellThread=class CellThread extends Component{static template="spreadsheet_edition.CellThread";static components={Thread,Composer,SpreadsheetCommentComposer};static props={threadId:Number,edit:Boolean,autofocus:{type:Number,optional:true},};static defaultProps={autofocus:0};static threadModel="spreadsheet.cell.thread";setup(){useChildSubEnv({inChatWindow:true,chatter:{},});this.mailStore=useService("mail.store");this.state=useState({thread:undefined,});onWillStart(()=>this.loadThread(this.props.threadId));onWillUpdateProps(async(nextProps)=>{if(this.props.threadId!==nextProps.threadId){await this.loadThread(nextProps.threadId);}});}
async loadThread(threadId){this.state.thread=this.mailStore.Thread.insert({model:CellThread.threadModel,id:threadId,});await this.state.thread.fetchNewMessages();}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/components/cell_thread_popover.js */
odoo.define('@spreadsheet_edition/bundle/comments/components/cell_thread_popover',['@odoo/owl','@web/core/utils/hooks','@mail/core/common/thread','@spreadsheet_edition/bundle/comments/components/cell_thread','@spreadsheet_edition/bundle/comments/components/spreadsheet_comment_composer','@spreadsheet_edition/bundle/comments/comments_store','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Component,useState,onWillUpdateProps,useChildSubEnv}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{Thread}=require("@mail/core/common/thread");const{CellThread}=require("@spreadsheet_edition/bundle/comments/components/cell_thread");const{SpreadsheetCommentComposer}=require("@spreadsheet_edition/bundle/comments/components/spreadsheet_comment_composer");const{CommentsStore}=require("@spreadsheet_edition/bundle/comments/comments_store");const{stores}=require("@odoo/o-spreadsheet");const{useStore}=stores;const CellThreadPopover=__exports.CellThreadPopover=class CellThreadPopover extends Component{static template="spreadsheet_edition.CellThreadPopover";static components={Thread,CellThread,SpreadsheetCommentComposer};static props={threadId:{optional:true,type:Number,},onClosed:{optional:true,type:Function,},focused:Boolean,position:Object,};static defaultProps={focus:false};static threadModel="spreadsheet.cell.thread";setup(){useChildSubEnv({inChatWindow:true,});this.mailStore=useService("mail.store");this.state=useState({thread:undefined,isValid:true,});this.loadThread(this.props.threadId);this.commentsStore=useStore(CommentsStore);onWillUpdateProps((nextProps)=>{this.loadThread(nextProps.threadId);});}
onFocused(){if(this.props.threadId&&!this.props.focused){this.commentsStore.openCommentThread(this.props.threadId);}}
showAllComments(){this.env.openSidePanel("Comments");}
loadThread(threadId){this.state.thread=this.mailStore.Thread.insert({model:CellThreadPopover.threadModel,id:threadId,});}
async insertNewThread(value,postData){if(!value){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const threadId=await this.env.insertThreadInSheet({sheetId,...this.props.position});this.loadThread(threadId);await this.state.thread.post(value,postData);this.commentsStore.openCommentThread(this.props.threadId);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/components/composer_patch.js */
odoo.define('@spreadsheet_edition/bundle/comments/components/composer_patch',['@web/core/utils/patch','@mail/core/common/composer','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{Composer}=require("@mail/core/common/composer");const{_t}=require("@web/core/l10n/translation");patch(Composer.prototype,{get SEND_TEXT(){if(this.props.composer?.thread?.model==="spreadsheet.cell.thread"){return _t("Send");}else{return super.SEND_TEXT;}},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/components/spreadsheet_comment_composer.js */
odoo.define('@spreadsheet_edition/bundle/comments/components/spreadsheet_comment_composer',['@mail/core/common/composer'],function(require){'use strict';let __exports={};const{Composer}=require("@mail/core/common/composer");const SpreadsheetCommentComposer=__exports.SpreadsheetCommentComposer=class SpreadsheetCommentComposer extends Composer{constructor(...args){super(...args);}
async _sendMessage(value,postData){await this.props.onPostCallback(value,postData);this.props.composer.clear();return;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/index.js */
odoo.define('@spreadsheet_edition/bundle/comments',['@web/core/l10n/translation','@spreadsheet_edition/bundle/comments/plugins/comments_core_plugin','@odoo/o-spreadsheet','@spreadsheet_edition/bundle/comments/side_panel/comment_threads_side_panel','@spreadsheet_edition/bundle/comments/components/cell_thread_popover','@spreadsheet_edition/bundle/comments/comments_store','@spreadsheet_edition/bundle/comments/clipboard_handler'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{CellThreadsPlugin}=require("@spreadsheet_edition/bundle/comments/plugins/comments_core_plugin");const{coreTypes,registries,stores,addRenderingLayer}=require("@odoo/o-spreadsheet");const{CommentThreadsSidePanel}=require("@spreadsheet_edition/bundle/comments/side_panel/comment_threads_side_panel");const{CellThreadPopover}=require("@spreadsheet_edition/bundle/comments/components/cell_thread_popover");const{CommentsStore}=require("@spreadsheet_edition/bundle/comments/comments_store");const{CellThreadsClipboardHandler}=require("@spreadsheet_edition/bundle/comments/clipboard_handler");const{CellPopoverStore}=stores;const{cellPopoverRegistry,cellMenuRegistry,corePluginRegistry,clipboardHandlersRegistries,inverseCommandRegistry,topbarMenuRegistry,sidePanelRegistry,otRegistry,}=registries;corePluginRegistry.add("odooCellThreadsPlugin",CellThreadsPlugin);clipboardHandlersRegistries.cellHandlers.add("commentThreads",CellThreadsClipboardHandler);function identity(cmd){return[cmd];}
coreTypes.add("ADD_COMMENT_THREAD");coreTypes.add("DELETE_COMMENT_THREAD");coreTypes.add("EDIT_COMMENT_THREAD");inverseCommandRegistry.add("ADD_COMMENT_THREAD",identity);inverseCommandRegistry.add("DELETE_COMMENT_THREAD",identity);inverseCommandRegistry.add("EDIT_COMMENT_THREAD",identity);otRegistry.addTransformation("DELETE_COMMENT_THREAD",["ADD_COMMENT_THREAD","EDIT_COMMENT_THREAD"],(toTransform,executed)=>{if(toTransform.threadId===executed.threadId){return undefined;}
return toTransform;});cellPopoverRegistry.add("OdooCellComment",{onOpen:(position,getters)=>{if(getters.isReadonly()){return;}
const sheetId=getters.getActiveSheetId();const thread=getters.getCellThreads({sheetId,...position})?.filter((thread)=>!thread.isResolved)?.at(-1)||{};return{Component:CellThreadPopover,cellCorner:"TopRight",props:{threadId:thread.threadId,position,focused:true,},isOpen:true,positioning:"TopRight",};},onHover:(position,getters)=>{if(getters.isReadonly()){return;}
const sheetId=getters.getActiveSheetId();const threads=getters.getCellThreads({sheetId,...position})?.filter((thread)=>!thread.isResolved);if(!threads||!threads.length){return undefined;}
return{Component:CellThreadPopover,cellCorner:"TopRight",props:{threadId:threads.at(-1).threadId,position,focused:false,},isOpen:true,positioning:"TopRight",};},});const INSERT_COMMENT_ACTION={name:_t("Insert comment"),isVisible:(env)=>env.insertThreadInSheet&&env.getStore(CommentsStore).areCommentsActive,execute:async(env)=>{const{col,row}=env.model.getters.getActivePosition();env.getStore(CellPopoverStore).open({col,row},"OdooCellComment");},icon:"o-spreadsheet-Icon.COMMENTS",};cellMenuRegistry.add("insert_comment",{...INSERT_COMMENT_ACTION,sequence:150,separator:true,});topbarMenuRegistry.addChild("insert_comment",["insert"],{...INSERT_COMMENT_ACTION,sequence:150,});topbarMenuRegistry.addChild("show_comments",["view","show"],{name:_t("Comments"),sequence:1500,execute:(env)=>env.getStore(CommentsStore).toggleComments(),isActive:(env)=>env.getStore(CommentsStore).areCommentsActive,isVisible:(env)=>env.insertThreadInSheet,});topbarMenuRegistry.addChild("view_comments",["view"],{name:_t("All Comments"),sequence:1500,execute:(env)=>env.openSidePanel("Comments"),icon:"o-spreadsheet-Icon.COMMENTS",isVisible:(env)=>env.insertThreadInSheet,});sidePanelRegistry.add("Comments",{title:_t("Comments"),Body:CommentThreadsSidePanel,});addRenderingLayer("Triangle",0.5);return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/plugins/comments_core_plugin.js */
odoo.define('@spreadsheet_edition/bundle/comments/plugins/comments_core_plugin',['@odoo/o-spreadsheet','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{helpers}=require("@odoo/o-spreadsheet");const{OdooCorePlugin}=require("@spreadsheet/plugins");const{toXC,toCartesian,expandZoneOnInsertion,reduceZoneOnDeletion}=helpers;const CellThreadsPlugin=__exports.CellThreadsPlugin=class CellThreadsPlugin extends OdooCorePlugin{static getters=["getCellThreads","getThreadInfosInSheet","getThreadInfo","getSpreadsheetThreads",];cellThreads={};handle(cmd){switch(cmd.type){case"ADD_COMMENT_THREAD":{const{sheetId,col,row,threadId}=cmd;const xc=toXC(col,row);if(!this.cellThreads[sheetId]){this.cellThreads[sheetId]={};}
const threads=this.cellThreads[sheetId]?.[xc]||[];const newThreads=[...threads,{threadId,isResolved:false}];this.history.update("cellThreads",sheetId,xc,newThreads);}
break;case"EDIT_COMMENT_THREAD":{const{threadId,isResolved,sheetId,col,row}=cmd;const xc=toXC(col,row);const threads=this.cellThreads[sheetId][xc];const newThreads=threads.map((thread)=>thread.threadId===threadId?{...thread,isResolved}:thread);this.history.update("cellThreads",sheetId,xc,newThreads);}
break;case"DELETE_COMMENT_THREAD":{const{threadId,sheetId,col,row}=cmd;const xc=toXC(col,row);const currentThreadIds=this.cellThreads[sheetId]?.[xc]||[];const newThreadIds=currentThreadIds.filter((thread)=>thread.threadId!==threadId);this.history.update("cellThreads",sheetId,xc,newThreadIds);break;}
case"ADD_COLUMNS_ROWS":this.onAddColumnsRows(cmd);break;case"REMOVE_COLUMNS_ROWS":this.onDeleteColumnsRows(cmd);break;case"CREATE_SHEET":this.history.update("cellThreads",cmd.sheetId,{});break;case"DUPLICATE_SHEET":this.history.update("cellThreads",cmd.sheetIdTo,{});break;case"DELETE_SHEET":{const threads={...this.cellThreads};delete threads[cmd.sheetId];this.history.update("cellThreads",threads);}
break;}}
getThreadInfo(threadId){for(const[sheetId,threadXcs]of Object.entries(this.cellThreads)){for(const[xc,xcThreads]of Object.entries(threadXcs)){const thread=xcThreads?.find((thread)=>thread.threadId===threadId);if(thread){return{sheetId,...toCartesian(xc),...thread};}}}}
getCellThreads({sheetId,col,row}){return(this.cellThreads[sheetId]||{})[toXC(col,row)];}
getThreadInfosInSheet(sheetId){return this.getSpreadsheetThreads([sheetId]);}
getSpreadsheetThreads(sheetIds){const spreadsheetThreads=[];for(const sheetId of sheetIds){const sheetThreads=this.cellThreads[sheetId];if(sheetThreads){for(const[xc,threads]of Object.entries(sheetThreads)){const{col,row}=toCartesian(xc);for(const thread of threads){spreadsheetThreads.push({sheetId,col,row,...thread});}}}}
return spreadsheetThreads;}
export(data){for(const sheet of data.sheets){sheet.comments=this.cellThreads[sheet.id];}}
import(data){for(const sheet of data.sheets){this.cellThreads[sheet.id]={};if(sheet.comments){this.cellThreads[sheet.id]=sheet.comments;}}}
onAddColumnsRows({sheetId,base,dimension,position,quantity}){const newCellThreadIds={};for(const xc of Object.keys(this.cellThreads[sheetId])){const{col,row}=toCartesian(xc);const zone={left:col,right:col,top:row,bottom:row};const newZone=expandZoneOnInsertion(zone,dimension==="COL"?"left":"top",base,position,quantity);if(newZone){const{left,top}=newZone;const threads=this.cellThreads[sheetId][xc];const newXc=toXC(left,top);newCellThreadIds[newXc]=threads;}}
this.history.update("cellThreads",sheetId,newCellThreadIds);}
onDeleteColumnsRows({sheetId,elements,dimension}){const newCellThreadIds={};for(const xc of Object.keys(this.cellThreads[sheetId])){const{col,row}=toCartesian(xc);const zone={left:col,right:col,top:row,bottom:row};const newZone=reduceZoneOnDeletion(zone,dimension==="COL"?"left":"top",elements);if(newZone){const{left,top}=newZone;const threads=this.cellThreads[sheetId][xc];const newXc=toXC(left,top);newCellThreadIds[newXc]=threads;}}
this.history.update("cellThreads",sheetId,newCellThreadIds);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/comments/side_panel/comment_threads_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/comments/side_panel/comment_threads_side_panel',['@odoo/owl','@spreadsheet_edition/bundle/comments/components/cell_thread','@odoo/o-spreadsheet','@spreadsheet_edition/bundle/comments/comments_store','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{CellThread}=require("@spreadsheet_edition/bundle/comments/components/cell_thread");const{helpers,stores,components}=require("@odoo/o-spreadsheet");const{CommentsStore}=require("@spreadsheet_edition/bundle/comments/comments_store");const{_t}=require("@web/core/l10n/translation");const{toXC,createActions}=helpers;const{useStore}=stores;const{Menu,Section}=components;const CommentThreadsSidePanel=__exports.CommentThreadsSidePanel=class CommentThreadsSidePanel extends Component{static template="documents_spreadsheet.CommentThreadsSidePanel";static props={onCloseSidePanel:Function};static components={CellThread,Menu,Section};setup(){this.state=useState({mode:"allSheets",});this.menuState=useState({isOpen:false,position:null,threadId:undefined,});this.commentsStore=useStore(CommentsStore);}
get sheetIds(){return this.state.mode==="allSheets"?this.env.model.getters.getSheetIds():[this.env.model.getters.getActiveSheetId()];}
get selectedThreadId(){return this.commentsStore.selectedThreadId;}
get spreadsheetThreads(){const sheetIds=this.state.mode==="activeSheet"?[this.env.model.getters.getActiveSheetId()]:this.env.model.getters.getSheetIds();return this.env.model.getters.getSpreadsheetThreads(sheetIds);}
getNumberOfCommentsLabel(numberOfComments){return numberOfComments===1?_t("1 thread"):_t("%s threads",numberOfComments);}
getThreadTitle(threadId){const{col,row}=this.env.model.getters.getThreadInfo(threadId);const xc=toXC(col,row);return`${xc}`;}
selectThread(threadId){this.commentsStore.openCommentThread(threadId);}
get menuItems(){if(!this.menuState.threadId){return[];}
const{sheetId,col,row,isResolved}=this.env.model.getters.getThreadInfo(this.menuState.threadId);return createActions([{name:isResolved?_t("Re-open this thread"):_t("Resolve this thread"),execute:()=>{this.env.model.dispatch("EDIT_COMMENT_THREAD",{sheetId,col,row,threadId:this.menuState.threadId,isResolved:!isResolved,});this.commentsStore.openCommentThread(this.menuState.threadId);},},]);}
openMenu(ev,threadId){this.selectThread(threadId);const{x,y,height}=ev.target.getBoundingClientRect();this.menuState.isOpen=true;this.menuState.position={x,y:y+height};this.menuState.threadId=threadId;}
closeMenu(){this.menuState.isOpen=false;this.menuState.position=null;this.menuState.threadId=undefined;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/components/collaborative_status/collaborative_status.js */
odoo.define('@spreadsheet_edition/bundle/components/collaborative_status/collaborative_status',['@odoo/owl','@spreadsheet/o_spreadsheet/o_spreadsheet'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registries}=require("@spreadsheet/o_spreadsheet/o_spreadsheet");const{topbarComponentRegistry}=registries;const CollaborativeStatus=__exports.CollaborativeStatus=class CollaborativeStatus extends Component{static template="spreadsheet_edition.CollaborativeStatus";static props={};get isSynced(){return this.env.model.getters.isFullySynchronized();}
get connectedUsers(){const connectedUsers=[];for(const client of this.env.model.getters.getConnectedClients()){if(!connectedUsers.some((user)=>user.id===client.userId)){connectedUsers.push({id:client.userId,name:client.name,});}}
return connectedUsers;}
get tooltipInfo(){return JSON.stringify({users:this.connectedUsers.map((user)=>{return{name:user.name,avatar:`/web/image?model=res.users&field=avatar_128&id=${user.id}`,};}),});}}
topbarComponentRegistry.add("collaborative_status",{component:CollaborativeStatus,sequence:10,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/components/locale_status/locale_status.js */
odoo.define('@spreadsheet_edition/bundle/components/locale_status/locale_status',['@odoo/owl','@web/core/l10n/translation','@spreadsheet/o_spreadsheet/o_spreadsheet'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registries,helpers}=require("@spreadsheet/o_spreadsheet/o_spreadsheet");const{topbarComponentRegistry}=registries;function getLocalesComparison(spreadsheetLocale,userLocale){const differences=[];if(spreadsheetLocale.dateFormat!==userLocale.dateFormat){differences.push(_t("- dates: %s",spreadsheetLocale.dateFormat));}
if(spreadsheetLocale.thousandsSeparator!==userLocale.thousandsSeparator||spreadsheetLocale.decimalSeparator!==userLocale.decimalSeparator){differences.push(_t("- numbers: %s",helpers.formatValue(1234567.89,{format:"#,##0.00",locale:spreadsheetLocale,})));}
return differences.join("\n");}
const LocaleStatus=__exports.LocaleStatus=class LocaleStatus extends Component{static template="spreadsheet_edition.LocaleStatus";static props={};get mismatchedLocaleTitle(){const spreadsheetLocale=this.env.model.getters.getLocale();const userLocale=this.env.getUserLocale();const title=_t("Difference between user locale (%(user_locale)s) and spreadsheet locale (%(spreadsheet_locale)s). This spreadsheet is using the formats below:",{user_locale:userLocale.code,spreadsheet_locale:spreadsheetLocale.code,});const comparison=getLocalesComparison(spreadsheetLocale,userLocale);return comparison?title+"\n"+comparison:"";}}
topbarComponentRegistry.add("locale_status",{component:LocaleStatus,isVisible:(env)=>env.getUserLocale?.()&&getLocalesComparison(env.model.getters.getLocale(),env.getUserLocale())!=="",sequence:12,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/components/side_panel_domain/side_panel_domain.js */
odoo.define('@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain',['@odoo/owl','@web/core/domain_selector/domain_selector','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/domain','@web/core/utils/hooks','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{Domain}=require("@web/core/domain");const{useService}=require("@web/core/utils/hooks");const{components}=require("@odoo/o-spreadsheet");const{Section}=components;const SidePanelDomain=__exports.SidePanelDomain=class SidePanelDomain extends Component{static template="spreadsheet_edition.SidePanelDomain";static components={DomainSelector,Section,};static props={resModel:String,domain:[Domain,String,Array],onUpdate:Function,};getStringifiedDomain(){return new Domain(this.props.domain).toString();}
setup(){this.dialog=useService("dialog");}
openDomainEdition(){this.dialog.add(DomainSelectorDialog,{resModel:this.props.resModel,domain:this.getStringifiedDomain(),isDebugMode:!!this.env.debug,onConfirm:(domain)=>{this.props.onUpdate(new Domain(domain).toJson());},});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/components/spreadsheet_navbar/spreadsheet_navbar.js */
odoo.define('@spreadsheet_edition/bundle/components/spreadsheet_navbar/spreadsheet_navbar',['@web_enterprise/webclient/navbar/navbar','@spreadsheet_edition/bundle/actions/control_panel/spreadsheet_name','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{EnterpriseNavBar}=require("@web_enterprise/webclient/navbar/navbar");const{SpreadsheetName}=require("@spreadsheet_edition/bundle/actions/control_panel/spreadsheet_name");const{useService}=require("@web/core/utils/hooks");const{useState}=require("@odoo/owl");const SpreadsheetNavbar=__exports.SpreadsheetNavbar=class SpreadsheetNavbar extends EnterpriseNavBar{static template="spreadsheet_edition.SpreadsheetNavbar";static components={...EnterpriseNavBar.components,SpreadsheetName};static props={spreadsheetName:String,isReadonly:{type:Boolean,optional:true,},onSpreadsheetNameChanged:{type:Function,optional:true,},slots:{type:Object,optional:true,},};setup(){super.setup();this.actionService=useService("action");this.breadcrumbs=useState(this.env.config.breadcrumbs);}
get breadcrumbTitle(){if(this.breadcrumbs.length>1){return this.breadcrumbs.at(-2).name;}
return"";}
onBreadcrumbClicked(){if(this.breadcrumbs.length>1){this.actionService.restore(this.breadcrumbs.at(-2).id);}}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/components/topbar_share_button/topbar_share_button.js */
odoo.define('@spreadsheet_edition/bundle/components/topbar_share_button/topbar_share_button',['@odoo/owl','@spreadsheet/o_spreadsheet/o_spreadsheet','@spreadsheet/components/share_button/share_button'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registries}=require("@spreadsheet/o_spreadsheet/o_spreadsheet");const{SpreadsheetShareButton}=require("@spreadsheet/components/share_button/share_button");const{topbarComponentRegistry}=registries;const TopbarShareButton=__exports.TopbarShareButton=class TopbarShareButton extends Component{static template="spreadsheet_edition.TopbarShareButton";static components={SpreadsheetShareButton,};static props={};get buttonProps(){return{onSpreadsheetShared:this.env.onSpreadsheetShared.bind(this),model:this.env.model,};}}
topbarComponentRegistry.add("share_button",{component:TopbarShareButton,isVisible:(env)=>env.onSpreadsheetShared,sequence:20,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/date_filter_editor_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_editor/date_filter_editor_side_panel',['@web/core/l10n/translation','@spreadsheet_edition/bundle/global_filters/components/filter_field_offset','@spreadsheet/helpers/constants','@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel','@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{FilterFieldOffset}=require("@spreadsheet_edition/bundle/global_filters/components/filter_field_offset");const{RELATIVE_DATE_RANGE_TYPES}=require("@spreadsheet/helpers/constants");const{AbstractFilterEditorSidePanel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel");const{FilterEditorFieldMatching}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching");const{useState}=require("@odoo/owl");const RANGE_TYPES=[{type:"fixedPeriod",description:_t("Month / Quarter")},{type:"relative",description:_t("Relative Period")},{type:"from_to",description:_t("From / To")},];class DateFilterEditorFieldMatching extends FilterEditorFieldMatching{static components={...FilterEditorFieldMatching.components,FilterFieldOffset,};static template="spreadsheet_edition.DateFilterEditorFieldMatching";static props={...FilterEditorFieldMatching.props,onOffsetSelected:Function,};}
const DateFilterEditorSidePanel=__exports.DateFilterEditorSidePanel=class DateFilterEditorSidePanel extends AbstractFilterEditorSidePanel{static template="spreadsheet_edition.DateFilterEditorSidePanel";static components={...AbstractFilterEditorSidePanel.components,DateFilterEditorFieldMatching,};setup(){super.setup();this.type="date";this.dateState=useState({defaultValue:undefined,type:"fixedPeriod",disabledPeriods:[],});this.relativeDateRangesTypes=RELATIVE_DATE_RANGE_TYPES;this.dateRangeTypes=RANGE_TYPES;this.ALLOWED_FIELD_TYPES=["datetime","date"];}
get filterValues(){const values=super.filterValues;return{...values,defaultValue:this.dateState.defaultValue,rangeType:this.dateState.type,disabledPeriods:this.dateState.disabledPeriods,};}
shouldDisplayFieldMatching(){return this.fieldMatchings.length;}
isDateTypeSelected(dateType){return dateType===this.dateState.type;}
loadSpecificFilterValues(globalFilter){if(globalFilter.type!=="date"){return;}
this.dateState.type=globalFilter.rangeType;this.dateState.defaultValue=globalFilter.defaultValue;if(globalFilter.rangeType==="fixedPeriod"){this.dateState.disabledPeriods=globalFilter.disabledPeriods||[];}}
onSelectedField(index,chain,field){super.onSelectedField(index,chain,field);this.fieldMatchings[index].fieldMatch.offset=0;}
onOffsetSelected(index,offset){this.fieldMatchings[index].fieldMatch.offset=offset;}
onTimeRangeChanged(defaultValue){this.dateState.defaultValue=defaultValue;}
onDateOptionChange(ev){this.dateState.type=ev.target.value;this.dateState.defaultValue=undefined;}
toggleDateDefaultValue(checked){const defaultValue=this.dateState.disabledPeriods.includes("month")?"this_year":"this_month";this.dateState.defaultValue=checked?defaultValue:undefined;}
toggleAllowedPeriod(period){const disabledPeriods=this.dateState.disabledPeriods;if(disabledPeriods.includes(period)){this.dateState.disabledPeriods=disabledPeriods.filter((p)=>p!==period);}else{this.dateState.disabledPeriods=[...disabledPeriods,period];}
if(this.dateState.defaultValue==="this_month"&&this.dateState.disabledPeriods.includes("month")){this.dateState.defaultValue="this_year";}else if(this.dateState.defaultValue==="this_quarter"&&this.dateState.disabledPeriods.includes("quarter")){this.dateState.defaultValue="this_year";}}
get allowedAutomaticValues(){const values=[{value:"this_year",label:_t("Year")}];if(!this.dateState.disabledPeriods.includes("month")){values.push({value:"this_month",label:_t("Month")});}
if(!this.dateState.disabledPeriods.includes("quarter")){values.push({value:"this_quarter",label:_t("Quarter")});}
return values;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/filter_editor_field_matching.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching',['@web/core/model_field_selector/model_field_selector','@odoo/owl'],function(require){'use strict';let __exports={};const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{Component}=require("@odoo/owl");const FilterEditorFieldMatching=__exports.FilterEditorFieldMatching=class FilterEditorFieldMatching extends Component{static template="spreadsheet_edition.FilterEditorFieldMatching";static components={ModelFieldSelector,};static props={fieldMatchings:Array,wrongFieldMatchings:Array,selectField:Function,filterModelFieldSelectorField:Function,};getModelField(fieldMatch){if(!fieldMatch||!fieldMatch.chain){return"";}
return fieldMatch.chain;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/filter_editor_label.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_label',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onMounted,useRef}=require("@odoo/owl");const FilterEditorLabel=__exports.FilterEditorLabel=class FilterEditorLabel extends Component{static template="spreadsheet_edition.FilterEditorLabel";static props={label:{type:String,optional:true},placeholder:{type:String,optional:true},inputClass:{type:String,optional:true},setLabel:Function,};setup(){this.labelInput=useRef("labelInput");onMounted(this.onMounted);}
onMounted(){this.labelInput.el.focus();}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/filter_editor_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/cancelled_reason','@web/core/utils/hooks','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_label','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{useService}=require("@web/core/utils/hooks");const{globalFiltersFieldMatchers}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{FilterEditorLabel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_label");const{onWillStart,Component,useRef,useState,toRaw}=require("@odoo/owl");const{Checkbox,Section,SidePanelCollapsible}=spreadsheet.components;const{toNumber}=spreadsheet.helpers;const uuidGenerator=new spreadsheet.helpers.UuidGenerator();const AbstractFilterEditorSidePanel=__exports.AbstractFilterEditorSidePanel=class AbstractFilterEditorSidePanel extends Component{static template="";static components={FilterEditorLabel,SidePanelCollapsible,Checkbox,Section,};static props={id:{type:String,optional:true},onCloseSidePanel:{type:Function,optional:true},};setup(){this.id=undefined;this.type="";this.genericState=useState({saved:false,label:undefined,});this.fieldMatchings=useState([]);this._wrongFieldMatchingsSet=useState(new Set());this.getters=this.env.model.getters;this.orm=useService("orm");this.notification=useService("notification");this.labelInput=useRef("labelInput");this.ALLOWED_FIELD_TYPES=[];onWillStart(this.onWillStart);}
get placeholder(){return _t("New %s filter",this.type);}
get missingLabel(){return this.genericState.saved&&!this.genericState.label;}
get wrongFieldMatchings(){return this.genericState.saved?[...this._wrongFieldMatchingsSet]:[];}
get missingRequired(){return!!this.missingLabel||this.wrongFieldMatchings.length!==0;}
get filterValues(){const id=this.id||uuidGenerator.uuidv4();return{id,type:this.type,label:this.genericState.label,};}
get isNewFilter(){return this.props.id===undefined;}
setLabel(ev){this.genericState.label=ev.target.value;}
shouldDisplayFieldMatching(){throw new Error("Not implemented by children");}
loadValues(){this.id=this.props.id;const globalFilter=this.id&&this.getters.getGlobalFilter(this.id);if(globalFilter){this.genericState.label=_t(globalFilter.label);this.loadSpecificFilterValues(globalFilter);}}
loadSpecificFilterValues(globalFilter){return;}
async _loadFieldMatchings(){for(const[type,el]of Object.entries(globalFiltersFieldMatchers)){for(const objectId of el.getIds()){const tag=await el.getTag(objectId);this.fieldMatchings.push({name:el.getDisplayName(objectId),tag,fieldMatch:el.getFieldMatching(objectId,this.id)||{},fields:()=>el.getFields(objectId),model:()=>el.getModel(objectId),payload:()=>({id:objectId,type}),});}}}
async onWillStart(){this.loadValues();const proms=[];proms.push(...Object.values(globalFiltersFieldMatchers).map((el)=>el.waitForReady()).flat());await this._loadFieldMatchings();await Promise.all(proms);}
isFieldValid(field){return!!field.searchable;}
filterModelFieldSelectorField(field){if(!field.searchable){return false;}
if(field.name==="id"){return true;}
return this.ALLOWED_FIELD_TYPES.includes(field.type)||!!field.relation;}
matchingRelation(field){return!field.relation;}
onSelectedField(index,chain,field){index=toNumber(index);if(!chain){this._wrongFieldMatchingsSet.delete(index);this.fieldMatchings[index].fieldMatch={};return;}
if(!field){this._wrongFieldMatchingsSet.add(index);}
const fieldName=chain;this.fieldMatchings[index].fieldMatch={chain:fieldName,type:field?.type||"",};if(!field||(field.name!=="id"&&!this.matchingRelation(field))||!field.searchable){this._wrongFieldMatchingsSet.add(index);}else{this._wrongFieldMatchingsSet.delete(index);}}
onSave(){this.genericState.saved=true;if(this.missingRequired){this.notification.add(_t("Some required fields are not valid"),{type:"danger",sticky:false,});return;}
const cmd=this.id?"EDIT_GLOBAL_FILTER":"ADD_GLOBAL_FILTER";const filter=this.filterValues;const additionalPayload={};this.fieldMatchings.forEach((fm)=>{const{type,id}=fm.payload();additionalPayload[type]=additionalPayload[type]||{};additionalPayload[type][id]=toRaw(fm.fieldMatch);});const result=this.env.model.dispatch(cmd,{filter,...additionalPayload,});if(result.isCancelledBecause(CommandResult.DuplicatedFilterLabel)){this.notification.add(_t("Duplicated Label"),{type:"danger",sticky:false,});return;}
this.env.openSidePanel("GLOBAL_FILTERS_SIDE_PANEL",{});}
onCancel(){this.env.openSidePanel("GLOBAL_FILTERS_SIDE_PANEL",{});}
onDelete(){if(this.id){this.env.model.dispatch("REMOVE_GLOBAL_FILTER",{id:this.id});}
this.env.openSidePanel("GLOBAL_FILTERS_SIDE_PANEL",{});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/relation_filter_editor_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_editor/relation_filter_editor_side_panel',['@web/core/model_selector/model_selector','@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel','@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching','@web/core/utils/hooks','@web/core/record_selectors/multi_record_selector','@web/core/domain','@web/core/user','@odoo/owl','@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain'],function(require){'use strict';let __exports={};const{ModelSelector}=require("@web/core/model_selector/model_selector");const{AbstractFilterEditorSidePanel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel");const{FilterEditorFieldMatching}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching");const{useService}=require("@web/core/utils/hooks");const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{useState}=require("@odoo/owl");const{SidePanelDomain}=require("@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain");const RelationFilterEditorSidePanel=__exports.RelationFilterEditorSidePanel=class RelationFilterEditorSidePanel extends AbstractFilterEditorSidePanel{static template="spreadsheet_edition.RelationFilterEditorSidePanel";static components={...AbstractFilterEditorSidePanel.components,ModelSelector,MultiRecordSelector,FilterEditorFieldMatching,SidePanelDomain,};setup(){super.setup();this.type="relation";this.relationState=useState({defaultValue:[],displayNames:[],includeChildren:undefined,relatedModel:{label:undefined,technical:undefined,},});this.nameService=useService("name");this.ALLOWED_FIELD_TYPES=["many2one","many2many","one2many"];}
get missingModel(){return this.genericState.saved&&!this.relationState.relatedModel.technical;}
get missingRequired(){return super.missingRequired||this.missingModel;}
get filterValues(){const values=super.filterValues;return{...values,defaultValue:this.relationState.defaultValue,defaultValueDisplayNames:this.relationState.displayNames,modelName:this.relationState.relatedModel.technical,includeChildren:this.relationState.includeChildren,domainOfAllowedValues:this.relationState.domainOfAllowedValues,};}
shouldDisplayFieldMatching(){return this.fieldMatchings.length&&this.relationState.relatedModel.technical;}
get relatedModels(){const all=this.fieldMatchings.map((object)=>Object.values(object.fields()));const set=new Set(all.flat().filter((field)=>field.relation).map((field)=>field.relation));this.fieldMatchings.forEach((object)=>{set.add(object.model());});return[...set];}
loadSpecificFilterValues(globalFilter){this.relationState.defaultValue=globalFilter.defaultValue;this.relationState.relatedModel.technical=globalFilter.modelName;this.relationState.includeChildren=globalFilter.includeChildren;this.relationState.restrictValuesToDomain=!!globalFilter.domainOfAllowedValues?.length;this.relationState.domainOfAllowedValues=globalFilter.domainOfAllowedValues;}
async onWillStart(){await super.onWillStart();const promises=[this.fetchModelFromName()];if(this.relationState.includeChildren){this.relationState.relatedModel.hasParentRelation=true;}else{promises.push(this.fetchModelRelation());}
await Promise.all(promises);}
_findRelation(model,fields){if(this.relationState.relatedModel.technical===model){return Object.values(fields).find((field)=>field.name==="id");}
const field=Object.values(fields).find((field)=>field.searchable&&field.relation===this.relationState.relatedModel.technical);return field;}
async onModelSelected({technical,label}){if(!this.genericState.label){this.genericState.label=label;}
if(this.relationState.relatedModel.technical!==technical){this.relationState.defaultValue=[];}
this.relationState.relatedModel.technical=technical;this.relationState.relatedModel.label=label;this.relationState.domainOfAllowedValues=[];this.fieldMatchings.forEach((object,index)=>{const field=this._findRelation(object.model(),object.fields());this.onSelectedField(index,field?field.name:undefined,field);});await this.fetchModelRelation();this.relationState.includeChildren=this.relationState.relatedModel.hasParentRelation;}
async fetchModelFromName(){if(!this.relationState.relatedModel.technical){return;}
const result=await this.orm.call("ir.model","display_name_for",[[this.relationState.relatedModel.technical],]);this.relationState.relatedModel.label=result[0]&&result[0].display_name;if(!this.genericState.label){this.genericState.label=this.relationState.relatedModel.label;}}
async fetchModelRelation(){const technicalName=this.relationState.relatedModel.technical;const hasParentRelation=await this.orm.call("ir.model","has_searchable_parent_relation",[technicalName]);this.relationState.relatedModel.hasParentRelation=hasParentRelation;}
isFieldValid(field){const relatedModel=this.relationState.relatedModel.technical;return super.isFieldValid(field)&&(!relatedModel||field.relation===relatedModel);}
matchingRelation(field){return field.relation===this.relationState.relatedModel.technical;}
async onValuesSelected(resIds){const displayNames=await this.nameService.loadDisplayNames(this.relationState.relatedModel.technical,resIds);this.relationState.defaultValue=resIds;this.relationState.displayNames=Object.values(displayNames);}
toggleDefaultsToCurrentUser(ev){this.relationState.defaultValue=ev.target.checked?"current_user":undefined;}
toggleDomainRestriction(isChecked){this.relationState.restrictValuesToDomain=isChecked;this.relationState.domainOfAllowedValues=[];}
onDomainUpdate(domain){this.relationState.domainOfAllowedValues=domain;}
getEvaluatedDomain(){const domain=this.relationState.domainOfAllowedValues;if(domain){return new Domain(domain).toList(user.context);}
return[];}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/text_filter_editor_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_editor/text_filter_editor_side_panel',['@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel','@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching','@spreadsheet/global_filters/components/filter_text_value/filter_text_value','@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const{AbstractFilterEditorSidePanel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_side_panel");const{FilterEditorFieldMatching}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/filter_editor_field_matching");const{TextFilterValue}=require("@spreadsheet/global_filters/components/filter_text_value/filter_text_value");const{components}=require("@odoo/o-spreadsheet");const{useState}=require("@odoo/owl");const{SelectionInput}=components;const TextFilterEditorSidePanel=__exports.TextFilterEditorSidePanel=class TextFilterEditorSidePanel extends AbstractFilterEditorSidePanel{static template="spreadsheet_edition.TextFilterEditorSidePanel";static components={...AbstractFilterEditorSidePanel.components,FilterEditorFieldMatching,TextFilterValue,SelectionInput,};setup(){super.setup();this.type="text";this.textState=useState({defaultValue:"",restrictValuesToRange:false,rangeOfAllowedValues:undefined,});this.ALLOWED_FIELD_TYPES=["many2one","text","char"];}
get rangesForSelectionInput(){if(!this.textState.rangeOfAllowedValues){return[];}
return[this.textState.rangeOfAllowedValues];}
get textOptionsFromRange(){if(!this.textState.restrictValuesToRange){return[];}
const range=this.env.model.getters.getRangeFromSheetXC(this.env.model.getters.getActiveSheetId(),this.textState.rangeOfAllowedValues);return this.env.model.getters.getTextFilterOptionsFromRange(range,[this.textState.defaultValue,]);}
shouldDisplayFieldMatching(){return this.fieldMatchings.length;}
get filterValues(){const values=super.filterValues;const sheetId=this.env.model.getters.getActiveSheetId();const{restrictValuesToRange,rangeOfAllowedValues,defaultValue}=this.textState;const rangeString=restrictValuesToRange&&rangeOfAllowedValues;const range=rangeString?this.env.model.getters.getRangeDataFromXc(sheetId,rangeString):undefined;return{...values,defaultValue:defaultValue,rangeOfAllowedValues:range,};}
loadSpecificFilterValues(globalFilter){const{rangeOfAllowedValues,defaultValue}=globalFilter;this.textState.defaultValue=defaultValue;this.textState.restrictValuesToRange=!!rangeOfAllowedValues;if(rangeOfAllowedValues){const rangeString=this.env.model.getters.getRangeString(rangeOfAllowedValues,this.env.model.getters.getActiveSheetId());this.textState.rangeOfAllowedValues=rangeString;}}
onRangeChanged(ranges){this.textState.rangeOfAllowedValues=ranges[0];}
onRangeConfirmed(){}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/components/filter_field_offset.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/components/filter_field_offset',['@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const FIELD_OFFSETS=[{value:0,description:""},{value:-1,description:_t("Previous")},{value:-2,description:_t("Before previous")},{value:1,description:_t("Next")},{value:2,description:_t("After next")},];const FilterFieldOffset=__exports.FilterFieldOffset=class FilterFieldOffset extends Component{static template="spreadsheet_edition.FilterFieldOffset";static props={onOffsetSelected:Function,selectedOffset:Number,active:Boolean,};setup(){this.fieldsOffsets=FIELD_OFFSETS;}
onOffsetSelected(ev){this.props.onOffsetSelected(parseInt(ev.target.value));}
get title(){return this.props.active?_t("Period offset applied to this source"):_t("Requires a selected field");}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/filter_component.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/filter_component',['@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{Component}=require("@odoo/owl");const{Menu}=spreadsheet;const FilterComponent=__exports.FilterComponent=class FilterComponent extends Component{static template="spreadsheet_edition.FilterComponent";static components={Menu};static props={};get activeFilter(){return this.env.model.getters.getActiveFilterCount();}
toggleDropdown(){this.env.toggleSidePanel("GLOBAL_FILTERS_SIDE_PANEL");}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/global_filters_auto_complete.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/global_filters_auto_complete',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,tokenColors,helpers}=require("@odoo/o-spreadsheet");const{insertTokenAfterLeftParenthesis}=helpers;registries.autoCompleteProviders.add("global_filters",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(functionContext?.parent.toUpperCase()==="ODOO.FILTER.VALUE"&&functionContext.argPosition===0){const labels=this.getters.getGlobalFilters().map((filter)=>filter.label);return labels.map((label)=>{const escapedLabel=label.replaceAll('"','\\"');const quotedLabel=`"${escapedLabel}"`;return{text:quotedLabel,htmlContent:[{value:quotedLabel,color:tokenColors.STRING}],};});}
return;},selectProposal:insertTokenAfterLeftParenthesis,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/global_filters_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/global_filters_side_panel',['@spreadsheet/global_filters/components/filter_value/filter_value','@web/core/l10n/translation','@odoo/owl','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{FilterValue}=require("@spreadsheet/global_filters/components/filter_value/filter_value");const{_t}=require("@web/core/l10n/translation");const{Component,useRef}=require("@odoo/owl");const{hooks,components}=require("@odoo/o-spreadsheet");const{Section}=components;const GlobalFiltersSidePanel=__exports.GlobalFiltersSidePanel=class GlobalFiltersSidePanel extends Component{static template="spreadsheet_edition.GlobalFiltersSidePanel";static components={FilterValue,Section};static props={onCloseSidePanel:{type:Function,optional:true},};dnd=hooks.useDragAndDropListItems();filtersListRef=useRef("filtersList");setup(){this.getters=this.env.model.getters;}
get isReadonly(){return this.env.model.getters.isReadonly();}
get filters(){return this.env.model.getters.getGlobalFilters();}
_t(...args){return _t(...args);}
hasDataSources(){return(this.env.model.getters.getPivotIds().length+
this.env.model.getters.getListIds().length+
this.env.model.getters.getOdooChartIds().length);}
newText(){this.env.openSidePanel("TEXT_FILTER_SIDE_PANEL");}
newDate(){this.env.openSidePanel("DATE_FILTER_SIDE_PANEL");}
newRelation(){this.env.openSidePanel("RELATION_FILTER_SIDE_PANEL");}
onEdit(id){const filter=this.env.model.getters.getGlobalFilter(id);if(!filter){return;}
switch(filter.type){case"text":this.env.openSidePanel("TEXT_FILTER_SIDE_PANEL",{id});break;case"date":this.env.openSidePanel("DATE_FILTER_SIDE_PANEL",{id});break;case"relation":this.env.openSidePanel("RELATION_FILTER_SIDE_PANEL",{id});break;}}
startDragAndDrop(filter,event){if(event.button!==0){return;}
const rects=this.getFiltersElementsRects();const filtersItems=this.filters.map((filter,index)=>({id:filter.id,size:rects[index].height,position:rects[index].y,}));this.dnd.start("vertical",{draggedItemId:filter.id,initialMousePosition:event.clientY,items:filtersItems,containerEl:this.filtersListRef.el,onDragEnd:(filterId,finalIndex)=>this.onDragEnd(filterId,finalIndex),});}
getFiltersElementsRects(){return Array.from(this.filtersListRef.el.children).map((filterEl)=>filterEl.getBoundingClientRect());}
getFilterItemStyle(filter){return this.dnd.itemsStyle[filter.id]||"";}
onDragEnd(filterId,finalIndex){const originalIndex=this.filters.findIndex((filter)=>filter.id===filterId);const delta=finalIndex-originalIndex;if(filterId&&delta!==0){this.env.model.dispatch("MOVE_GLOBAL_FILTER",{id:filterId,delta,});}}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/index.js */
odoo.define('@spreadsheet_edition/bundle/global_filters',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_actions','@spreadsheet_edition/bundle/global_filters/global_filters_side_panel','@spreadsheet_edition/bundle/global_filters/filter_component','@spreadsheet_edition/bundle/global_filters/operational_transform','@spreadsheet_edition/bundle/global_filters/components/filter_editor/date_filter_editor_side_panel','@spreadsheet_edition/bundle/global_filters/components/filter_editor/text_filter_editor_side_panel','@spreadsheet_edition/bundle/global_filters/components/filter_editor/relation_filter_editor_side_panel'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{SET_FILTER_MATCHING,SET_FILTER_MATCHING_CONDITION,}=require("@spreadsheet/pivot/pivot_actions");const{GlobalFiltersSidePanel}=require("@spreadsheet_edition/bundle/global_filters/global_filters_side_panel");const{FilterComponent}=require("@spreadsheet_edition/bundle/global_filters/filter_component");require("@spreadsheet_edition/bundle/global_filters/operational_transform");const{DateFilterEditorSidePanel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/date_filter_editor_side_panel");const{TextFilterEditorSidePanel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/text_filter_editor_side_panel");const{RelationFilterEditorSidePanel}=require("@spreadsheet_edition/bundle/global_filters/components/filter_editor/relation_filter_editor_side_panel");const{sidePanelRegistry,topbarComponentRegistry,cellMenuRegistry}=spreadsheet.registries;sidePanelRegistry.add("DATE_FILTER_SIDE_PANEL",{title:_t("Filter properties"),Body:DateFilterEditorSidePanel,});sidePanelRegistry.add("TEXT_FILTER_SIDE_PANEL",{title:_t("Filter properties"),Body:TextFilterEditorSidePanel,});sidePanelRegistry.add("RELATION_FILTER_SIDE_PANEL",{title:_t("Filter properties"),Body:RelationFilterEditorSidePanel,});sidePanelRegistry.add("GLOBAL_FILTERS_SIDE_PANEL",{title:_t("Filters"),Body:GlobalFiltersSidePanel,});topbarComponentRegistry.add("filter_component",{component:FilterComponent,isVisible:(env)=>{return!env.model.getters.isReadonly()||env.model.getters.getGlobalFilters().length;},sequence:30,});cellMenuRegistry.add("use_global_filter",{name:_t("Set as filter"),sequence:175,execute(env){const position=env.model.getters.getActivePosition();SET_FILTER_MATCHING(position,env);},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return SET_FILTER_MATCHING_CONDITION(position,env.model.getters);},icon:"o-spreadsheet-Icon.SEARCH",});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/global_filters/operational_transform.js */
odoo.define('@spreadsheet_edition/bundle/global_filters/operational_transform',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{otRegistry}=spreadsheet.registries;const{transformRangeData}=spreadsheet.helpers;otRegistry.addTransformation("REMOVE_GLOBAL_FILTER",["EDIT_GLOBAL_FILTER"],(toTransform,executed)=>(toTransform.filter.id===executed.id?undefined:toTransform));otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["EDIT_GLOBAL_FILTER","ADD_GLOBAL_FILTER"],transformTextFilterRange);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["EDIT_GLOBAL_FILTER","ADD_GLOBAL_FILTER"],transformTextFilterRange);function transformTextFilterRange(toTransform,executed){const filter=toTransform.filter;if(filter.type==="text"&&filter.rangeOfAllowedValues){const transformedRange=transformRangeData(filter.rangeOfAllowedValues,executed);if(transformedRange){return{...toTransform,filter:{...filter,rangeOfAllowedValues:transformedRange,},};}}
return toTransform;}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/helpers/misc.js */
odoo.define('@spreadsheet_edition/bundle/helpers/misc',['@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{deserializeDateTime}=require("@web/core/l10n/dates");const{DateTime}=luxon;__exports.formatToLocaleString=formatToLocaleString;function formatToLocaleString(ISOdatetime,code){return deserializeDateTime(ISOdatetime).setLocale(code).toLocaleString(DateTime.DATETIME_MED);}
__exports.addToRegistryWithCleanup=addToRegistryWithCleanup;function addToRegistryWithCleanup(cleanUpHook,registry,name,item){registry.add(name,item);cleanUpHook(()=>{registry.remove(name);});}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/hooks.js */
odoo.define('@spreadsheet_edition/bundle/hooks',['@web/core/utils/hooks','@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{SPREADSHEET_DIMENSIONS}=require("@odoo/o-spreadsheet");__exports.useSpreadsheetLocales=useSpreadsheetLocales;function useSpreadsheetLocales(){const orm=useService("orm");async function loadLocales(){return orm.call("res.lang","get_locales_for_spreadsheet",[]);}
return loadLocales;}
__exports.useSpreadsheetCurrencies=useSpreadsheetCurrencies;function useSpreadsheetCurrencies(){const orm=useService("orm");async function loadCurrencies(){const odooCurrencies=await orm.searchRead("res.currency",[],["symbol","full_name","position","name","decimal_places"],{order:"active DESC, full_name ASC",context:{active_test:false},});return odooCurrencies.map((currency)=>{return{code:currency.name,symbol:currency.symbol,position:currency.position||"after",name:currency.full_name||_t("Currency"),decimalPlaces:currency.decimal_places||2,};});}
return loadCurrencies;}
__exports.useSpreadsheetThumbnail=useSpreadsheetThumbnail;function useSpreadsheetThumbnail(){return()=>{const dimensions=SPREADSHEET_DIMENSIONS;const canvas=document.querySelector(".o-grid canvas:not(.o-figure-canvas)");const canvasResizer=document.createElement("canvas");const size=750;canvasResizer.width=size;canvasResizer.height=size;const canvasCtx=canvasResizer.getContext("2d");const sourceSize=Math.min(25*dimensions.DEFAULT_CELL_HEIGHT,canvas.width,canvas.height);if(canvas.width!==0&&canvas.height!==0){canvasCtx.drawImage(canvas,dimensions.HEADER_WIDTH-1,dimensions.HEADER_HEIGHT-1,sourceSize,sourceSize,0,0,size,size);}
return canvasResizer.toDataURL().replace("data:image/png;base64,","");};}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/image/record_file_store.js */
odoo.define('@spreadsheet_edition/bundle/image/record_file_store',[],function(require){'use strict';let __exports={};const RecordFileStore=__exports.RecordFileStore=class RecordFileStore{constructor(resModel,resId,http,orm){this.resModel=resModel;this.resId=resId;this.http=http;this.orm=orm;}
async upload(file){const route="/web/binary/upload_attachment";const params={ufile:[file],csrf_token:odoo.csrf_token,model:this.resModel,id:this.resId,};const fileData=JSON.parse(await this.http.post(route,params,"text"))[0];const[accessToken]=await this.orm.call("ir.attachment","generate_access_token",[fileData.id,]);return`/web/image/${fileData.id}?access_token=${accessToken}`;}
async delete(path){const attachmentId=path.split("/").pop();if(Number.isNaN(attachmentId)){throw new Error("Invalid path: "+path);}
await this.orm.unlink("ir.attachment",[parseInt(attachmentId)]);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/ir_menu_selector/ir_menu_selector.js */
odoo.define('@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web/views/fields/relational_utils','@web/webclient/menus/menu_helpers','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{Many2XAutocomplete}=require("@web/views/fields/relational_utils");const{computeAppsAndMenuItems}=require("@web/webclient/menus/menu_helpers");const{Component,useState,useExternalListener,useRef,onMounted}=require("@odoo/owl");const IrMenuSelector=__exports.IrMenuSelector=class IrMenuSelector extends Component{static components={Many2XAutocomplete};static template="spreadsheet_edition.IrMenuSelector";static props={menuId:{type:Number,optional:true},onValueChanged:Function,autoFocus:{type:Boolean,optional:true},};setup(){super.setup();this.ref=useRef("menuSelectorRef");this.menus=useService("menu");onMounted(()=>{if(this.props.autoFocus){this.ref.el.querySelector("input")?.focus();}});}
get many2XAutocompleteProps(){return{resModel:"ir.ui.menu",fieldString:_t("Menu Items"),getDomain:this.getDomain.bind(this),update:this.updateMenu.bind(this),activeActions:{},placeholder:_t("Select a menu..."),value:this._getMenuPath(this.props.menuId),};}
updateMenu(selectedMenus){this.props.onValueChanged(selectedMenus[0]?.id);}
getDomain(){return["|",["id","in",this.availableAppMenuIds],"&",["action","!=",false],["id","in",this.availableMenuIds],];}
get availableMenuIds(){return this.menus.getAll().map((menu)=>menu.id).filter((menuId)=>menuId!=="root");}
get availableAppMenuIds(){return this.menus.getAll().filter((menu)=>menu.id===menu.appID).map((menu)=>menu.id).filter((menuId)=>menuId!=="root");}
_getMenuPath(menuId){if(menuId===undefined){return"";}
const menuTree=this.menus.getMenuAsTree("root");const computedTree=computeAppsAndMenuItems(menuTree);const app=computedTree.apps.find((app)=>app.id===menuId);if(app){return app.label;}
const menu=computedTree.menuItems.find((menu)=>menu.id===menuId);if(!menu){return"";}
const path=menu.parents.replace(/ \/ /g,"/");return path+"/"+menu.label;}}
const IrMenuSelectorDialog=__exports.IrMenuSelectorDialog=class IrMenuSelectorDialog extends Component{static components={Dialog,IrMenuSelector};static template="spreadsheet_edition.IrMenuSelectorDialog";static props={onMenuSelected:Function,close:Function,};setup(){this.selectedMenu=useState({id:undefined,});useExternalListener(document.body,"click",(ev)=>{ev.stopPropagation();ev.preventDefault();});}
_onConfirm(){this.props.onMenuSelected(this.selectedMenu.id);}
_onValueChanged(value){this.selectedMenu.id=value;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/ir_ui_menu/index.js */
odoo.define('@spreadsheet_edition/bundle/ir_ui_menu',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/init_callbacks','@spreadsheet/ir_ui_menu/odoo_menu_link_cell','@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{initCallbackRegistry}=require("@spreadsheet/o_spreadsheet/init_callbacks");const{buildIrMenuIdLink,buildViewLink,buildIrMenuXmlLink,}=require("@spreadsheet/ir_ui_menu/odoo_menu_link_cell");const{IrMenuSelectorDialog}=require("@spreadsheet_edition/bundle/ir_menu_selector/ir_menu_selector");const{markdownLink}=spreadsheet.links;const{linkMenuRegistry}=spreadsheet.registries;function insertLink(actionToLink){return(model)=>{if(!this.isEmptySpreadsheet){const sheetId=model.uuidGenerator.uuidv4();const sheetIdFrom=model.getters.getActiveSheetId();model.dispatch("CREATE_SHEET",{sheetId,position:model.getters.getSheetIds().length,});model.dispatch("ACTIVATE_SHEET",{sheetIdFrom,sheetIdTo:sheetId});}
const viewLink=buildViewLink(actionToLink);model.dispatch("UPDATE_CELL",{sheetId:model.getters.getActiveSheetId(),content:markdownLink(actionToLink.name,viewLink),col:0,row:0,});};}
initCallbackRegistry.add("insertLink",insertLink);linkMenuRegistry.add("odooMenu",{name:_t("Link an Odoo menu"),sequence:20,execute:async(env)=>{return new Promise((resolve)=>{const closeDialog=env.services.dialog.add(IrMenuSelectorDialog,{onMenuSelected:(menuId)=>{closeDialog();const menu=env.services.menu.getMenu(menuId);const xmlId=menu&&menu.xmlid;const url=xmlId?buildIrMenuXmlLink(xmlId):buildIrMenuIdLink(menuId);const label=menu.name;resolve(markdownLink(label,url));},});});},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/autofill.js */
odoo.define('@spreadsheet_edition/bundle/list/autofill',['@spreadsheet/list/list_helpers','@spreadsheet/helpers/helpers','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{getNumberOfListFormulas}=require("@spreadsheet/list/list_helpers");const{containsReferences}=require("@spreadsheet/helpers/helpers");const spreadsheet=require("@odoo/o-spreadsheet");const{autofillModifiersRegistry,autofillRulesRegistry}=spreadsheet.registries;autofillRulesRegistry.add("autofill_list",{condition:(cell)=>cell&&cell.isFormula&&getNumberOfListFormulas(cell.compiledFormula.tokens)===1&&!containsReferences(cell),generateRule:(cell,cells)=>{const increment=cells.filter((cell)=>cell&&cell.isFormula&&getNumberOfListFormulas(cell.compiledFormula.tokens)===1).length;return{type:"LIST_UPDATER",increment,current:0};},sequence:3,});autofillModifiersRegistry.add("LIST_UPDATER",{apply:(rule,data,getters,direction)=>{rule.current+=rule.increment;let isColumn;let steps;switch(direction){case"up":isColumn=false;steps=-rule.current;break;case"down":isColumn=false;steps=rule.current;break;case"left":isColumn=true;steps=-rule.current;break;case"right":isColumn=true;steps=rule.current;}
const content=getters.getNextListValue(data.cell.content,isColumn,steps);let tooltip={props:{content,},};if(content&&content!==data.content){tooltip={props:{content:getters.getTooltipListFormula(content,isColumn),},};}
return{cellData:{style:undefined,format:data.cell&&data.cell.format,border:undefined,content,},tooltip,};},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/index.js */
odoo.define('@spreadsheet_edition/bundle/list',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/init_callbacks','@spreadsheet_edition/bundle/list/autofill','@spreadsheet_edition/bundle/list/operational_transform','@spreadsheet_edition/bundle/list/side_panels/list_details_side_panel','@spreadsheet_edition/bundle/list/plugins/list_autofill_plugin','@spreadsheet_edition/bundle/list/list_init_callback'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{initCallbackRegistry}=require("@spreadsheet/o_spreadsheet/init_callbacks");require("@spreadsheet_edition/bundle/list/autofill");require("@spreadsheet_edition/bundle/list/operational_transform");const{ListDetailsSidePanel}=require("@spreadsheet_edition/bundle/list/side_panels/list_details_side_panel");const{ListAutofillPlugin}=require("@spreadsheet_edition/bundle/list/plugins/list_autofill_plugin");const{insertList}=require("@spreadsheet_edition/bundle/list/list_init_callback");const{featurePluginRegistry,sidePanelRegistry,cellMenuRegistry}=spreadsheet.registries;featurePluginRegistry.add("odooListAutofillPlugin",ListAutofillPlugin);sidePanelRegistry.add("LIST_PROPERTIES_PANEL",{title:()=>_t("List properties"),Body:ListDetailsSidePanel,computeState(getters,initialProps){return{isOpen:getters.isExistingList(initialProps.listId),props:initialProps,key:initialProps.listId,};},});initCallbackRegistry.add("insertList",insertList);cellMenuRegistry.add("listing_properties",{separator:true,name:_t("See list properties"),sequence:190,execute(env){const position=env.model.getters.getActivePosition();const listId=env.model.getters.getListIdFromPosition(position);env.openSidePanel("LIST_PROPERTIES_PANEL",{listId});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return env.model.getters.isExistingList(env.model.getters.getListIdFromPosition(position));},icon:"o-spreadsheet-Icon.ODOO_LIST",});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/list_actions.js */
odoo.define('@spreadsheet_edition/bundle/list/list_actions',[],function(require){'use strict';let __exports={};const REINSERT_LIST_CHILDREN=__exports.REINSERT_LIST_CHILDREN=(env)=>env.model.getters.getListIds().map((listId,index)=>{return{id:`reinsert_list_${listId}`,name:env.model.getters.getListDisplayName(listId),sequence:index,execute:async(env)=>{const zone=env.model.getters.getSelectedZone();const dataSource=await env.model.getters.getAsyncListDataSource(listId);const list=env.model.getters.getListDefinition(listId);const columns=list.columns.map((name)=>({name,type:dataSource.getField(name).type,}));env.getLinesNumber((linesNumber)=>{env.model.dispatch("RE_INSERT_ODOO_LIST_WITH_TABLE",{sheetId:env.model.getters.getActiveSheetId(),col:zone.left,row:zone.top,id:listId,linesNumber,columns:columns,});});},};});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/list_auto_complete.js */
odoo.define('@spreadsheet_edition/bundle/list/list_auto_complete',['@odoo/o-spreadsheet','@spreadsheet/helpers/odoo_functions_helpers'],function(require){'use strict';let __exports={};const{registries,tokenColors,helpers}=require("@odoo/o-spreadsheet");const{extractDataSourceId}=require("@spreadsheet/helpers/odoo_functions_helpers");const{insertTokenAfterArgSeparator,insertTokenAfterLeftParenthesis,makeFieldProposal}=helpers;registries.autoCompleteProviders.add("list_fields",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){if(canAutoCompleteListField(tokenAtCursor)||canAutoCompleteListHeaderField(tokenAtCursor)){const listId=extractDataSourceId(tokenAtCursor);if(!this.getters.isExistingList(listId)){return;}
const dataSource=this.getters.getListDataSource(listId);if(!dataSource.isMetaDataLoaded()){return;}
const fields=Object.values(dataSource.getFields());return fields.map((field)=>makeFieldProposal(field));}
return;},selectProposal:insertTokenAfterArgSeparator,});function canAutoCompleteListField(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="ODOO.LIST"&&functionContext.argPosition===2);}
function canAutoCompleteListHeaderField(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="ODOO.LIST.HEADER"&&functionContext.argPosition===1);}
registries.autoCompleteProviders.add("list_ids",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(["ODOO.LIST","ODOO.LIST.HEADER"].includes(functionContext?.parent.toUpperCase())&&functionContext.argPosition===0){const listIds=this.getters.getListIds();return listIds.map((listId)=>{const definition=this.getters.getListDefinition(listId);const str=`${listId}`;return{text:str,description:definition.name,htmlContent:[{value:str,color:tokenColors.NUMBER}],fuzzySearchKey:str+definition.name,};});}},selectProposal:insertTokenAfterLeftParenthesis,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/list_highlight_helpers.js */
odoo.define('@spreadsheet_edition/bundle/list/list_highlight_helpers',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{helpers}=require("@odoo/o-spreadsheet");const{positionToZone,mergeContiguousZones}=helpers;__exports.getListHighlights=getListHighlights;function getListHighlights(getters,listId){const sheetId=getters.getActiveSheetId();const listCellPositions=getVisibleListCellPositions(getters,listId);const mergedZones=mergeContiguousZones(listCellPositions.map(positionToZone));return mergedZones.map((zone)=>({sheetId,zone,noFill:true}));}
function getVisibleListCellPositions(getters,listId){const positions=[];const sheetId=getters.getActiveSheetId();for(const col of getters.getSheetViewVisibleCols()){for(const row of getters.getSheetViewVisibleRows()){const position={sheetId,col,row};const cellListId=getters.getListIdFromPosition(position);if(listId===cellListId){positions.push(position);}}}
return positions;}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/list_init_callback.js */
odoo.define('@spreadsheet_edition/bundle/list/list_init_callback',['@odoo/o-spreadsheet','@web/core/domain','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{helpers,stores}=require("@odoo/o-spreadsheet");const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");const{SidePanelStore}=stores;const uuidGenerator=new helpers.UuidGenerator();__exports.insertList=insertList;function insertList({list,threshold,fields,name}){const definition={metaData:{resModel:list.model,columns:list.columns.map((column)=>column.name),fields,},searchParams:{domain:new Domain(list.domain).toJson(),context:list.context,orderBy:list.orderBy,},name,actionXmlId:list.actionXmlId,};return async(model,stores)=>{const listId=model.getters.getNextListId();let sheetName=_t("%(list_name)s (List #%(list_id)s)",{list_name:name,list_id:listId,});if(!this.isEmptySpreadsheet){const sheetId=uuidGenerator.uuidv4();const sheetIdFrom=model.getters.getActiveSheetId();if(model.getters.getSheetIdByName(sheetName)){sheetName=undefined;}
model.dispatch("CREATE_SHEET",{sheetId,position:model.getters.getSheetIds().length,name:sheetName,});model.dispatch("ACTIVATE_SHEET",{sheetIdFrom,sheetIdTo:sheetId});}else{model.dispatch("RENAME_SHEET",{sheetId:model.getters.getActiveSheetId(),name:sheetName,});}
const defWithoutFields=JSON.parse(JSON.stringify(definition));defWithoutFields.metaData.fields=undefined;const sheetId=model.getters.getActiveSheetId();const result=model.dispatch("INSERT_ODOO_LIST_WITH_TABLE",{sheetId,col:0,row:0,id:listId,definition:defWithoutFields,linesNumber:threshold,columns:list.columns,});if(!result.isSuccessful){throw new Error(`Couldn't insert list in spreadsheet. Reasons : ${result.reasons}`);}
const dataSource=model.getters.getListDataSource(listId);await dataSource.load();const columns=[];for(let col=0;col<list.columns.length;col++){columns.push(col);}
model.dispatch("AUTORESIZE_COLUMNS",{sheetId,cols:columns});const sidePanel=stores.get(SidePanelStore);sidePanel.open("LIST_PROPERTIES_PANEL",{listId});};}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/operational_transform.js */
odoo.define('@spreadsheet_edition/bundle/list/operational_transform',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{otRegistry}=spreadsheet.registries;otRegistry.addTransformation("INSERT_ODOO_LIST",["INSERT_ODOO_LIST","DUPLICATE_ODOO_LIST"],transformNewListCommand).addTransformation("DUPLICATE_ODOO_LIST",["INSERT_ODOO_LIST","DUPLICATE_ODOO_LIST"],transformNewListCommand).addTransformation("REMOVE_ODOO_LIST",["RENAME_ODOO_LIST","UPDATE_ODOO_LIST_DOMAIN","UPDATE_ODOO_LIST"],(toTransform,executed)=>{if(toTransform.listId===executed.listId){return undefined;}
return toTransform;}).addTransformation("REMOVE_ODOO_LIST",["RE_INSERT_ODOO_LIST","DUPLICATE_ODOO_LIST"],(toTransform,executed)=>{if(toTransform.id===executed.listId){return undefined;}
return toTransform;});function transformNewListCommand(toTransform){const idKey="newListId"in toTransform?"newListId":"id";return{...toTransform,[idKey]:(parseInt(toTransform[idKey],10)+1).toString(),};}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/plugins/list_autofill_plugin.js */
odoo.define('@spreadsheet_edition/bundle/list/plugins/list_autofill_plugin',['@web/core/l10n/translation','@odoo/o-spreadsheet','@web/core/utils/strings','@spreadsheet/list/list_helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{astToFormula,UIPlugin,tokenize}=require("@odoo/o-spreadsheet");const{sprintf}=require("@web/core/utils/strings");const{getFirstListFunction,getNumberOfListFormulas}=require("@spreadsheet/list/list_helpers");const ListAutofillPlugin=__exports.ListAutofillPlugin=class ListAutofillPlugin extends UIPlugin{getNextListValue(formula,isColumn,increment){const tokens=tokenize(formula);if(getNumberOfListFormulas(tokens)!==1){return formula;}
const{functionName,args}=getFirstListFunction(tokens);const evaluatedArgs=args.map(astToFormula).map((arg)=>this.getters.evaluateFormula(this.getters.getActiveSheetId(),arg));const listId=evaluatedArgs[0];if(!this.getters.isExistingList(listId)){return formula;}
const columns=this.getters.getListDefinition(listId).columns;if(functionName==="ODOO.LIST"){const position=parseInt(evaluatedArgs[1],10);const field=evaluatedArgs[2];if(isColumn){const index=columns.findIndex((col)=>col===field)+increment;if(index<0||index>=columns.length){return"";}
return this._getListFunction(listId,position,columns[index]);}else{const nextPosition=position+increment;if(nextPosition===0){return this._getListHeaderFunction(listId,field);}
if(nextPosition<0){return"";}
return this._getListFunction(listId,nextPosition,field);}}
if(functionName==="ODOO.LIST.HEADER"){const field=evaluatedArgs[1];if(isColumn){const index=columns.findIndex((col)=>col===field)+increment;if(index<0||index>=columns.length){return"";}
return this._getListHeaderFunction(listId,columns[index]);}else{if(increment>0){return this._getListFunction(listId,increment,field);}
return"";}}
return formula;}
getTooltipListFormula(formula,isColumn){if(!formula){return[];}
const{functionName,args}=getFirstListFunction(tokenize(formula));const evaluatedArgs=args.map(astToFormula).map((arg)=>this.getters.evaluateFormula(this.getters.getActiveSheetId(),arg));const listId=evaluatedArgs[0];if(!this.getters.isExistingList(listId)){return sprintf(_t("Missing list #%s"),listId);}
if(isColumn||functionName==="ODOO.LIST.HEADER"){const fieldName=functionName==="ODOO.LIST"?evaluatedArgs[2]:evaluatedArgs[1];return this.getters.getListDataSource(listId).getListHeaderValue(fieldName);}
return _t("Record #%(record_number)s",{record_number:evaluatedArgs[1]});}
_getListFunction(listId,position,field){return`=ODOO.LIST(${listId},${position},"${field}")`;}
_getListHeaderFunction(listId,field){return`=ODOO.LIST.HEADER(${listId},"${field}")`;}}
ListAutofillPlugin.getters=["getNextListValue","getTooltipListFormula"];return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/side_panels/edit_list_sorting_section/edit_list_sorting_section.js */
odoo.define('@spreadsheet_edition/bundle/list/side_panels/edit_list_sorting_section/edit_list_sorting_section',['@odoo/owl','@web/core/dialog/dialog','@web/core/checkbox/checkbox','@web/core/utils/sortable_owl','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Component,useRef}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{CheckBox}=require("@web/core/checkbox/checkbox");const{useSortable}=require("@web/core/utils/sortable_owl");const{components}=require("@odoo/o-spreadsheet");const{AddDimensionButton,Section}=components;const EditListSortingSection=__exports.EditListSortingSection=class EditListSortingSection extends Component{static template="spreadsheet_edition.EditListSortingSection";static components={Dialog,CheckBox,AddDimensionButton,Section};static props={onUpdateSorting:Function,orderBy:Array,fields:Object,resModel:String,};setup(){this.mainRef=useRef("main");useSortable({enable:true,ref:this.mainRef,elements:".o_draggable",cursor:"move",delay:100,tolerance:10,ignore:"select",onDrop:(params)=>this._onSortDrop(params),});}
_onSortDrop({element,previous}){const orderByArray=[...this.props.orderBy];const elementIndex=orderByArray.findIndex((order)=>order.name===element.dataset.id);const orderBy=orderByArray[elementIndex];orderByArray.splice(elementIndex,1);const newIndex=previous?orderByArray.findIndex((order)=>order.name===previous.dataset.id)+1:0;orderByArray.splice(newIndex,0,orderBy);this.updateSorting(orderByArray);}
updateSorting(orderBy){this.props.onUpdateSorting(orderBy);}
isFieldAllowed(field){return field.sortable&&!this.props.orderBy.map((el)=>el.name).includes(field.name);}
getAllowedFields(){return Object.values(this.props.fields).filter((field)=>this.isFieldAllowed(field)).sort((a,b)=>a.string.localeCompare(b.string));}
onAddSortingRule(fieldName){const orderByArray=[...this.props.orderBy,{name:fieldName,asc:true}];this.updateSorting(orderByArray);}
onDeleteSortingRule(ruleIndex){const orderByArray=[...this.props.orderBy];orderByArray.splice(ruleIndex,1);this.updateSorting(orderByArray);}
toggleAscending(ruleIndex){const orderByArray=[...this.props.orderBy];orderByArray[ruleIndex]={...orderByArray[ruleIndex],asc:!orderByArray[ruleIndex].asc,};this.updateSorting(orderByArray);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/list/side_panels/list_details_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/list/side_panels/list_details_side_panel',['@web/core/domain','@spreadsheet_edition/bundle/list/side_panels/edit_list_sorting_section/edit_list_sorting_section','@web/core/utils/hooks','@web/core/l10n/translation','@odoo/owl','@spreadsheet_edition/bundle/list/list_highlight_helpers','@odoo/o-spreadsheet','@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{EditListSortingSection}=require("@spreadsheet_edition/bundle/list/side_panels/edit_list_sorting_section/edit_list_sorting_section");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const{getListHighlights}=require("@spreadsheet_edition/bundle/list/list_highlight_helpers");const{hooks,components}=require("@odoo/o-spreadsheet");const{SidePanelDomain}=require("@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain");const{useHighlights}=hooks;const{ValidationMessages,EditableName,CogWheelMenu,Section}=components;const ListDetailsSidePanel=__exports.ListDetailsSidePanel=class ListDetailsSidePanel extends Component{static template="spreadsheet_edition.ListDetailsSidePanel";static components={EditableName,ValidationMessages,CogWheelMenu,Section,SidePanelDomain,EditListSortingSection,};static props={onCloseSidePanel:Function,listId:String,};setup(){this.getters=this.env.model.getters;this.notification=useService("notification");const loadData=async(listId)=>{const dataSource=await this.env.model.getters.getAsyncListDataSource(listId);this.modelDisplayName=await dataSource.getModelLabel();};onWillStart(async()=>{await loadData(this.props.listId);const dataSource=this.env.model.getters.getListDataSource(this.props.listId);this.listFields=dataSource.getFields();});useHighlights(this);}
get cogWheelMenuItems(){return[{name:"Duplicate",icon:"o-spreadsheet-Icon.COPY",execute:()=>this.duplicateList(),},{name:"Delete",icon:"o-spreadsheet-Icon.TRASH",execute:()=>this.deleteList(),},];}
get listDefinition(){const listId=this.props.listId;const def=this.getters.getListDefinition(listId);return{model:def.model,modelDisplayName:this.modelDisplayName,domain:new Domain(def.domain).toString(),orderBy:def.orderBy,};}
getLastUpdate(){const lastUpdate=this.env.model.getters.getListDataSource(this.props.listId).lastUpdate;if(lastUpdate){return new Date(lastUpdate).toLocaleTimeString();}
return _t("never");}
getColumnFields(){return this.getters.getListDefinition(this.props.listId).columns.map((col)=>this.listFields[col]);}
onNameChanged(name){this.env.model.dispatch("RENAME_ODOO_LIST",{listId:this.props.listId,name,});}
onDomainUpdate(domain){const listDefinition=this.getters.getListModelDefinition(this.props.listId);this.env.model.dispatch("UPDATE_ODOO_LIST",{listId:this.props.listId,list:{...listDefinition,searchParams:{...listDefinition.searchParams,domain,},},});}
onUpdateSorting(orderBy){const listDefinition=this.getters.getListModelDefinition(this.props.listId);this.env.model.dispatch("UPDATE_ODOO_LIST",{listId:this.props.listId,list:{...listDefinition,searchParams:{...listDefinition.searchParams,orderBy,},},});}
duplicateList(){const newListId=this.env.model.getters.getNextListId();const result=this.env.model.dispatch("DUPLICATE_ODOO_LIST",{listId:this.props.listId,newListId,});const msg=result.isSuccessful?_t('List duplicated. Use the "Re-insert list" menu item to insert it in a sheet.'):_t("List duplication failed");const type=result.isSuccessful?"success":"danger";this.notification.add(msg,{sticky:false,type});if(result.isSuccessful){this.env.openSidePanel("LIST_PROPERTIES_PANEL",{listId:newListId});}}
deleteList(){this.env.askConfirmation(_t("Are you sure you want to delete this list?"),()=>{this.env.model.dispatch("REMOVE_ODOO_LIST",{listId:this.props.listId});this.props.onCloseSidePanel();});}
get unusedListWarning(){return _t("This list is not used");}
get highlights(){return getListHighlights(this.env.model.getters,this.props.listId);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/o_spreadsheet/collaborative/spreadsheet_collaborative_channel.js */
odoo.define('@spreadsheet_edition/bundle/o_spreadsheet/collaborative/spreadsheet_collaborative_channel',[],function(require){'use strict';let __exports={};const SpreadsheetCollaborativeChannel=__exports.SpreadsheetCollaborativeChannel=class SpreadsheetCollaborativeChannel{static dependencies=["bus_service","orm"];constructor(env,resModel,resId,shareId,accessToken){this.env=env;this.orm=env.services.orm.silent;this.resId=resId;this.resModel=resModel;this.shareId=shareId;this.accessToken=accessToken;this._listener;this._queue=[];this._channel=this._getChannel();this.env.services.bus_service.addChannel(this._channel);this.env.services.bus_service.subscribe("spreadsheet",(payload)=>{if(payload.id===this.resId){this._handleNotification(payload);}});}
onNewMessage(id,callback){this._listener=callback;for(const message of this._queue){callback(message);}
this._queue=[];}
async sendMessage(message){const isAccepted=await this.orm.call(this.resModel,"dispatch_spreadsheet_message",[this.resId,message,this.accessToken,]);if(isAccepted){this._handleNotification(message);}}
leave(){this._listener=undefined;}
_handleNotification(payload){if(!this._listener){this._queue.push(payload);}else{this._listener(payload);}}
_getChannel(){const channel=`spreadsheet_collaborative_session:${this.resModel}:${this.resId}`;if(this.shareId&&this.accessToken){return`${channel}:${this.shareId}:${this.accessToken}`;}
return channel;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/o_spreadsheet/collaborative/spreadsheet_collaborative_service.js */
odoo.define('@spreadsheet_edition/bundle/o_spreadsheet/collaborative/spreadsheet_collaborative_service',['@web/core/registry','@spreadsheet_edition/bundle/o_spreadsheet/collaborative/spreadsheet_collaborative_channel'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SpreadsheetCollaborativeChannel}=require("@spreadsheet_edition/bundle/o_spreadsheet/collaborative/spreadsheet_collaborative_channel");const spreadsheetCollaborativeService={dependencies:SpreadsheetCollaborativeChannel.dependencies,start(env,dependencies){return{makeCollaborativeChannel(resModel,resId,shareId,accessToken){return new SpreadsheetCollaborativeChannel(env,resModel,resId,shareId,accessToken);},};},};registry.category("services").add("spreadsheet_collaborative",spreadsheetCollaborativeService);return __exports;});;

/* /spreadsheet_edition/static/src/bundle/o_spreadsheet/menu_item_registry.js */
odoo.define('@spreadsheet_edition/bundle/o_spreadsheet/menu_item_registry',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet_edition/bundle/list/list_actions','@spreadsheet_edition/bundle/pivot/pivot_actions','@spreadsheet_edition/bundle/list/list_highlight_helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registries,stores}=require("@odoo/o-spreadsheet");const{REINSERT_LIST_CHILDREN}=require("@spreadsheet_edition/bundle/list/list_actions");const{REINSERT_DYNAMIC_PIVOT_CHILDREN,REINSERT_STATIC_PIVOT_CHILDREN,}=require("@spreadsheet_edition/bundle/pivot/pivot_actions");const{getListHighlights}=require("@spreadsheet_edition/bundle/list/list_highlight_helpers");const{topbarMenuRegistry}=registries;const{HighlightStore}=stores;topbarMenuRegistry.addChild("new_sheet",["file"],{name:_t("New"),sequence:10,isVisible:(env)=>env.newSpreadsheet,execute:(env)=>env.newSpreadsheet(),icon:"o-spreadsheet-Icon.NEW",});topbarMenuRegistry.addChild("make_copy",["file"],{name:_t("Make a copy"),sequence:20,isVisible:(env)=>env.makeCopy,execute:(env)=>env.makeCopy(),icon:"o-spreadsheet-Icon.COPY_FILE",});topbarMenuRegistry.addChild("save_as_template",["file"],{name:_t("Save as template"),sequence:40,isVisible:(env)=>env.saveAsTemplate,execute:(env)=>env.saveAsTemplate(),icon:"o-spreadsheet-Icon.SAVE",});topbarMenuRegistry.addChild("download",["file"],{name:_t("Download"),sequence:50,isVisible:(env)=>env.download,execute:(env)=>env.download(),isReadonlyAllowed:true,icon:"o-spreadsheet-Icon.DOWNLOAD",});topbarMenuRegistry.addChild("clear_history",["file"],{name:_t("Snapshot"),sequence:60,isVisible:(env)=>env.debug,execute:(env)=>{env.model.session.snapshot(env.model.exportData());env.model.garbageCollectExternalResources();window.location.reload();},icon:"o-spreadsheet-Icon.CAMERA",});topbarMenuRegistry.addChild("download_as_json",["file"],{name:_t("Download as JSON"),sequence:70,isVisible:(env)=>env.debug&&env.downloadAsJson,execute:(env)=>env.downloadAsJson(),isReadonlyAllowed:true,icon:"o-spreadsheet-Icon.DOWNLOAD_AS_JSON",});topbarMenuRegistry.addChild("data_sources_data",["data"],(env)=>{let sequence=1000;const lists_items=env.model.getters.getListIds().map((listId,index)=>{const highlightProvider={get highlights(){return getListHighlights(env.model.getters,listId);},};return{id:`item_list_${listId}`,name:env.model.getters.getListDisplayName(listId),sequence:sequence++,execute:(env)=>{env.openSidePanel("LIST_PROPERTIES_PANEL",{listId});},onStartHover:(env)=>env.getStore(HighlightStore).register(highlightProvider),onStopHover:(env)=>env.getStore(HighlightStore).unRegister(highlightProvider),icon:"o-spreadsheet-Icon.ODOO_LIST",separator:index===env.model.getters.getListIds().length-1,secondaryIcon:(env)=>env.model.getters.isListUnused(listId)?"o-spreadsheet-Icon.UNUSED_LIST_WARNING":undefined,};});const charts_items=env.model.getters.getOdooChartIds().map((chartId,index)=>{return{id:`item_chart_${chartId}`,name:env.model.getters.getOdooChartDisplayName(chartId),sequence:sequence++,execute:(env)=>{env.model.dispatch("SELECT_FIGURE",{id:chartId});env.openSidePanel("ChartPanel");},icon:"o-spreadsheet-Icon.INSERT_CHART",separator:index===env.model.getters.getOdooChartIds().length-1,};});return lists_items.concat(charts_items).concat([{id:"refresh_all_data",name:_t("Refresh all data"),sequence:sequence++,execute:(env)=>{env.model.dispatch("REFRESH_ALL_DATA_SOURCES");},separator:true,icon:"o-spreadsheet-Icon.REFRESH_DATA",},]);});const reinsertDynamicPivotMenu={id:"reinsert_dynamic_pivot",name:_t("Re-insert dynamic pivot"),sequence:1020,children:[REINSERT_DYNAMIC_PIVOT_CHILDREN],isVisible:(env)=>env.model.getters.getPivotIds().some((id)=>env.model.getters.getPivot(id).isValid()),icon:"o-spreadsheet-Icon.INSERT_PIVOT",};const reinsertStaticPivotMenu={id:"reinsert_static_pivot",name:_t("Re-insert static pivot"),sequence:1021,children:[REINSERT_STATIC_PIVOT_CHILDREN],isVisible:(env)=>env.model.getters.getPivotIds().some((id)=>env.model.getters.getPivot(id).isValid()),icon:"o-spreadsheet-Icon.INSERT_PIVOT",};const reInsertListMenu={id:"reinsert_list",name:_t("Re-insert list"),sequence:1021,children:[REINSERT_LIST_CHILDREN],isVisible:(env)=>env.model.getters.getListIds().length,icon:"o-spreadsheet-Icon.INSERT_LIST",};const printMenu={name:_t("Print"),sequence:60,isVisible:(env)=>env.print,execute:(env)=>env.print(),icon:"o-spreadsheet-Icon.PRINT",};topbarMenuRegistry.addChild("print",["file"],printMenu);topbarMenuRegistry.addChild("reinsert_list",["data"],reInsertListMenu);topbarMenuRegistry.addChild("reinsert_dynamic_pivot",["data"],reinsertDynamicPivotMenu,{force:true,});topbarMenuRegistry.addChild("reinsert_static_pivot",["data"],reinsertStaticPivotMenu,{force:true,});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/autofill.js */
odoo.define('@spreadsheet_edition/bundle/pivot/autofill',['@odoo/o-spreadsheet','@odoo/owl','@spreadsheet/helpers/helpers'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{Component}=require("@odoo/owl");const{containsReferences}=require("@spreadsheet/helpers/helpers");const{autofillModifiersRegistry,autofillRulesRegistry}=spreadsheet.registries;const AutofillTooltip=__exports.AutofillTooltip=class AutofillTooltip extends Component{static template="spreadsheet_edition.AutofillTooltip";static props={content:Array};}
autofillRulesRegistry.add("autofill_pivot",{condition:(cell)=>cell&&cell.isFormula&&cell.content.match(/=\s*PIVOT/)&&!containsReferences(cell),generateRule:(cell,cells)=>{const increment=cells.filter((cell)=>cell&&cell.isFormula&&cell.content.match(/=\s*PIVOT/)).length;return{type:"PIVOT_UPDATER",increment,current:0};},sequence:2,});autofillModifiersRegistry.add("PIVOT_UPDATER",{apply:(rule,data,getters,direction)=>{rule.current+=rule.increment;let isColumn;let steps;switch(direction){case"up":isColumn=false;steps=-rule.current;break;case"down":isColumn=false;steps=rule.current;break;case"left":isColumn=true;steps=-rule.current;break;case"right":isColumn=true;steps=rule.current;}
const content=getters.getPivotNextAutofillValue(data.cell.content,isColumn,steps);let tooltip={props:{content:data.content,},};if(content&&content!==data.content){tooltip={props:{content:getters.getTooltipFormula(content,isColumn),},component:AutofillTooltip,};}
if(!content){tooltip=undefined;}
return{cellData:{style:undefined,format:data.cell&&data.cell.format,border:undefined,content,},tooltip,};},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/index.js */
odoo.define('@spreadsheet_edition/bundle/pivot',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/init_callbacks','@spreadsheet_edition/bundle/pivot/plugins/pivot_autofill_plugin','@spreadsheet_edition/bundle/pivot/side_panels/pivot_details_side_panel','@spreadsheet_edition/bundle/pivot/autofill','@spreadsheet_edition/bundle/pivot/pivot_init_callback'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{initCallbackRegistry}=require("@spreadsheet/o_spreadsheet/init_callbacks");const{PivotAutofillPlugin}=require("@spreadsheet_edition/bundle/pivot/plugins/pivot_autofill_plugin");const{PivotDetailsSidePanel}=require("@spreadsheet_edition/bundle/pivot/side_panels/pivot_details_side_panel");require("@spreadsheet_edition/bundle/pivot/autofill");const{insertPivot}=require("@spreadsheet_edition/bundle/pivot/pivot_init_callback");const{featurePluginRegistry,cellMenuRegistry,pivotSidePanelRegistry}=spreadsheet.registries;featurePluginRegistry.add("odooPivotAutofillPlugin",PivotAutofillPlugin);pivotSidePanelRegistry.add("ODOO",{editor:PivotDetailsSidePanel,});initCallbackRegistry.add("insertPivot",insertPivot);cellMenuRegistry.add("pivot_properties",{name:_t("See pivot properties"),sequence:170,execute(env){const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);env.openSidePanel("PivotSidePanel",{pivotId});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return env.model.getters.isExistingPivot(env.model.getters.getPivotIdFromPosition(position));},icon:"o-spreadsheet-Icon.PIVOT",});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/odoo_pivot.js */
odoo.define('@spreadsheet_edition/bundle/pivot/odoo_pivot',['@odoo/o-spreadsheet','@spreadsheet/pivot/odoo_pivot','@web/core/utils/patch'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{OdooPivot}=require("@spreadsheet/pivot/odoo_pivot");const{patch}=require("@web/core/utils/patch");const{helpers}=spreadsheet;const{formatValue}=helpers;patch(OdooPivot.prototype,{getPivotHeaderFormattedValue(domain){const{value,format}=this.getPivotHeaderValueAndFormat(domain);if(typeof value==="string"){return value;}
const locale=this.getters.getLocale();return formatValue(value,{format,locale});},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/pivot_actions.js */
odoo.define('@spreadsheet_edition/bundle/pivot/pivot_actions',[],function(require){'use strict';let __exports={};const REINSERT_DYNAMIC_PIVOT_CHILDREN=__exports.REINSERT_DYNAMIC_PIVOT_CHILDREN=(env)=>env.model.getters.getPivotIds().map((pivotId,index)=>({id:`reinsert_dynamic_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:index,execute:async(env)=>{const{type}=env.model.getters.getPivotCoreDefinition(pivotId);const position=env.model.getters.getActivePosition();let table;if(type==="ODOO"){const dataSource=env.model.getters.getPivot(pivotId);const model=await dataSource.copyModelWithOriginalDomain();table=model.getTableStructure().export();}else{table=env.model.getters.getPivot(pivotId).getTableStructure().export();}
env.model.dispatch("INSERT_PIVOT_WITH_TABLE",{...position,pivotId,table,pivotMode:"dynamic",});env.model.dispatch("REFRESH_PIVOT",{id:pivotId});},isVisible:(env)=>env.model.getters.getPivot(pivotId).isValid(),}));const REINSERT_STATIC_PIVOT_CHILDREN=__exports.REINSERT_STATIC_PIVOT_CHILDREN=(env)=>env.model.getters.getPivotIds().map((pivotId,index)=>({id:`reinsert_static_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:index,execute:async(env)=>{const{type}=env.model.getters.getPivotCoreDefinition(pivotId);const position=env.model.getters.getActivePosition();let table;if(type==="ODOO"){const dataSource=env.model.getters.getPivot(pivotId);const model=await dataSource.copyModelWithOriginalDomain();table=model.getTableStructure().export();}else{table=env.model.getters.getPivot(pivotId).getTableStructure().export();}
env.model.dispatch("INSERT_PIVOT_WITH_TABLE",{...position,pivotId,table,pivotMode:"static",});env.model.dispatch("REFRESH_PIVOT",{id:pivotId});},isVisible:(env)=>env.model.getters.getPivot(pivotId).isValid(),}));return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/pivot_init_callback.js */
odoo.define('@spreadsheet_edition/bundle/pivot/pivot_init_callback',['@odoo/o-spreadsheet','@spreadsheet/pivot/odoo_pivot','@web/core/domain','@web/core/utils/objects','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{helpers,stores}=require("@odoo/o-spreadsheet");const{OdooPivot}=require("@spreadsheet/pivot/odoo_pivot");const{Domain}=require("@web/core/domain");const{deepCopy}=require("@web/core/utils/objects");const{_t}=require("@web/core/l10n/translation");const uuidGenerator=new helpers.UuidGenerator();const{parseDimension,isDateOrDatetimeField}=helpers;const{SidePanelStore}=stores;function ensureSuccess(result){if(!result.isSuccessful){throw new Error(`Couldn't insert pivot in spreadsheet. Reasons : ${result.reasons}`);}}
function addEmptyGranularity(dimensions,fields){return dimensions.map((dimension)=>{if(isDateOrDatetimeField(fields[dimension.fieldName])){return{granularity:"month",...dimension,};}
return dimension;});}
__exports.insertPivot=insertPivot;function insertPivot(pivotData){const fields=pivotData.metaData.fields;const measures=pivotData.metaData.activeMeasures.map((measure)=>({id:fields[measure]?.aggregator?`${measure}:${fields[measure].aggregator}`:measure,fieldName:measure,aggregator:fields[measure]?.aggregator,}));const pivot=deepCopy({type:"ODOO",domain:new Domain(pivotData.searchParams.domain).toJson(),context:pivotData.searchParams.context,sortedColumn:pivotData.metaData.sortedColumn,measures,model:pivotData.metaData.resModel,columns:addEmptyGranularity(pivotData.metaData.fullColGroupBys.map(parseDimension),fields),rows:addEmptyGranularity(pivotData.metaData.fullRowGroupBys.map(parseDimension),fields),name:pivotData.name,actionXmlId:pivotData.actionXmlId,});return async(model,stores)=>{const pivotId=uuidGenerator.uuidv4();ensureSuccess(model.dispatch("ADD_PIVOT",{pivotId,pivot,}));const ds=model.getters.getPivot(pivotId);if(!(ds instanceof OdooPivot)){throw new Error("The pivot data source is not an OdooPivot");}
await ds.load();let sheetName=_t("%(pivot_name)s (Pivot #%(pivot_id)s)",{pivot_name:pivot.name,pivot_id:model.getters.getPivotFormulaId(pivotId),});if(!this.isEmptySpreadsheet){const sheetId=uuidGenerator.uuidv4();const sheetIdFrom=model.getters.getActiveSheetId();if(model.getters.getSheetIdByName(sheetName)){sheetName=undefined;}
model.dispatch("CREATE_SHEET",{sheetId,position:model.getters.getSheetIds().length,name:sheetName,});model.dispatch("ACTIVATE_SHEET",{sheetIdFrom,sheetIdTo:sheetId});}else{model.dispatch("RENAME_SHEET",{sheetId:model.getters.getActiveSheetId(),name:sheetName,});}
const sheetId=model.getters.getActiveSheetId();const table=ds.getTableStructure();ensureSuccess(model.dispatch("INSERT_PIVOT_WITH_TABLE",{sheetId,col:0,row:0,pivotId,table:table.export(),pivotMode:"static",}));const columns=[];for(let col=0;col<=table.columns[table.columns.length-1].length;col++){columns.push(col);}
model.dispatch("AUTORESIZE_COLUMNS",{sheetId,cols:columns});const sidePanel=stores.get(SidePanelStore);sidePanel.open("PivotSidePanel",{pivotId});};}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/plugins/pivot_autofill_plugin.js */
odoo.define('@spreadsheet_edition/bundle/pivot/plugins/pivot_autofill_plugin',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{UIPlugin,tokenize,helpers}=require("@odoo/o-spreadsheet");const{domainHasNoRecordAtThisPosition}=require("@spreadsheet/pivot/pivot_helpers");const{getNumberOfPivotFunctions,isDateOrDatetimeField,pivotTimeAdapter,createPivotFormula}=helpers;const PivotAutofillPlugin=__exports.PivotAutofillPlugin=class PivotAutofillPlugin extends UIPlugin{getPivotNextAutofillValue(formula,isColumn,increment){const tokens=tokenize(formula);if(getNumberOfPivotFunctions(tokens)!==1){return formula;}
const{functionName,args}=this.getters.getFirstPivotFunction(this.getters.getActiveSheetId(),tokens);const evaluatedArgs=args.map((arg)=>arg.toString());const pivotId=this.getters.getPivotId(evaluatedArgs[0]);if(!pivotId){return formula;}
const dataSource=this.getters.getPivot(pivotId);const definition=dataSource.definition;for(let i=evaluatedArgs.length-1;i>0;i--){const fieldName=evaluatedArgs[i];if(fieldName.startsWith("#")&&((isColumn&&this._isColumnGroupBy(dataSource,definition,fieldName))||(!isColumn&&this._isRowGroupBy(dataSource,definition,fieldName)))){evaluatedArgs[i+1]=parseInt(evaluatedArgs[i+1],10)+increment;if(evaluatedArgs[i+1]<0){return formula;}
if(functionName==="PIVOT.VALUE"){const[formulaId,measure,...domain]=evaluatedArgs;const pivotCell={type:"VALUE",measure,domain:this._toPivotDomainWithPositional(dataSource,domain),};return createPivotFormula(formulaId,pivotCell);}else if(functionName==="PIVOT.HEADER"){const[formulaId,...domain]=evaluatedArgs;const pivotCell={type:"HEADER",domain:this._toPivotDomainWithPositional(dataSource,domain),};return createPivotFormula(formulaId,pivotCell);}
return formula;}}
let builder;if(functionName==="PIVOT.VALUE"){builder=this._autofillPivotValue.bind(this);}else if(functionName==="PIVOT.HEADER"){if(evaluatedArgs.length===1){if(isColumn){builder=this._autofillPivotRowHeader.bind(this);}else{builder=this._autofillPivotColHeader.bind(this);}}else if(definition.rows.map((row)=>row.nameWithGranularity).includes(evaluatedArgs[1])){builder=this._autofillPivotRowHeader.bind(this);}else{builder=this._autofillPivotColHeader.bind(this);}}
if(builder){return builder(pivotId,evaluatedArgs,isColumn,increment,dataSource,definition);}
return formula;}
getTooltipFormula(formula,isColumn){const tokens=tokenize(formula);if(getNumberOfPivotFunctions(tokens)!==1){return[];}
const{functionName,args}=this.getters.getFirstPivotFunction(this.getters.getActiveSheetId(),tokens);const pivotId=this.getters.getPivotId(args[0]);if(!pivotId){return[{title:_t("Missing pivot"),value:_t("Missing pivot #%s",args[0])}];}
if(functionName==="PIVOT.VALUE"){const dataSource=this.getters.getPivot(pivotId);const definition=dataSource.definition;return this._tooltipFormatPivot(args,isColumn,dataSource,definition);}else if(functionName==="PIVOT.HEADER"){const dataSource=this.getters.getPivot(pivotId);return this._tooltipFormatPivotHeader(args,dataSource);}
return[];}
_autofillPivotValue(pivotId,args,isColumn,increment,dataSource,definition){const currentElement=this._getCurrentValueElement(args,definition);const table=dataSource.getTableStructure();const isDate=this._isGroupedOnlyByOneDate(definition,isColumn?"COLUMN":"ROW");let cols=[];let rows=[];let measure;if(isColumn){rows=currentElement.rows;if(isDate&&currentElement.cols.length>1){const group=this._getGroupOfFirstDate(definition,"COLUMN");cols=currentElement.cols;cols[0]=this._incrementDate(cols[0],group,increment);measure=cols.pop();}else{const currentColIndex=this._getColMeasureIndex(table,currentElement.cols);if(currentColIndex===-1){return"";}
const nextColIndex=currentColIndex+increment;if(nextColIndex===-1){return this._autofillRowFromValue(pivotId,currentElement,definition);}
if(nextColIndex<-1||nextColIndex>=table.getNumberOfDataColumns()){return"";}
const measureCell=this._getCellFromMeasureRowAtIndex(table,nextColIndex);cols=[...measureCell.values];measure=cols.pop();}}else{cols=currentElement.cols;if(isDate){if(currentElement.rows.length===0){return"";}
const group=this._getGroupOfFirstDate(definition,"ROW");rows=currentElement.rows;rows[0]=this._incrementDate(rows[0],group,increment);}else{const currentRowIndex=this._getRowIndex(table,currentElement.rows);if(currentRowIndex===-1){return"";}
const nextRowIndex=currentRowIndex+increment;if(nextRowIndex<0){return this._autofillColFromValue(pivotId,nextRowIndex,currentElement,dataSource,definition);}
if(nextRowIndex>=table.rows.length){return"";}
rows=[...this._getCellsFromRowAtIndex(table,nextRowIndex).values];}
measure=cols.pop();}
return this._createPivotFormula(pivotId,rows,cols,definition,measure);}
_autofillPivotColHeader(pivotId,args,isColumn,increment,dataSource,definition){const table=dataSource.getTableStructure();const currentElement=this._getCurrentHeaderElement(args,definition);const currentColIndex=this._getColMeasureIndex(table,currentElement.cols);const isDate=this._isGroupedOnlyByOneDate(definition,"COLUMN")&&currentColIndex!==table.getNumberOfDataColumns()-1;if(isColumn){let groupValues;if(isDate){const group=this._getGroupOfFirstDate(definition,"COLUMN");groupValues=currentElement.cols;groupValues[0]=this._incrementDate(groupValues[0],group,increment);}else{const rowIndex=currentElement.cols.length-1;const nextColIndex=currentColIndex+increment;const nextGroup=this._getNextColCell(table,nextColIndex,rowIndex);if(currentColIndex===-1||nextColIndex<0||nextColIndex>=table.getNumberOfDataColumns()||!nextGroup){return"";}
groupValues=nextGroup.values;}
return this._createPivotFormula(pivotId,[],groupValues,definition);}else{const rowIndex=currentColIndex===table.getNumberOfDataColumns()-1?table.columns.length-2+currentElement.cols.length:currentElement.cols.length-1;const nextRowIndex=rowIndex+increment;const groupLevels=this._getNumberOfColGroupBys(definition);if(nextRowIndex<0||nextRowIndex>=groupLevels+1+table.rows.length){return"";}
if(nextRowIndex>=groupLevels+1){const rowIndex=nextRowIndex-groupLevels-1;const measureCell=this._getCellFromMeasureRowAtIndex(table,currentColIndex);const cols=[...measureCell.values];const measure=cols.pop();const rows=[...this._getCellsFromRowAtIndex(table,rowIndex).values];return this._createPivotFormula(pivotId,rows,cols,definition,measure);}else{const groupValues=this._getNextColCell(table,currentColIndex,nextRowIndex).values;return this._createPivotFormula(pivotId,[],groupValues,definition);}}}
_autofillPivotRowHeader(pivotId,args,isColumn,increment,dataSource,definition){const table=dataSource.getTableStructure();const currentElement=this._getCurrentHeaderElement(args,definition);const currentIndex=this._getRowIndex(table,currentElement.rows);const isDate=this._isGroupedOnlyByOneDate(definition,"ROW");if(isColumn){const colIndex=increment-1;if(colIndex<0||colIndex>=table.getNumberOfDataColumns()){return"";}
const measureCell=this._getCellFromMeasureRowAtIndex(table,colIndex);const values=[...measureCell.values];const measure=values.pop();return this._createPivotFormula(pivotId,currentElement.rows,values,definition,measure);}else{let rows;if(isDate){const group=this._getGroupOfFirstDate(definition,"ROW");rows=currentElement.rows;rows[0]=this._incrementDate(rows[0],group,increment);}else{const nextIndex=currentIndex+increment;if(currentIndex===-1||nextIndex<0||nextIndex>=table.rows.length){return"";}
rows=[...this._getCellsFromRowAtIndex(table,nextIndex).values];}
return this._createPivotFormula(pivotId,rows,[],definition);}}
_autofillColFromValue(pivotId,nextIndex,currentElement,dataSource,definition){if(nextIndex>=0){return"";}
const table=dataSource.getTableStructure();const groupIndex=this._getColMeasureIndex(table,currentElement.cols);if(groupIndex<0){return"";}
const isTotalCol=currentElement.cols.length===1;const headerLevels=isTotalCol?2:this._getNumberOfColGroupBys(definition)+1;const index=headerLevels+nextIndex;if(index<0){return"";}
const cols=isTotalCol?currentElement.cols.slice(0,index):currentElement.cols.slice(0,index+1);return this._createPivotFormula(pivotId,[],cols,definition);}
_autofillRowFromValue(pivotId,currentElement,definition){const rows=currentElement.rows;if(!rows){return"";}
return this._createPivotFormula(pivotId,rows,[],definition);}
_getCurrentHeaderElement(args,definition){const values=this._parseArgs(args.slice(1));const cols=this._getFieldValues([...definition.columns.map((col)=>col.nameWithGranularity),"measure"],values);const rows=this._getFieldValues(definition.rows.map((row)=>row.nameWithGranularity),values);return{cols,rows};}
_getCurrentValueElement(args,definition){const values=this._parseArgs(args.slice(2));const cols=this._getFieldValues(definition.columns.map((col)=>col.nameWithGranularity),values);cols.push(args[1]);const rows=this._getFieldValues(definition.rows.map((row)=>row.nameWithGranularity),values);return{cols,rows};}
_getFieldValues(fields,values){return fields.filter((field)=>field in values).map((field)=>values[field]);}
_incrementDate(date,group,increment){const adapter=pivotTimeAdapter(group);const value=adapter.normalizeFunctionValue(date);return adapter.increment(value,increment);}
_parseArgs(args){const values={};for(let i=0;i<args.length;i+=2){values[args[i]]=args[i+1];}
return values;}
_tooltipFormatPivot(args,isColumn,dataSource,definition){const tooltips=[];const domain=args.slice(2);for(let i=0;i<domain.length;i+=2){if((isColumn&&this._isColumnGroupBy(dataSource,definition,domain[i]))||(!isColumn&&this._isRowGroupBy(dataSource,definition,domain[i]))){tooltips.push(this._tooltipHeader(dataSource,domain.slice(0,i+2)));}}
if(definition.measures.length!==1&&isColumn){const measure=args[1];tooltips.push({value:dataSource.getMeasure(measure).displayName,});}
if(!tooltips.length){tooltips.push({value:_t("Total"),});}
return tooltips;}
_tooltipFormatPivotHeader(args,dataSource){const tooltips=[];const domain=args.slice(1).map((value)=>({value}));if(domain.length===0){return[{value:_t("Total")}];}
for(let i=0;i<domain.length;i+=2){tooltips.push(this._tooltipHeader(dataSource,domain.slice(0,i+2)));}
return tooltips;}
_tooltipHeader(dataSource,domain){const subDomain=dataSource.parseArgsToPivotDomain(domain);if(!domainHasNoRecordAtThisPosition(subDomain)){const formattedValue=dataSource.getPivotHeaderFormattedValue(subDomain);return{value:formattedValue};}else{return{value:""};}}
_toPivotDomainWithPositional(pivot,args){const domain=[];for(let i=0;i<args.length-1;i+=2){const fullName=args[i];const{field,isPositional}=pivot.parseGroupField(fullName);domain.push({field:fullName,value:args[i+1],type:isPositional?"integer":field.type,});}
return domain;}
_createPivotFormula(pivotId,rows,cols,definition,measure){const domain=[];for(const index in rows){const row=definition.rows[index];domain.push({type:row.type,field:row.nameWithGranularity,value:rows[index],});}
if(cols.length===1&&definition.measures.map((m)=>m.id).includes(cols[0])){domain.push({type:"char",field:"measure",value:cols[0],});}else{for(const index in cols){const column=definition.columns[index]||{type:"char",nameWithGranularity:"measure",};domain.push({type:column.type,field:column.nameWithGranularity,value:cols[index],});}}
const pivotCell={type:measure?"VALUE":"HEADER",measure,domain,};const formulaId=this.getters.getPivotFormulaId(pivotId);return createPivotFormula(formulaId,pivotCell);}
_isGroupedOnlyByOneDate(definition,dimension){const groupBys=dimension==="COLUMN"?definition.columns:definition.rows;return groupBys.length===1&&isDateOrDatetimeField(groupBys[0]);}
_getGroupOfFirstDate(definition,dimension){if(!this._isGroupedOnlyByOneDate(definition,dimension)){return undefined;}
const groupBys=dimension==="COLUMN"?definition.columns:definition.rows;return groupBys[0].granularity||"month";}
_getNumberOfColGroupBys(definition){return definition.columns.length;}
_isColumnGroupBy(dataSource,definition,fieldName){const name=dataSource.parseGroupField(fieldName).field.name;return definition.columns.map((col)=>col.fieldName).includes(name);}
_isRowGroupBy(dataSource,definition,fieldName){const name=dataSource.parseGroupField(fieldName).field.name;return definition.rows.map((row)=>row.fieldName).includes(name);}
_getColMeasureIndex(table,values){const vals=JSON.stringify(values);const maxLength=Math.max(...table.columns.map((col)=>col.length));for(let i=0;i<maxLength;i++){const cellValues=table.columns.map((col)=>JSON.stringify((col[i]||{}).values));if(cellValues.includes(vals)){return i;}}
return-1;}
_getNextColCell(table,colIndex,rowIndex){return table.columns[rowIndex][colIndex];}
_getRowIndex(table,values){const vals=JSON.stringify(values);return table.rows.findIndex((cell)=>JSON.stringify(cell.values.map((val)=>val.toString()))===vals);}
_getCellFromMeasureRowAtIndex(table,index){return table.columns.at(-1)[index];}
_getCellsFromRowAtIndex(table,index){return table.rows[index];}}
PivotAutofillPlugin.getters=["getPivotNextAutofillValue","getTooltipFormula"];return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/side_panels/odoo_pivot_layout_configurator/odoo_pivot_layout_configurator.js */
odoo.define('@spreadsheet_edition/bundle/pivot/side_panels/odoo_pivot_layout_configurator/odoo_pivot_layout_configurator',['@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_helpers'],function(require){'use strict';let __exports={};const{components}=require("@odoo/o-spreadsheet");const{ODOO_AGGREGATORS}=require("@spreadsheet/pivot/pivot_helpers");const{PivotLayoutConfigurator}=components;const OdooPivotLayoutConfigurator=__exports.OdooPivotLayoutConfigurator=class OdooPivotLayoutConfigurator extends PivotLayoutConfigurator{setup(){super.setup(...arguments);this.AGGREGATORS=ODOO_AGGREGATORS;}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/side_panels/pivot_details_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/pivot/side_panels/pivot_details_side_panel',['@web/core/utils/hooks','@web/core/l10n/translation','@odoo/o-spreadsheet','@odoo/owl','@spreadsheet_edition/bundle/pivot/side_panels/odoo_pivot_layout_configurator/odoo_pivot_layout_configurator','@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{components,helpers,stores,hooks}=require("@odoo/o-spreadsheet");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{OdooPivotLayoutConfigurator}=require("@spreadsheet_edition/bundle/pivot/side_panels/odoo_pivot_layout_configurator/odoo_pivot_layout_configurator");const{SidePanelDomain}=require("@spreadsheet_edition/bundle/components/side_panel_domain/side_panel_domain");const{Checkbox,Section,ValidationMessages,PivotTitleSection,PivotDeferUpdate}=components;const{useHighlights}=hooks;const{useLocalStore,PivotSidePanelStore}=stores;const{getPivotHighlights}=helpers;const PivotDetailsSidePanel=__exports.PivotDetailsSidePanel=class PivotDetailsSidePanel extends Component{static template="spreadsheet_edition.PivotDetailsSidePanel";static components={ValidationMessages,Checkbox,Section,OdooPivotLayoutConfigurator,PivotDeferUpdate,PivotTitleSection,SidePanelDomain,};static props={onCloseSidePanel:Function,pivotId:String,};setup(){this.notification=useService("notification");this.store=useLocalStore(PivotSidePanelStore,this.props.pivotId);const loadData=async()=>{await this.pivot.load();this.modelDisplayName=await this.pivot.getModelLabel();};onWillStart(loadData);onWillUpdateProps(loadData);useHighlights(this);}
get pivot(){return this.store.pivot;}
formatSort(){const sortedColumn=this.pivot.definition.sortedColumn;const order=sortedColumn.order==="asc"?_t("ascending"):_t("descending");const measure=this.pivot.definition.measures.find((m)=>m.fieldName===sortedColumn.measure);const measureDisplayName=this.pivot.getMeasure(measure.id).displayName;return`${measureDisplayName} (${order})`;}
getLastUpdate(){const lastUpdate=this.pivot.lastUpdate;if(lastUpdate){return new Date(lastUpdate).toLocaleTimeString();}
return _t("never");}
onDomainUpdate(domain){this.store.update({domain});}
get unusedPivotWarning(){return _t("This pivot is not used");}
get deferUpdatesLabel(){return _t("Defer updates");}
get deferUpdatesTooltip(){return _t("Changing the pivot definition requires to reload the data. It may take some time.");}
onDimensionsUpdated(definition){this.store.update(definition);}
get highlights(){return getPivotHighlights(this.env.model.getters,this.props.pivotId);}
flipAxis(){const{rows,columns}=this.store.definition;this.onDimensionsUpdated({rows:columns,columns:rows,});}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/pivot/side_panels/pivot_measure_display_panel_store.js */
odoo.define('@spreadsheet_edition/bundle/pivot/side_panels/pivot_measure_display_panel_store',['@odoo/o-spreadsheet','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{stores}=require("@odoo/o-spreadsheet");const{patch}=require("@web/core/utils/patch");const{PivotMeasureDisplayPanelStore}=stores;patch(PivotMeasureDisplayPanelStore.prototype,{get fields(){try{return super.fields;}catch{return[];}},getPossibleValues(fieldNameWithGranularity){try{return super.getPossibleValues(fieldNameWithGranularity);}catch{return[];}},});return __exports;});;

/* /spreadsheet_edition/static/src/bundle/version_history/index.js */
odoo.define('@spreadsheet_edition/bundle/version_history',['@odoo/o-spreadsheet','@spreadsheet_edition/bundle/version_history/side_panel/version_history_side_panel','@web/core/l10n/translation','@spreadsheet_edition/bundle/version_history/version_history_plugin'],function(require){'use strict';let __exports={};const{registries,readonlyAllowedCommands,invalidateEvaluationCommands,}=require("@odoo/o-spreadsheet");const{VersionHistorySidePanel}=require("@spreadsheet_edition/bundle/version_history/side_panel/version_history_side_panel");const{_t}=require("@web/core/l10n/translation");const{VersionHistoryPlugin}=require("@spreadsheet_edition/bundle/version_history/version_history_plugin");registries.topbarMenuRegistry.addChild("version_history",["file"],{name:_t("See version history"),sequence:55,isVisible:(env)=>env.showHistory,execute:(env)=>env.showHistory(),icon:"o-spreadsheet-Icon.VERSION_HISTORY",});registries.sidePanelRegistry.add("VersionHistory",{title:_t("Version History"),Body:VersionHistorySidePanel,});registries.featurePluginRegistry.add("odooVersionHistory",VersionHistoryPlugin);readonlyAllowedCommands.add("GO_TO_REVISION");invalidateEvaluationCommands.add("GO_TO_REVISION");return __exports;});;

/* /spreadsheet_edition/static/src/bundle/version_history/restore_version_dialog/restore_version_dialog.js */
odoo.define('@spreadsheet_edition/bundle/version_history/restore_version_dialog/restore_version_dialog',['@web/core/confirmation_dialog/confirmation_dialog'],function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const RestoreVersionConfirmationDialog=__exports.RestoreVersionConfirmationDialog=class RestoreVersionConfirmationDialog extends ConfirmationDialog{static template="spreadsheet_edition.RestoreVersionConfirmationDialog";static props={...ConfirmationDialog.props,makeACopy:{type:Function},};async _makeACopy(){return this.execButton(this.props.makeACopy);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/version_history/side_panel/version_history_item.js */
odoo.define('@spreadsheet_edition/bundle/version_history/side_panel/version_history_item',['@odoo/o-spreadsheet','@odoo/owl','@spreadsheet_edition/bundle/helpers/misc','@web/core/l10n/translation','@web/core/l10n/utils'],function(require){'use strict';let __exports={};const{components,helpers}=require("@odoo/o-spreadsheet");const{Component,useRef,useState,useEffect}=require("@odoo/owl");const{formatToLocaleString}=require("@spreadsheet_edition/bundle/helpers/misc");const{_t}=require("@web/core/l10n/translation");const{pyToJsLocale}=require("@web/core/l10n/utils");const{createActions}=helpers;const VersionHistoryItem=__exports.VersionHistoryItem=class VersionHistoryItem extends Component{static template="spreadsheet_edition.VersionHistoryItem";static components={Menu:components.Menu,TextInput:components.TextInput};static props={active:Boolean,revision:Object,onActivation:{optional:true,type:Function},onBlur:{optional:true,type:Function},editable:{optional:true,type:Boolean},};setup(){this.menuState=useState({isOpen:false,position:null,});this.state=useState({editName:this.defaultName});this.menuButtonRef=useRef("menuButton");this.itemRef=useRef("item");useEffect(()=>{if(this.props.active){this.itemRef.el.scrollIntoView({behavior:"smooth",block:"center",inline:"nearest",});}});}
get revision(){return this.props.revision;}
get defaultName(){return(this.props.revision.name||this.formatRevisionTimeStamp(this.props.revision.timestamp));}
get formattedTimeStamp(){return this.formatRevisionTimeStamp(this.props.revision.timestamp);}
get isLatestVersion(){return(this.env.historyManager.getRevisions()[0].nextRevisionId===this.revision.nextRevisionId);}
renameRevision(newName){this.state.editName=newName;if(!this.state.editName){this.state.editName=this.defaultName;}
if(this.state.editName!==this.defaultName){this.env.historyManager.renameRevision(this.revision.id,this.state.editName);}}
get menuItems(){const actions=[{name:_t("Make a copy"),execute:(env)=>{env.historyManager.forkHistory(this.revision.id);},isReadonlyAllowed:true,},{name:_t("Restore this version"),execute:(env)=>{env.historyManager.restoreRevision(this.revision.id);},isReadonlyAllowed:true,},];if(this.props.editable){actions.unshift({name:this.revision.name?_t("Rename"):_t("Name this version"),execute:()=>{this.inputRef.el.focus();},isReadonlyAllowed:true,});}
return createActions(actions);}
openMenu(){this.props.onActivation(this.revision.nextRevisionId);const{x,y,height,width}=this.menuButtonRef.el.getBoundingClientRect();this.menuState.isOpen=true;this.menuState.position={x:x+width,y:y+height};}
closeMenu(){this.menuState.isOpen=false;this.menuState.position=null;}
formatRevisionTimeStamp(ISOdatetime){const code=pyToJsLocale(this.env.model.getters.getLocale().code);return formatToLocaleString(ISOdatetime,code);}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/version_history/side_panel/version_history_side_panel.js */
odoo.define('@spreadsheet_edition/bundle/version_history/side_panel/version_history_side_panel',['@odoo/owl','@odoo/o-spreadsheet','@spreadsheet_edition/bundle/version_history/side_panel/version_history_item'],function(require){'use strict';let __exports={};const{Component,onMounted,useRef,useState}=require("@odoo/owl");const{components}=require("@odoo/o-spreadsheet");const{VersionHistoryItem}=require("@spreadsheet_edition/bundle/version_history/side_panel/version_history_item");const{Section}=components;const VersionHistorySidePanel=__exports.VersionHistorySidePanel=class VersionHistorySidePanel extends Component{static template="spreadsheet_edition.VersionHistory";static props={onCloseSidePanel:Function};static components={VersionHistoryItem,Section,};revNbr=50;setup(){this.containerRef=useRef("container");this.state=useState({currentRevisionId:this.revisions[0]?.nextRevisionId,isEditingName:false,loaded:this.revNbr,});onMounted(()=>{this.focus();});}
get revisions(){return this.env.historyManager.getRevisions();}
get loadedRevisions(){return this.revisions.slice(0,this.state.loaded);}
focus(){this.containerRef.el?.focus();}
onRevisionClick(revisionId){this.env.model.dispatch("GO_TO_REVISION",{revisionId});this.state.currentRevisionId=revisionId;}
onLoadMoreClicked(){this.state.loaded=Math.min(this.state.loaded+this.revNbr,this.revisions.length);}
onKeyDown(ev){let increment=0;switch(ev.key){case"ArrowUp":increment=-1;ev.preventDefault();break;case"ArrowDown":increment=1;ev.preventDefault();break;}
if(increment){const revisions=this.loadedRevisions;const currentIndex=revisions.findIndex((r)=>r.nextRevisionId===this.state.currentRevisionId);const nextIndex=Math.max(0,Math.min(revisions.length-1,currentIndex+increment));if(nextIndex!==currentIndex){this.state.currentRevisionId=revisions[nextIndex].nextRevisionId;this.env.model.dispatch("GO_TO_REVISION",{revisionId:this.state.currentRevisionId,});}}}}
return __exports;});;

/* /spreadsheet_edition/static/src/bundle/version_history/version_history_plugin.js */
odoo.define('@spreadsheet_edition/bundle/version_history/version_history_plugin',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{UIPlugin}=require("@odoo/o-spreadsheet");const VersionHistoryPlugin=__exports.VersionHistoryPlugin=class VersionHistoryPlugin extends UIPlugin{constructor(config){super(config);this.session=config.session;}
handle(cmd){switch(cmd.type){case"GO_TO_REVISION":this.session.revisions.fastForward();this.session.revisions.revertTo(cmd.revisionId);this.dispatch("START");break;}}}
return __exports;});;

/* /spreadsheet_dashboard_edition/static/src/bundle/action/dashboard_edit_action.js */
odoo.define('@spreadsheet_dashboard_edition/bundle/action/dashboard_edit_action',['@spreadsheet_edition/bundle/actions/abstract_spreadsheet_action','@web/core/registry','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{AbstractSpreadsheetAction}=require("@spreadsheet_edition/bundle/actions/abstract_spreadsheet_action");const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useSubEnv}=require("@odoo/owl");const DashboardEditAction=__exports.DashboardEditAction=class DashboardEditAction extends AbstractSpreadsheetAction{static template="spreadsheet_dashboard_edition.DashboardEditAction";resModel="spreadsheet.dashboard";threadField="dashboard_id";notificationMessage=_t("New dashboard created");setup(){super.setup();useSubEnv({makeCopy:this.makeCopy.bind(this),onSpreadsheetShared:this.shareSpreadsheet.bind(this),isDashboardPublished:()=>this.data&&this.data.is_published,toggleDashboardPublished:this.togglePublished.bind(this),isRecordReadonly:()=>this.data&&this.data.isReadonly,});}
togglePublished(is_published){this.orm.write("spreadsheet.dashboard",[this.resId],{is_published,});}
async shareSpreadsheet(data,excelExport){const url=await this.orm.call("spreadsheet.dashboard.share","action_get_share_url",[{dashboard_id:this.resId,spreadsheet_data:JSON.stringify(data),excel_files:excelExport.files,},]);return url;}}
registry.category("actions").add("action_edit_dashboard",DashboardEditAction,{force:true});return __exports;});;

/* /spreadsheet_dashboard_edition/static/src/bundle/components/dashboard_edit/dashboard_edit.js */
odoo.define('@spreadsheet_dashboard_edition/bundle/components/dashboard_edit/dashboard_edit',['@odoo/owl','@web/core/user','@spreadsheet_dashboard/bundle/dashboard_action/dashboard_action'],function(require){'use strict';let __exports={};const{Component,onWillStart}=require("@odoo/owl");const{user}=require("@web/core/user");const{dashboardActionRegistry}=require("@spreadsheet_dashboard/bundle/dashboard_action/dashboard_action");const DashboardEdit=__exports.DashboardEdit=class DashboardEdit extends Component{static template="spreadsheet_dashboard_edition.DashboardEdit";static props={onClick:Function,dashboardId:Number,};setup(){this.isDashboardAdmin=false;onWillStart(async()=>{if(this.env.debug){this.isDashboardAdmin=await user.hasGroup("spreadsheet_dashboard.group_dashboard_manager");}});}
onClick(){return this.props.onClick(this.props.dashboardId);}}
dashboardActionRegistry.add("dashboard_edit",DashboardEdit);return __exports;});;

/* /spreadsheet_dashboard_edition/static/src/bundle/components/dashboard_publish/dashboard_publish.js */
odoo.define('@spreadsheet_dashboard_edition/bundle/components/dashboard_publish/dashboard_publish',['@odoo/owl','@spreadsheet/o_spreadsheet/o_spreadsheet','@web/core/checkbox/checkbox'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{registries}=require("@spreadsheet/o_spreadsheet/o_spreadsheet");const{CheckBox}=require("@web/core/checkbox/checkbox");const{topbarComponentRegistry}=registries;const DashboardPublish=__exports.DashboardPublish=class DashboardPublish extends Component{static template="spreadsheet_edition.DashboardPublish";static components={CheckBox};static props={};setup(){this.state=useState({isPublished:this.env.isDashboardPublished()});}
get isReadonly(){return this.env.isRecordReadonly();}
toggleDashboardPublished(){if(this.isReadonly){return;}
this.state.isPublished=!this.state.isPublished;this.env.toggleDashboardPublished(this.state.isPublished);}}
topbarComponentRegistry.add("dashboard_publish",{component:DashboardPublish,isVisible:(env)=>env.isDashboardPublished,sequence:15,});return __exports;});

                    /*******************************************
                    *  Templates                               *
                    *******************************************/

                    odoo.define("spreadsheet.o_spreadsheet.bundle.xml", ["@web/core/templates"], function(require) {
                        "use strict";
                        const { checkPrimaryTemplateParents, registerTemplate, registerTemplateExtension } = require("@web/core/templates");
                        /* spreadsheet.o_spreadsheet */
                        registerTemplate("o-spreadsheet-ActionButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ActionButton" xml:space="preserve">
    <span t-if="isVisible" class="o-menu-item-button" t-att-title="title" t-att-class="{'o-disabled': !isEnabled, active: isActive}" t-attf-class="{{props.class}}" t-on-click="onClick">
      <span t-if="iconTitle" t-att-style="buttonStyle">
        <t t-call="{{iconTitle}}"/>
      </span>
      <t t-if="props.hasTriangleDownIcon">
        <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
      </t>
    </span>
  </t>

  `);
registerTemplate("o-spreadsheet-Ripple", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Ripple" xml:space="preserve">
    <div class="o-ripple-container position-relative" t-att-class="props.class" t-on-click="onClick">
      <div class="position-absolute w-100 h-100">
        <t t-foreach="state.ripples" t-as="ripple" t-key="ripple.id">
          <RippleEffect t-props="getRippleEffectProps(ripple.id)"/>
        </t>
      </div>
      <div class="position-relative" t-ref="childContainer">
        <t t-slot="default"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-RippleEffect", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RippleEffect" xml:space="preserve">
    <div class="position-absolute" t-att-class="{ 'overflow-hidden': !props.allowOverflow }" t-att-style="props.style">
      <div class="o-ripple position-relative pe-none" t-ref="ripple" t-att-style="rippleStyle"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Autofill", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Autofill" xml:space="preserve">
    <div class="o-autofill" t-att-style="style"/>
    <div class="o-autofill-handler" t-att-style="handlerStyle" t-on-pointerdown="onMouseDown" t-on-dblclick="onDblClick"/>
    <t t-set="tooltip" t-value="getTooltip()"/>
    <div t-if="tooltip" class="o-autofill-nextvalue" t-att-style="styleNextValue">
      <t t-component="tooltip.component" t-props="tooltip.props"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-BorderEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BorderEditor" xml:space="preserve">
    <t t-set="border_color">Border Color</t>
    <Popover t-props="popoverProps">
      <div class="d-flex o-border-selector" t-on-click.stop="" t-att-class="props.class ? props.class : ''">
        <div class="o-border-selector-section">
          <div t-foreach="BORDER_POSITIONS" t-as="borderPositionsRow" t-key="borderPositionsRow" class="d-flex o-dropdown-button o-dropdown-line">
            <span t-foreach="borderPositionsRow" t-as="borderPosition" t-key="borderPosition" class="o-line-item o-hoverable-button" t-att-class="{active:props.currentBorderPosition === borderPosition[0]}" t-att-name="borderPosition[0]" t-on-click.stop="() =&gt; this.setBorderPosition(borderPosition[0])">
              <t t-call="{{borderPosition[1]}}"/>
            </span>
          </div>
        </div>
        <div class="o-divider"/>
        <div class="o-border-selector-section">
          <div class="m-0 p-0 d-flex align-items-center justify-content-center o-with-color o-hoverable-button" title="Border color" t-on-click.stop="(ev) =&gt; this.toggleDropdownTool('borderColorTool')">
            <ColorPickerWidget currentColor="props.currentBorderColor" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('borderColorTool')" showColorPicker="state.activeTool === 'borderColorTool'" onColorPicked="(color) =&gt; this.setBorderColor(color)" title="border_color" icon="props.currentBorderColor === '' ? 'o-spreadsheet-Icon.BORDER_NO_COLOR' : 'o-spreadsheet-Icon.BORDER_COLOR'" dropdownMaxHeight="this.props.dropdownMaxHeight" class="'o-dropdown-button o-border-picker-button'"/>
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
          </div>
          <div class="o-border-style-tool d-flex align-items-center justify-content-center o-hoverable-button" title="Line style" t-ref="lineStyleButton" t-on-click.stop="(ev) =&gt; this.toggleDropdownTool('borderTypeTool')">
            <t t-call="o-spreadsheet-Icon.BORDER_TYPE"/>
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
            <Popover t-props="lineStylePickerPopoverProps" t-if="state.activeTool === 'borderTypeTool'">
              <div class="o-border-style-dropdown">
                <t t-foreach="borderStyles" t-as="borderStyle" t-key="borderStyle">
                  <div t-att-title="borderStyle" t-on-click.stop="() =&gt; this.setBorderStyle(borderStyle)">
                    <div class="d-flex o-dropdown-border-type">
                      <div class="o-dropdown-border-check">
                        <t t-if="props.currentBorderStyle === borderStyle" t-call="o-spreadsheet-Icon.CHECK"/>
                      </div>
                      <div t-attf-class="o-style-preview o-style-{{borderStyle}}"/>
                    </div>
                  </div>
                </t>
              </div>
            </Popover>
          </div>
        </div>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-BorderEditorWidget", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BorderEditorWidget" xml:space="preserve">
    <div class="d-flex position-relative" title="Borders">
      <span t-ref="borderEditorButton" t-on-click.stop="props.toggleBorderEditor" t-att-class="props.class ? props.class : ''" t-att-disabled="props.disabled">
        <span t-att-style="iconStyle">
          <t t-call="o-spreadsheet-Icon.BORDERS"/>
        </span>
      </span>
      <BorderEditor t-if="props.showBorderEditor" onBorderColorPicked.bind="onBorderColorPicked" onBorderStylePicked.bind="onBorderStylePicked" onBorderPositionPicked.bind="onBorderPositionPicked" currentBorderColor="state.currentColor" currentBorderStyle="state.currentStyle" currentBorderPosition="state.currentPosition" maxHeight="props.dropdownMaxHeight" anchorRect="borderEditorAnchorRect"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-BottomBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BottomBar" xml:space="preserve">
    <div class="o-spreadsheet-bottom-bar o-two-columns d-flex align-items-center overflow-hidden" t-on-click="props.onClick" t-ref="bottomBar" t-on-contextmenu.prevent="">
      <Ripple>
        <div class="o-sheet-item o-add-sheet me-2 p-1" t-if="!env.model.getters.isReadonly()" t-on-click="clickAddSheet">
          <t t-call="o-spreadsheet-Icon.PLUS"/>
        </div>
      </Ripple>
      <Ripple>
        <div class="o-sheet-item o-list-sheets me-2 p-1" t-on-click="clickListSheets">
          <t t-call="o-spreadsheet-Icon.LIST"/>
        </div>
      </Ripple>
      <div class="o-all-sheets position-relative flex-shrink-0 d-flex h-100 me-3">
        <div class="o-bottom-bar-fade-in position-absolute h-100 w-100 pe-none" t-if="state.isSheetListScrollableLeft"/>
        <div class="o-sheet-list d-flex w-100 px-1" t-ref="sheetList" t-on-wheel="onWheel" t-on-scroll="onScroll">
          <t t-foreach="getVisibleSheets()" t-as="sheet" t-key="sheet.id">
            <BottomBarSheet style="getSheetStyle(sheet.id)" sheetId="sheet.id" openContextMenu="(registry, ev) =&gt; this.onSheetContextMenu(sheet.id, registry, ev)" onMouseDown="(ev) =&gt; this.onSheetMouseDown(sheet.id, ev)"/>
          </t>
        </div>
        <div class="o-bottom-bar-fade-out position-absolute h-100 w-100 pe-none" t-if="state.isSheetListScrollableRight"/>
      </div>
      <div class="o-bottom-bar-arrows d-flex h-100 me-5 align-items-center" t-if="state.isSheetListScrollableLeft || state.isSheetListScrollableRight">
        <Ripple ignoreClickPosition="true" width="20" height="20" offsetX="1" allowOverflow="true" enabled="state.isSheetListScrollableLeft">
          <div class="o-bottom-bar-arrow o-bottom-bar-arrow-left d-flex align-items-center me-2" t-att-class="{'o-disabled': !state.isSheetListScrollableLeft}" t-on-click="onArrowLeft">
            <t t-call="o-spreadsheet-Icon.CARET_LEFT"/>
          </div>
        </Ripple>
        <Ripple ignoreClickPosition="true" width="20" height="20" offsetX="-1" allowOverflow="true" enabled="state.isSheetListScrollableRight">
          <div class="o-bottom-bar-arrow o-bottom-bar-arrow-right d-flex align-items-center me-4" t-att-class="{'o-disabled': !state.isSheetListScrollableRight}" t-on-click="onArrowRight">
            <t t-call="o-spreadsheet-Icon.CARET_RIGHT"/>
          </div>
        </Ripple>
      </div>

      <BottomBarStatistic openContextMenu="(x, y, registry) =&gt; this.openContextMenu(x, y, 'listSelectionStatistics', registry)" closeContextMenu="() =&gt; this.closeContextMenuWithId('listSelectionStatistics')"/>

      <Menu t-if="menuState.isOpen" position="menuState.position" menuItems="menuState.menuItems" maxHeight="menuMaxHeight" onClose="() =&gt; this.closeMenu()" menuId="menuState.menuId"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-BottomBarSheet", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BottomBarSheet" xml:space="preserve">
    <Ripple>
      <div class="o-sheet d-flex align-items-center user-select-none text-nowrap " tabindex="-1" composerFocusableElement="true" t-on-pointerdown="(ev) =&gt; this.onMouseDown(ev)" t-on-contextmenu.prevent="(ev) =&gt; this.onContextMenu(ev)" t-ref="sheetDiv" t-att-style="props.style" t-att-title="sheetName" t-att-data-id="props.sheetId" t-att-class="{active: isSheetActive}">
        <span class="o-sheet-name" t-att-class="{'o-sheet-name-editable': state.isEditing }" t-ref="sheetNameSpan" t-esc="sheetName" t-on-click="(ev) =&gt; this.onMouseEventSheetName(ev)" t-on-pointerdown="(ev) =&gt; this.onMouseEventSheetName(ev)" t-on-dblclick="() =&gt; this.onDblClick()" t-on-focusout="() =&gt; this.onFocusOut()" t-on-keydown="(ev) =&gt; this.onKeyDown(ev)" t-att-contenteditable="state.isEditing ? 'true': 'false'"/>
        <span class="o-sheet-icon ms-1" t-on-click.stop="(ev) =&gt; this.onIconClick(ev)">
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
        <div t-if="sheetColorStyle" class="o-sheet-color position-absolute" t-att-style="sheetColorStyle"/>
      </div>
    </Ripple>
    <ColorPicker t-if="state.pickerOpened" anchorRect="colorPickerAnchorRect" onColorPicked.bind="onColorPicked" currentColor="props.currentColor"/>
  </t>

  `);
registerTemplate("o-spreadsheet-BottomBarStatistic", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BottomBarStatistic" xml:space="preserve">
    <t t-set="selectedStatistic" t-value="getSelectedStatistic()"/>
    <Ripple class="'ms-auto'" t-if="selectedStatistic !== undefined">
      <div class="o-selection-statistic text-truncate user-select-none me-4 bg-white rounded shadow d-flex align-items-center" t-on-click="listSelectionStatistics">
        <t t-esc="selectedStatistic"/>
        <span class="ms-2">
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
      </div>
    </Ripple>
  </t>

  `);
registerTemplate("o-spreadsheet-ClientTag", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ClientTag" xml:space="preserve">
    <div t-if="props.active" class="o-client-tag" t-att-style="tagStyle" t-esc="props.name"/>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorPicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorPicker" xml:space="preserve">
    <Popover t-props="popoverProps">
      <div class="o-color-picker" t-on-click.stop="" t-att-style="colorPickerStyle">
        <div class="o-color-picker-section-name">Standard</div>
        <div class="colors-grid">
          <div t-foreach="COLORS" t-as="color" t-key="color" class="o-color-picker-line-item" t-att-data-color="color" t-on-click="() =&gt; this.onColorClick(color)" t-attf-style="background-color:{{color}};">
            <div t-if="isSameColor(props.currentColor, color)" align="center" t-attf-style="color:{{checkmarkColor}}">
              ✓
            </div>
          </div>
        </div>
        <div class="o-separator"/>
        <div class="o-color-picker-section-name o-color-picker-toggler" t-on-click="toggleColorPicker">
          <span>Custom</span>
        </div>
        <div class="colors-grid o-color-picker-toggler" t-on-click.stop="toggleColorPicker">
          <div class="o-color-picker-line-item o-color-picker-toggler-button">
            <div class="o-color-picker-toggler-sign">
              <t t-call="o-spreadsheet-Icon.PLUS"/>
            </div>
          </div>
          <div t-foreach="env.model.getters.getCustomColors()" t-as="color" t-key="color" class="o-color-picker-line-item" t-att-data-color="color" t-attf-style="background-color:{{color}};" t-on-click="() =&gt; this.onColorClick(color)">
            <div t-if="isSameColor(props.currentColor, color)" align="center" t-attf-style="color:{{checkmarkColor}}">
              ✓
            </div>
          </div>
        </div>
        <div t-if="state.showGradient" class="o-custom-selector">
          <div class="o-gradient" t-on-click.stop="" t-on-pointerdown="dragGradientPointer" t-att-style="gradientHueStyle">
            <div class="saturation w-100 h-100 position-absolute pe-none"/>
            <div class="lightness w-100 h-100 position-absolute pe-none"/>
            <div class="magnifier pe-none" t-att-style="pointerStyle"/>
          </div>
          <div class="o-hue-container" t-on-pointerdown="dragHuePointer">
            <div class="o-hue-picker" t-on-click.stop=""/>
            <div class="o-hue-slider pe-none" t-att-style="sliderStyle">
              <t t-call="o-spreadsheet-Icon.CARET_UP"/>
            </div>
          </div>
          <div class="o-custom-input-preview">
            <input type="text" t-att-class="{'o-wrong-color': !isHexColorInputValid }" t-on-click.stop="" t-att-value="state.customHexColor" t-on-input="setHexColor" maxlength="7"/>
            <div class="o-color-preview" t-att-style="colorPreviewStyle"/>
          </div>
          <div class="o-custom-input-buttons">
            <button class="o-add-button" t-att-class="{'o-disabled': !state.customHexColor or !isHexColorInputValid}" t-on-click.stop="addCustomColor">
              Add
            </button>
          </div>
        </div>
        <div class="o-separator"/>
        <div class="o-buttons">
          <button t-on-click="resetColor" class="o-cancel">No Color</button>
        </div>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorPickerWidget", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorPickerWidget" xml:space="preserve">
    <div class="o-color-picker-widget">
      <span class="o-color-picker-button" t-ref="colorPickerButton" t-on-click.stop="props.toggleColorPicker" t-att-title="props.title" t-att-class="props.class ? props.class : 'o-color-picker-button-style'" t-att-disabled="props.disabled">
        <span t-att-style="iconStyle">
          <t t-call="{{props.icon}}"/>
        </span>
      </span>
      <ColorPicker t-if="props.showColorPicker" anchorRect="colorPickerAnchorRect" onColorPicked="props.onColorPicked" currentColor="props.currentColor" maxHeight="props.dropdownMaxHeight"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TextValueProvider", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TextValueProvider" xml:space="preserve">
    <div t-ref="autoCompleteList" t-att-class="{           'o-autocomplete-dropdown': props.proposals.length}">
      <t t-foreach="props.proposals" t-as="proposal" t-key="proposal.text">
        <div class="d-flex flex-column text-start" t-att-class="{'o-autocomplete-value-focus': props.selectedIndex === proposal_index}" t-on-click="() =&gt; this.props.onValueSelected(proposal.text)" t-on-pointermove="() =&gt; this.props.onValueHovered(proposal_index)">
          <div class="o-autocomplete-value text-truncate">
            <t t-set="htmlContent" t-value="proposal.htmlContent || [{ value: proposal.text}]"/>
            <span t-foreach="htmlContent" t-as="content" t-key="content_index" t-att-class="content.class" t-attf-style="color: {{content.color || 'inherit'}};" t-esc="content.value"/>
          </div>
          <div class="o-autocomplete-description text-truncate" t-esc="proposal.description" t-if="props.selectedIndex === proposal_index"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Composer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Composer" xml:space="preserve">
    <div class="o-composer-container w-100 h-100">
      <t t-set="assistantIsAvailable" t-value="autoCompleteState.provider or functionDescriptionState.showDescription"/>
      <div class="d-flex flex-row position-relative">
        <span t-if="props.focus !== 'inactive' and assistantIsAvailable and assistant.forcedClosed" role="button" title="Show formula help" t-on-click="openAssistant" t-on-pointerdown.prevent.stop="" t-on-click.prevent.stop="" t-on-pointerup.prevent.stop="" class="fa-stack position-absolute translate-middle force-open-assistant fs-4">
          <i class="fa fa-circle fa-stack-1x fa-inverse"/>
          <i class="fa fa-question-circle fa-stack-1x"/>
        </span>
        <div class="o-composer w-100 text-start" t-att-class="{ 'text-muted': env.model.getters.isReadonly(), 'active': props.focus !== 'inactive' }" t-att-style="props.inputStyle" t-ref="o_composer" tabindex="1" t-att-contenteditable="env.model.getters.isReadonly() ? 'false' : 'true'" t-att-placeHolder="props.placeholder" spellcheck="false" t-on-keydown="onKeydown" t-on-mousewheel.stop="" t-on-input="onInput" t-on-pointerdown="onMousedown" t-on-click="onClick" t-on-keyup="onKeyup" t-on-paste="onPaste" t-on-compositionstart="onCompositionStart" t-on-compositionend="onCompositionEnd" t-on-dblclick="onDblClick" t-on-contextmenu="onContextMenu" t-on-blur="onBlur"/>
      </div>
      <div t-if="props.focus !== 'inactive' and !assistant.forcedClosed and assistantIsAvailable" class="o-composer-assistant shadow" t-att-style="assistantStyle" t-on-wheel.stop="" t-on-pointerdown.prevent.stop="" t-on-click.prevent.stop="" t-on-pointerup.prevent.stop="">
        <span role="button" t-on-click="closeAssistant" class="fa-stack position-absolute top-0 start-100 translate-middle fs-4">
          <i class="fa fa-circle fa-stack-1x fa-inverse"/>
          <i class="fa fa-times-circle fa-stack-1x text-muted"/>
        </span>
        <FunctionDescriptionProvider t-if="functionDescriptionState.showDescription" functionName="functionDescriptionState.functionName" functionDescription="functionDescriptionState.functionDescription" argToFocus="functionDescriptionState.argToFocus"/>
        <div t-if="functionDescriptionState.showDescription and autoCompleteState.provider" class="border-top"/>
        <TextValueProvider t-if="autoCompleteState.provider" proposals="autoCompleteState.provider.proposals" selectedIndex="autoCompleteState.selectedIndex" onValueSelected.bind="this.autoComplete" onValueHovered.bind="this.updateAutoCompleteIndex"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FunctionDescriptionProvider", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FunctionDescriptionProvider" xml:space="preserve">
    <div class="o-formula-assistant-container user-select-none shadow">
      <t t-set="context" t-value="getContext()"/>
      <div class="o-formula-assistant" t-if="context.functionName">
        <div class="o-formula-assistant-head d-flex flex-row justify-content-between">
          <div>
            <span t-esc="context.functionName"/>
            (
            <t t-foreach="context.functionDescription.args" t-as="arg" t-key="arg.name">
              <span t-if="arg_index &gt; '0'" t-esc="formulaArgSeparator"/>
              <span t-att-class="{ 'o-formula-assistant-focus': context.argToFocus === arg_index }">
                <span>
                  <span t-if="arg.optional || arg.repeating || arg.default">[</span>
                  <span t-esc="arg.name"/>
                  <span t-if="arg.repeating">, ...</span>
                  <span t-if="arg.optional || arg.repeating || arg.default">]</span>
                </span>
              </span>
            </t>
            )
          </div>
          <i class="fa fa-caret-up px-2 align-self-start collapsed" data-bs-toggle="collapse" data-bs-target="#formula-assistant-details"/>
        </div>

        <div id="formula-assistant-details" class="collapse">
          <div class="o-formula-assistant-core pb-3 m-3">
            <div class="o-formula-assistant-gray">ABOUT</div>
            <div t-esc="context.functionDescription.description"/>
          </div>

          <t t-foreach="context.functionDescription.args" t-as="arg" t-key="arg.name">
            <div class="o-formula-assistant-arg p-3 pt-0 display-flex flex-column" t-att-class="{                   'o-formula-assistant-gray': context.argToFocus &gt;= '0',                   'o-formula-assistant-focus': context.argToFocus === arg_index,                 }">
              <div>
                <span t-esc="arg.name"/>
                <span t-if="arg.optional || arg.repeating || arg.default "> - [optional] </span>
                <span t-if="arg.default">
                  <span>default: </span>
                  <t t-esc="arg.defaultValue"/>
                </span>
                <span t-if="arg.repeating">repeatable</span>
              </div>
              <div class="o-formula-assistant-arg-description" t-esc="arg.description"/>
            </div>
          </t>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridComposer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridComposer" xml:space="preserve">
    <div class="o-cell-reference" t-if="shouldDisplayCellReference" t-att-style="cellReferenceStyle" t-esc="cellReference"/>
    <div class="o-grid-composer" t-att-style="containerStyle" t-ref="gridComposer">
      <Composer t-props="composerProps"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-StandaloneComposer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-StandaloneComposer" xml:space="preserve">
    <div class="o-standalone-composer" t-on-click.stop="" t-att-class="containerClass">
      <Composer focus="focus" inputStyle="composerStyle" onComposerContentFocused.bind="onFocus" composerStore="standaloneComposerStore" placeholder="props.placeholder" delimitation="spreadsheetRect"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TopBarComposer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TopBarComposer" xml:space="preserve">
    <div class="o-topbar-composer bg-white user-select-text" t-on-click.stop="" t-att-style="containerStyle">
      <Composer focus="focus" inputStyle="composerStyle" onComposerContentFocused.bind="onFocus" composerStore="composerStore" placeholder="composerStore.placeholder"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SpreadsheetDashboard", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SpreadsheetDashboard" xml:space="preserve">
    <div class="o-grid o-two-columns" tabindex="-1" t-on-wheel="onMouseWheel">
      <div class="mx-auto h-100 position-relative" t-ref="grid" t-att-style="gridContainer">
        <GridOverlay onCellHovered.bind="onCellHovered" onGridResized.bind="onGridResized" onGridMoved.bind="moveCanvas" gridOverlayDimensions="gridOverlayDimensions"/>
        <canvas t-ref="canvas"/>
        <GridPopover gridRect="getGridRect()" onMouseWheel.bind="onMouseWheel" onClosePopover.bind="onClosePopover"/>
        <div t-foreach="getClickableCells()" t-as="clickableCell" t-key="clickableCell_index" class="o-dashboard-clickable-cell" t-on-click="() =&gt; this.selectClickableCell(clickableCell)" t-on-contextmenu.prevent="" t-att-style="getCellClickableStyle(clickableCell.coordinates)"/>
      </div>
      <VerticalScrollBar/>
      <HorizontalScrollBar/>
      <div class="o-scrollbar corner"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationOverlay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationOverlay" xml:space="preserve">
    <t t-foreach="checkBoxCellPositions" t-as="position" t-key="'checkbox'+position_index">
      <GridCellIcon cellPosition="position">
        <DataValidationCheckbox cellPosition="position"/>
      </GridCellIcon>
    </t>

    <t t-foreach="listIconsCellPositions" t-as="position" t-key="'list'+position_index">
      <GridCellIcon cellPosition="position" horizontalAlign="'right'">
        <DataValidationListIcon cellPosition="position"/>
      </GridCellIcon>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationCheckbox", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationCheckbox" xml:space="preserve">
    <Checkbox name="'data-validation-checkbox'" value="checkBoxValue" onChange.bind="onCheckboxChange" className="isDisabled ? 'pe-none o-dv-checkbox' : 'o-dv-checkbox'"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationListIcon", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationListIcon" xml:space="preserve">
    <div class="o-dv-list-icon d-flex align-items-center justify-content-center" t-on-click="onClick">
      <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ErrorToolTip", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ErrorToolTip" xml:space="preserve">
    <div class="o-error-tooltip">
      <t t-foreach="props.errors" t-as="error" t-key="error_index">
        <div class="o-error-tooltip-title fw-bold text-danger">
          <t t-esc="error.title"/>
        </div>
        <div class="o-error-tooltip-message">
          <t t-esc="error.message"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartJsComponent", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartJsComponent" xml:space="preserve">
    <canvas class="o-figure-canvas w-100 h-100" t-att-style="canvasStyle" t-ref="graphContainer"/>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartComponent", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartComponent" xml:space="preserve">
    <canvas class="o-figure-canvas o-gauge-chart w-100 h-100" t-ref="chartContainer"/>
  </t>

  `);
registerTemplate("o-spreadsheet-ScorecardChart", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScorecardChart" xml:space="preserve">
    <canvas class="o-figure-canvas o-scorecard w-100 h-100" t-ref="chartContainer" t-att-title="title"/>
  </t>

  `);
registerTemplate("o-spreadsheet-FigureComponent", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FigureComponent" xml:space="preserve">
    <div class="o-figure-wrapper pe-auto" t-att-style="wrapperStyle">
      <div class="o-figure w-100 h-100" t-on-pointerdown.stop="(ev) =&gt; this.onMouseDown(ev)" t-on-contextmenu.prevent.stop="(ev) =&gt; !env.model.getters.isReadonly() and this.onContextMenu(ev)" t-ref="figure" t-att-style="props.style" t-att-data-id="props.figure.id" tabindex="0" t-on-keydown="(ev) =&gt; this.onKeyDown(ev)" t-on-keyup.stop="">
        <t t-component="figureRegistry.get(props.figure.tag).Component" t-key="props.figure.id" onFigureDeleted="props.onFigureDeleted" figure="props.figure"/>
        <div class="o-figure-menu position-absolute m-2" t-if="!env.isDashboard()">
          <div class="o-figure-menu-item" t-if="!env.model.getters.isReadonly()" t-on-click="showMenu" t-ref="menuButton" t-on-contextmenu.prevent.stop="showMenu">
            <t t-call="o-spreadsheet-Icon.LIST"/>
          </div>
          <Menu t-if="menuState.isOpen" position="menuState.position" menuItems="menuState.menuItems" onClose="() =&gt; this.menuState.isOpen=false"/>
        </div>
      </div>
      <div class="o-figure-border w-100 h-100 position-absolute pe-none" t-att-style="borderStyle"/>
      <t t-if="isSelected">
        <div class="o-fig-anchor o-top" t-att-style="this.getResizerPosition('top')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(0,-1, ev)"/>
        <div class="o-fig-anchor o-topRight" t-att-style="this.getResizerPosition('top right')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(1,-1, ev)"/>
        <div class="o-fig-anchor o-right" t-att-style="this.getResizerPosition('right')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(1,0, ev)"/>
        <div class="o-fig-anchor o-bottomRight" t-att-style="this.getResizerPosition('bottom right')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(1,1, ev)"/>
        <div class="o-fig-anchor o-bottom" t-att-style="this.getResizerPosition('bottom')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(0,1, ev)"/>
        <div class="o-fig-anchor o-bottomLeft" t-att-style="this.getResizerPosition('bottom left')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(-1,1, ev)"/>
        <div class="o-fig-anchor o-left" t-att-style="this.getResizerPosition('left')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(-1,0, ev)"/>
        <div class="o-fig-anchor o-topLeft" t-att-style="this.getResizerPosition('top left')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(-1,-1, ev)"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartFigure", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartFigure" xml:space="preserve">
    <div class="o-chart-container w-100 h-100" t-on-dblclick="onDoubleClick">
      <t t-component="chartComponent" figure="this.props.figure" t-key="this.props.figure.id + '-' + chartType"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FiguresContainer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FiguresContainer" xml:space="preserve">
    <div class="position-absolute">
      <t t-foreach="containers" t-as="container" t-key="container.type">
        <div class="o-figure-container position-absolute pe-none overflow-hidden" t-att-style="container.style" t-att-data-id="container.type + 'Container'">
          <div class="o-figure-viewport-inverse w-0 h-0 overflow-visible position-absolute" t-att-style="container.inverseViewportStyle">
            <t t-foreach="container.figures" t-as="figure" t-key="figure.id">
              <FigureComponent onFigureDeleted="this.props.onFigureDeleted" figure="figure" style="getFigureStyle(figure)" onMouseDown="(ev) =&gt; this.startDraggingFigure(figure, ev)" onClickAnchor="(dirX, dirY, ev) =&gt; this.startResize(figure, dirX, dirY, ev)"/>
            </t>
          </div>
        </div>
      </t>
    </div>
    <div class="o-figure-container position-absolute pe-none overflow-hidden" t-if="dnd.horizontalSnap" t-att-style="dnd.horizontalSnap.containerStyle" t-att-data-id="'HorizontalSnapContainer'">
      <div class="o-figure-snap-line horizontal" t-att-style="dnd.horizontalSnap.lineStyle"/>
    </div>
    <div class="o-figure-container position-absolute pe-none overflow-hidden" t-if="dnd.verticalSnap" t-att-style="dnd.verticalSnap.containerStyle" t-att-data-id="'VerticalSnapContainer'">
      <div class="o-figure-snap-line vertical" t-att-style="dnd.verticalSnap.lineStyle"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ImageFigure", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ImageFigure" xml:space="preserve">
    <img t-att-src="getImagePath" class="w-100 h-100"/>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterIcon", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterIcon" xml:space="preserve">
    <div class="o-filter-icon" t-att-class="iconClass" t-on-click="onClick">
      <t t-if="isFilterActive" t-call="o-spreadsheet-Icon.FILTER_ICON_ACTIVE"/>
      <t t-else="" t-call="o-spreadsheet-Icon.FILTER_ICON"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterIconsOverlay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterIconsOverlay" xml:space="preserve">
    <t t-foreach="getFilterHeadersPositions()" t-as="position" t-key="'filter'+position.col + '_' + position.row">
      <GridCellIcon cellPosition="position" horizontalAlign="'right'">
        <FilterIcon cellPosition="position"/>
      </GridCellIcon>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterMenu" xml:space="preserve">
    <div class="o-filter-menu d-flex flex-column bg-white" t-on-wheel.stop="">
      <t t-if="isSortable">
        <div>
          <div class="o-filter-menu-item" t-on-click="() =&gt; this.sortFilterZone('ascending')">
            Sort ascending (A ⟶ Z)
          </div>
          <div class="o-filter-menu-item" t-on-click="() =&gt; this.sortFilterZone('descending')">
            Sort descending (Z ⟶ A)
          </div>
        </div>
        <div class="o-separator"/>
      </t>
      <div class="o-filter-menu-actions">
        <div class="o-filter-menu-action-text" t-on-click="selectAll">Select all</div>
        <div class="o-filter-menu-action-text" t-on-click="clearAll">Clear</div>
      </div>
      <div class="position-relative">
        <input class="w-100" t-ref="filterMenuSearchBar" type="text" t-model="state.textFilter" placeholder="Search..." t-on-keydown="onKeyDown"/>
        <i class="o-search-icon position-absolute">
          <t t-call="o-spreadsheet-Icon.SEARCH"/>
        </i>
      </div>
      <div class="o-filter-menu-list d-flex flex-column rounded" t-ref="filterValueList" t-on-click="this.clearScrolledToValue" t-on-scroll="this.clearScrolledToValue">
        <t t-foreach="displayedValues" t-as="value" t-key="value.string">
          <FilterMenuValueItem onClick="() =&gt; this.checkValue(value)" onMouseMove="() =&gt; this.onMouseMove(value)" value="value.string" isChecked="value.checked" isSelected="value.string === state.selectedValue" scrolledTo="value.scrolledTo"/>
        </t>
        <div t-if="displayedValues.length === 0" class="o-filter-menu-no-values d-flex align-items-center justify-content-center w-100 h-100 ">
          No results
        </div>
      </div>
      <div class="o-filter-menu-buttons d-flex justify-content-end">
        <button class="o-button o-filter-menu-cancel me-2" t-on-click="cancel">Cancel</button>
        <button class="o-button primary o-filter-menu-confirm" t-on-click="confirm">Confirm</button>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterMenuValueItem", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterMenuValueItem" xml:space="preserve">
    <div t-on-click="this.props.onClick" t-on-pointermove="this.props.onMouseMove" class="o-filter-menu-item o-filter-menu-value" t-ref="menuValueItem" t-att-class="{'selected': this.props.isSelected}">
      <div>
        <div class="o-filter-menu-value-checked">
          <span t-if="this.props.isChecked">✓</span>
        </div>
      </div>
      <div class="o-filter-menu-value-text text-truncate">
        <t t-if="this.props.value === ''">(Blanks)</t>
        <t t-else="" t-esc="this.props.value"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FontSizeEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FontSizeEditor" xml:space="preserve">
    <div class="o-dropdown" t-ref="FontSizeEditor">
      <div class=" o-font-size-editor d-flex align-items-center" t-att-class="props.class" title="Font Size" t-on-click="this.toggleFontList">
        <input type="number" min="1" max="400" class="o-font-size o-number-input bg-transparent border-0" t-on-keydown="onInputKeydown" t-on-click.stop="" t-on-focus.stop="onInputFocused" t-att-value="currentFontSize" t-on-change="setSizeFromInput" t-ref="inputFontSize"/>
        <span>
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
      </div>
      <div class="o-dropdown-content o-text-options" t-if="dropdown.isOpen" t-on-click.stop="" t-att-style="props.dropdownStyle">
        <t t-foreach="fontSizes" t-as="fontSize" t-key="fontSize">
          <div t-esc="fontSize" t-att-data-size="fontSize" t-on-click="() =&gt; this.setSizeFromList(fontSize)"/>
        </t>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Grid", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Grid" xml:space="preserve">
    <div class="o-grid w-100 h-100" tabindex="-1" composerFocusableElement="true" t-on-click="focusDefaultElement" t-on-keydown="onKeydown" t-on-wheel.prevent="onMouseWheel" t-ref="grid">
      <GridOverlay onCellClicked.bind="onCellClicked" onCellDoubleClicked.bind="onCellDoubleClicked" onCellRightClicked.bind="onCellRightClicked" onCellHovered.bind="onCellHovered" onGridResized.bind="onGridResized" onGridMoved.bind="moveCanvas" gridOverlayDimensions="gridOverlayDimensions" onFigureDeleted.bind="focusDefaultElement"/>
      <HeadersOverlay onOpenContextMenu="(type, x, y) =&gt; this.toggleContextMenu(type, x, y)"/>
      <GridComposer gridDims="env.model.getters.getSheetViewDimensionWithHeaders()" onInputContextMenu.bind="onInputContextMenu"/>
      <canvas t-ref="canvas"/>
      <t t-foreach="env.model.getters.getClientsToDisplay()" t-as="client" t-key="getClientPositionKey(client)">
        <ClientTag name="client.name" color="client.color" col="client.position.col" row="client.position.row" active="isCellHovered(client.position.col, client.position.row)"/>
      </t>
      <GridPopover t-if="!menuState.isOpen" gridRect="getGridRect()" onMouseWheel.bind="onMouseWheel" onClosePopover.bind="onClosePopover"/>
      <t t-if="env.model.getters.isGridSelectionActive()">
        <Autofill position="getAutofillPosition()" isVisible="isAutofillVisible"/>
      </t>
      <t t-foreach="highlights" t-as="highlight" t-key="highlight_index">
        <t t-if="highlight.interactive and highlight.sheetId === env.model.getters.getActiveSheetId()">
          <Highlight zone="highlight.zone" color="highlight.color"/>
        </t>
      </t>
      <Menu t-if="menuState.isOpen" menuItems="menuState.menuItems" position="menuState.position" onClose="() =&gt; this.closeMenu()"/>
      <t t-foreach="staticTables" t-as="table" t-key="table.id">
        <TableResizer table="table"/>
      </t>
      <VerticalScrollBar topOffset="HEADER_HEIGHT"/>
      <HorizontalScrollBar leftOffset="HEADER_WIDTH"/>
      <div class="o-scrollbar corner"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridAddRowsFooter", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridAddRowsFooter" xml:space="preserve">
    <div class="o-grid-add-rows mt-2 ms-2 w-100 d-flex position-relative align-items-center" t-att-style="addRowsPosition" t-on-pointerdown.stop.prevent="">
      <button t-on-click="onConfirm" t-att-disabled="state.errorFlag" class="o-button flex-grow-0 me-2">
        Add
      </button>
      <input type="text" class="o-grid-add-rows-input o-input mt-0 me-2" t-ref="inputRef" value="100" t-on-click.stop="" t-on-keydown.stop="onKeydown" t-on-pointerdown.stop="" t-on-input.stop="onInput"/>
      <span>more rows at the bottom</span>
      <ValidationMessages t-if="state.errorFlag" messages="errorMessages" msgType="'error'"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridCellIcon", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridCellIcon" xml:space="preserve">
    <div class="o-grid-cell-icon position-absolute overflow-hidden" t-if="isPositionVisible(this.props.cellPosition)" t-att-style="iconStyle">
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridOverlay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridOverlay" xml:space="preserve">
    <div t-ref="gridOverlay" class="o-grid-overlay overflow-hidden" t-att-class="{'o-paint-format-cursor': isPaintingFormat}" t-att-style="style" t-on-pointerdown="onMouseDown" t-on-dblclick.self="onDoubleClick" t-on-contextmenu.stop.prevent="onContextMenu">
      <FiguresContainer onFigureDeleted="props.onFigureDeleted"/>
      <DataValidationOverlay/>
      <FilterIconsOverlay/>
      <GridAddRowsFooter t-if="!env.model.getters.isReadonly()" t-key="env.model.getters.getActiveSheetId()" focusGrid="props.onFigureDeleted"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridPopover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridPopover" xml:space="preserve">
    <Popover t-if="cellPopover.isOpen" positioning="cellPopover.cellCorner" maxHeight="cellPopover.Component.size and cellPopover.Component.size.maxHeight" maxWidth="cellPopover.Component.size and cellPopover.Component.size.maxHidth" anchorRect="cellPopover.anchorRect" containerRect="env.getPopoverContainerRect()" onMouseWheel="props.onMouseWheel" zIndex="zIndex">
      <t t-component="cellPopover.Component" t-props="{...cellPopover.props, onClosed : () =&gt; props.onClosePopover()}"/>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-HeaderGroup", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HeaderGroup" xml:space="preserve">
    <div class="o-header-group position-absolute" t-att-style="groupBoxStyle" t-att-data-id="props.group.start + '-' + props.group.end" t-on-click="toggleGroup" t-on-contextmenu.stop.prevent="onContextMenu">
      <div class="o-header-group-header position-absolute d-flex align-items-center justify-content-center overflow-hidden" t-att-style="groupHeaderStyle">
        <div class="o-group-fold-button user-select-none rounded d-flex align-items-center justify-content-center" t-att-style="groupButtonStyle">
          <t t-call="{{groupButtonIcon}}"/>
        </div>
      </div>
      <div class="o-group-border position-absolute" t-if="!isGroupFolded" t-att-style="groupBorderStyle"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-HeaderGroupContainer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HeaderGroupContainer" xml:space="preserve">
    <div class="o-header-group-container d-flex w-100 h-100 overflow-hidden" t-att-class="{         'flex-column': props.dimension === 'ROW',         'flex-row': props.dimension === 'COL',       }" t-if="props.layers.length" t-on-contextmenu.prevent="onContextMenu">
      <div class="o-header-group-frozen-pane flex-shrink-0 overflow-hidden position-relative" t-att-class="{           'o-group-rows': props.dimension === 'ROW',           'o-group-columns': props.dimension === 'COL',         }" t-if="hasFrozenPane" t-att-style="frozenPaneContainerStyle">
        <t t-foreach="props.layers" t-as="layer" t-key="layer_index">
          <t t-foreach="layer" t-as="group" t-key="group.start + '-' + group.end">
            <t t-component="groupComponent" group=" group" layerOffset="getLayerOffset(layer_index)" openContextMenu.bind="openContextMenu"/>
          </t>
        </t>
      </div>
      <div class="o-header-group-frozen-pane-border" t-att-class="{           'o-group-rows': props.dimension === 'ROW',           'o-group-columns': props.dimension === 'COL',         }" t-if="hasFrozenPane"/>

      <div class="o-header-group-main-pane flex-shrink-0 position-relative h-100 w-100 overflow-hidden" t-att-class="{           'o-group-rows': hasFrozenPane and props.dimension === 'ROW',           'o-group-columns': hasFrozenPane and props.dimension === 'COL',         }">
        <div class="o-header-group-scroll-container position-relative" t-att-style="scrollContainerStyle">
          <t t-foreach="props.layers" t-as="layer" t-key="layer_index">
            <t t-foreach="layer" t-as="group" t-key="group.start + '-' + group.end">
              <t t-component="groupComponent" group="group" layerOffset="getLayerOffset(layer_index)" openContextMenu.bind="openContextMenu"/>
            </t>
          </t>
        </div>
      </div>

      <Menu t-if="menu.isOpen" menuItems="menu.menuItems" position="menu.position" onClose.bind="this.closeMenu"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-HeadersOverlay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HeadersOverlay" xml:space="preserve">
    <div class="o-overlay">
      <ColResizer onOpenContextMenu="props.onOpenContextMenu"/>
      <RowResizer onOpenContextMenu="props.onOpenContextMenu"/>
      <div class="all" t-on-pointerdown.self="selectAll"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-RowResizer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RowResizer" xml:space="preserve">
    <div class="o-row-resizer" t-on-pointermove.self="onMouseMove" t-on-mouseleave="onMouseLeave" t-on-pointerdown.self.prevent="select" t-ref="rowResizer" t-on-pointerup.self="onMouseUp" t-on-contextmenu.self="onContextMenu" t-att-class="{'o-grab': state.waitingForMove, 'o-dragging': state.isMoving}">
      <div t-if="state.isMoving" class="dragging-row-line" t-attf-style="top:{{state.draggerLinePosition}}px;"/>
      <div t-if="state.isMoving" class="dragging-row-shadow" t-attf-style="top:{{state.draggerShadowPosition}}px; height:{{state.draggerShadowThickness}}px;"/>
      <t t-if="state.resizerIsActive">
        <div class="o-handle" t-on-pointerdown="onMouseDown" t-on-dblclick="onDblClick" t-on-contextmenu.prevent="" t-attf-style="top:{{state.draggerLinePosition - 2}}px;">
          <div class="dragging-resizer" t-if="state.isResizing"/>
        </div>
      </t>
      <t t-foreach="env.model.getters.getHiddenRowsGroups(env.model.getters.getActiveSheetId())" t-as="hiddenItem" t-key="hiddenItem_index">
        <div class="position-absolute end-0 translate-middle-y" t-att-style="getUnhideButtonStyle(hiddenItem[0])">
          <div class="o-unhide rounded mb-1" t-att-class="{'invisible': hiddenItem.includes(0)}" t-att-data-index="hiddenItem_index" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_UP"/>
          </div>
          <div class="o-unhide rounded" t-att-class="{'invisible': hiddenItem.includes(env.model.getters.getNumberRows(env.model.getters.getActiveSheetId())-1)}" t-att-data-index="hiddenItem_index" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
          </div>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColResizer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColResizer" xml:space="preserve">
    <div class="o-col-resizer" t-on-pointermove.self="onMouseMove" t-on-mouseleave="onMouseLeave" t-on-pointerdown.self.prevent="select" t-ref="colResizer" t-on-pointerup.self="onMouseUp" t-on-contextmenu.self="onContextMenu" t-att-class="{'o-grab': state.waitingForMove, 'o-dragging': state.isMoving, }">
      <div t-if="state.isMoving" class="dragging-col-line" t-attf-style="left:{{state.draggerLinePosition}}px;"/>
      <div t-if="state.isMoving" class="dragging-col-shadow" t-attf-style="left:{{state.draggerShadowPosition}}px; width:{{state.draggerShadowThickness}}px"/>
      <t t-if="state.resizerIsActive">
        <div class="o-handle" t-on-pointerdown="onMouseDown" t-on-dblclick="onDblClick" t-on-contextmenu.prevent="" t-attf-style="left:{{state.draggerLinePosition - 2}}px;">
          <div class="dragging-resizer" t-if="state.isResizing"/>
        </div>
      </t>
      <t t-foreach="env.model.getters.getHiddenColsGroups(env.model.getters.getActiveSheetId())" t-as="hiddenItem" t-key="hiddenItem_index">
        <div class="position-absolute h-100 d-flex align-items-center translate-middle-x gap-2" t-att-style="getUnhideButtonStyle(hiddenItem[0])">
          <div class="o-unhide rounded" t-att-class="{'invisible': hiddenItem.includes(0)}" t-att-data-index="hiddenItem_index" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_LEFT"/>
          </div>
          <div class="o-unhide rounded" t-att-class="{'invisible': hiddenItem.includes(env.model.getters.getNumberCols(env.model.getters.getActiveSheetId())-1)}" t-att-data-index="hiddenItem_index" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_RIGHT"/>
          </div>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Border", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Border" xml:space="preserve">
    <div class="o-border" t-on-pointerdown.prevent="onMouseDown" t-att-style="style" t-att-class="{           'o-moving': props.isMoving,           'o-border-n': props.orientation === 'n',           'o-border-s': props.orientation === 's',           'o-border-w': props.orientation === 'w',           'o-border-e': props.orientation === 'e',         }"/>
  </t>

  `);
registerTemplate("o-spreadsheet-Corner", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Corner" xml:space="preserve">
    <div class="o-corner" t-on-pointerdown.prevent="onMouseDown" t-att-style="style" t-att-class="{           'o-resizing': props.isResizing,           'o-corner-nw': props.orientation === 'nw',           'o-corner-ne': props.orientation === 'ne',           'o-corner-sw': props.orientation === 'sw',           'o-corner-se': props.orientation === 'se',         }"/>
  </t>

  `);
registerTemplate("o-spreadsheet-Highlight", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Highlight" xml:space="preserve">
    <div class="o-highlight" t-ref="highlight">
      <t t-foreach="['n', 's', 'w', 'e']" t-as="orientation" t-key="orientation">
        <Border onMoveHighlight="(x, y) =&gt; this.onMoveHighlight(x,y)" isMoving="highlightState.shiftingMode === &quot;isMoving&quot;" orientation="orientation" zone="props.zone"/>
      </t>
      <t t-foreach="['nw', 'ne', 'sw', 'se']" t-as="orientation" t-key="orientation">
        <Corner onResizeHighlight="(isLeft, isTop) =&gt; this.onResizeHighlight(isLeft, isTop)" isResizing="highlightState.shiftingMode === &quot;isResizing&quot;" orientation="orientation" zone="props.zone" color="props.color"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-IconPicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconPicker" xml:space="preserve">
    <div class="o-icon-picker">
      <t t-foreach="iconSets" t-as="iconSet" t-key="iconSet">
        <div class="o-cf-icon-line">
          <div class="o-icon-picker-item p-1" t-on-click="() =&gt; this.onIconClick(iconSets[iconSet].good)">
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].good].template}}"/>
          </div>
          <div class="o-icon-picker-item p-1" t-on-click="() =&gt; this.onIconClick(iconSets[iconSet].neutral)">
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].neutral].template}}"/>
          </div>
          <div class="o-icon-picker-item p-1" t-on-click="() =&gt; this.onIconClick(iconSets[iconSet].bad)">
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].bad].template}}"/>
          </div>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.CLEAR_AND_RELOAD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLEAR_AND_RELOAD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14 15H4V3h6v3h4M4 1.5A1.5 1.5 0 0 0 2.5 3v12a1.5 1.5 0 0 0 1.4 1.5h10a1.5 1.5 0 0 0 1.5-1.5V5l-3.5-3.5         "/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.EXPORT_XLSX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EXPORT_XLSX" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M0 1a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1m4-4V1H1v3m7 0V1H5v3M4 8V5H1v3m7 0V5H5v3m-3.5 2h2v4h3v-1.5l3 2.5-3 2.5V16h-5m9.5-6h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1m1.7 7 1.3-2 1.3 2h2l-2-3 2-3h-2L14 13l-1.3-2h-2l2 3-2 3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.OPEN_READ_ONLY", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.OPEN_READ_ONLY" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 7V5c0-2.5-2-4-4-4S5 2.5 5 5v2h-.5C3.5 7 3 7.5 3 8.5v7c0 1 .5 1.5 1.5 1.5h9c1 0 1.5-.5 1.5-1.5v-7c0-1-.5-1.5-1.5-1.5m-7-2c0-1.5 1-2.5 2.5-2.5s2.5 1 2.5 2.5v2h-5V5m1 7a1.5 1.5 0 0 1 3 0 1.5 1.5 0 0 1-3 0"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.OPEN_DASHBOARD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.OPEN_DASHBOARD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 2.07A8 8 0 1 0 15.93 5L14.2 6A6 6 0 1 1 12 3.8m-2 3.47a2 2 0 1 0 .73.73l5.5-5.5-.6-.6M9.3 3.8a.6.6 0 1 1-.01-.01m1.81.51a.6.6 0 1 1-.01-.01M7.5 4.3a.6.6 0 1 1-.01-.01M5.9 5.4a.6.6 0 1 1-.01-.01M4.8 6.9a.6.6 0 1 1-.01-.01m8.71.61a.6.6 0 1 0-.01 0"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.OPEN_READ_WRITE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.OPEN_READ_WRITE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 7V5a4 4 0 0 0-8 0v2h-.5C3.5 7 3 7.5 3 8.5v7c0 1 .5 1.5 1.5 1.5h9c1 0 1.5-.5 1.5-1.5v-7c0-1-.5-1.5-1.5-1.5m-7-2a2 2 0 0 1 5 0v2h-5m1 5a1.5 1.5 0 0 1 3 0 1.5 1.5 0 0 1-3 0m6 3.5h-9v-7h9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.IMPORT_XLSX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.IMPORT_XLSX" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9 10a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1m4-4v-3h-3v3m7 0v-3h-3v3m-1 4v-3h-3v3m7 0v-3h-3v3M.5 9h2v4h3v-1.5l3 2.5-3 2.5V15h-5M1 0h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1m1.7 7L4 5l1.3 2h2l-2-3 2-3h-2L4 3 2.7 1h-2l2 3-2 3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNDO", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNDO" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M5.43 9.43 8 12H1V5l2.96 2.958A8.29 8.29 0 0 1 9.32 6c3.46 0 6.42 2.11 7.68 5l-2 1c-.94-2.39-3.13-3.92-5.68-4a6.57 6.57 0 0 0-3.89 1.43"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.REDO", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.REDO" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M12.57 9.43 10 12h7V5l-2.96 2.96A8.29 8.29 0 0 0 8.68 6C5.22 6 2.26 8.11 1 11l2 1c.94-2.39 3.13-3.92 5.68-4a6.58 6.58 0 0 1 3.89 1.43"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.COPY", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.COPY" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-clone"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CUT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CUT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3 2v2l4.5 5-1.2 1.3c-.4-.2-.8-.3-1.3-.3-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3c0-.5-.1-.9-.3-1.3L9 10.4l1.3 1.3c-.2.4-.3.8-.3 1.3 0 1.7 1.3 3 3 3s3-1.3 3-3-1.3-3-3-3c-.5 0-.9.1-1.3.3L10.4 9 15 4.4V2h-.4L9 7.6 3.4 2H3Zm2 12.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5Zm9.5-1.5c0 .8-.7 1.5-1.5 1.5s-1.5-.7-1.5-1.5.7-1.5 1.5-1.5 1.5.7 1.5 1.5ZM9 8.5c.3 0 .5.2.5.5s-.2.5-.5.5-.5-.2-.5-.5.2-.5.5-.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PASTE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PASTE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14.5 2.5H11C10.7 1.6 10 1 9 1s-1.5.5-2 1.5H3.5C2.5 2.5 2 3 2 4v11c0 1 .5 1.5 1.5 1.5h11c1 0 1.5-.5 1.5-1.5V4c0-1-.5-1.5-1.5-1.5Zm-4.75.75c0 .5-.34.75-.75.75s-.75-.34-.75-.75.34-.75.75-.75.75.34.75.75ZM14.5 15h-11V4H5v2.5h8V4h1.5v11"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CLEAR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLEAR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M1.5 15a.75.75 0 0 0 0 1.5h15a.75.75 0 0 0 0-1.5M5.3 12.75c.1.1.3.2.5.2h4c.2 0 .4-.1.5-.2l5.5-5.5c.2-.3.2-.6 0-.8l-4.4-4.4c-.3-.2-.6-.2-.8 0l-4.8 4.8c-2.7 2.9-3.1 2.8-2.4 4M7 7.25l3.6 3.6-1 1-3.6.1-1.8-1.9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FREEZE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FREEZE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 17.5h16a1 1 0 0 0 1-1v-15a1 1 0 0 0-1-1h-15a1 1 0 0 0-1 1v15a1 1 0 0 0 1 1m9-10.5v4.5H6V7m0 9v-3.5h4.5V16M5 16H3.5L5 14.5M5 13l-3 3v-1.5l3-3M2 13v-2l3-3v2m-3-.5v-2l3-3v2M2 6V4l2-2h1v1m11 13h-4.5v-3.5H16m0-1h-4.5V7H16m0-5v4h-4.5V2m-1 4H6V2h4.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNFREEZE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNFREEZE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 17.5h16a1 1 0 0 0 1-1v-15a1 1 0 0 0-1-1h-15a1 1 0 0 0-1 1v15a1 1 0 0 0 1 1M5 6H2V2h3m0 9.5H2V7h3m0 9H2v-3.5h3M10.5 7v4.5H6V7m0 9v-3.5h4.5V16m5.5 0h-4.5v-3.5H16m0-1h-4.5V7H16m0-5v4h-4.5V2m-1 4H6V2h4.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SHOW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SHOW" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-eye"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FORMULA", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FORMULA" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M7 14.25q-.25.75-.75 1.25T5 16q-.75 0-1.5-.5Q3 15 3 14.25q0-.5.25-.75t.75-.25q.25 0 .25.75v.5H5q.5 0 .5-.5l1.25-6.5H5V6h2l.5-2.25q.25-.75.75-1.25T9.5 2q1 0 1.5.5t.5 1q0 .5-.25.75t-.5.25q-.5 0-.75-.25t-.25-.5V3H9.5q-.25 0-.5.5L8.5 6H10v1.5H8.25m1.25 1H15v1h-4l2 2-2 2h4v1H9V14l2.5-2.5L9 9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.HIDE_ROW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.HIDE_ROW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v3.5h14V2H2v9h14V7H2v9h14v-3.5H2M1 12l4-5h2l-4 5m2 0 4-5h2l-4 5m2 0 4-5h2l-4 5m2 0 4-5v4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNHIDE_ROW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNHIDE_ROW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M17.5 16a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2zH16v-3.5H2V16h14V2H2v3.5h14"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.HIDE_COL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.HIDE_COL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M16 .5A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h14V2h-3.5v14H16V2H7v14h4V2H2v14h3.5V2M6 1l5 4v2L6 3m0 2 5 4v2L6 7m0 2 5 4v2l-5-4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNHIDE_COL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNHIDE_COL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M16 .5A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h14V2h-3.5v14H16V2H2V16h3.5V2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_ROW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_ROW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v3.5h14V2H2v9h14V7H2v9h14v-3.5H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_ROW_BEFORE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_ROW_BEFORE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3.5 14.5A1.5 1.5 0 0 0 5 16h10a1.5 1.5 0 0 0 1.5-1.5v-7h-3V5h3V1.5A1.5 1.5 0 0 0 15 0H5a1.5 1.5 0 0 0-1.5 1.5v2h-3V9h3M15 12.5v2H5v-2M15 9v2H5V9m10-7.5v2H5v-2M12 5v2.5H2V5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_ROW_AFTER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_ROW_AFTER" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3.5 1.5A1.5 1.5 0 0 1 5 0h10a1.5 1.5 0 0 1 1.5 1.5v7h-3V11h3v3.5A1.5 1.5 0 0 1 15 16H5a1.5 1.5 0 0 1-1.5-1.5v-2h-3V7h3M15 3.5v-2H5v2M15 7V5H5v2m10 7.5v-2H5v2m7-3.5V8.5H2V11"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_COL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_COL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v14h3.5V2H2h5v14h4V2H2h10.5v14H16V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_COL_AFTER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_COL_AFTER" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.5 3A1.5 1.5 0 0 0 1 4.5v10A1.5 1.5 0 0 0 2.5 16h7v-3H12v3h3.5a1.5 1.5 0 0 0 1.5-1.5v-10A1.5 1.5 0 0 0 15.5 3h-2V0H8v3M4.5 14.5h-2v-10h2m3.5 10H6v-10h2m7.5 10h-2v-10h2m-3.5 7H9.5v-10H12"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_COL_BEFORE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_COL_BEFORE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M15.5 3A1.5 1.5 0 0 1 17 4.5v10a1.5 1.5 0 0 1-1.5 1.5h-7v-3H6v3H2.5A1.5 1.5 0 0 1 1 14.5v-10A1.5 1.5 0 0 1 2.5 3h2V0H10v3m3.5 11.5h2v-10h-2m-3.5 10h2v-10h-2m-7.5 10h2v-10h-2m3.5 7h2.5v-10H6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CELL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CELL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v14h14V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CELL_SHIFT_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CELL_SHIFT_DOWN" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M5 2.5A1.5 1.5 0 0 1 6.5 1h10A1.5 1.5 0 0 1 18 2.5v13a1.5 1.5 0 0 1-1.5 1.5h-10A1.5 1.5 0 0 1 5 15.5v-5h5.25v-3H5m11.5-2v-3h-4.75v3m-1.5 0v-3H6.5v3m10 5v-3h-4.75v3m-1.5 5v-3H6.5v3m10 0v-3h-4.75v3M0 12.5l2.5 4 2.5-4H3.25v-6h-1.5v6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CELL_SHIFT_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CELL_SHIFT_RIGHT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.5 5A1.5 1.5 0 0 0 1 6.5v10A1.5 1.5 0 0 0 2.5 18h13a1.5 1.5 0 0 0 1.5-1.5v-10A1.5 1.5 0 0 0 15.5 5h-5v5.25h-3V5m-2 11.5h-3v-4.75h3m0-1.5h-3V6.5h3m5 10h-3v-4.75h3m5-1.5h-3V6.5h3m0 10h-3v-4.75h3M12.5 0l4 2.5-4 2.5V3.25h-6v-1.5h6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DELETE_CELL_SHIFT_UP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DELETE_CELL_SHIFT_UP" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M5 2.5A1.5 1.5 0 0 1 6.5 1h10A1.5 1.5 0 0 1 18 2.5v13a1.5 1.5 0 0 1-1.5 1.5h-10A1.5 1.5 0 0 1 5 15.5v-5h5.25v-3H5m11.5-2v-3h-4.75v3m-1.5 0v-3H6.5v3m10 5v-3h-4.75v3m-1.5 5v-3H6.5v3m10 0v-3h-4.75v3M0 10l2.5-4L5 10H3.25v6h-1.5v-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DELETE_CELL_SHIFT_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DELETE_CELL_SHIFT_LEFT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.5 5A1.5 1.5 0 0 0 1 6.5v10A1.5 1.5 0 0 0 2.5 18h13a1.5 1.5 0 0 0 1.5-1.5v-10A1.5 1.5 0 0 0 15.5 5h-5v5.25h-3V5m-2 11.5h-3v-4.75h3m0-1.5h-3V6.5h3m5 10h-3v-4.75h3m5-1.5h-3V6.5h3m0 10h-3v-4.75h3M10 0 6 2.5 10 5V3.25h6v-1.5h-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CHART" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-bar-chart"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_IMAGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_IMAGE" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-file-image-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_LINK", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_LINK" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-link"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CHECKBOX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CHECKBOX" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-check-square-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_DROPDOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_DROPDOWN" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M6 3.5a5 5.5 0 0 0 0 11h6a5 5.5 0 0 0 0-11H6V5h6a3.5 4 0 0 1 0 8H6a3.5 4 0 0 1 0-8m5 6 3-3H8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_SHEET", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_SHEET" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M17.5 5.5V16a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h10.5M2 5.5h3.5V2H2m5.25 3.5h3.5V2h-3.5M2 10.75h3.5v-3.5H2m5.25 3.5h3.5v-3.5h-3.5m5.25 3.5H16v-3.5h-3.5M2 16h3.5v-3.5H2M7.25 16h3.5v-3.5h-3.5M12.5 16H16v-3.5h-3.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PAINT_FORMAT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PAINT_FORMAT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9,0 L1,0 C0.45,0 0,0.45 0,1 L0,4 C0,4.55 0.45,5 1,5 L9,5 C9.55,5 10,4.55 10,4 L10,3 L11,3 L11,6 L4,6 L4,14 L6,14 L6,8 L13,8 L13,2 L10,2 L10,1 C10,0.45 9.55,0 9,0 Z" transform="translate(3 2)"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CONDITIONAL_FORMAT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CONDITIONAL_FORMAT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M12.25.5c2 0 3.5 1.5 3.5 3.5v6.5c0 .5 0 2-2 2h-2.5v4c0 .5-.5 1-1 1h-2.5c-.5 0-1-.5-1-1v-4h-2.5c-1 0-2-1-2-2V.5m12 3a1.5 1.5 0 0 0-1.5-1.5h-3v2h-1.5V2h-1v4h-2V2h-1.5v8.5h10.5m-12-3h12.5V9H2.25"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CLEAR_FORMAT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLEAR_FORMAT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.12 4.05 7.28 9.2l-2.43 5.3h2.5l1.64-3.58 4.59 4.58 1.27-1.27L3.4 2.77 2.12 4.05ZM5.67 2.5l2 2h1.76l-.55 1.21 1.71 1.71 1.34-2.92h3.92v-2H5.67"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BOLD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BOLD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13.5 6.5C13.5 4.57 11.93 3 10 3H4.5v12h6.25c1.79 0 3.25-1.46 3.25-3.25 0-1.3-.77-2.41-1.87-2.93.83-.58 1.37-1.44 1.37-2.32M9.5 5c.83 0 1.5.67 1.5 1.5S10.33 8 9.5 8h-2V5h2m-2 8v-3H10c.83 0 1.5.67 1.5 1.5S10.83 13 10 13H7.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ITALIC", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ITALIC" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M7 3v2h2.58l-3.66 8H3v2h8v-2H8.42l3.66-8H15V3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNDERLINE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNDERLINE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9 15c2.76 0 5-2.24 5-5V3h-2v7c0 1.75-1.5 3-3 3s-3-1.242-3-3V3H4v7c0 2.76 2.24 5 5 5Zm-6 1v2h12v-2H3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.STRIKE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.STRIKE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M4.89 6.06c0-.46.1-.87.3-1.25.2-.38.46-.7.84-.97s.78-.47 1.28-.62A5.71 5.71 0 0 1 8.93 3c.61 0 1.16.08 1.65.25.5.17.92.4 1.27.7.35.3.62.66.81 1.07.19.41.28.87.28 1.36h-2.26a1.85 1.85 0 0 0-.11-.64 1.26 1.26 0 0 0-.33-.51 1.53 1.53 0 0 0-.56-.33A2.42 2.42 0 0 0 8.89 4.8c-.3 0-.55.03-.77.1a1.52 1.52 0 0 0-.54.27 1.14 1.14 0 0 0-.43.9c0 .36.18.66.55.91l.06.04C8.02 7.19 8.5 7.5 9 8H6s-.79-.62-.82-.69c-.19-.36-.29-.77-.29-1.25M16 9H2v2h7.22c.14.05.3.1.41.15.28.12.5.26.65.38.16.13.26.27.32.42.06.15.08.33.08.51 0 .18-.03.34-.1.49a1.02 1.02 0 0 1-.31.39 1.6 1.6 0 0 1-.53.26 2.71 2.71 0 0 1-.76.09c-.33 0-.62-.03-.89-.1a1.8 1.8 0 0 1-.68-.31 1.45 1.45 0 0 1-.44-.56c-.11-.23-.19-.57-.19-.74H4.55c0 .25.06.69.18 1.02a3.15 3.15 0 0 0 1.22 1.6c.28.2.58.36.92.49.33.13.67.23 1.04.29.36.06.72.09 1.08.09.6 0 1.15-.07 1.64-.21a3.88 3.88 0 0 0 1.25-.59 2.69 2.69 0 0 0 .8-.95c.19-.38.28-.81.28-1.29 0-.45-.08-.86-.23-1.211a2.26 2.26 0 0 0-.13-.25L16 11V9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TEXT_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TEXT_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M10 1H8L3.5 13h2l1.12-3h4.75l1.12 3h2L10 1ZM7.38 8 9 3.67 10.62 8H7.38"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FILL_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FILL_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14.5 8.87S13 10.49 13 11.49c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5c0-.99-1.5-2.62-1.5-2.62m-1.79-2.08L5.91 0 4.85 1.06l1.59 1.59-4.15 4.14a.996.996 0 0 0 0 1.41l4.5 4.5c.2.2.45.3.71.3.26 0 .51-.1.71-.29l4.5-4.5c.39-.39.39-1.03 0-1.42M4.21 7 7.5 3.71 10.79 7H4.21"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MERGE_CELL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MERGE_CELL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3 6H1V2h7v2H3v2m7-2V2h7v4h-2V4h-5m0 10h5v-2h2v4h-7v-2m-9-2h2v2h5v2H1v-4m0-4h4V6l3 3-3 3v-2H1V8m9 1 3-3v2h4v2h-4v2l-3-3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_LEFT" xml:space="preserve">
    <svg class="o-icon align-left">
      <path fill="currentColor" d="M2 16h10v-2H2v2M12 6H2v2h10V6M2 2v2h14V2H2m0 10h14v-2H2v2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_CENTER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_CENTER" xml:space="preserve">
    <svg class="o-icon align-center">
      <path fill="currentColor" d="M4 14v2h10v-2H4m0-8v2h10V6H4m-2 6h14v-2H2v2M2 2v2h14V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_RIGHT" xml:space="preserve">
    <svg class="o-icon align-right">
      <path fill="currentColor" d="M6 16h10v-2H6v2m-4-4h14v-2H2v2M2 2v2h14V2H2m4 6h10V6H6v2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_TOP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_TOP" xml:space="preserve">
    <svg class="o-icon align-top">
      <path d="M3 2h12v2H3m2.5 5H8v7h2V9h2.5L9 5.5" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_MIDDLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_MIDDLE" xml:space="preserve">
    <svg class="o-icon align-middle">
      <path d="M12.5 3H10V0H8v3H5.5L9 6.5M5.5 15H8v3h2v-3h2.5L9 11.5M3 8v2h12V8" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_BOTTOM", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_BOTTOM" xml:space="preserve">
    <svg class="o-icon align-bottom">
      <path d="M5.5 9H8V2h2v7h2.5L9 12.5M3 14v2h12v-2" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.WRAPPING_OVERFLOW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.WRAPPING_OVERFLOW" xml:space="preserve">
    <svg class="o-icon wrapping-overflow">
      <path d="M13 8H6v2h7v2l3-3-3-3M2 2h2v14H2M9 2h2v4H9m0 6h2v4H9" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.WRAPPING_WRAP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.WRAPPING_WRAP" xml:space="preserve">
    <svg class="o-icon wrapping-wrap">
      <path fill="currentColor" d="M6 5v2h3.75c.75 0 1.5.67 1.5 1.5 0 .75-.75 1.5-1.5 1.5H8V8l-3 3 3 3v-2h1.5c2 0 3.5-1.5 3.5-3.5S11.5 5 9.5 5M2 2h2v14H2M14 2M14,2,h2v14h-2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.WRAPPING_CLIP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.WRAPPING_CLIP" xml:space="preserve">
    <svg class="o-icon wrapping-clip">
      <path fill="currentColor" d="M2 2h2v14H2M14 2h2v14h-2v-6H6V8h8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDERS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDERS" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2 2v14h14V2H2m6 12H4v-4h4v4m0-6H4V4h4v4m6 6h-4v-4h4v4m0-6h-4V4h4v4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_HV", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_HV" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M2 16h2v-2H2v2M4 5H2v2h2V5m1 11h2v-2H5v2m8-14h-2v2h2V2M4 2H2v2h2V2m3 0H5v2h2V2M2 13h2v-2H2v2m9 3h2v-2h-2v2m3-14v2h2V2h-2m0 5h2V5h-2v2m0 9h2v-2h-2v2m0-3h2v-2h-2v2" opacity=".54"/>
      <path d="M10 2H8v6H2v2h6v6h2v-6h6V8h-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_H", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_H" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M8 16h2v-2H8v2M5 4h2V2H5v2m3 9h2v-2H8v2m-3 3h2v-2H5v2M2 7h2V5H2v2m0 9h2v-2H2v2M2 4h2V2H2v2m0 9h2v-2H2v2m12 0h2v-2h-2v2m0 3h2v-2h-2v2m0-9h2V5h-2v2m0-5v2h2V2h-2M8 4h2V2H8v2m3 0h2V2h-2v2M8 7h2V5H8v2m3 9h2v-2h-2v2" opacity=".54"/>
      <path d="M2 10h14V8H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_V", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_V" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M5 16h2v-2H5v2M2 7h2V5H2v2m0-3h2V2H2v2m3 6h2V8H5v2m0-6h2V2H5v2M2 16h2v-2H2v2m0-6h2V8H2v2m0 3h2v-2H2v2M14 2v2h2V2h-2m0 8h2V8h-2v2m0 6h2v-2h-2v2m0-9h2V5h-2v2m0 6h2v-2h-2v2m-3 3h2v-2h-2v2m0-6h2V8h-2v2m0-6h2V2h-2v2" opacity=".54"/>
      <path d="M8 16h2V2H8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_EXTERNAL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_EXTERNAL" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M10 5H8v2h2V5m3 3h-2v2h2V8m-3 0H8v2h2V8m0 3H8v2h2v-2M7 8H5v2h2V8" opacity=".54"/>
      <path d="M2 2h14v14H2V2m12 12V4H4v10h10"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_LEFT" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M8 10h2V8H8v2m0-3h2V5H8v2m0 6h2v-2H8v2m0 3h2v-2H8v2m-3 0h2v-2H5v2M5 4h2V2H5v2m0 6h2V8H5v2m9 6h2v-2h-2v2m0-6h2V8h-2v2m0 3h2v-2h-2v2m0-6h2V5h-2v2M8 4h2V2H8v2m6-2v2h2V2h-2m-3 14h2v-2h-2v2m0-6h2V8h-2v2m0-6h2V2h-2v2" opacity=".54"/>
      <path d="M2 16h2V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_TOP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_TOP" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M5 10h2V8H5v2m-3 6h2v-2H2v2m6 0h2v-2H8v2m0-3h2v-2H8v2m-3 3h2v-2H5v2m-3-3h2v-2H2v2m6-3h2V8H8v2M2 7h2V5H2v2m0 3h2V8H2v2m12 0h2V8h-2v2m0 3h2v-2h-2v2m0-6h2V5h-2v2M8 7h2V5H8v2m3 9h2v-2h-2v2m0-6h2V8h-2v2m3 6h2v-2h-2v2" opacity=".54"/>
      <path d="M2 2v2h14V2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_RIGHT" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M2 4h2V2H2v2m3 0h2V2H5v2m0 6h2V8H5v2m0 6h2v-2H5v2M2 7h2V5H2v2m0 3h2V8H2v2m0 6h2v-2H2v2m0-3h2v-2H2v2m9-3h2V8h-2v2m-3 6h2v-2H8v2m3 0h2v-2h-2v2M8 4h2V2H8v2m3 0h2V2h-2v2m-3 9h2v-2H8v2m0-6h2V5H8v2m0 3h2V8H8v2" opacity=".54"/>
      <path d="M14 2v14h2V2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_BOTTOM", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_BOTTOM" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M7 2H5v2h2V2m3 6H8v2h2V8m0 3H8v2h2v-2m3-3h-2v2h2V8M7 8H5v2h2V8m6-6h-2v2h2V2m-3 3H8v2h2V5m0-3H8v2h2V2m-6 9H2v2h2v-2m10 2h2v-2h-2v2m0-6h2V5h-2v2m0 3h2V8h-2v2m0-8v2h2V2h-2M4 2H2v2h2V2m0 3H2v2h2V5m0 3H2v2h2V8" opacity=".54"/>
      <path d="M2 16h14v-2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_CLEAR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_CLEAR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M8 16h2v-2H8v2m-3-6h2V8H5v2m0-6h2V2H5v2m3 9h2v-2H8v2m-3 3h2v-2H5v2M2 7h2V5H2v2m0 9h2v-2H2v2M2 4h2V2H2v2m0 6h2V8H2v2m6 0h2V8H8v2m-6 3h2v-2H2v2m12 0h2v-2h-2v2m0 3h2v-2h-2v2m0-6h2V8h-2v2m0-3h2V5h-2v2m0-5v2h2V2h-2M8 4h2V2H8v2m3 0h2V2h-2v2M8 7h2V5H8v2m3 9h2v-2h-2v2m0-6h2V8h-2v2" opacity=".54"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_TYPE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_TYPE" xml:space="preserve">
    <svg class="o-icon">
      <g fill="currentColor" transform="translate(2 2)">
        <polygon points="0 0 0 2 14 2 14 0"/>
        <polygon points="0 6 0 8 5 8 5 6"/>
        <polygon points="9 6 9 8 14 8 14 6"/>
        <polygon points="0 12 0 14 2 14 2 12"/>
        <polygon points="4 12 4 14 6 14 6 12"/>
        <polygon points="8 12 8 14 10 14 10 12"/>
        <polygon points="12 12 12 14 14 14 14 12"/>
      </g>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <g fill="currentColor" transform="translate(4 2)">
        <polygon points="0 12 0 9 7 2 10 5 3 12"/>
        <polygon points="8 1 9 0 12 3 11 4"/>
      </g>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_NO_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_NO_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <g fill="currentColor">
        <polygon points="4 12 4 9 11 2 14 5 7 12"/>
        <polygon points="12 1 13 0 16 3 15 4"/>
      </g>
      <g>
        <rect x="0" y="14" width="18" height="4" stroke="black" fill="none"/>
      </g>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.PLUS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PLUS" xml:space="preserve">
    <svg class="o-icon plus" viewBox="0 0 18 18">
      <path fill="currentColor" d="M8 0h2v8h8v2h-8v8H8v-8H0V8h8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MINUS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MINUS" xml:space="preserve">
    <svg class="o-icon minus" viewBox="0 0 18 18">
      <path fill="currentColor" d="M0 8h18v2H0z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.LIST", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.LIST" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 384 384">
      <rect x="0" y="277.333" width="384" height="42.667" fill="currentColor"/>
      <rect x="0" y="170.667" width="384" height="42.667" fill="currentColor"/>
      <rect x="0" y="64" width="384" height="42.667" fill="currentColor"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.EDIT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EDIT" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-pencil-square-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNLINK", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNLINK" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-chain-broken"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_UP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_UP" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-up"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_DOWN" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-down"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_RIGHT" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-right"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_LEFT" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-left"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TRASH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TRASH" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-trash-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TRASH_FILLED", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TRASH_FILLED" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-trash"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.REFRESH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.REFRESH" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-refresh"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.EXCHANGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EXCHANGE" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-exchange"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ARROW_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ARROW_DOWN" xml:space="preserve">
    <svg class="o-icon arrow-down" viewBox="0 0 448 512">
      <path fill="currentColor" d="M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ARROW_UP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ARROW_UP" xml:space="preserve">
    <svg class="o-icon arrow-up" width="10" height="10" focusable="false" viewBox="0 0 448 512">
      <path fill="currentColor" d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ARROW_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ARROW_RIGHT" xml:space="preserve">
    <svg class="o-icon arrow-right" width="10" height="10" focusable="false" viewBox="0 0 448 512">
      <path fill="#F0AD4E" d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.SMILE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SMILE" xml:space="preserve">
    <svg class="o-icon smile" width="10" height="10" focusable="false" viewBox="0 0 496 512">
      <path fill="#6AA84F" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MEH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MEH" xml:space="preserve">
    <svg class="o-icon meh" width="10" height="10" focusable="false" viewBox="0 0 496 512">
      <path fill="#F0AD4E" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FROWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FROWN" xml:space="preserve">
    <svg class="o-icon frown" width="10" height="10" focusable="false" viewBox="0 0 496 512">
      <path fill="#E06666" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 128c-40.2 0-78 17.7-103.8 48.6-8.5 10.2-7.1 25.3 3.1 33.8 10.2 8.4 25.3 7.1 33.8-3.1 16.6-19.9 41-31.4 66.9-31.4s50.3 11.4 66.9 31.4c8.1 9.7 23.1 11.9 33.8 3.1 10.2-8.5 11.5-23.6 3.1-33.8C326 321.7 288.2 304 248 304z"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.GREEN_DOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.GREEN_DOT" xml:space="preserve">
    <svg class="o-icon green-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512">
      <path fill="#6AA84F" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.YELLOW_DOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.YELLOW_DOT" xml:space="preserve">
    <svg class="o-icon yellow-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512">
      <path fill="#F0AD4E" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.RED_DOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.RED_DOT" xml:space="preserve">
    <svg class="o-icon red-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512">
      <path fill="#E06666" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SMALL_DOT_RIGHT_ALIGN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SMALL_DOT_RIGHT_ALIGN" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18">
      <circle fill="currentColor" cx="14" cy="9" r="4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SORT_RANGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SORT_RANGE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9 3.5h8v2H9M9 8h6v2H9m0 2.5h3v2H9M6 6l1-1-3-3-3 3 1 1 1-1v8l-1-1-1 1 3 3 3-3-1-1-1 1V5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SORT_ASCENDING", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SORT_ASCENDING" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-sort-alpha-asc"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SORT_DESCENDING", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SORT_DESCENDING" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-sort-alpha-desc"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DATA_CLEANUP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DATA_CLEANUP" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-magic"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FILTER_ICON", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FILTER_ICON" xml:space="preserve">
    <svg class="o-icon filter-icon" viewBox="0 0 850 850">
      <path fill="currentColor" d="M 339.667 681 L 510.333 681 L 510.333 595.667 L 339.667 595.667 L 339.667 681 Z M 41 169 L 41 254.333 L 809 254.333 L 809 169 L 41 169 Z M 169 467.667 L 681 467.667 L 681 382.333 L 169 382.333 L 169 467.667 Z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FILTER_ICON_ACTIVE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FILTER_ICON_ACTIVE" xml:space="preserve">
    <div class="o-icon filter-icon-active">
      <i class="fa fa-filter"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SEARCH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SEARCH" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-search"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CHECK", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CHECK" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 24 24">
      <path fill="currentColor" d="M18.707 7.293a1 1 0 0 1 0 1.414L11.414 16a1.8 2 0 0 1-2.828 0l-3.293-3.293a1 1 0 1 1 1.414-1.414L10 14.586l7.293-7.293a1 1 0 0 1 1.414 0z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PERCENT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PERCENT" xml:space="preserve">
    <span class="o-text-icon">%</span>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DECRASE_DECIMAL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DECRASE_DECIMAL" xml:space="preserve">
    <span class="o-text-icon">.0</span>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INCREASE_DECIMAL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INCREASE_DECIMAL" xml:space="preserve">
    <span class="o-text-icon">.00</span>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.NUMBER_FORMATS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.NUMBER_FORMATS" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M0 6h2v8h2V4H0m9 0H5v2h4v2H6.5A1.5 1.5 0 0 0 5 9.5V14h6v-2H7v-2h2.5A1.5 1.5 0 0 0 11 8.5v-3A1.5 1.5 0 0 0 9.5 4M12 4v2h4v2h-2v2h2v2h-4v2h4.5a1.5 1.5 0 0 0 1.5-1.5v-2A1.5 1.5 0 0 0 16.5 9 1.5 1.5 0 0 0 18 7.5v-2A1.5 1.5 0 0 0 16.5 4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FONT_SIZE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FONT_SIZE" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <text x="2" y="15" class="small-text">A</text>
      <text x="6" y="15" class="heavy-text">A</text>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TRIANGLE_EXCLAMATION", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-exclamation-triangle"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SPLIT_TEXT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SPLIT_TEXT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14 6v2h-4v2h4v2l3-3m-9 1V8H4V6L1 9l3 3v-2m3.5-6.5h3V7H12V3.5h3V2H3v1.5h3V7h1.5m3 7.5h-3V11H6v3.5H3V16h12v-1.5h-3V11h-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ERROR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ERROR" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-exclamation-circle"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DISPLAY_HEADER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DISPLAY_HEADER" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M.75.5h16.5v17H.75m1.5-12H.75V7h1.5v1.5H.75V10h1.5v1.5H.75V13h1.5v1.5H.75V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v-1.5h-1.5V13h1.5v-1.5h-1.5V10h1.5V8.5h-1.5V7h1.5V5.5M2.75 2.25v1.5h2v-1.5m2.5 0v1.5h7v-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.COG", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.COG" xml:space="preserve">
    <svg fill="currentColor" viewBox="0 0 16 16">
      <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
      <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PLUS_IN_BOX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PLUS_IN_BOX" xml:space="preserve">
    <svg class="o-icon" width="18" height="18" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5">
      <path stroke="currentColor" d="M1.5,1.5h15v15h-15v-15M9,5v8M5,9h8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.GROUP_ROWS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.GROUP_ROWS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M6 2.5A1.5 1.5 0 0 1 7.5 1H16a1.5 1.5 0 0 1 1.5 1.5V15a1.5 1.5 0 0 1-1.5 1.5H7.5A1.5 1.5 0 0 1 6 15M7.5 2.5v2H16v-2M7.5 6v2H16V6M7.5 9.5v2H16v-2M7.5 13v2H16v-2M2 5.75V13h3v-1.5H3.5V5.75h1.25V3l-1 1v.75H3M.25 1.25v4.5h4.5v-4.5m-3.5 1h2.5v2.5h-2.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNGROUP_ROWS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNGROUP_ROWS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M6 2.5A1.5 1.5 0 0 1 7.5 1H16a1.5 1.5 0 0 1 1.5 1.5V15a1.5 1.5 0 0 1-1.5 1.5H7.5A1.5 1.5 0 0 1 6 15M7.5 2.5v2H16v-2M7.5 6v2H16V6M7.5 9.5v2H16v-2M7.5 13v2H16v-2M2 5.75V13h3v-1.5H3.5V5.75M0 5.25.75 6l2-2 2 2 .75-.75-2-2 2-2L4.75.5l-2 2-2-2-.75.75 2 2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.GROUP_COLUMNS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.GROUP_COLUMNS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M2.75 6a1.5 1.5 0 0 0-1.5 1.5V16a1.5 1.5 0 0 0 1.5 1.5h12.5a1.5 1.5 0 0 0 1.5-1.5V7.5a1.5 1.5 0 0 0-1.5-1.5M2.75 7.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2M6 2h7.25v3h-1.5V3.5H6v1.25H3.25l1-1H5V3M1.5.25H6v4.5H1.5m1-3.5v2.5H5v-2.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNGROUP_COLUMNS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNGROUP_COLUMNS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M2.75 6a1.5 1.5 0 0 0-1.5 1.5V16a1.5 1.5 0 0 0 1.5 1.5h12.5a1.5 1.5 0 0 0 1.5-1.5V7.5a1.5 1.5 0 0 0-1.5-1.5M2.75 7.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2M6 2h7.25v3h-1.5V3.5H6M5.5 0l.75.75-2 2 2 2-.75.75-2-2-2 2-.75-.75 2-2-2-2L1.5 0l2 2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DATA_VALIDATION", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DATA_VALIDATION" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v7H11V7H7v4s-.5 0-1.5 1h-1v5h-3a1.5 1.5 0 0 1-1-1M6 6V2H2v4m9 0V2H7v4m9 0V2h-4v4m-6 5V7H2v4m14-2V7h-4v2m-7.5 6.5V12H2v3.5"/>
      <path stroke="currentColor" style="fill:none; stroke-linecap:round; stroke-width:1.5" d="M8,13 l3 3 l6 -5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.THIN_DRAG_HANDLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.THIN_DRAG_HANDLE" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 4 16" fill="currentColor">
      <circle cx="2" cy="3.5" r="1"/>
      <circle cx="2" cy="6.5" r="1"/>
      <circle cx="2" cy="9.5" r="1"/>
      <circle cx="2" cy="12.5" r="1"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.EDIT_TABLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EDIT_TABLE" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
      <path fill="currentColor" d="M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15H7l1.5-1.5H7v-2.75h3.5v.75l2.25-2.25H12v-2.5h3.5v.75c.1-.2.45-.05.5.02l1 1V2.5A1.5 1.5 0 0 0 15.5 1m-13 1.5h13v2.75h-13m0 1.5h3v2.5h-3M7 6.75h3.5v2.5H7m-4.5 1.5h3v2.75h-3 M8.2 15.7v1.8h1.8l5.4-5.4-1.8-1.8-5.4 5.4Zm8.8-5.2a.5.5 0 0 0 0-.7l-1.1-1.1a.5.5 0 0 0-.7 0l-.9.9 1.8 1.8.9-.9Z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DELETE_TABLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DELETE_TABLE" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
      <path fill="currentColor" d="M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15H7l1.5-1.5H7V6.75h3.5v.75L12 9V6.75h3.5l1.5 1.5V2.5A1.5 1.5 0 0 0 15.5 1m-13 1.5h13v2.75h-13m0 1.5h3v2.5h-3m0 1.5h3v2.75h-3m10-2.25 3-3 1.5 1.5-3 3 3 3-1.5 1.5-3-3-3 3-1.5-1.5 3-3-3-3 1.5-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PAINT_TABLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PAINT_TABLE" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
      <path fill="currentColor" d="M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h5c0-.5 0-1 .5-1.5H7v-2.75h3.5v.75l2.25-2.25H12v-2.5h3.5v.75c1-.7 1.5-.4 1.5-.4V2.5A1.5 1.5 0 0 0 15.5 1m-13 1.5h13v2.75h-13m0 1.5h3v2.5h-3M7 6.75h3.5v2.5H7m-4.5 1.5h3v2.75h-3m7.5-.3c.7-.3 1.5-.1 2.1.6.6.7.8 1.4.5 1.9-.6 1.4-3.7 1.6-4 1.7l-.6.1.3-.5s.5-.8.5-2.1c0-.7.5-1.4 1.1-1.7Zm6.7-5.1a.9.9 0 0 1 1 1c-.1 1.3-2.5 3.7-4.3 5.3a3.9 3.9 0 0 0-.6-1.1c-.4-.4-.8-.7-1.3-.8 1.5-1.7 4-4.3 5.4-4.4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CIRCLE_INFO", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CIRCLE_INFO" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M9 .55a8.4 8.4 0 1 0 8.4 8.4A8.4 8.4 0 0 0 9 .55M7.6 4.155a1.4 1.4 0 1 1 1.4 1.4 1.4 1.4 0 0 1-1.4-1.4m4.9 8.995a.7.7 0 0 1-.7.7H6.9a.7.7 0 1 1 0-1.4h1.4v-4.2h-.7a.7.7 0 0 1 0-1.4h2.8v5.6h1.4a.7.7 0 0 1 .7.7"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PIVOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PIVOT" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M17 2v14H1V6h4V2h12m-1 1H6v3h10M2 7v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2m1-6v2h6V7m-6 3v2h6v-2m-6 3v2h6v-2m1-6v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNUSED_PIVOT_WARNING", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNUSED_PIVOT_WARNING" xml:space="preserve">
    <div class="o-unused-pivot-icon text-warning" title="This pivot is not used">
      <t t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ANGLE_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ANGLE_DOWN" xml:space="preserve">
    <div class="o-icon">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 224 256">
        <path d="M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z" transform="translate(0, 9) scale(0.5,0.5)"/>
      </svg>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_PIVOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_PIVOT" xml:space="preserve">
    <svg class="o-icon">
      <defs>
        <mask id="a">
          <path fill="#fff" d="M0 0h18v18H0z"/>
          <path d="M18 26a3.5 3 0 0 1 0-18"/>
        </mask>
      </defs>
      <path fill="currentColor" d="M17 2v14H1V6h4V2h12m-1 1H6v3h10M2 7v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2m1-6v2h6V7m-6 3v2h6v-2m-6 3v2h6v-2m1-6v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2" mask="url(#a)"/>
      <path fill="currentColor" d="M13 13v-3a.75.5 0 0 1 1.5 0v3h3a.5.75 0 0 1 0 1.5h-3v3a.75.5 0 0 1-1.5 0v-3h-3a.5.75 0 0 1 0-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MOVE_SHEET_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MOVE_SHEET_LEFT" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M16 2.5 V15.5 a1.5,1.5 0 1 1 -3 0 V2.5 a1.5 1.5 0 1 1 3 0 M12 10 H5 v2 l-3 -3 3 -3 v2 H12"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MOVE_SHEET_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MOVE_SHEET_RIGHT" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M5 2.5 V15.5 a1.5,1.5 0 1 1 -3 0 V2.5 a1.5 1.5 0 1 1 3 0 M6 10 H13 v2 l3 -3 -3 -3 v2 H6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.RENAME_SHEET", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.RENAME_SHEET" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="         M 9 5 H3 a 1.5 1.5 0 0 0 -1.5 1.5 v5 a1.5 1.5 0 0 0 1.5 1.5 H9 v-1.5 H3.5 a.5 .5 0 0 1 -.5 -.5 v-4 a.5 .5 0 0 1 .5 -.5 H9         M 13 5 H15 a1.5 1.5 0 0 1 1.5 1.5 v5 a1.5 1.5 0 0 1 -1.5 1.5 H13 v-1.5 h1.5 a.5 .5 0 0 0 .5 -.5 v-4 a.5 .5 0 0 0 -.5 -.5 h-1.5         M 10.25 3 h-2 v-1.5 h5.5 v1.5 h-2 v12 h2 v1.5 h-5.5 v-1.5 h2       "/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.HIDE_SHEET", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.HIDE_SHEET" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-eye-slash"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-LinkDisplay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LinkDisplay" xml:space="preserve">
    <div class="o-link-tool d-flex align-items-center">

      <img t-if="link.isExternal" t-key="link.url" t-attf-src="https://www.google.com/s2/favicons?sz=16&amp;domain={{link.url}}"/>
      <a t-if="link.isExternal" class="o-link" t-att-href="link.url" target="_blank" t-on-click.prevent="openLink" t-att-title="link.url">
        <t t-esc="getUrlRepresentation(link)"/>
      </a>
      <a t-else="" class="o-link" t-on-click.prevent="openLink" t-att-title="getUrlRepresentation(link)">
        <t t-esc="getUrlRepresentation(link)"/>
      </a>
      <span t-if="!env.model.getters.isReadonly()" class="o-link-icon o-unlink" t-on-click="unlink" title="Remove link">
        <t t-call="o-spreadsheet-Icon.UNLINK"/>
      </span>
      <span t-if="!env.model.getters.isReadonly()" class="o-link-icon o-edit-link" t-on-click="edit" title="Edit link">
        <t t-call="o-spreadsheet-Icon.EDIT"/>
      </span>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-LinkEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LinkEditor" xml:space="preserve">
    <div class="o-link-editor" t-on-click.stop="() =&gt; this.menu.isOpen=false" t-on-keydown="onKeyDown" t-ref="linkEditor">
      <div class="o-section">
        <div class="o-section-title">Text</div>
        <div class="d-flex">
          <input type="text" title="Link label" placeholder="e.g. 'Link label'" class="o-input" t-model="link.label"/>
        </div>

        <div class="o-section-title mt-3">Link</div>
        <div class="o-link-url">
          <t t-if="link.isUrlEditable">
            <input class="o-input" type="text" placeholder="e.g. 'http://www.odoo.com'" title="Link URL" t-ref="urlInput" t-model="link.url"/>
          </t>
          <t t-else="">
            <input type="text" class="o-input" title="Link URL" t-att-value="getUrlRepresentation(link)" disabled="1"/>
          </t>
          <button t-if="link.url" t-on-click="removeLink" class="o-remove-url o-button-icon">
            ✖
          </button>
          <button t-if="!link.url" t-on-click.stop="openMenu" class="o-special-link o-button-icon">
            <t t-call="o-spreadsheet-Icon.LIST"/>
          </button>
        </div>
      </div>
      <Menu t-if="menu.isOpen" position="menuPosition" menuItems="menuItems" onMenuClicked="(ev) =&gt; this.onSpecialLink(ev)" onClose="() =&gt; this.menu.isOpen=false"/>
      <div class="o-buttons">
        <button t-on-click="cancel" class="o-button o-cancel me-2">Cancel</button>
        <button t-on-click="save" class="o-button primary o-save" t-att-disabled="!link.url">
          Confirm
        </button>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Menu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Menu" xml:space="preserve">
    <Popover t-if="menuItemsAndSeparators.length" t-props="popoverProps">
      <div t-ref="menu" class="o-menu" t-att-style="menuStyle" t-on-scroll="onScroll" t-on-wheel.stop="" t-on-click.stop="" t-on-mouseover="onMouseOverMainMenu" t-on-contextmenu.prevent="">
        <t t-foreach="menuItemsAndSeparators" t-as="menuItem" t-key="menuItem_index">
          <div t-if="menuItem === 'separator'" class="o-separator"/>
          <t t-else="">
            <t t-set="isMenuRoot" t-value="isRoot(menuItem)"/>
            <t t-set="isMenuEnabled" t-value="isEnabled(menuItem)"/>
            <div t-att-title="getName(menuItem)" t-att-data-name="menuItem.id" t-on-click="(ev) =&gt; this.onClickMenu(menuItem, ev)" t-on-mouseenter="(ev) =&gt; this.onMouseEnter(menuItem, ev)" t-on-mouseover="(ev) =&gt; this.onMouseOver(menuItem, ev)" t-on-mouseleave="(ev) =&gt; this.onMouseLeave(menuItem)" class="o-menu-item d-flex justify-content-between align-items-center" t-att-class="{'disabled': !isMenuEnabled, 'o-menu-item-active': isActive(menuItem)}" t-att-style="getColor(menuItem)">
              <div class="d-flex w-100">
                <div t-if="childrenHaveIcon" class="o-menu-item-icon d-flex align-items-center flex-shrink-0" t-att-style="getIconColor(menuItem)">
                  <t t-if="getIconName(menuItem)" t-call="{{getIconName(menuItem)}}"/>
                </div>
                <div class="o-menu-item-name align-middle text-truncate" t-esc="getName(menuItem)"/>
                <t t-set="description" t-value="menuItem.description(env)"/>
                <div t-if="description" class="o-menu-item-description ms-auto text-truncate" t-esc="description"/>
                <t t-set="secondaryIcon" t-value="menuItem.secondaryIcon(env)"/>
                <div t-if="isMenuRoot" class="o-menu-item-root align-middle ms-auto" t-call="o-spreadsheet-Icon.CARET_RIGHT"/>
                <div t-elif="secondaryIcon" class="o-menu-item-root align-middle ms-auto" t-call="{{secondaryIcon}}"/>
              </div>
            </div>
          </t>
        </t>
      </div>
      <Menu t-if="subMenu.isOpen" position="subMenuPosition" menuItems="subMenu.menuItems" depth="props.depth + 1" maxHeight="props.maxHeight" onMenuClicked="props.onMenuClicked" onClose.bind="close" menuId="props.menuId" onMouseOver.bind="onMouseOverChildMenu" width="props.width"/>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-PaintFormatButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PaintFormatButton" xml:space="preserve">
    <span class="o-menu-item-button" title="Paint Format" t-att-class="{active: isActive}" t-attf-class="{{props.class}}" t-on-click="togglePaintFormat" t-on-dblclick="onDblClick">
      <span>
        <t t-call="o-spreadsheet-Icon.PAINT_FORMAT"/>
      </span>
    </span>
  </t>

  `);
registerTemplate("o-spreadsheet-Popover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Popover" xml:space="preserve">
    <t t-portal="'.o-spreadsheet'">
      <div class="o-popover" t-ref="popover" t-on-wheel="props.onMouseWheel" t-att-style="popoverStyle" t-on-click.stop="">
        <t t-slot="default"/>
      </div>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-ScrollBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScrollBar" xml:space="preserve">
    <div class="o-scrollbar" t-on-scroll="onScroll" t-ref="scrollbar" t-att-style="positionCss">
      <div t-att-style="sizeCss"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SelectionInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SelectionInput" xml:space="preserve">
    <div class="o-selection">
      <div t-foreach="ranges" t-as="range" t-key="range.id" class="o-selection-input d-flex flex-row" t-att-class="props.class">
        <div class="position-relative w-100">
          <input type="text" spellcheck="false" placeholder="e.g. A1:A2" t-on-input="(ev) =&gt; this.onInputChanged(range.id, ev)" t-on-focus="() =&gt; this.focus(range.id)" t-on-keydown="onKeydown" t-att-value="range.xc" t-att-style="getColor(range)" class="o-input mb-2" t-att-class="{               'o-focused' : range.isFocused,               'o-invalid border-danger position-relative': isInvalid || !range.isValidRange,               'text-decoration-underline': range.xc and range.isFocused and state.mode === 'select-range'             }" t-ref="{{range.isFocused ? 'focusedInput' : 'unfocusedInput' + range_index}}"/>
          <span t-if="isInvalid || !range.isValidRange" class="error-icon text-danger position-absolute d-flex align-items-center" title="This range is invalid">
            <t t-call="o-spreadsheet-Icon.ERROR"/>
          </span>
        </div>
        <button class="border-0 bg-transparent fw-bold o-remove-selection o-button-icon pe-0" t-if="ranges.length &gt; 1" t-on-click="() =&gt; this.removeInput(range.id)">
          <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
        </button>
      </div>

      <div class="d-flex flex-row w-100 o-selection-input">
        <button class="o-button o-add-selection" t-if="canAddRange" t-on-click="addEmptyInput">
          Add range
        </button>
        <div class="ms-auto" t-if="store.hasFocus">
          <button class="o-button o-selection-ko" t-if="isResettable" t-on-click="reset">
            Reset
          </button>
          <button class="o-button primary ms-2 o-selection-ok" t-if="store.hasFocus" t-att-disabled="!isConfirmable" t-on-click="confirm">
            Confirm
          </button>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-BarConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BarConfigPanel" xml:space="preserve">
    <div>
      <Section class="'pt-0'">
        <Checkbox name="'stacked'" label="chartTerms.StackedBarChart" value="props.definition.stacked" onChange.bind="onUpdateStacked"/>
      </Section>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged="(ranges) =&gt; this.onDataSeriesRangesChanged(ranges)" onSelectionConfirmed="() =&gt; this.onDataSeriesConfirmed()"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged="(ranges) =&gt; this.onLabelRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.onLabelRangeConfirmed()" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-AxisDesignEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-AxisDesignEditor" xml:space="preserve">
    <t t-set="editor_label">Axis title</t>
    <Section class="'py-0'">
      <BadgeSelection choices="badgeAxes" onChange.bind="(value) =&gt; state.currentAxis = value" selectedValue="state.currentAxis"/>
    </Section>
    <ChartTitle title="this.getAxisTitle()" updateTitle.bind="updateAxisTitle" name="editor_label" toggleItalic.bind="toggleItalicAxisTitle" toggleBold.bind="toggleBoldAxisTitle" updateAlignment.bind="updateAxisTitleAlignment" updateColor.bind="updateAxisTitleColor" style="axisTitleStyle"/>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartDataSeries", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartDataSeries" xml:space="preserve">
    <Section class="'o-data-series'">
      <t t-set-slot="title" t-esc="title"/>
      <SelectionInput ranges="ranges" required="true" hasSingleRange="props.hasSingleRange" onSelectionChanged="(ranges) =&gt; props.onSelectionChanged(ranges)" onSelectionConfirmed="() =&gt; props.onSelectionConfirmed()" colors="colors"/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartErrorSection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartErrorSection" xml:space="preserve">
    <Section>
      <ValidationMessages messages="props.messages" msgType="'error'"/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-GeneralDesignEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GeneralDesignEditor" xml:space="preserve">
    <t t-set="chart_title">Chart title</t>
    <SidePanelCollapsible collapsedAtInit="false">
      <t t-set-slot="title">General</t>
      <t t-set-slot="content">
        <Section class="'o-chart-background-color pt-0 pb-0'">
          <t t-set-slot="title">Background color</t>
          <RoundColorPicker currentColor="props.definition.background" onColorPicked.bind="updateBackgroundColor"/>
        </Section>
        <ChartTitle title="title.text" updateTitle.bind="updateTitle" name="chart_title" toggleItalic.bind="toggleItalicChartTitle" toggleBold.bind="toggleBoldChartTitle" updateAlignment.bind="updateChartTitleAlignment" updateColor.bind="updateChartTitleColor" style="titleStyle"/>
        <t t-slot="general-extension"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-GenericChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GenericChartConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged="(ranges) =&gt; this.onDataSeriesRangesChanged(ranges)" onSelectionConfirmed="() =&gt; this.onDataSeriesConfirmed()"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged="(ranges) =&gt; this.onLabelRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.onLabelRangeConfirmed()" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartLabelRange", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartLabelRange" xml:space="preserve">
    <Section class="'o-data-labels'">
      <t t-set-slot="title" t-esc="props.title"/>
      <SelectionInput ranges="[props.range]" isInvalid="props.isInvalid" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; props.onSelectionChanged(ranges)" onSelectionConfirmed="() =&gt; props.onSelectionConfirmed()"/>
      <t t-foreach="props.options" t-as="option" t-key="option.name">
        <Checkbox name="option.name" label="option.label" value="option.value" onChange="option.onChange" className="'mt-2'"/>
      </t>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartTitle", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartTitle" xml:space="preserve">
    <t t-set="placeholder">Add a title</t>
    <Section class="'o-chart-title'">
      <t t-set-slot="title">
        <t t-if="props.name" t-esc="props.name"/>
        <t t-else="">Title</t>
      </t>
      <input type="text" class="o-input" t-att-value="props.title" t-on-change="updateTitle" t-att-placeholder="placeholder"/>
      <div class="o-chart-title-designer position-relative d-flex align-items-center">
        <span class="o-menu-item-button o-hoverable-button" title="Bold" t-att-class="{active: props.style.bold}" t-on-click="(ev) =&gt; this.props.toggleBold()">
          <span>
            <t t-call="o-spreadsheet-Icon.BOLD"/>
          </span>
        </span>
        <span class="o-menu-item-button o-hoverable-button" title="Italic" t-att-class="{active: props.style.italic}" t-on-click="(ev) =&gt; this.props.toggleItalic()">
          <span>
            <t t-call="o-spreadsheet-Icon.ITALIC"/>
          </span>
        </span>
        <div class="o-divider"/>
        <span class="o-menu-item-button o-hoverable-button" title="Horizontal alignment" t-on-click="(ev) =&gt; this.toggleDropdownTool('horizontalChartAlignTool', ev)">
          <span>
            <t t-if="props.style.align === 'center'" t-call="o-spreadsheet-Icon.ALIGN_CENTER"/>
            <t t-elif="props.style.align === 'right'" t-call="o-spreadsheet-Icon.ALIGN_RIGHT"/>
            <t t-else="" t-call="o-spreadsheet-Icon.ALIGN_LEFT"/>
          </span>
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
        <div class="o-dropdown-content position-absolute top-100 start-0 bg-white" t-if="state.activeTool === 'horizontalChartAlignTool'" t-on-click.stop="">
          <div class="o-dropdown-line d-flex">
            <span class="o-menu-item-button o-hoverable-button" t-att-class="{active: props.style.align === 'left'}" title="Left" t-on-click="(ev) =&gt; this.updateAlignment('left')">
              <span>
                <t t-call="o-spreadsheet-Icon.ALIGN_LEFT"/>
              </span>
            </span>
            <span class="o-menu-item-button o-hoverable-button" t-att-class="{active: props.style.align === 'center'}" title="Center" t-on-click="(ev) =&gt; this.updateAlignment('center')">
              <span>
                <t t-call="o-spreadsheet-Icon.ALIGN_CENTER"/>
              </span>
            </span>
            <span class="o-menu-item-button o-hoverable-button" t-att-class="{active: props.style.align === 'right'}" title="Right" t-on-click="(ev) =&gt; this.updateAlignment('right')">
              <span>
                <t t-call="o-spreadsheet-Icon.ALIGN_RIGHT"/>
              </span>
            </span>
          </div>
        </div>
        <div class="o-divider"/>
        <ColorPickerWidget currentColor="props.style.color" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('fillChartColorTool', ev)" showColorPicker="state.activeTool === 'fillChartColorTool'" onColorPicked.bind="onColorPicked" title="fill_color" icon="'o-spreadsheet-Icon.TEXT_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartPreview.LINE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.LINE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
      <path stroke="#eb6d00" style="fill:none" d="M6,40 l12,-12 l6,6 l18,-18"/>
      <path stroke="#0074d9" style="fill:none" d="M6,25 l12,-12 l18,18 l6,-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_LINE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_LINE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path stroke="#0074d9" style="fill:none" d="M3,30 l12,-12 l6,6 l18,-18"/>
      <path stroke="#eb6d00" style="fill:none" d="M3,40 l12,-12 l6,6 l18,-12"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.AREA_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.AREA_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#c4e4ff" d="M3,45 V25 l12,-12 l18,18 l6,-6 V45"/>
      <path fill="#ffe1c8" d="M3,45 V40 l12,-12 l6,6 l18,-18 V45"/>
      <path stroke="#eb6d00" style="fill:none" d="M3,40 l12,-12 l6,6 l18,-18"/>
      <path stroke="#0074d9" style="fill:none" d="M3,25 l12,-12 l18,18 l6,-6"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_AREA_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_AREA_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#c4e4ff" d="M3,45 h36 v-39 l-18,18 l-6,-6 l-12,12"/>
      <path stroke="#0074d9" style="fill:none" d="M3,30 l12,-12 l6,6 l18,-18"/>
      <path fill="#ffe1c8" d="M3,45 h36 v-23 l-18,12 l-6,-6 l-12,12"/>
      <path stroke="#eb6d00" style="fill:none" d="M3,40 l12,-12 l6,6 l18,-12"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.COLUMN_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.COLUMN_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d9" d="M7,45 v-28 h6 v28"/>
      <path fill="#c4e4ff" d="M8,45 v-27 h4 v27"/>
      <path fill="#eb6d00" d="M14,45 v-14 h6 v14"/>
      <path fill="#ffe1c8" d="M15,45 v-13 h4 v13"/>
      <path fill="#0074d9" d="M26,45 v-22 h6 v22"/>
      <path fill="#c4e4ff" d="M27,45 v-21 h4 v21"/>
      <path fill="#eb6d00" d="M33,45 v-32 h6 v32"/>
      <path fill="#ffe1c8" d="M34,45 v-31 h4 v31"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d9" d="M7,45 v-12 h8 v12"/>
      <path fill="#c4e4ff" d="M8,45 v-11 h6 v11"/>
      <path fill="#eb6d00" d="M7,33 v-14 h8 v14"/>
      <path fill="#ffe1c8" d="M8,33 v-13 h6 v13"/>

      <path fill="#0074d9" d="M20,45 v-8 h8 v8"/>
      <path fill="#c4e4ff" d="M21,45 v-7 h6 v7"/>
      <path fill="#eb6d00" d="M20,37 v-9 h8 v9"/>
      <path fill="#ffe1c8" d="M21,37 v-8 h6 v8"/>

      <path fill="#0074d9" d="M33,45 v-18 h8 v18"/>
      <path fill="#c4e4ff" d="M34,45 v-17 h6 v17"/>
      <path fill="#eb6d00" d="M33,27 v-16 h8 v16"/>
      <path fill="#ffe1c8" d="M34,27 v-15 h6 v15"/>

      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.BAR_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.BAR_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <g transform="matrix(0 1 -1 0 48 3)">
        <path fill="#0074d9" d="M7,45 v-28 h6 v28"/>
        <path fill="#c4e4ff" d="M8,45 v-27 h4 v27"/>
        <path fill="#eb6d00" d="M14,45 v-14 h6 v14"/>
        <path fill="#ffe1c8" d="M15,45 v-13 h4 v13"/>
        <path fill="#0074d9" d="M26,45 v-22 h6 v22"/>
        <path fill="#c4e4ff" d="M27,45 v-21 h4 v21"/>
        <path fill="#eb6d00" d="M33,45 v-32 h6 v32"/>
        <path fill="#ffe1c8" d="M34,45 v-31 h4 v31"/>
      </g>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_BAR_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_BAR_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <g transform="matrix(0 1 -1 0 48 1)">
        <path fill="#0074d9" d="M7,45 v-12 h8 v12"/>
        <path fill="#c4e4ff" d="M8,45 v-11 h6 v11"/>
        <path fill="#eb6d00" d="M7,33 v-14 h8 v14"/>
        <path fill="#ffe1c8" d="M8,33 v-13 h6 v13"/>
        <path fill="#0074d9" d="M20,45 v-8 h8 v8"/>
        <path fill="#c4e4ff" d="M21,45 v-7 h6 v7"/>
        <path fill="#eb6d00" d="M20,37 v-9 h8 v9"/>
        <path fill="#ffe1c8" d="M21,37 v-8 h6 v8"/>
        <path fill="#0074d9" d="M33,45 v-18 h8 v18"/>
        <path fill="#c4e4ff" d="M34,45 v-17 h6 v17"/>
        <path fill="#eb6d00" d="M33,27 v-16 h8 v16"/>
        <path fill="#ffe1c8" d="M34,27 v-15 h6 v15"/>
      </g>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.COMBO_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.COMBO_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d9" d="M7,45 v-14 h6 v14"/>
      <path fill="#c4e4ff" d="M8,45 v-13 h4 v13"/>
      <path fill="#eb6d00" d="M14,45 v-28 h6 v28"/>
      <path fill="#ffe1c8" d="M15,45 v-27 h4 v27"/>
      <path fill="#0074d9" d="M26,45 v-22 h6 v22"/>
      <path fill="#c4e4ff" d="M27,45 v-21 h4 v21"/>
      <path fill="#eb6d00" d="M33,45 v-32 h6 v32"/>
      <path fill="#ffe1c8" d="M34,45 v-31 h4 v31"/>
      <path stroke="#888" style="fill:none;stroke-width:1.5;" d="M4,40 l14,-12 l6,6 l20,-18"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.PIE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.PIE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#ffe1c8" stroke="#eb6d00" d="M41.32, 34 A20 20, 0, 1, 1, 24, 4 v20"/>
      <path fill="#c4e4ff" stroke="#0074d9" d="M24,24 v-20 A20 20, 0, 0, 1, 41.32, 34 L24,24"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.DOUGHNUT_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.DOUGHNUT_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#ffe1c8" stroke="#eb6d00" d="M41.32, 34 A20 20, 0, 1, 1, 24, 4 v8 A12,12,0,1,0,34.4,30"/>
      <path fill="#c4e4ff" stroke="#0074d9" d="M24,12 v-8 A20 20, 0, 0, 1, 41.32, 34 L34.4,30 A12,12,0,0,0,24,12"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.SCATTER_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.SCATTER_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <circle fill="#0074d9" cx="10" cy="10" r="2"/>
      <circle fill="#0074d9" cx="15" cy="30" r="2"/>
      <circle fill="#0074d9" cx="25" cy="36" r="2"/>
      <circle fill="#0074d9" cx="32" cy="15" r="2"/>
      <circle fill="#eb6d00" cx="10" cy="40" r="2"/>
      <circle fill="#eb6d00" cx="18" cy="20" r="2"/>
      <circle fill="#eb6d00" cx="30" cy="25" r="2"/>
      <circle fill="#eb6d00" cx="40" cy="33" r="2"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.GAUGE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.GAUGE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview user-select-none">
      <path fill="#ccc" d="M2,32 A22,22,0,0,1,46,32 h-6 A16,16,0,0,0,8,32"/>
      <path fill="#6aa84f" d="M2,32 A22,22,0,0,1,35,13 L32,18.2 A16,16,0,0,0,8,32"/>
      <text x="17" y="32" style="font-size:12px;">62</text>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.SCORECARD_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.SCORECARD_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview user-select-none">
      <path fill="#ddd" d="M1,8 h46 v32 h-46"/>
      <path fill="#eee" d="M2,9 h44 v30 h-44"/>
      <text x="9" y="32" style="font-size:18px;">123</text>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.WATERFALL_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.WATERFALL_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#444" d="M5,45 v-26 h6 v26"/>
      <path fill="#fff" d="M6,45 v-25 h4 v25"/>
      <path fill="#eb6d00" d="M13,19 v7 h6 v-7"/>
      <path fill="#ffe1c8" d="M14,20 v5 h4 v-5"/>
      <path fill="#eb6d00" d="M21,25 v10 h6 v-10"/>
      <path fill="#ffe1c8" d="M22,26 v8 h4 v-8"/>
      <path fill="#0074d9" d="M29,35 v-24 h6 v24"/>
      <path fill="#c4e4ff" d="M30,34 v-22 h4 v22"/>
      <path fill="#444" d="M37,45 v-34 h6 v34"/>
      <path fill="#fff" d="M38,45 v-33 h4 v33"/>
      <path fill="#444" d="M11,20 v-1 h2 v1 M19,26 v-1 h2 v1 M27,35 v-1 h2 v1 M35,12 v-1 h2 v1"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#eb6d00" d="M23,43 v-6 h22 v6"/>
      <path fill="#ffe1c8" d="M23,42 v-4 h21 v4"/>
      <path fill="#eb6d00" d="M23,36 v-6 h18 v6"/>
      <path fill="#ffe1c8" d="M23,35 v-4 h17 v4"/>
      <path fill="#eb6d00" d="M23,29 v-6 h12 v6"/>
      <path fill="#ffe1c8" d="M23,28 v-4 h11 v4"/>
      <path fill="#eb6d00" d="M23,22 v-6 h8 v6"/>
      <path fill="#ffe1c8" d="M23,21 v-4 h7 v4"/>
      <path fill="#eb6d00" d="M23,15 v-6 h4 v6"/>
      <path fill="#ffe1c8" d="M23,14 v-4 h3 v4"/>

      <path fill="#0074d9" d="M24,43 v-6 h-20 v6"/>
      <path fill="#c4e4ff" d="M24,42 v-4 h-19 v4"/>
      <path fill="#0074d9" d="M24,36 v-6 h-18 v6"/>
      <path fill="#c4e4ff" d="M24,35 v-4 h-17 v4"/>
      <path fill="#0074d9" d="M24,29 v-6 h-12 v6"/>
      <path fill="#c4e4ff" d="M24,28 v-4 h-11 v4"/>
      <path fill="#0074d9" d="M24,22 v-6 h-6 v6"/>
      <path fill="#c4e4ff" d="M24,21 v-4 h-5 v4"/>
      <path fill="#0074d9" d="M24,15 v-6 h-4 v6"/>
      <path fill="#c4e4ff" d="M24,14 v-4 h-3 v4"/>

      <path fill="#444" d="M23,2 v43 h1 v-43 M2,45 h44 v1 h-44"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartTypePicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartTypePicker" xml:space="preserve">
    <t t-set="selectedChartProperties" t-value="getSelectedChartSubtypeProperties()"/>
    <Section>
      <t t-set-slot="title">Chart type</t>
      <div class="position-relative">
        <select class="o-input o-type-selector" t-ref="selectRef" t-on-pointerdown.prevent="onPointerDown">
          <option t-esc="selectedChartProperties.displayName" t-att-value="selectedChartProperties.chartSubtype"/>
        </select>
        <div class="o-type-selector-preview position-absolute">
          <t t-call="{{selectedChartProperties.preview}}"/>
        </div>
      </div>
    </Section>
    <Popover t-if="state.popoverProps" t-props="state.popoverProps">
      <div t-ref="popoverRef" class="o-chart-select-popover px-3 pb-4" t-att-style="state.popoverStyle">
        <t t-foreach="categories" t-as="category" t-key="category">
          <t t-if="chartTypeByCategories[category]">
            <h5 class="my-3" t-esc="category_value"/>
            <div class="d-flex flex-wrap">
              <t t-foreach="chartTypeByCategories[category]" t-as="properties" t-key="properties.chartSubtype">
                <div class="o-chart-type-item" t-att-title="properties.displayName" t-on-click="() =&gt; this.onTypeChange(properties.chartSubtype)" t-att-data-id="properties.chartSubtype" t-att-class="{'selected': properties === selectedChartProperties}">
                  <t t-call="{{properties.preview}}"/>
                </div>
              </t>
            </div>
          </t>
        </t>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartWithAxisDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartWithAxisDesignPanel" xml:space="preserve">
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart">
      <t t-set-slot="general-extension">
        <Section class="'pt-0'">
          <t t-set-slot="title">Legend position</t>
          <select t-att-value="props.definition.legendPosition ?? 'top'" class="o-input" t-on-change="this.updateLegendPosition">
            <option value="none">None</option>
            <option value="top">Top</option>
            <option value="bottom">Bottom</option>
            <option value="left">Left</option>
            <option value="right">Right</option>
          </select>
        </Section>
        <Section class="'pt-0'">
          <t t-set-slot="title">Values</t>
          <Checkbox name="'showValues'" label.translate="Show values" value="props.definition.showValues" onChange="showValues =&gt; props.updateChart(this.props.figureId, {showValues})"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Data series</t>
      <t t-set-slot="content">
        <Section class="'pt-0 pb-0'">
          <select class="o-input data-series-selector" t-model="state.label" t-on-change="(ev) =&gt; this.updateSerieEditor(ev)">
            <t t-foreach="getDataSeries()" t-as="serie" t-key="serie_index">
              <option t-att-value="serie" t-att-selected="state.index === serie_index" t-esc="serie"/>
            </t>
          </select>
          <Section class="'px-0'">
            <div class="d-flex align-items-center">
              <t t-set-slot="title">Series color</t>
              <RoundColorPicker currentColor="getDataSerieColor()" onColorPicked.bind="updateDataSeriesColor"/>
            </div>
          </Section>
          <Section class="'pt-0 px-0 o-vertical-axis-selection'" t-if="canHaveTwoVerticalAxis">
            <t t-set-slot="title">Vertical axis</t>
            <RadioSelection choices="axisChoices" selectedValue="getDataSerieAxis()" name="'axis'" onChange.bind="updateDataSeriesAxis"/>
          </Section>
          <Section class="'pt-0 px-0'">
            <t t-set-slot="title">Series name</t>
            <input class="o-input o-serie-label-editor" type="text" t-att-value="getDataSerieLabel()" t-on-change="(ev) =&gt; this.updateDataSeriesLabel(ev)"/>
          </Section>
          <Section class="'pt-0 px-0 o-show-trend-line'" t-if="!props.definition.horizontal">
            <t t-set-slot="title">Trend line</t>
            <t t-set="showTrendLineLabel">Show trend line</t>
            <t t-set="trend" t-value="getTrendLineConfiguration()"/>
            <t t-set="trendType" t-value="getTrendType(trend)"/>
            <Checkbox name="'showTrendLine'" label="showTrendLineLabel" value="trend !== undefined and trend.display" onChange.bind="toggleDataTrend"/>
            <div t-if="trend !== undefined and trend.display">
              <div class="d-flex py-2">
                <div class="w-100">
                  <span class="o-section-subtitle">Type</span>
                  <select class="o-input trend-type-selector" t-on-change="this.onChangeTrendType">
                    <option value="linear" t-att-selected="trendType === 'linear'">Linear</option>
                    <option value="exponential" t-att-selected="trendType === 'exponential'">
                      Exponential
                    </option>
                    <option value="polynomial" t-att-selected="trendType === 'polynomial'">
                      Polynomial
                    </option>
                    <option value="logarithmic" t-att-selected="trendType === 'logarithmic'">
                      Logarithmic
                    </option>
                  </select>
                </div>
                <div class="w-50 ms-3" t-if="trendType === 'polynomial'">
                  <span class="o-section-subtitle">Degree</span>
                  <input t-att-value="trend.order" type="number" class="w-100 o-input trend-order-input" t-on-change="this.onChangePolynomialDegree" min="1"/>
                </div>
              </div>
              <div class="d-flex align-items-center">
                <span class="o-section-subtitle my-0 pe-2">Trend line color</span>
                <RoundColorPicker currentColor="getTrendLineColor()" onColorPicked.bind="updateTrendLineColor"/>
              </div>
            </div>
          </Section>
        </Section>
      </t>
    </SidePanelCollapsible>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Axes</t>
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-ComboChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ComboChartConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged="(ranges) =&gt; this.onDataSeriesRangesChanged(ranges)" onSelectionConfirmed="() =&gt; this.onDataSeriesConfirmed()"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged="(ranges) =&gt; this.onLabelRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.onLabelRangeConfirmed()" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ComboChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ComboChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart">
      <t t-set-slot="general-extension">
        <Section class="'pt-0'">
          <t t-set-slot="title">Legend position</t>
          <select t-att-value="props.definition.legendPosition ?? 'top'" class="o-input" t-on-change="this.updateLegendPosition">
            <option value="none">None</option>
            <option value="top">Top</option>
            <option value="bottom">Bottom</option>
            <option value="left">Left</option>
            <option value="right">Right</option>
          </select>
        </Section>
        <Section class="'pt-0'">
          <t t-set-slot="title">Values</t>
          <Checkbox name="'showValues'" label="showValuesLabel" value="props.definition.showValues" onChange="showValues =&gt; props.updateChart(this.props.figureId, {showValues})"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Data series</t>
      <t t-set-slot="content">
        <Section class="'pt-0 pb-0'">
          <select class="o-input data-series-selector" t-model="state.label" t-on-change="(ev) =&gt; this.updateSerieEditor(ev)">
            <t t-foreach="getDataSeries()" t-as="serie" t-key="serie_index">
              <option t-att-value="serie" t-att-selected="state.index === serie_index" t-esc="serie"/>
            </t>
          </select>
          <Section class="'px-0'">
            <div class="d-flex align-items-center">
              <t t-set-slot="title">Series color</t>
              <RoundColorPicker currentColor="getDataSerieColor()" onColorPicked.bind="updateDataSeriesColor"/>
            </div>
          </Section>
          <Section class="'pt-0 px-0 o-vertical-axis-selection'" t-if="canHaveTwoVerticalAxis">
            <t t-set-slot="title">Vertical axis</t>
            <RadioSelection choices="axisChoices" selectedValue="getDataSerieAxis()" name="'axis'" onChange.bind="updateDataSeriesAxis"/>
          </Section>
          <Section class="'pt-0 px-0 o-series-type-selection'">
            <t t-set-slot="title">Serie type</t>
            <RadioSelection choices="seriesTypeChoices" selectedValue="getDataSeriesType()" name="'seriesType'" onChange.bind="updateDataSeriesType"/>
          </Section>
          <Section class="'pt-0 px-0'">
            <t t-set-slot="title">Series name</t>
            <input class="o-input o-serie-label-editor" type="text" t-att-value="getDataSerieLabel()" t-on-change="(ev) =&gt; this.updateDataSeriesLabel(ev)"/>
          </Section>
          <Section class="'pt-0 px-0 o-show-trend-line'" t-if="!props.definition.horizontal">
            <t t-set-slot="title">Trend line</t>
            <t t-set="showTrendLineLabel">Show trend line</t>
            <t t-set="trend" t-value="getTrendLineConfiguration()"/>
            <t t-set="trendType" t-value="getTrendType(trend)"/>
            <Checkbox name="'showTrendLine'" label="showTrendLineLabel" value="trend !== undefined and trend.display" onChange.bind="toggleDataTrend"/>
            <div t-if="trend !== undefined and trend.display">
              <div class="d-flex py-2">
                <div class="w-100">
                  <span class="o-section-subtitle">Type</span>
                  <select class="o-input trend-type-selector" t-on-change="this.onChangeTrendType">
                    <option value="linear" t-att-selected="trendType === 'linear'">Linear</option>
                    <option value="exponential" t-att-selected="trendType === 'exponential'">
                      Exponential
                    </option>
                    <option value="polynomial" t-att-selected="trendType === 'polynomial'">
                      Polynomial
                    </option>
                    <option value="logarithmic" t-att-selected="trendType === 'logarithmic'">
                      Logarithmic
                    </option>
                  </select>
                </div>
                <div class="w-50 ms-3" t-if="trendType === 'polynomial'">
                  <span class="o-section-subtitle">Degree</span>
                  <input t-att-value="trend.order" type="number" class="w-100 o-input trend-order-input" t-on-change="this.onChangePolynomialDegree" min="1"/>
                </div>
              </div>
              <div class="d-flex align-items-center">
                <span class="o-section-subtitle my-0 pe-2">Trend line color</span>
                <RoundColorPicker currentColor="getTrendLineColor()" onColorPicked.bind="updateTrendLineColor"/>
              </div>
            </div>
          </Section>
        </Section>
      </t>
    </SidePanelCollapsible>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Axes</t>
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="[this.getDataRange()]" onSelectionChanged="(ranges) =&gt; this.onDataRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.updateDataRange()" hasSingleRange="true"/>

      <ChartErrorSection t-if="configurationErrorMessages.length" messages="configurationErrorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
    <SidePanelCollapsible collapsedAtInit="false">
      <t t-set-slot="title">Gauge Design</t>
      <t t-set-slot="content">
        <Section class="'pt-0'">
          <t t-set-slot="title">Range</t>
          <div class="o-subsection-left">
            <input type="text" t-model="state.sectionRule.rangeMin" t-on-change="() =&gt; this.updateSectionRule(state.sectionRule)" t-on-input="() =&gt; this.canUpdateSectionRule(state.sectionRule)" class="o-input o-data-range-min" t-att-class="{ 'o-invalid': isRangeMinInvalid() }"/>
          </div>
          <div class="o-subsection-right">
            <input type="text" t-model="state.sectionRule.rangeMax" t-on-change="() =&gt; this.updateSectionRule(state.sectionRule)" t-on-input="() =&gt; this.canUpdateSectionRule(state.sectionRule)" class="o-input o-data-range-max" t-att-class="{ 'o-invalid': isRangeMaxInvalid() }"/>
          </div>
        </Section>

        <Section>
          <t t-set-slot="title">Thresholds</t>
          <t t-call="o-spreadsheet-GaugeChartColorSectionTemplate">
            <t t-set="sectionRule" t-value="state.sectionRule"/>
          </t>
        </Section>

        <ChartErrorSection t-if="designErrorMessages.length" messages="designErrorMessages"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartColorSectionTemplate", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartColorSectionTemplate" xml:space="preserve">
    <div class="o-gauge-color-set">
      <table>
        <tr>
          <th class="o-gauge-color-set-colorPicker"/>
          <th class="o-gauge-color-set-text"/>
          <th class="o-gauge-color-set-operator"/>
          <th class="o-gauge-color-set-value">Value</th>
          <th class="o-gauge-color-set-type">Type</th>
        </tr>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.lowerColor"/>
          <t t-set="sectionType" t-value="'lowerColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.lowerInflectionPoint"/>
          <t t-set="isInvalid" t-value="isLowerInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'lowerInflectionPoint'"/>
        </t>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.middleColor"/>
          <t t-set="sectionType" t-value="'middleColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.upperInflectionPoint"/>
          <t t-set="isInvalid" t-value="isUpperInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'upperInflectionPoint'"/>
        </t>

        <tr>
          <td>
            <RoundColorPicker currentColor="sectionRule.colors.upperColor" onColorPicked="(color) =&gt; this.updateSectionColor('upperColor', color)"/>
          </td>
          <td>Else</td>
          <td/>
          <td/>
          <td/>
        </tr>
      </table>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartColorSectionTemplateRow", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartColorSectionTemplateRow" xml:space="preserve">
    <tr>
      <td>
        <RoundColorPicker currentColor="sectionColor" onColorPicked="(color) =&gt; this.updateSectionColor(sectionType, color)"/>
      </td>
      <td>When value is</td>
      <td class="pe-2">
        <t t-set="below">below</t>
        <t t-set="belowOrEqualTo">below or equal to</t>
        <select class="o-input" name="operatorType" t-att-title="inflectionPoint.operator === '&lt;' ? below : belowOrEqualTo" t-model="inflectionPoint.operator" t-on-change="() =&gt; this.updateSectionRule(state.sectionRule)">
          <option title="below" value="&lt;">&lt;</option>
          <option title="below or equal to" value="&lt;=">&lt;=</option>
        </select>
      </td>
      <td class="pe-2">
        <input type="text" class="o-input" t-model="inflectionPoint.value" t-on-input="() =&gt; this.canUpdateSectionRule(state.sectionRule)" t-on-change="() =&gt; this.updateSectionRule(state.sectionRule)" t-attf-class="o-input-{{inflectionPointName}}" t-att-class="{ 'o-invalid': isInvalid }"/>
      </td>
      <td>
        <select class="o-input" name="valueType" t-model="inflectionPoint.type" t-on-change="(ev) =&gt; this.updateSectionRule(state.sectionRule)">
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
        </select>
      </td>
    </tr>
  </t>

  `);
registerTemplate("o-spreadsheet-LineConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LineConfigPanel" xml:space="preserve">
    <div>
      <Section class="'pt-0'">
        <Checkbox name="'stacked'" label="stackedLabel" value="props.definition.stacked" onChange.bind="onUpdateStacked" className="'mb-2'"/>
        <Checkbox name="'cumulative'" label="chartTerms.CumulativeData" value="props.definition.cumulative" onChange.bind="onUpdateCumulative"/>
      </Section>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged="(ranges) =&gt; this.onDataSeriesRangesChanged(ranges)" onSelectionConfirmed="() =&gt; this.onDataSeriesConfirmed()"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged="(ranges) =&gt; this.onLabelRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.onLabelRangeConfirmed()" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPanel" xml:space="preserve">
    <div class="o-chart" t-if="figureId">
      <div class="o-panel">
        <div class="o-panel-element o-panel-configuration" t-att-class="store.panel !== 'configuration' ? 'inactive' : ''" t-on-click="() =&gt; this.store.activatePanel('configuration')">
          <i class="fa fa-sliders"/>
          Configuration
        </div>
        <div class="o-panel-element o-panel-design" t-att-class="store.panel !== 'design' ? 'inactive' : ''" t-on-click="() =&gt; this.store.activatePanel('design')">
          <i class="fa fa-paint-brush"/>
          Design
        </div>
      </div>

      <t t-set="definition" t-value="getChartDefinition(this.figureId)"/>
      <t t-if="store.panel === 'configuration'">
        <ChartTypePicker figureId="props.figureId" chartPanelStore="store"/>
        <t t-component="chartPanel.configuration" definition="definition" figureId="figureId" updateChart.bind="updateChart" canUpdateChart.bind="canUpdateChart" t-key="figureId + definition.type"/>
      </t>
      <t t-else="">
        <t t-component="chartPanel.design" definition="definition" figureId="figureId" updateChart.bind="updateChart" canUpdateChart.bind="canUpdateChart" t-key="figureId + definition.type"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PieChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PieChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart">
      <t t-set-slot="general-extension">
        <Section class="'pt-0'">
          <t t-set-slot="title">Legend position</t>
          <select t-att-value="props.definition.legendPosition ?? 'top'" class="o-input" t-on-change="(ev) =&gt; this.updateLegendPosition(ev)">
            <option value="none">None</option>
            <option value="top">Top</option>
            <option value="bottom">Bottom</option>
            <option value="left">Left</option>
            <option value="right">Right</option>
          </select>
        </Section>
        <Section>
          <t t-set-slot="title">Values</t>
          <Checkbox name="'showValues'" label.translate="Show values" value="props.definition.showValues" onChange="showValues =&gt; props.updateChart(this.props.figureId, {showValues})"/>
        </Section>
      </t>
    </GeneralDesignEditor>
  </t>

  `);
registerTemplate("o-spreadsheet-ScatterConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScatterConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged="(ranges) =&gt; this.onDataSeriesRangesChanged(ranges)" onSelectionConfirmed="() =&gt; this.onDataSeriesConfirmed()"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged="(ranges) =&gt; this.onLabelRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.onLabelRangeConfirmed()" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ScorecardChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScorecardChartConfigPanel" xml:space="preserve">
    <div>
      <Section class="'o-data-series'">
        <t t-set-slot="title">Key value</t>
        <SelectionInput ranges="[this.getKeyValueRange()]" isInvalid="isKeyValueInvalid" hasSingleRange="true" required="true" onSelectionChanged="(ranges) =&gt; this.onKeyValueRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.updateKeyValueRange()"/>
      </Section>
      <Section class="'o-data-labels'">
        <t t-set-slot="title">Baseline configuration</t>
        <div class="o-section-subtitle">Value</div>
        <SelectionInput ranges="[this.getBaselineRange()]" isInvalid="isBaselineInvalid" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; this.onBaselineRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.updateBaselineRange()"/>
        <div class="o-section-subtitle">Format</div>
        <select t-att-value="props.definition.baselineMode" class="o-input" t-on-change="(ev) =&gt; this.updateBaselineMode(ev)">
          <option value="text">Absolute value</option>
          <option value="difference">Value change from key value</option>
          <option value="percentage">Percentage change from key value</option>
          <option value="progress">Progress bar</option>
        </select>
      </Section>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ScorecardChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScorecardChartDesignPanel" xml:space="preserve">
    <t t-set="color_up">Color Up</t>
    <t t-set="color_down">Color Down</t>
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart">
      <t t-set-slot="general-extension">
        <Section class="'pt-1'">
          <t t-set-slot="title">Number formatting</t>
          <Checkbox name="'humanizeNumbers'" label="humanizeNumbersLabel" value="props.definition.humanize" onChange.bind="updateHumanizeNumbers"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SidePanelCollapsible collapsedAtInit="false">
      <t t-set-slot="title">Baseline</t>
      <t t-set-slot="content">
        <Section class="'pt-0'">
          <t t-set-slot="title">Baseline description</t>
          <input type="text" t-att-value="translate(props.definition.baselineDescr)" t-on-change="updateBaselineDescr" class="o-input" placeholder="Baseline description"/>
        </Section>
        <Section class="'o-chart-baseline-color'">
          <t t-set-slot="title" t-esc="colorsSectionTitle"/>
          <div class="d-flex align-items-center mb-2">
            <RoundColorPicker currentColor="props.definition.baselineColorUp" onColorPicked="(color) =&gt; this.setColor(color, 'baselineColorUp')" title="color_up"/>
            <span class="ps-2">Color on value increase</span>
          </div>
          <div class="d-flex align-items-center">
            <RoundColorPicker currentColor="props.definition.baselineColorDown" onColorPicked="(color) =&gt; this.setColor(color, 'baselineColorDown')" title="color_down"/>
            <span class="ps-2">Color on value decrease</span>
          </div>
        </Section>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-WaterfallChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-WaterfallChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart">
      <t t-set-slot="general-extension">
        <Section class="'o-vertical-axis-selection'">
          <t t-set-slot="title">Vertical axis position</t>
          <RadioSelection choices="axisChoices" selectedValue="props.definition.verticalAxisPosition" name="'axis'" onChange.bind="updateVerticalAxisPosition"/>
        </Section>
        <Section>
          <t t-set-slot="title">Legend position</t>
          <select t-att-value="props.definition.legendPosition" class="o-input o-chart-legend-position" t-on-change="(ev) =&gt; this.updateLegendPosition(ev)">
            <option value="none">None</option>
            <option value="top">Top</option>
            <option value="bottom">Bottom</option>
            <option value="left">Left</option>
            <option value="right">Right</option>
          </select>
        </Section>
        <Section>
          <t t-set-slot="title">Values</t>
          <Checkbox name="'showValues'" label.translate="Show values" value="props.definition.showValues" onChange="showValues =&gt; props.updateChart(this.props.figureId, {showValues})"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Waterfall design</t>
      <t t-set-slot="content">
        <Section class="'pt-0'">
          <t t-set-slot="title">Options</t>
          <t t-set="firstValueAsSubtotal">Use first value as subtotal</t>
          <Checkbox className="'mb-2'" name="'firstValueAsSubtotal'" label="firstValueAsSubtotal" value="props.definition.firstValueAsSubtotal" onChange.bind="onUpdateFirstValueAsSubtotal"/>
          <t t-set="showSubTotalsLabel">Show subtotals at the end of series</t>
          <Checkbox className="'mb-2'" name="'showSubTotals'" label="showSubTotalsLabel" value="props.definition.showSubTotals" onChange.bind="onUpdateShowSubTotals"/>
          <t t-set="showConnectorLinesLabel">Show connector lines</t>
          <Checkbox name="'showConnectorLines'" label="showConnectorLinesLabel" value="props.definition.showConnectorLines" onChange.bind="onUpdateShowConnectorLines"/>
        </Section>
        <Section>
          <t t-set-slot="title">Colors</t>
          <div class="o-waterfall-positive-color d-flex align-items-center mb-2">
            <RoundColorPicker currentColor="positiveValuesColor" onColorPicked="(color) =&gt; this.updateColor('positiveValuesColor', color)"/>
            <span class="ps-2">Color of positive values</span>
          </div>
          <div class="o-waterfall-negative-color d-flex align-items-center mb-2">
            <RoundColorPicker currentColor="negativeValuesColor" onColorPicked="(color) =&gt; this.updateColor('negativeValuesColor', color)"/>
            <span class="ps-2">Color of negative values</span>
          </div>
          <div class="o-waterfall-subtotal-color d-flex align-items-center">
            <RoundColorPicker currentColor="subTotalValuesColor" onColorPicked="(color) =&gt; this.updateColor('subTotalValuesColor', color)"/>
            <span class="ps-2">Color of subtotals</span>
          </div>
        </Section>
      </t>
    </SidePanelCollapsible>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Axes</t>
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet.BadgeSelection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.BadgeSelection" xml:space="preserve">
    <div class="d-flex w-100 o-badge-selection">
      <t t-foreach="props.choices" t-as="choice" t-key="choice.value">
        <button class="flex-grow-1 o-button" t-esc="choice.label" t-att-class="{ 'selected': props.selectedValue === choice.value }" t-on-click="() =&gt; props.onChange(choice.value)" t-att-data-id="choice.value"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet.Checkbox", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.Checkbox" xml:space="preserve">
    <label class="o-checkbox d-flex align-items-center" t-att-title="props.title" t-att-class="{'text-muted': props.disabled }" t-attf-class="{{props.className}}">
      <input class="me-2" type="checkbox" t-att-disabled="props.disabled" t-att-name="props.name" t-att-checked="props.value" t-on-change="onChange"/>
      <t t-if="props.label" t-esc="props.label"/>
    </label>
  </t>

  `);
registerTemplate("o-spreadsheet-CogWheelMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CogWheelMenu" xml:space="preserve">
    <span class="fa fa-cog os-cog-wheel-menu-icon o-button-icon" t-on-click="toggleMenu" t-ref="button"/>
    <Menu t-if="menuState.isOpen" menuId="menuId" position="menuState.position" menuItems="menuState.menuItems" onClose="() =&gt; this.menuState.isOpen=false" width="160"/>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanelCollapsible", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanelCollapsible" xml:space="preserve">
    <div class="" t-att-class="props.class">
      <div class="o_side_panel_collapsible_title d-flex align-items-center">
        <div t-att-id="'btn-collapse-'+currentId" t-att-class="{ 'collapsed': props.collapsedAtInit }" class="collapsor w-100 d-flex align-items-center ps-1" data-bs-toggle="collapse" t-att-data-bs-target="'#box-collapse-'+currentId">
          <span class="collapsor-arrow">
            <t t-call="o-spreadsheet-Icon.ANGLE_DOWN"/>
          </span>
          <div class="ps-2">
            <t t-slot="title"/>
          </div>
        </div>
      </div>
      <div t-att-id="'box-collapse-'+currentId" t-att-class="{'show': !props.collapsedAtInit}" class="collapsible_section collapse">
        <div class="pt-2">
          <t t-slot="content"/>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet.RadioSelection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.RadioSelection" xml:space="preserve">
    <div class="d-flex" t-att-class="{             'flex-row': props.direction === 'horizontal',             'flex-column': props.direction === 'vertical'}">
      <t t-foreach="props.choices" t-as="choice" t-key="choice.value">
        <label class="o-radio d-flex align-items-center me-4">
          <input t-att-class="{               'me-1': props.direction === 'horizontal',               'me-2': props.direction === 'vertical'}" type="radio" t-att-name="props.name" t-att-value="choice.value" t-att-checked="choice.value === props.selectedValue" t-on-change="() =&gt; props.onChange(choice.value)"/>
          <t t-esc="choice.label"/>
        </label>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet.RoundColorPicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.RoundColorPicker" xml:space="preserve">
    <div class="o-round-color-picker-button rounded-circle" t-ref="colorPickerButton" t-on-click.stop="togglePicker" t-att-title="props.title" t-att-style="buttonStyle"/>
    <ColorPicker t-if="state.pickerOpened" anchorRect="colorPickerAnchorRect" onColorPicked.bind="onColorPicked" currentColor="props.currentColor"/>
  </t>

  `);
registerTemplate("o_spreadsheet.Section", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o_spreadsheet.Section" xml:space="preserve">
    <div class="o-section" t-att-class="props.class">
      <t t-if="props.slots.title">
        <div class="o-section-title">
          <t t-slot="title"/>
        </div>
      </t>
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CellIsRuleEditorPreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CellIsRuleEditorPreview" xml:space="preserve">
    <div class="o-cf-preview-display" t-attf-style="font-weight:{{currentStyle.bold ?'bold':'normal'}};                        text-decoration:{{getTextDecoration(currentStyle)}};                        font-style:{{currentStyle.italic?'italic':'normal'}};                        color:{{currentStyle.textColor || '#000'}};                        background-color:{{currentStyle.fillColor}};">
      <t t-if="previewText" t-esc="previewText"/>
      <t t-else="">Preview text</t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CellIsRuleEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CellIsRuleEditor" xml:space="preserve">
    <t t-set="fill_color">Fill Color</t>
    <t t-set="text_color">Text Color</t>
    <div class="o-cf-cell-is-rule">
      <div class="o-section-subtitle">Format cells if...</div>
      <select t-model="rule.operator" class="o-input o-cell-is-operator mb-3">
        <t t-foreach="Object.keys(cellIsOperators)" t-as="op" t-key="op_index">
          <option t-att-value="op" t-esc="cellIsOperators[op]"/>
        </t>
      </select>
      <t t-if="rule.operator !== 'IsEmpty' and rule.operator !== 'IsNotEmpty'">
        <div class="o-cell-is-value mb-3">
          <StandaloneComposer t-props="getCellIsRuleComposerProps(0)"/>
        </div>
        <t t-if="rule.operator === 'Between' || rule.operator === 'NotBetween'">
          <div class="o-cell-is-value o-secondary-value mb-3">
            <StandaloneComposer t-props="getCellIsRuleComposerProps(1)"/>
          </div>
        </t>
      </t>
      <div class="o-section-subtitle pt-3">Formatting style</div>

      <t t-call="o-spreadsheet-CellIsRuleEditorPreview">
        <t t-set="currentStyle" t-value="rule.style"/>
      </t>
      <div class="o-sidePanel-tools d-flex">
        <div class="o-hoverable-button o-menu-item-button" title="Bold" t-att-class="{active:rule.style.bold}" t-on-click="() =&gt; this.toggleStyle('bold')">
          <t t-call="o-spreadsheet-Icon.BOLD"/>
        </div>
        <div class="o-hoverable-button o-menu-item-button" title="Italic" t-att-class="{active:rule.style.italic}" t-on-click="() =&gt; this.toggleStyle('italic')">
          <t t-call="o-spreadsheet-Icon.ITALIC"/>
        </div>
        <div class="o-hoverable-button o-menu-item-button" title="Underline" t-att-class="{active:rule.style.underline}" t-on-click="(ev) =&gt; this.toggleStyle('underline', ev)">
          <t t-call="o-spreadsheet-Icon.UNDERLINE"/>
        </div>
        <div class="o-hoverable-button o-menu-item-button" title="Strikethrough" t-att-class="{active:rule.style.strikethrough}" t-on-click="(ev) =&gt; this.toggleStyle('strikethrough', ev)">
          <t t-call="o-spreadsheet-Icon.STRIKE"/>
        </div>
        <ColorPickerWidget currentColor="rule.style.textColor || '#000000'" toggleColorPicker="(ev) =&gt; this.toggleMenu('cellIsRule-textColor', ev)" showColorPicker="state.openedMenu === 'cellIsRule-textColor'" onColorPicked="(color) =&gt; this.setColor('textColor', color)" title="text_color" icon="'o-spreadsheet-Icon.TEXT_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
        <div class="o-divider"/>
        <ColorPickerWidget currentColor="rule.style.fillColor" toggleColorPicker="(ev) =&gt; this.toggleMenu('cellIsRule-fillColor', ev)" showColorPicker="state.openedMenu === 'cellIsRule-fillColor'" onColorPicked="(color) =&gt; this.setColor('fillColor', color)" title="fill_color" icon="'o-spreadsheet-Icon.FILL_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormattingEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormattingEditor" xml:space="preserve">
    <div class="o-cf-ruleEditor">
      <Section class="'o-cf-range pb-0'">
        <t t-set-slot="title">Apply to range</t>
        <div class="o-selection-cf">
          <SelectionInput ranges="state.currentCF.ranges" class="'o-range'" isInvalid="isRangeValid" onSelectionChanged="(ranges) =&gt; this.onRangesChanged(ranges)" required="true"/>
        </div>
      </Section>
      <Section class="'pb-0'">
        <t t-set-slot="title">Format rules</t>
        <div class="o-cf-type-selector">
          <BadgeSelection choices="cfTypesValues" onChange.bind="changeRuleType" selectedValue="state.currentCFType"/>
        </div>
      </Section>
      <Section class="'o-cf-editor'">
        <t t-if="state.currentCFType === 'CellIsRule'" t-call="o-spreadsheet-CellIsRuleEditor">
          <t t-set="rule" t-value="state.rules.cellIs"/>
        </t>
        <t t-if="state.currentCFType === 'ColorScaleRule'" t-call="o-spreadsheet-ColorScaleRuleEditor">
          <t t-set="rule" t-value="state.rules.colorScale"/>
        </t>
        <t t-if="state.currentCFType === 'IconSetRule'" t-call="o-spreadsheet-IconSetEditor">
          <t t-set="rule" t-value="state.rules.iconSet"/>
        </t>
        <t t-if="state.currentCFType === 'DataBarRule'" t-call="o-spreadsheet-DataBarEditor">
          <t t-set="rule" t-value="state.rules.dataBar"/>
        </t>
      </Section>
      <Section class="'pt-1'">
        <div class="o-sidePanelButtons">
          <button t-on-click="props.onExitEdition" class="o-button o-cf-cancel">Cancel</button>
          <button t-on-click="saveConditionalFormat" class="o-button primary o-cf-save">
            Save
          </button>
        </div>
      </Section>
      <Section>
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorScaleRuleEditorThreshold", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorScaleRuleEditorThreshold" xml:space="preserve">
    <t t-set="fill_color">Fill Color</t>
    <div t-attf-class="o-threshold o-threshold-{{thresholdType}} d-flex align-items-center flex-row">
      <t t-if="thresholdType === 'midpoint'">
        <t t-set="type" t-value="threshold and threshold.type"/>
        <select class="o-input me-2" name="valueType" t-on-change="onMidpointChange" t-att-class="{ 'o-select-with-input': threshold and threshold.type !== 'value' }" t-on-click="closeMenus">
          <option value="none" t-att-selected="threshold === undefined">None</option>
          <option value="number" t-att-selected="type === 'number'">Fixed Number</option>
          <option value="percentage" t-att-selected="type === 'percentage'">Percentage</option>
          <option value="percentile" t-att-selected="type === 'percentile'">Percentile</option>
          <option value="formula" t-att-selected="type === 'formula'">Formula</option>
        </select>
      </t>
      <t t-else="">
        <select class="o-input me-2" name="valueType" t-model="threshold.type" t-on-click="closeMenus" t-att-class="{ 'o-select-with-input': threshold?.type !== 'value' }">
          <option value="value">Cell values</option>
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
          <option value="percentile">Percentile</option>
          <option value="formula">Formula</option>
        </select>
      </t>
      <div class="o-threshold-value me-2" t-if="threshold and threshold.type !== 'value'">
        <input t-if="threshold.type !== 'formula'" type="text" class="o-input" t-model="rule[thresholdType].value" t-att-class="{ 'o-invalid': isValueInvalid(thresholdType), 'invisible': threshold === undefined }"/>
        <StandaloneComposer t-else="" t-props="getColorScaleComposerProps(thresholdType)"/>
      </div>
      <div t-attf-class="flex-shrink-0 ms-1 {{ threshold === undefined ? 'invisible' : ''}}">
        <RoundColorPicker currentColor="getThresholdColor(threshold)" onColorPicked="(color) =&gt; this.setColorScaleColor(thresholdType, color)" title="fill_color"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorScaleRuleEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorScaleRuleEditor" xml:space="preserve">
    <div class="o-cf-color-scale-editor">
      <div class="o-section-subtitle">Preview</div>
      <div class="o-cf-preview-display mb-4" t-attf-style="{{getPreviewGradient()}}">
        Preview text
      </div>
      <div class="o-section-subtitle">Minpoint</div>
      <t t-call="o-spreadsheet-ColorScaleRuleEditorThreshold">
        <t t-set="threshold" t-value="rule.minimum"/>
        <t t-set="thresholdType" t-value="'minimum'"/>
      </t>
      <div class="o-section-subtitle">MidPoint</div>
      <t t-call="o-spreadsheet-ColorScaleRuleEditorThreshold">
        <t t-set="threshold" t-value="rule.midpoint"/>
        <t t-set="thresholdType" t-value="'midpoint'"/>
      </t>
      <div class="o-section-subtitle">MaxPoint</div>
      <t t-call="o-spreadsheet-ColorScaleRuleEditorThreshold">
        <t t-set="threshold" t-value="rule.maximum"/>
        <t t-set="thresholdType" t-value="'maximum'"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataBarEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataBarEditor" xml:space="preserve">
    <div class="o-cf-data-bar-editor">
      <div class="o-section-subtitle">Color</div>
      <RoundColorPicker currentColor="colorNumberString(rule.color)" onColorPicked.bind="updateDataBarColor"/>
      <div class="o-section-subtitle">Range of values</div>
      <SelectionInput ranges="getRangeValues()" class="'o-range'" isInvalid="false" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; this.onDataBarRangeUpdate(ranges)" required="false"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-IconSets", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSets" xml:space="preserve">
    <div class="pb-2">
      <div class="o-section-subtitle">Icons</div>
      <div class="o-cf-iconsets d-flex flex-row">
        <div class="o-cf-iconset o-cf-clickable-icon d-flex flex-row justify-content-between" t-foreach="['arrows', 'smiley', 'dots']" t-as="iconSet" t-key="iconSet" t-on-click="(ev) =&gt; this.setIconSet(iconSet, ev)">
          <div>
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].good].template}}"/>
          </div>
          <div>
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].neutral].template}}"/>
          </div>
          <div>
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].bad].template}}"/>
          </div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-IconSetInflexionPointRow", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSetInflexionPointRow" xml:space="preserve">
    <tr>
      <td>
        <div t-on-click.stop="(ev) =&gt; this.toggleMenu('iconSet-'+icon+'Icon', ev)">
          <div class="o-cf-icon-button o-cf-clickable-icon me-3">
            <t t-call="o-spreadsheet-Icon.{{icons[iconValue].template}}"/>
          </div>
        </div>
        <IconPicker t-if="state.openedMenu === 'iconSet-'+icon+'Icon'" onIconPicked="(i) =&gt; this.setIcon(icon, i)"/>
      </td>
      <td>When value is</td>
      <td>
        <select class="o-input" name="valueType" t-model="inflectionPointValue.operator">
          <option value="gt">
            <span>&gt;</span>
          </option>
          <option value="ge">
            <span>≥</span>
          </option>
        </select>
      </td>
      <td>
        <div class="ms-2 me-2">
          <input type="text" t-if="inflectionPointValue.type !== 'formula'" class="o-input" t-att-class="{ 'o-invalid': isInflectionPointInvalid(inflectionPoint) }" t-model="rule[inflectionPoint].value"/>
          <StandaloneComposer t-else="" t-props="getColorIconSetComposerProps(inflectionPoint)"/>
        </div>
      </td>
      <td>
        <select class="o-input" name="valueType" t-model="inflectionPointValue.type">
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
          <option value="percentile">Percentile</option>
          <option value="formula">Formula</option>
        </select>
      </td>
    </tr>
  </t>

  `);
registerTemplate("o-spreadsheet-IconSetInflexionPoints", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSetInflexionPoints" xml:space="preserve">
    <div class="o-inflection mt-4">
      <table class="w-100">
        <tr>
          <th class="o-cf-iconset-icons"/>
          <th class="o-cf-iconset-text"/>
          <th class="o-cf-iconset-operator"/>
          <th/>
          <th class="o-cf-iconset-type"/>
        </tr>
        <t t-call="o-spreadsheet-IconSetInflexionPointRow">
          <t t-set="iconValue" t-value="rule.icons.upper"/>
          <t t-set="icon" t-value="'upper'"/>
          <t t-set="inflectionPointValue" t-value="rule.upperInflectionPoint"/>
          <t t-set="inflectionPoint" t-value="'upperInflectionPoint'"/>
        </t>
        <t t-call="o-spreadsheet-IconSetInflexionPointRow">
          <t t-set="iconValue" t-value="rule.icons.middle"/>
          <t t-set="icon" t-value="'middle'"/>
          <t t-set="inflectionPointValue" t-value="rule.lowerInflectionPoint"/>
          <t t-set="inflectionPoint" t-value="'lowerInflectionPoint'"/>
        </t>
        <tr>
          <td>
            <div t-on-click.stop="(ev) =&gt; this.toggleMenu('iconSet-lowerIcon', ev)">
              <div class="o-cf-icon-button o-cf-clickable-icon me-3">
                <t t-call="o-spreadsheet-Icon.{{icons[rule.icons.lower].template}}"/>
              </div>
            </div>
            <IconPicker t-if="state.openedMenu === 'iconSet-lowerIcon'" onIconPicked="(icon) =&gt; this.setIcon('lower', icon)"/>
          </td>
          <td>Else</td>
          <td/>
          <td/>
          <td/>
        </tr>
      </table>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-IconSetEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSetEditor" xml:space="preserve">
    <div class="o-cf-iconset-rule">
      <t t-call="o-spreadsheet-IconSets"/>
      <t t-call="o-spreadsheet-IconSetInflexionPoints"/>
      <div class="d-flex flex-row">
        <div class="o-button-link py-1 ps-0 o-cf-iconset-reverse d-flex align-items-center" t-on-click="reverseIcons">
          <t t-call="o-spreadsheet-Icon.REFRESH"/>
          <div class="ms-1">Reverse icons</div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormatPreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormatPreview" xml:space="preserve">
    <t t-set="cf" t-value="props.conditionalFormat"/>
    <div class="o-cf-preview w-100" t-ref="cfPreview" t-att-class="props.class" t-att-data-id="cf.id" t-on-click="props.onPreviewClick" t-on-pointerdown="(ev) =&gt; this.onMouseDown(ev)">
      <div class="position-relative h-100 w-100 d-flex align-items-center">
        <div class="o-cf-drag-handle h-100 position-absolute d-flex align-items-center o-button-icon">
          <t t-call="o-spreadsheet-Icon.THIN_DRAG_HANDLE"/>
        </div>
        <t t-if="cf.rule.type==='IconSetRule'">
          <div class="o-cf-preview-icon d-flex justify-content-around align-items-center me-2">
            <t t-call="o-spreadsheet-Icon.{{icons[cf.rule.icons.upper].template}}"/>
            <t t-call="o-spreadsheet-Icon.{{icons[cf.rule.icons.middle].template}}"/>
            <t t-call="o-spreadsheet-Icon.{{icons[cf.rule.icons.lower].template}}"/>
          </div>
        </t>
        <t t-else="">
          <div t-att-style="getPreviewImageStyle(cf.rule)" class="o-cf-preview-icon d-flex justify-content-around align-items-center me-2">
            123
          </div>
        </t>
        <div class="o-cf-preview-description">
          <div class="o-cf-preview-ruletype">
            <div class="o-cf-preview-description-rule text-truncate">
              <t t-esc="getDescription(cf)"/>
            </div>
          </div>
          <div class="o-cf-preview-range text-truncate" t-esc="cf.ranges"/>
        </div>
        <div class="o-cf-delete">
          <div class="o-cf-delete-button o-button-icon" t-on-click.stop="(ev) =&gt; this.deleteConditionalFormat(cf, ev)" title="Remove rule">
            <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
          </div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormatPreviewList", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormatPreviewList" xml:space="preserve">
    <div class="o-cf-preview-list h-100 overflow-auto" t-ref="cfList">
      <t t-foreach="props.conditionalFormats" t-as="cf" t-key="cf.id">
        <div class="o-cf-preview-container d-flex position-relative" t-att-style="getPreviewDivStyle(cf)">
          <ConditionalFormatPreview conditionalFormat="cf" class="dragAndDrop.draggedItemId === cf.id ? 'o-cf-dragging' : ''" onMouseDown="(ev) =&gt; this.onPreviewMouseDown(cf, ev)" onPreviewClick="() =&gt; props.onPreviewClick(cf)"/>
        </div>
      </t>
      <div class="o-button-link p-4 o-cf-add float-end" t-on-click.prevent.stop="props.onAddConditionalFormat">
        + Add another rule
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormattingPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormattingPanel" xml:space="preserve">
    <div class="o-cf h-100">
      <t t-if="state.mode === 'list'">
        <ConditionalFormatPreviewList conditionalFormats="conditionalFormats" onPreviewClick.bind="editConditionalFormat" onAddConditionalFormat.bind="addConditionalFormat"/>
      </t>
      <t t-if="state.mode === 'edit'">
        <ConditionalFormattingEditor editedCf="state.editedCf" onExitEdition.bind="switchToList"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CustomCurrencyPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CustomCurrencyPanel" xml:space="preserve">
    <div class="o-custom-currency">
      <Section t-if="availableCurrencies.length &gt; 1">
        <t t-set-slot="title">Currency</t>
        <select class="o-input o-available-currencies" t-on-change="(ev) =&gt; this.updateSelectCurrency(ev)">
          <t t-foreach="availableCurrencies" t-as="currency" t-key="currency_index">
            <option t-att-value="currency_index" t-esc="currencyDisplayName(currency)" t-att-selected="currency_index === state.selectedCurrencyIndex"/>
          </t>
        </select>
      </Section>
      <Section>
        <div class="o-subsection-left">
          <div class="o-section-title">Code</div>
          <input type="text" class="o-input" t-model="state.currencyCode" placeholder="code" t-on-input="(ev) =&gt; this.updateCode(ev)"/>
        </div>
        <div class="o-subsection-right">
          <div class="o-section-title">Symbol</div>
          <input type="text" class="o-input" placeholder="symbol" t-model="state.currencySymbol" t-on-input="(ev) =&gt; this.updateSymbol(ev)"/>
        </div>
      </Section>
      <Section>
        <t t-set-slot="title">Format</t>
        <select class="o-input o-format-proposals mb-1" t-on-change="(ev) =&gt; this.updateSelectFormat(ev)" t-att-disabled="!formatProposals.length">
          <t t-foreach="formatProposals" t-as="proposal" t-key="proposal_index">
            <option t-att-value="proposal_index" t-esc="proposal.example" t-att-selected="proposal_index === state.selectedFormatIndex"/>
          </t>
        </select>
        <t t-set="accounting_format_label">Accounting format</t>
        <Checkbox name="'accountingFormat'" label="accounting_format_label" value="state.isAccountingFormat" onChange.bind="toggleAccountingFormat"/>
        <div class="o-format-examples mt-4" t-if="selectedFormat">
          <table>
            <t t-foreach="getFormatExamples()" t-as="example" t-key="example_index">
              <tr>
                <td class="pe-3 fw-bolder" t-esc="example.label"/>
                <td t-esc="example.value"/>
              </tr>
            </t>
          </table>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button class="o-button primary" t-on-click="() =&gt; this.apply()" t-att-disabled="!formatProposals.length || isSameFormat">
            Apply
          </button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationPanel" xml:space="preserve">
    <div class="o-data-validation">
      <t t-if="state.mode === 'list'">
        <div class="o-dv-preview-list">
          <t t-foreach="validationRules" t-as="rule" t-key="rule.id">
            <DataValidationPreview rule="localizeDVRule(rule)" onClick="() =&gt; this.onPreviewClick(rule.id)"/>
          </t>
        </div>
        <div class="o-dv-add o-button-link p-4 float-end" t-on-click="addDataValidationRule">
          + Add another rule
        </div>
      </t>
      <t t-else="">
        <DataValidationEditor rule="localizeDVRule(state.activeRule)" onExit.bind="onExitEditMode"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationDateCriterion", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationDateCriterion" xml:space="preserve">
    <select class="o-dv-date-value o-input mb-4" t-on-change="onDateValueChanged">
      <option t-foreach="dateValues" t-as="dateValue" t-key="dateValue.value" t-att-value="dateValue.value" t-esc="dateValue.title" t-att-selected="dateValue.value === props.criterion.dateValue"/>
    </select>

    <DataValidationInput t-if="props.criterion.dateValue === 'exactDate'" value="props.criterion.values[0]" onValueChanged.bind="onValueChanged" criterionType="props.criterion.type"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationDoubleInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationDoubleInput" xml:space="preserve">
    <DataValidationInput value="props.criterion.values[0]" onValueChanged.bind="onFirstValueChanged" criterionType="props.criterion.type"/>

    <div class="o-section-subtitle ms-1 my-2">and</div>
    <DataValidationInput value="props.criterion.values[1]" onValueChanged.bind="onSecondValueChanged" criterionType="props.criterion.type"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationInput" xml:space="preserve">
    <div class="o-dv-input position-relative w-100">
      <input type="text" t-ref="input" t-on-input="onValueChanged" t-att-value="props.value" class="o-input" t-att-class="{             'o-invalid border-danger position-relative': errorMessage,           }" t-att-title="errorMessage" t-att-placeholder="placeholder" t-on-keydown="props.onKeyDown" t-on-blur="props.onBlur"/>
      <span t-if="errorMessage" class="error-icon text-danger position-absolute d-flex align-items-center" t-att-title="errorMessage">
        <t t-call="o-spreadsheet-Icon.ERROR"/>
      </span>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationSingleInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationSingleInput" xml:space="preserve">
    <DataValidationInput value="props.criterion.values[0]" onValueChanged.bind="onValueChanged" criterionType="props.criterion.type"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationListCriterionForm", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationListCriterionForm" xml:space="preserve">
    <t t-foreach="displayedValues" t-as="value" t-key="value_index">
      <div class="o-dv-list-values d-flex align-items-center">
        <DataValidationInput value="props.criterion.values[value_index]" onValueChanged="(v) =&gt; this.onValueChanged(v, value_index)" criterionType="props.criterion.type" onKeyDown="(ev) =&gt; this.onKeyDown(ev, value_index)" focused="value_index === state.focusedValueIndex" onBlur.bind="onBlurInput"/>
        <div class="o-dv-list-item-delete ms-2 o-button-icon" t-on-click="() =&gt; this.removeItem(value_index)">
          <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
        </div>
      </div>
      <div class="mb-2"/>
    </t>
    <button class="o-dv-list-add-value o-button mb-3" t-on-click="onAddAnotherValue">
      Add another item
    </button>

    <div class="o-section-subtitle">Display style</div>
    <select class="o-dv-display-style o-input" t-on-change="onChangedDisplayStyle">
      <option t-att-selected="props.criterion.displayStyle === 'arrow'" value="arrow">Arrow</option>
      <option t-att-selected="props.criterion.displayStyle === 'plainText'" value="plainText">
        Plain text
      </option>
    </select>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationValueInRangeCriterionForm", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationValueInRangeCriterionForm" xml:space="preserve">
    <SelectionInput ranges="[props.criterion.values[0] || '']" onSelectionChanged="(ranges) =&gt; this.onRangeChanged(ranges[0])" required="true" hasSingleRange="true"/>

    <div class="o-section-subtitle mt-4">Display style</div>
    <select class="o-dv-display-style o-input" t-on-change="onChangedDisplayStyle">
      <option t-att-selected="props.criterion.displayStyle === 'arrow'" value="arrow">Arrow</option>
      <option t-att-selected="props.criterion.displayStyle === 'plainText'" value="plainText">
        Plain text
      </option>
    </select>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationEditor" xml:space="preserve">
    <div class="o-dv-form w-100 h-100">
      <Section class="'o-dv-range'">
        <t t-set-slot="title">Apply to range</t>
        <SelectionInput ranges="state.rule.ranges" onSelectionChanged="(ranges) =&gt; this.onRangesChanged(ranges)" required="true"/>
      </Section>
      <Section class="'pt-0'">
        <div class="o-subsection o-dv-settings">
          <div class="o-section-title">Criteria</div>
          <SelectMenu class="'o-dv-type o-input mb-2'" menuItems="dvCriterionMenuItems" selectedValue="selectedCriterionName"/>

          <t t-if="criterionComponent" t-component="criterionComponent" t-key="state.rule.criterion.type" criterion="state.rule.criterion" onCriterionChanged.bind="onCriterionChanged"/>
        </div>
      </Section>

      <Section class="'o-dv-invalid-option pt-0'">
        <t t-set-slot="title">If the data is invalid</t>
        <select class="o-dv-reject-input o-input" t-on-change="changeRuleIsBlocking">
          <option t-att-selected="!state.rule.isBlocking" value="false">Show a warning</option>
          <option t-att-selected="state.rule.isBlocking" value="true">Reject the input</option>
        </select>
      </Section>

      <Section>
        <div class="o-sidePanelButtons">
          <button t-on-click="props.onExit" class="o-dv-cancel o-button">Cancel</button>
          <button t-on-click="onSave" class="o-dv-save o-button primary" t-att-class="{'o-disabled': !canSave }">
            Save
          </button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationPreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationPreview" xml:space="preserve">
    <div class="o-dv-preview p-3" t-on-click="props.onClick" t-ref="dvPreview">
      <div class="d-flex justify-content-between">
        <div class="o-dv-container d-flex flex-column">
          <div class="o-dv-preview-description fw-bold text-truncate" t-esc="descriptionString"/>
          <div class="o-dv-preview-ranges text-truncate" t-esc="rangesString"/>
        </div>
        <div class="o-dv-preview-delete d-flex align-items-center o-button-icon px-3" t-on-click.stop="deleteDataValidation">
          <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FindAndReplacePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FindAndReplacePanel" xml:space="preserve">
    <div class="o-find-and-replace">
      <Section>
        <t t-set-slot="title">Search</t>
        <div class="o-input-search-container">
          <input type="text" t-ref="searchInput" class="o-input o-input-with-count o-search" t-on-input="onSearchInput" t-on-focus="onFocusSearch" t-on-keydown="onKeydownSearch" placeholder="e.g. 'search me'"/>
          <div class="o-input-count" t-if="hasSearchResult">
            <t t-esc="store.selectedMatchIndex+1"/>
            /
            <t t-esc="store.searchMatches.length"/>
          </div>
          <div t-elif="!this.pendingSearch and store.toSearch !== ''" class="o-input-count">
            0 / 0
          </div>
          <div class="d-flex flex-row o-result-buttons align-items-center" t-if="hasSearchResult">
            <button t-on-click="() =&gt; store.selectPreviousMatch()" class="o-button ms-2 d-flex justify-content-center align-items-center">
              <t t-call="o-spreadsheet-Icon.ARROW_UP"/>
            </button>
            <button t-on-click="() =&gt; store.selectNextMatch()" class="o-button ms-1 d-flex justify-content-center align-items-center">
              <t t-call="o-spreadsheet-Icon.ARROW_DOWN"/>
            </button>
          </div>
        </div>
        <select class="o-input o-type-range-selector mt-3 mb-3" t-on-change="changeSearchScope" t-att-value="searchOptions.searchScope">
          <option value="allSheets">All sheets</option>
          <option value="activeSheet">Current sheet</option>
          <option value="specificRange">Specific range</option>
        </select>
        <div t-if="searchOptions.searchScope === 'specificRange'">
          <SelectionInput ranges="[this.state.dataRange]" onSelectionChanged="(ranges) =&gt; this.onSearchRangeChanged(ranges)" onSelectionConfirmed.bind="updateDataRange" hasSingleRange="true" required="true"/>
        </div>
        <div>
          <t t-set="matchCaseLabel">Match case</t>
          <Checkbox value="searchOptions.matchCase" label="matchCaseLabel" onChange.bind="searchMatchCase" className="'mb-1'"/>
          <t t-set="exactMatchLabel">Match entire cell content</t>
          <Checkbox value="searchOptions.exactMatch" label="exactMatchLabel" onChange.bind="searchExactMatch" className="'mb-1'"/>
          <t t-set="searchFormulasLabel">Search in formulas</t>
          <Checkbox value="searchOptions.searchFormulas" label="searchFormulasLabel" onChange.bind="searchFormulas"/>
        </div>
        <div class="o-matches-count mt-4" t-if="searchInfo.length">
          <ValidationMessages msgType="'info'" messages="searchInfo" singleBox="true"/>
        </div>
      </Section>
      <Section class="'pt-0'" t-if="!env.model.getters.isReadonly()">
        <t t-set-slot="title">Replace</t>
        <div class="o-input-search-container">
          <input type="text" class="o-input o-input-without-count o-replace" t-on-keydown="onKeydownReplace" t-model="store.toReplace" placeholder="e.g. 'replace me'"/>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons" t-if="!env.model.getters.isReadonly()">
          <button t-att-disabled="store.selectedMatchIndex === null" t-on-click="() =&gt; store.replace()" class="o-button o-replace">
            Replace
          </button>
          <button t-att-disabled="store.selectedMatchIndex === null" t-on-click="() =&gt; store.replaceAll()" class="o-button o-replace-all">
            Replace all
          </button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-MoreFormatsPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-MoreFormatsPanel" xml:space="preserve">
    <div class="o-more-formats-panel">
      <div t-foreach="dateFormatsActions" t-as="action" t-key="action.name(env)" t-att-data-name="action.name(env)" t-on-click="() =&gt; action.execute(env)" class="w-100 d-flex align-items-center border-bottom format-preview">
        <span class="ms-3 check-icon">
          <t t-if="action.isActive(env)" t-call="o-spreadsheet-Icon.CHECK"/>
        </span>
        <span t-out="action.description(env)"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-EditableName", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-EditableName" xml:space="preserve">
    <t t-if="state.isEditing">
      <div>
        <input type="text" class="o-input o_sp_en_name" t-model="state.name"/>
      </div>
      <div class="o-button-link o_sp_en_save" t-on-click="save">Save</div>
    </t>
    <t t-else="">
      <div class="o_sp_en_display_name" t-esc="props.displayName"/>
      <div class="o-button-link o_sp_en_rename" t-on-click="rename">
        <i class="fa fa-pencil me-1"/>
        Rename
      </div>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDeferUpdate", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDeferUpdate" xml:space="preserve">
    <Section class="'align-items-center border-top d-flex flex-row justify-content-between py-1 pivot-defer-update'">
      <Checkbox label="deferUpdatesLabel" title="deferUpdatesTooltip" value="props.deferUpdate" onChange="(value) =&gt; props.toggleDeferUpdate(value)"/>
      <div t-if="props.isDirty" class="d-flex align-items-center">
        <i class="o-button-icon pe-0 fa fa-undo" title="Discard all changes" t-on-click="() =&gt; props.discard()"/>
        <span class="o-button-link sp_apply_update small ps-2" title="Apply all changes" t-on-click="() =&gt; props.apply()">
          Update
        </span>
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-AddDimensionButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-AddDimensionButton" xml:space="preserve">
    <button class="add-dimension o-button" t-on-click="togglePopover" t-ref="button">Add</button>
    <Popover t-if="popover.isOpen" t-props="popoverProps">
      <div class="p-2 bg-white border-bottom d-flex sticky-top align-items-baseline pivot-dimension-search">
        <i class="pe-1 pivot-dimension-search-field-icon text-muted">
          <t t-call="o-spreadsheet-Icon.SEARCH"/>
        </i>
        <input t-on-input="(ev) =&gt; this.updateSearch(ev.target.value)" t-on-keydown="onKeyDown" class="border-0 w-100 pivot-dimension-search-field" t-ref="autofocus"/>
      </div>
      <TextValueProvider proposals="autoComplete.provider.proposals" selectedIndex="autoComplete.selectedIndex" onValueSelected="autoComplete.provider.selectProposal" onValueHovered="() =&gt; {}"/>
      <t t-slot="default" t-on-click="togglePopover"/>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDimension", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDimension" xml:space="preserve">
    <div class="py-1 px-2 d-flex flex-column shadow-sm pivot-dimension" t-att-class="{'pivot-dimension-invalid': !props.dimension.isValid}">
      <div class="d-flex flex-row justify-content-between align-items-center">
        <div class="d-flex align-items-center overflow-hidden text-nowrap">
          <span class="text-danger me-1" t-if="!props.dimension.isValid">
            <t t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
          </span>
          <TextInput t-if="props.onNameUpdated" value="props.dimension.displayName" onChange.bind="updateName" class="'fw-bold'"/>
          <span t-else="1" class="fw-bold" t-esc="props.dimension.displayName"/>
        </div>
        <div class="d-flex flex-rows">
          <t t-slot="upper-right-icons"/>
          <i class="o-button-icon fa fa-trash pe-1 ps-2" t-if="props.onRemoved" t-on-click="() =&gt; props.onRemoved(props.dimension)"/>
        </div>
      </div>
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDimensionGranularity", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDimensionGranularity" xml:space="preserve">
    <div class="d-flex flex-row">
      <div class="d-flex flex-row py-1 px-2 w-100 small">
        <t t-set="granularity" t-value="props.dimension.granularity"/>
        <div class="pivot-dim-operator-label">Granularity</div>
        <select class="o-input flex-grow-1" t-on-change="(ev) =&gt; props.onUpdated(props.dimension, ev.target.value)">
          <option t-foreach="props.allGranularities" t-as="granularity" t-key="granularity" t-if="props.availableGranularities.has(granularity) || granularity === props.dimension.granularity" t-att-value="granularity" t-esc="periods[granularity]" t-att-selected="granularity === props.dimension.granularity or (granularity === 'month' and !props.dimension.granularity)"/>
        </select>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDimensionOrder", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDimensionOrder" xml:space="preserve">
    <div class="d-flex">
      <div class="d-flex py-1 px-2 w-100 small">
        <div class="pivot-dim-operator-label">Order by</div>
        <select class="o-input flex-grow-1" t-on-change="(ev) =&gt; props.onUpdated(props.dimension, ev.target.value)">
          <option value="asc" t-att-selected="props.dimension.order === 'asc'">Ascending</option>
          <option value="desc" t-att-selected="props.dimension.order === 'desc'">Descending</option>
          <option t-if="props.dimension.type !== 'date'" value="" t-att-selected="props.dimension.order === undefined">
            Unsorted
          </option>
        </select>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotLayoutConfigurator", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotLayoutConfigurator" xml:space="preserve">
    <div class="o_side_panel_section pivot-dimensions o-section" t-ref="pivot-dimensions">
      <div class="fw-bold py-1 d-flex flex-row justify-content-between align-items-center o-section-title">
        Columns
        <AddDimensionButton onFieldPicked.bind="addColumnDimension" fields="props.unusedGroupableFields"/>
      </div>
      <t t-foreach="props.definition.columns" t-as="col" t-key="col.nameWithGranularity">
        <div t-on-pointerdown="(ev) =&gt; this.startDragAndDrop(col, ev)" t-att-style="dragAndDrop.itemsStyle[col.nameWithGranularity]" class="pt-1">
          <PivotDimension dimension="col" onRemoved.bind="removeDimension">
            <PivotDimensionGranularity t-if="isDateOrDatetimeField(col)" dimension="col" onUpdated.bind="this.updateGranularity" availableGranularities="props.unusedGranularities[col.fieldName]" allGranularities="getGranularitiesFor(col)"/>
            <PivotDimensionOrder dimension="col" onUpdated.bind="this.updateOrder"/>
          </PivotDimension>
        </div>
      </t>
      <div class="fw-bold pt-4 pb-1 d-flex flex-row justify-content-between align-items-center o-section-title" t-att-style="dragAndDrop.itemsStyle['__rows_title__']">
        Rows
        <AddDimensionButton onFieldPicked.bind="addRowDimension" fields="props.unusedGroupableFields"/>
      </div>
      <t t-foreach="props.definition.rows" t-as="row" t-key="row.nameWithGranularity">
        <div t-on-pointerdown="(ev) =&gt; this.startDragAndDrop(row, ev)" t-att-style="dragAndDrop.itemsStyle[row.nameWithGranularity]" class="pt-1">
          <PivotDimension dimension="row" onRemoved.bind="removeDimension">
            <PivotDimensionGranularity t-if="isDateOrDatetimeField(row)" dimension="row" onUpdated.bind="this.updateGranularity" availableGranularities="props.unusedGranularities[row.fieldName]" allGranularities="getGranularitiesFor(row)"/>
            <PivotDimensionOrder dimension="row" onUpdated.bind="this.updateOrder"/>
          </PivotDimension>
        </div>
      </t>
      <div class="fw-bold pt-4 pb-1 d-flex flex-row justify-content-between align-items-center o-section-title o-pivot-measure">
        Measures
        <AddDimensionButton onFieldPicked.bind="addMeasureDimension" fields="props.measureFields">
          <div t-on-click="addCalculatedMeasure" class="p-2 bg-white border-top d-flex align-items-center sticky-bottom add-calculated-measure">
            <i class="pe-1">
              <t t-call="o-spreadsheet-Icon.FORMULA"/>
            </i>
            Add calculated measure
          </div>
        </AddDimensionButton>
      </div>
      <t t-foreach="props.definition.measures" t-as="measure" t-key="measure.id">
        <div t-on-pointerdown="(ev) =&gt; this.startDragAndDropMeasures(measure, ev)" t-att-style="dragAndDrop.itemsStyle[measure.id]" t-att-class="measure.isHidden ? 'opacity-50' : ''" class="pt-1 pivot-measure">
          <PivotMeasureEditor pivotId="props.pivotId" definition="props.definition" measure="measure" aggregators="AGGREGATORS" onRemoved="() =&gt; this.removeMeasureDimension(measure)" onMeasureUpdated="(newMeasure) =&gt; this.updateMeasure(measure, newMeasure)" generateMeasureId.bind="getMeasureId"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotMeasureEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotMeasureEditor" xml:space="preserve">
    <t t-set="measure" t-value="props.measure"/>
    <PivotDimension dimension="measure" onRemoved="props.onRemoved" onNameUpdated.bind="updateName">
      <t t-set-slot="upper-right-icons">
        <t t-if="measure.isHidden" t-set="hideTitle">Show</t>
        <t t-else="" t-set="hideTitle">Hide</t>
        <i t-att-class="measure.isHidden ? 'fa fa-eye-slash': 'fa fa-eye'" t-att-title="hideTitle" class="o-button-icon pe-1 ps-2" t-on-click="toggleMeasureVisibility"/>
        <i class="o-button-icon pe-1 ps-2 fa fa-cog" title="Show values as" t-on-click="openShowValuesAs"/>
      </t>
      <div t-if="measure.computedBy" class="d-flex flex-row small">
        <div class="d-flex flex-column py-2 px-2 w-100">
          <StandaloneComposer onConfirm.bind="updateMeasureFormula" composerContent="measure.computedBy.formula" defaultRangeSheetId="measure.computedBy.sheetId" contextualAutocomplete="getMeasureAutocomplete()"/>
        </div>
      </div>
      <div class="d-flex flex-row">
        <div class="d-flex py-1 px-2 w-100 small">
          <div class="pivot-dim-operator-label">Aggregated by</div>
          <select class="o-input flex-grow-1" t-on-change="(ev) =&gt; this.updateAggregator(ev.target.value)">
            <option t-foreach="Object.keys(props.aggregators[measure.type])" t-as="agg" t-key="agg" t-att-value="agg" t-att-selected="agg === measure.aggregator" t-esc="props.aggregators[measure.type][agg]"/>
          </select>
        </div>
      </div>
    </PivotDimension>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotMeasureDisplayPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotMeasureDisplayPanel" xml:space="preserve">
    <Section>
      <t t-set-slot="title">Show measure as:</t>
      <select class="o-pivot-measure-display-type o-input" t-on-change="(ev) =&gt; this.store.updateMeasureDisplayType(ev.target.value)">
        <t t-foreach="measureDisplayTypeLabels" t-as="measureType" t-key="measureType">
          <option t-att-value="measureType" t-att-selected="measureType === store.measureDisplay.type" t-esc="measureType_value"/>
        </t>
      </select>
      <div class="o-pivot-measure-display-description mt-3 ps-3" t-esc="measureDisplayDescription[store.measureDisplay.type]"/>
    </Section>

    <Section t-if="store.doesDisplayNeedsField">
      <t t-set-slot="title">Base field:</t>
      <div class="o-pivot-measure-display-field w-100 py-1 px-3">
        <t t-if="store.fields.length">
          <RadioSelection choices="fieldChoices" selectedValue="store.measureDisplay.fieldNameWithGranularity" name="'baseField'" onChange.bind="(val) =&gt; store.updateMeasureDisplayField(val)" direction="'vertical'"/>
        </t>
        <t t-else="">
          <div class="text-muted text-center my-3">No active dimension in the pivot</div>
        </t>
      </div>
    </Section>

    <t t-set="values" t-value="store.values"/>
    <Section t-if="store.doesDisplayNeedsValue and values.length">
      <t t-set-slot="title">Base item:</t>
      <div class="o-pivot-measure-display-value w-100 py-1 px-3">
        <RadioSelection choices="values" selectedValue="store.measureDisplay.value" name="'baseValue'" onChange.bind="(val) =&gt; store.updateMeasureDisplayValue(val)" direction="'vertical'"/>
      </div>
    </Section>

    <Section>
      <div class="o-sidePanelButtons">
        <button t-on-click="onCancel" class="o-pivot-measure-cancel o-button">Cancel</button>
        <button t-on-click="onSave" class="o-pivot-measure-save o-button primary">Save</button>
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotSidePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotSidePanel" xml:space="preserve">
    <t t-component="sidePanelEditor" t-props="props"/>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotSpreadsheetSidePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotSpreadsheetSidePanel" xml:space="preserve">
    <div class="d-flex flex-column h-100 justify-content-between overflow-hidden">
      <div class="h-100 position-relative overflow-x-hidden overflow-y-auto">
        <PivotTitleSection pivotId="props.pivotId" flipAxis.bind="flipAxis"/>
        <Section>
          <t t-set-slot="title">Range</t>
          <SelectionInput ranges="ranges" required="true" isInvalid="shouldDisplayInvalidRangeError" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; this.onSelectionChanged(ranges)" onSelectionConfirmed="() =&gt; this.onSelectionConfirmed()"/>
          <span class="text-danger sp_range_error_message" t-if="shouldDisplayInvalidRangeError" t-esc="pivot.invalidRangeMessage"/>
        </Section>

        <PivotLayoutConfigurator t-if="!pivot.isInvalidRange" unusedGroupableFields="store.unusedGroupableFields" measureFields="store.measureFields" unusedGranularities="store.unusedGranularities" dateGranularities="store.dateGranularities" datetimeGranularities="store.datetimeGranularities" definition="definition" onDimensionsUpdated.bind="onDimensionsUpdated" pivotId="props.pivotId"/>
      </div>
      <PivotDeferUpdate deferUpdate="store.updatesAreDeferred" toggleDeferUpdate="(value) =&gt; store.deferUpdates(value)" isDirty="store.isDirty" discard="store.discardPendingUpdate" apply="store.applyUpdate"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotTitleSection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotTitleSection" xml:space="preserve">
    <Section>
      <t t-set-slot="title">
        <div class="d-flex flex-row justify-content-between align-items-center">
          Name
          <CogWheelMenu items="cogWheelMenuItems"/>
        </div>
      </t>
      <TextInput class="'os-pivot-title'" value="name" onChange.bind="onNameChanged"/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-RemoveDuplicatesPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RemoveDuplicatesPanel" xml:space="preserve">
    <div class="o-remove-duplicates">
      <Section>
        <ValidationMessages messages="[selectionStatisticalInformation]" msgType="'info'"/>
      </Section>
      <Section class="'pt-0'">
        <t t-set="dataHasHeaderLabel">Data has header row</t>
        <Checkbox name="'dataHasHeader'" value="state.hasHeader" label="dataHasHeaderLabel" onChange.bind="toggleHasHeader"/>
      </Section>

      <Section class="'pt-0'">
        <t t-set-slot="title">Columns to analyze</t>
        <div class="o-checkbox-selection overflow-auto">
          <t t-set="selectAllLabel">Select all</t>
          <Checkbox value="isEveryColumnSelected" label="selectAllLabel" onChange.bind="toggleAllColumns"/>

          <t t-foreach="Object.keys(state.columns)" t-as="colIndex" t-key="colIndex">
            <Checkbox value="state.columns[colIndex]" label="getColLabel(colIndex)" onChange="() =&gt; this.toggleColumn(colIndex)"/>
          </t>
        </div>
      </Section>

      <Section>
        <div class="o-sidePanelButtons">
          <button class="o-button primary" t-att-class="{'o-disabled': !canConfirm}" t-on-click="onRemoveDuplicates">
            Remove duplicates
          </button>
        </div>
      </Section>
      <Section t-if="errorMessages.length">
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SelectMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SelectMenu" xml:space="preserve">
    <select t-att-class="props.class" t-ref="select" t-on-pointerdown.stop.prevent="" t-on-click="onClick">
      <option selected="true" t-esc="props.selectedValue"/>
    </select>
    <Menu t-if="state.isMenuOpen" menuItems="props.menuItems" position="menuPosition" onClose.bind="onMenuClosed" menuId="menuId"/>
  </t>

  `);
registerTemplate("o-spreadsheet-SettingsPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SettingsPanel" xml:space="preserve">
    <div class="o-settings-panel">
      <Section>
        <t t-set-slot="title">Locale</t>
        <select class="o-input" t-on-change="(ev) =&gt; this.onLocaleChange(ev.target.value)">
          <option t-foreach="supportedLocales" t-as="locale" t-key="locale.code" t-att-value="locale.code" t-esc="locale.name" t-att-selected="currentLocale.code === locale.code"/>
        </select>
        <div class="o-locale-preview mt-4 p-3 rounded">
          <div>
            <span class="fw-bold me-1">Number:</span>
            <span t-esc="numberFormatPreview"/>
          </div>
          <div>
            <span class="fw-bold me-1">Date:</span>
            <span t-esc="dateFormatPreview"/>
          </div>
          <div>
            <span class="fw-bold me-1">Date time:</span>
            <span t-esc="dateTimeFormatPreview"/>
          </div>
          <div>
            <span class="fw-bold me-1">First day of week:</span>
            <span t-esc="firstDayOfWeek"/>
          </div>
        </div>
      </Section>
      <Section class="'pt-0'">
        <t t-set="message">This setting affects all users.</t>
        <ValidationMessages messages="[message]" msgType="'info'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanel" xml:space="preserve">
    <div class="o-sidePanel" t-if="sidePanelStore.isOpen">
      <div class="o-sidePanelHeader">
        <div class="o-sidePanelTitle o-heading-3" t-esc="getTitle()"/>
        <div class="o-sidePanelClose" t-on-click="close">✕</div>
      </div>
      <div class="o-sidePanelBody-container d-flex flex-grow-1 ">
        <div class="o-sidePanel-handle-container">
          <div class="o-sidePanel-handle" t-on-pointerdown="startHandleDrag" t-on-dblclick="sidePanelStore.resetPanelSize">
            <t t-call="o-spreadsheet-Icon.THIN_DRAG_HANDLE"/>
          </div>
        </div>
        <div class="o-sidePanelBody">
          <t t-component="panel.Body" t-props="sidePanelStore.panelProps" onCloseSidePanel.bind="close" t-key="'Body_' + sidePanelStore.componentTag + sidePanelStore.panelKey"/>
        </div>
        <div class="o-sidePanelFooter" t-if="panel?.Footer">
          <t t-component="panel.Footer" t-props="sidePanelStore.panelProps" t-key="'Footer_' + sidePanelStore.componentTag"/>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SplitIntoColumnsPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SplitIntoColumnsPanel" xml:space="preserve">
    <div class="o-split-to-cols-panel">
      <Section>
        <t t-set-slot="title">Separator</t>
        <select class="o-input mb-3" t-on-change="(ev) =&gt; this.onSeparatorChange(ev.target.value)">
          <option t-foreach="separators" t-as="separator" t-key="separator.value" t-att-value="separator.value" t-esc="separator.name" t-att-selected="state.separatorValue === separator.value"/>
        </select>

        <input class="o-input mb-3" type="text" t-if="state.separatorValue === 'custom'" t-att-value="state.customSeparator" t-on-input="updateCustomSeparator" placeholder="Add any characters or symbol"/>

        <t t-set="addColumnsLabel">Add new columns to avoid overwriting cells</t>
        <Checkbox value="state.addNewColumns" label="addColumnsLabel" onChange.bind="updateAddNewColumnsCheckbox"/>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button class="o-button primary" t-att-class="{'o-disabled': isConfirmDisabled}" t-on-click="confirm">
            Confirm
          </button>
        </div>
      </Section>
      <Section t-if="errorMessages.length || warningMessages.length" class="'pb-0 pt-2'">
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
        <ValidationMessages messages="warningMessages" msgType="'warning'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TablePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TablePanel" xml:space="preserve">
    <div class="o-table-panel">
      <Section>
        <t t-set-slot="title">Style options</t>
        <div class="d-flex flex-row">
          <div class="w-50">
            <div class="d-flex align-items-center">
              <Checkbox label="getCheckboxLabel('headerRow')" name="'headerRow'" value="tableConfig.numberOfHeaders &gt; 0" onChange.bind="this.updateHasHeaders"/>
              <input t-if="tableConfig.numberOfHeaders &gt; 0" t-att-value="tableConfig.numberOfHeaders" type="number" class="o-table-n-of-headers ms-2 o-input" t-on-change="onChangeNumberOfHeaders"/>
            </div>
            <Checkbox label="getCheckboxLabel('totalRow')" name="'totalRow'" value="tableConfig.totalRow" onChange="(val) =&gt; this.updateTableConfig('totalRow', val)"/>
            <Checkbox label="getCheckboxLabel('bandedRows')" name="'bandedRows'" value="tableConfig.bandedRows" onChange="(val) =&gt; this.updateTableConfig('bandedRows', val)"/>
            <Checkbox label="getCheckboxLabel('hasFilters')" name="'hasFilters'" value="tableConfig.hasFilters" title="hasFilterCheckboxTooltip" disabled="!this.canHaveFilters" onChange.bind="this.updateHasFilters"/>
          </div>
          <div>
            <Checkbox label="getCheckboxLabel('firstColumn')" name="'firstColumn'" value="tableConfig.firstColumn" onChange="(val) =&gt; this.updateTableConfig('firstColumn', val)"/>
            <Checkbox label="getCheckboxLabel('lastColumn')" name="'lastColumn'" value="tableConfig.lastColumn" onChange="(val) =&gt; this.updateTableConfig('lastColumn', val)"/>
            <Checkbox label="getCheckboxLabel('bandedColumns')" name="'bandedColumns'" value="tableConfig.bandedColumns" onChange="(val) =&gt; this.updateTableConfig('bandedColumns', val)"/>
          </div>
        </div>
      </Section>
      <Section>
        <TableStylePicker table="props.table"/>
      </Section>
      <Section>
        <t t-set-slot="title">Data range</t>
        <SelectionInput t-key="props.table.type" ranges="[this.state.tableXc]" hasSingleRange="true" isInvalid="this.state.tableZoneErrors.length !== 0" onSelectionChanged="(ranges) =&gt; this.onRangeChanged(ranges)" onSelectionConfirmed.bind="this.onRangeConfirmed"/>
      </Section>
      <Section class="'pt-0'">
        <Checkbox label="getCheckboxLabel('automaticAutofill')" name="'automaticAutofill'" value="tableConfig.automaticAutofill" onChange="(val) =&gt; this.updateTableConfig('automaticAutofill', val)" className="'mb-1'"/>
        <div class="d-flex flex-row align-items-center">
          <Checkbox label="getCheckboxLabel('isDynamic')" name="'isDynamic'" value="props.table.type === 'dynamic'" onChange.bind="this.updateTableIsDynamic" disabled="!this.canBeDynamic"/>
          <div class="o-info-icon d-flex flex-row align-items-center text-muted ps-1" t-att-title="dynamicTableTooltip">
            <t t-call="o-spreadsheet-Icon.CIRCLE_INFO"/>
          </div>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button t-on-click="deleteTable" class="o-table-delete o-button o-button-danger">
            Delete table
          </button>
        </div>
      </Section>
      <Section t-if="errorMessages.length">
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TableStyleEditorPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStyleEditorPanel" xml:space="preserve">
    <div class="o-table-style-editor-panel">
      <Section>
        <t t-set-slot="title">Style name</t>
        <input type="text" class="o-input" t-model="state.styleName"/>
      </Section>
      <Section class="'pt-1'">
        <t t-set-slot="title">Style color</t>
        <RoundColorPicker currentColor="state.primaryColor" onColorPicked.bind="onColorPicked"/>
      </Section>
      <Section class="'pt-1'">
        <t t-set-slot="title">Style template</t>
        <div class="d-flex flex-wrap">
          <t t-foreach="tableTemplates" t-as="templateName" t-key="templateName">
            <TableStylePreview class="'o-table-style-edit-template-preview'" selected="templateName === state.selectedTemplateName" tableConfig="previewTableConfig" tableStyle="computeTableStyle(templateName)" onClick="() =&gt; this.onTemplatePicked(templateName)"/>
          </t>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button t-if="props.styleId" t-on-click="onDelete" class="o-delete o-button-danger o-button">
            Delete
          </button>
          <button t-on-click="onCancel" class="o-cancel o-button">Cancel</button>
          <button t-on-click="onConfirm" class="o-confirm o-button primary">Confirm</button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Spreadsheet", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Spreadsheet" xml:space="preserve">
    <div class="o-spreadsheet" t-on-keydown="(ev) =&gt; !env.isDashboard() and this.onKeydown(ev)" t-ref="spreadsheet" t-att-style="getStyle()">
      <t t-if="env.isDashboard()">
        <SpreadsheetDashboard/>
      </t>
      <t t-else="">
        <TopBar onClick="() =&gt; this.focusGrid()" dropdownMaxHeight="gridHeight"/>
        <div class="o-grid-container" t-att-class="{'o-two-columns': !sidePanel.isOpen}" t-att-style="gridContainerStyle" t-on-click="this.focusGrid">
          <div class="o-top-left"/>
          <div class="o-column-groups">
            <HeaderGroupContainer layers="colLayers" dimension="'COL'"/>
          </div>
          <div class="o-row-groups">
            <HeaderGroupContainer layers="rowLayers" dimension="'ROW'"/>
          </div>
          <div class="o-group-grid overflow-hidden">
            <Grid exposeFocus="(focus) =&gt; this._focusGrid = focus"/>
          </div>
        </div>
        <SidePanel/>
        <BottomBar onClick="() =&gt; this.focusGrid()"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TableDropdownButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableDropdownButton" xml:space="preserve">
    <div class="o-table-widget d-flex align-item-center">
      <ActionButton action="action" hasTriangleDownIcon="true" t-on-click="onClick" class="'o-hoverable-button'"/>
    </div>
    <TableStylesPopover tableConfig="tableConfig" onStylePicked.bind="onStylePicked" popoverProps="state.popoverProps" closePopover.bind="closePopover"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableResizer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableResizer" xml:space="preserve">
    <div class="o-table-resizer position-absolute" t-att-style="containerStyle" t-on-pointerdown="onMouseDown"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableStylePicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStylePicker" xml:space="preserve">
    <div class="o-table-style-picker d-flex flew-row justify-content-between ps-1">
      <div class="d-flex flex-row overflow-hidden ps-2">
        <t t-foreach="getDisplayedTableStyles()" t-as="styleId" t-key="styleId">
          <TableStylePreview class="'o-table-style-picker-preview'" selected="styleId === props.table.config.styleId" tableConfig="props.table.config" tableStyle="env.model.getters.getTableStyle(styleId)" styleId="styleId" onClick="() =&gt; this.onStylePicked(styleId)"/>
        </t>
      </div>
      <div class="o-table-style-picker-arrow d-flex align-items-center px-1" t-on-click.stop="onArrowButtonClick">
        <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
      </div>
    </div>
    <TableStylesPopover tableConfig="props.table.config" selectedStyleId="props.table.config.styleId" onStylePicked.bind="onStylePicked" popoverProps="state.popoverProps" closePopover.bind="closePopover"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableStylePreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStylePreview" xml:space="preserve">
    <div class="o-table-style-list-item position-relative" t-att-class="{ 'selected': props.selected }" t-att-data-id="props.styleId" t-att-title="styleName" t-on-click="props.onClick" t-on-contextmenu.prevent="(ev) =&gt; this.onContextMenu(ev)">
      <div t-att-class="props.class">
        <canvas t-ref="canvas" class="w-100 h-100"/>
      </div>
      <div class="o-table-style-edit-button position-absolute d-none" t-if="isStyleEditable" t-on-click="this.editTableStyle" title="Edit custom table style">
        <t t-call="o-spreadsheet-Icon.EDIT"/>
      </div>
    </div>
    <Menu t-if="menu.isOpen" menuItems="menu.menuItems" position="menu.position" onClose.bind="this.closeMenu"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableStylesPopover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStylesPopover" xml:space="preserve">
    <Popover t-if="props.popoverProps" t-props="props.popoverProps">
      <div class="o-table-style-popover d-flex flex-column py-3" t-ref="tableStyleList" t-on-contextmenu.prevent="">
        <div class="d-flex o-notebook ps-4 mb-3">
          <div t-foreach="Object.keys(categories)" t-as="category" t-key="category" class="o-notebook-tab d-flex align-items-center" t-att-class="{ 'selected': state.selectedCategory === category }" t-on-click="() =&gt; state.selectedCategory = category" t-att-data-id="category" t-esc="categories[category_value]"/>
        </div>
        <div class="d-flex flex-wrap px-4">
          <t t-foreach="displayedStyles" t-as="styleId" t-key="styleId">
            <TableStylePreview class="'o-table-style-popover-preview'" styleId="styleId" selected="styleId === props.selectedStyleId" tableConfig="props.tableConfig" tableStyle="env.model.getters.getTableStyle(styleId)" onClick="() =&gt; this.props.onStylePicked(styleId)"/>
          </t>
          <div t-if="state.selectedCategory === 'custom'" class="o-new-table-style o-table-style-list-item o-table-style-popover-preview d-flex justify-content-center align-items-center" t-on-click="newTableStyle">
            +
          </div>
        </div>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-TextInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<div t-name="o-spreadsheet-TextInput" class="w-100" xml:space="preserve">
    <input t-ref="input" class="os-input w-100" type="text" t-att-class="props.class" t-att-id="props.id" t-att-placeholder="props.placeholder" t-att-value="props.value" t-on-change="save" t-on-focus="focusInputAndSelectContent" t-on-blur="save" t-on-mouseup.prevent.stop="" t-on-keydown="onKeyDown"/>
  </div>

  `);
registerTemplate("o-spreadsheet-TopBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TopBar" xml:space="preserve">
    <t t-set="text_color">Text Color</t>
    <t t-set="fill_color">Fill Color</t>
    <div class="o-spreadsheet-topbar o-two-columns d-flex flex-column user-select-none" t-on-click="props.onClick">
      <div class="o-topbar-top d-flex justify-content-between">

        <div class="o-topbar-topleft d-flex">
          <t t-foreach="menus" t-as="menu" t-key="menu_index">
            <div t-if="menu.children.length !== 0" class="o-topbar-menu o-hoverable-button rounded" t-att-class="{'active': state.menuState.parentMenu and state.menuState.parentMenu.id === menu.id}" t-on-click="(ev) =&gt; this.toggleContextMenu(menu, ev)" t-on-mouseover="(ev) =&gt; this.onMenuMouseOver(menu, ev)" t-att-data-id="menu.id">
              <t t-esc="getMenuName(menu)"/>
            </div>
          </t>
        </div>
        <div class="o-topbar-topright d-flex justify-content-end align-items-center">
          <div t-foreach="topbarComponents" t-as="comp" t-key="comp.id" class="px-1">
            <t t-component="comp.component"/>
          </div>
        </div>
      </div>

      <div class="d-flex">
        <div class="o-topbar-toolbar d-flex flex-shrink-0">

          <div t-if="env.model.getters.isReadonly()" class="o-readonly-toolbar d-flex align-items-center text-muted">
            <span>
              <i class="fa fa-eye"/>
              Readonly Access
            </span>
          </div>
          <div t-else="" class="o-toolbar-tools d-flex flex-shrink-0 ms-4">
            <ActionButton action="EDIT.undo" class="'o-hoverable-button'"/>
            <ActionButton action="EDIT.redo" class="'o-hoverable-button'"/>
            <PaintFormatButton class="'o-hoverable-button'"/>
            <ActionButton action="FORMAT.clearFormat" class="'o-hoverable-button'"/>

            <div class="o-divider"/>

            <ActionButton action="FORMAT.formatPercent" class="'o-hoverable-button'"/>
            <ActionButton action="FORMAT.decraseDecimalPlaces" class="'o-hoverable-button'"/>
            <ActionButton action="FORMAT.incraseDecimalPlaces" class="'o-hoverable-button'"/>
            <ActionButton action="formatNumberMenuItemSpec" onClick="(ev) =&gt; this.toggleToolbarContextMenu(formatNumberMenuItemSpec, ev)" hasTriangleDownIcon="true" class="'o-hoverable-button'"/>

            <div class="o-divider"/>
            <FontSizeEditor class="'o-hoverable-button'" onToggle.bind="this.onClick" dropdownStyle="this.dropdownStyle"/>
            <div class="o-divider"/>

            <ActionButton action="FORMAT.formatBold" class="'o-hoverable-button'"/>
            <ActionButton action="FORMAT.formatItalic" class="'o-hoverable-button'"/>
            <ActionButton action="FORMAT.formatStrikethrough" class="'o-hoverable-button'"/>

            <ColorPickerWidget currentColor="state.textColor" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('textColorTool', ev)" showColorPicker="state.activeTool === 'textColorTool'" onColorPicked="(color) =&gt; this.setColor('textColor', color)" title="text_color" icon="'o-spreadsheet-Icon.TEXT_COLOR'" dropdownMaxHeight="this.props.dropdownMaxHeight" class="'o-hoverable-button o-menu-item-button'"/>

            <div class="o-divider"/>

            <ColorPickerWidget currentColor="state.fillColor" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('fillColorTool', ev)" showColorPicker="state.activeTool === 'fillColorTool'" onColorPicked="(color) =&gt; this.setColor('fillColor', color)" title="fill_color" icon="'o-spreadsheet-Icon.FILL_COLOR'" dropdownMaxHeight="this.props.dropdownMaxHeight" class="'o-hoverable-button o-menu-item-button'"/>

            <BorderEditorWidget class="'o-hoverable-button o-menu-item-button'" toggleBorderEditor="(ev) =&gt; this.toggleDropdownTool('borderTool', ev)" showBorderEditor="state.activeTool === 'borderTool'" dropdownMaxHeight="this.props.dropdownMaxHeight"/>
            <ActionButton action="EDIT.mergeCells" class="'o-hoverable-button'"/>
            <div class="o-divider"/>

            <div class="o-dropdown">
              <ActionButton action="FORMAT.formatAlignmentHorizontal" hasTriangleDownIcon="true" t-on-click="(ev) =&gt; this.toggleDropdownTool('horizontalAlignTool', ev)" class="'o-hoverable-button'"/>
              <div class="o-dropdown-content" t-if="state.activeTool === 'horizontalAlignTool'" t-att-style="dropdownStyle" t-on-click.stop="">
                <div class="o-dropdown-line">
                  <ActionButton action="FORMAT.formatAlignmentLeft" class="'o-hoverable-button'"/>
                  <ActionButton action="FORMAT.formatAlignmentCenter" class="'o-hoverable-button'"/>
                  <ActionButton action="FORMAT.formatAlignmentRight" class="'o-hoverable-button'"/>
                </div>
              </div>
            </div>
            <div class="o-dropdown">
              <ActionButton action="FORMAT.formatAlignmentVertical" hasTriangleDownIcon="true" t-on-click="(ev) =&gt; this.toggleDropdownTool('verticalAlignTool', ev)" class="'o-hoverable-button'"/>
              <div class="o-dropdown-content" t-att-style="dropdownStyle" t-if="state.activeTool === 'verticalAlignTool'" t-on-click.stop="">
                <div class="o-dropdown-line">
                  <ActionButton action="FORMAT.formatAlignmentTop" class="'o-hoverable-button'"/>
                  <ActionButton action="FORMAT.formatAlignmentMiddle" class="'o-hoverable-button'"/>
                  <ActionButton action="FORMAT.formatAlignmentBottom" class="'o-hoverable-button'"/>
                </div>
              </div>
            </div>
            <div class="o-dropdown">
              <ActionButton action="FORMAT.formatWrapping" hasTriangleDownIcon="true" t-on-click="(ev) =&gt; this.toggleDropdownTool('textWrappingTool', ev)" class="'o-hoverable-button'"/>
              <div class="o-dropdown-content" t-att-style="dropdownStyle" t-if="state.activeTool === 'textWrappingTool'" t-on-click.stop="">
                <div class="o-dropdown-line">
                  <ActionButton action="FORMAT.formatWrappingOverflow" class="'o-hoverable-button'"/>
                  <ActionButton action="FORMAT.formatWrappingWrap" class="'o-hoverable-button'"/>
                  <ActionButton action="FORMAT.formatWrappingClip" class="'o-hoverable-button'"/>
                </div>
              </div>
            </div>

            <div class="o-divider"/>

            <TableDropdownButton/>
            <ActionButton action="DATA.createRemoveFilterTool" class="'o-hoverable-button'"/>
          </div>
        </div>
        <TopBarComposer/>
      </div>
    </div>
    <Menu t-if="state.menuState.isOpen" position="state.menuState.position" menuItems="state.menuState.menuItems" onClose="() =&gt; this.closeMenus()" onMenuClicked="() =&gt; this.props.onClick()"/>
  </t>

  `);
registerTemplate("o-spreadsheet-ValidationMessages", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ValidationMessages" xml:space="preserve">
    <t t-foreach="alertBoxes" t-as="box" t-key="'box' + box_index">
      <div t-att-class="divClasses" class="d-flex flex-column p-3 m-1 o-validation">
        <div class="d-flex align-items-center">
          <t t-if="props.msgType === 'info'" t-call="o-spreadsheet-Icon.CIRCLE_INFO"/>
          <t t-else="" t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
          <div class="d-flex flex-column overflow-hidden">
            <span t-foreach="box" t-as="msg" t-key="msg_index" class="ps-2" t-att-class="{'text-truncate': props.singleBox }" t-esc="msg"/>
          </div>
        </div>
      </div>
    </t>
  </t>
`);
registerTemplate("spreadsheet.SpreadsheetComponent", `/spreadsheet/static/src/actions/spreadsheet_component.xml`, `<div t-name="spreadsheet.SpreadsheetComponent" class="o_spreadsheet_container o_field_highlight" xml:space="preserve">
        <Spreadsheet model="model"/>
    </div>
`);
registerTemplateExtension("o-spreadsheet-FigureComponent", `/spreadsheet/static/src/chart/odoo_menu/figure_component.xml`, `<div t-name="spreadsheet.FigureComponent" t-inherit="o-spreadsheet-FigureComponent" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('o-figure-menu-item')]" position="before">
            <div t-if="hasOdooMenu and !env.isDashboard()" class="o-figure-menu-item o-chart-external-link" t-on-click="navigateToOdooMenu">
                <span class="fa fa-external-link"/>
            </div>
        </xpath>
        <xpath expr="//div[hasclass('o-figure')]" position="attributes">
            <attribute name="t-on-click">() =&gt; this.onClick()</attribute>
            <attribute name="t-att-role">env.isDashboard() and hasOdooMenu ? "button" : ""</attribute>
        </xpath>
    </div>
`);
registerTemplate("spreadsheet.ShareButton", `/spreadsheet/static/src/components/share_button/share_button.xml`, `<t t-name="spreadsheet.ShareButton" xml:space="preserve">
    <Dropdown menuClass="'spreadsheet_share_dropdown d-flex flex-column h-auto'" position="'bottom-end'" onOpened.bind="onOpened" disabled="!props.model">
      <button t-att-class="togglerClass">
        <i class="fa fa-share-alt"/>
        Share
      </button>
      <t t-set-slot="content">
        <t t-if="state.url">
          <div class="d-flex px-3">
            <div class="align-self-center d-flex justify-content-center align-items-center flex-shrink-0">
              <i class="fa fa-globe fa-2x" title="Share to web"/>
            </div>
            <div class="flex-grow-1 px-3">
              <div class="lead">Spreadsheet published</div>
              <div>Frozen version - Anyone can view</div>
            </div>
          </div>
          <div class=" px-3 o_field_widget o_readonly_modifier o_field_CopyClipboardChar">
            <div class="d-grid rounded-2 overflow-hidden">
              <span t-out="state.url"/>
              <CopyButton className="'o_btn_char_copy btn-sm'" content="state.url" successText="copiedText" icon="'fa-clone'"/>
            </div>
          </div>
        </t>
        <div t-else="" class="d-flex align-items-center justify-content-center h-100">
          <i class="fa fa-spin fa-spinner px-2"/><span>Generating sharing link</span>
        </div>
      </t>
    </Dropdown>
  </t>
`);
registerTemplate("spreadsheet.DateFromToValue", `/spreadsheet/static/src/global_filters/components/filter_date_from_to_value/filter_date_from_to_value.xml`, `<div t-name="spreadsheet.DateFromToValue" class="date_filter_values" xml:space="preserve">
        <DateTimeInput value="dateFrom" type="'date'" placeholder.translate="Date from..." onChange.bind="onDateFromChanged"/>
        <i class="oi oi-arrow-right"/>
        <DateTimeInput value="dateTo" type="'date'" placeholder.translate="Date to..." onChange.bind="onDateToChanged"/>
    </div>
`);
registerTemplate("spreadsheet_edition.DateFilterValue", `/spreadsheet/static/src/global_filters/components/filter_date_value/filter_date_value.xml`, `<div t-name="spreadsheet_edition.DateFilterValue" class="date_filter_values" xml:space="preserve">
        <select t-if="dateOptions.length" class="o_input me-3" t-on-change="onPeriodChanged">
            <option value="empty">Select period...</option>
            <t t-foreach="dateOptions" t-as="periodOption" t-key="periodOption.id">
                <option t-if="isSelected(periodOption.id)" selected="1" t-att-value="periodOption.id">
                    <t t-esc="periodOption.description"/>
                </option>
                <option t-else="" t-att-value="periodOption.id">
                    <t t-esc="periodOption.description"/>
                </option>
            </t>
        </select>
        <DateTimeInput value="date" format="'yyyy'" minPrecision="'years'" type="'date'" placeholder.translate="Select year..." onChange.bind="onYearChanged"/>
    </div>
`);
registerTemplate("spreadsheet.TextFilterValue", `/spreadsheet/static/src/global_filters/components/filter_text_value/filter_text_value.xml`, `<t t-name="spreadsheet.TextFilterValue" xml:space="preserve">
        <select t-if="props.options?.length" t-on-change="(e) =&gt; props.onValueChanged(e.target.value)" class="o_input me-3" required="true">
            <option value="">Choose a value...</option>
            <t t-foreach="props.options" t-as="option" t-key="option.formattedValue">
                <option t-att-selected="option.value === props.value" t-att-value="option.value" t-esc="option.formattedValue"/>
            </t>
        </select>
        <input type="text" t-else="" class="o_input o-global-filter-text-value text-truncate" t-att-placeholder="translate(props.label)" t-att-value="props.value" t-on-change="(e) =&gt; props.onValueChanged(e.target.value)"/>
    </t>
`);
registerTemplate("spreadsheet_edition.FilterValue", `/spreadsheet/static/src/global_filters/components/filter_value/filter_value.xml`, `<t t-name="spreadsheet_edition.FilterValue" xml:space="preserve">
        <div class="o-filter-value d-flex align-items-start w-100">
            <div t-if="filter.type === 'text'" class="w-100">
                <TextFilterValue value="filterValue" label="filter.label" options="textAllowedValues" onValueChanged="(value) =&gt; this.onTextInput(filter.id, value)"/>
            </div>
            <span t-if="filter.type === 'relation'" class="w-100">
                <MultiRecordSelector placeholder="' ' + translate(filter.label)" resModel="filter.modelName" resIds="filterValue || []" domain="relationalAllowedDomain" update="(resIds) =&gt; this.onTagSelected(filter.id, resIds)"/>
            </span>
            <div t-if="filter.type === 'date'" class="w-100">
                <select t-if="filter.rangeType === 'relative'" t-on-change="(e) =&gt; this.onDateInput(filter.id, e.target.value || undefined)" class="date_filter_values o_input me-3" required="true">
                    <option value="">Select period...</option>
                    <t t-foreach="relativeDateRangesTypes" t-as="range" t-key="range.type">
                        <option t-att-selected="range.type === filterValue" t-att-value="range.type">
                            <t t-esc="range.description"/>
                        </option>
                    </t>
                </select>
                <DateFromToValue t-elif="filter.rangeType === 'from_to'" from="filterValue?.from" to="filterValue?.to" onFromToChanged="(value) =&gt; this.onDateInput(filter.id, value)"/>

                <DateFilterValue t-else="" period="filterValue?.period" yearOffset="filterValue?.yearOffset" disabledPeriods="filter.disabledPeriods" onTimeRangeChanged="(value) =&gt; this.onDateInput(filter.id, value)"/>
            </div>
            <i t-if="getters.isGlobalFilterActive(filter.id)" class="fa fa-times btn btn-link text-muted o_side_panel_filter_icon ms-1" title="Clear" t-on-click="() =&gt; this.clear(filter.id)"/>
        </div>
    </t>
`);
registerTemplate("o-spreadsheet-Icon.SEE_RECORDS", `/spreadsheet/static/src/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.SEE_RECORDS" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9.05 11.25c-1.49 0-2.7-1.21-2.7-2.7s1.21-2.7 2.7-2.7 2.7 1.21 2.7 2.7-1.21 2.7-2.7 2.7m0-1.8c.5 0 .9-.4.9-.9s-.4-.9-.9-.9-.9.4-.9.9.4.9.9.9M9 3.15c-3.75 0-6.7 2.1-8 5.06 1.3 2.97 4.25 5.74 8 5.74s6.7-2.77 8-5.74c-1.3-2.96-4.25-5.06-8-5.06m0 9c-2.84 0-4.78-1.66-6.02-3.94C4.22 5.94 6.16 4.95 9 4.95s4.8.99 6.03 3.26c-1.23 2.27-3.19 3.94-6.03 3.94"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DOWNLOAD", `/spreadsheet/static/src/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.DOWNLOAD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2 10.5h1.5V15h11v-4.5H16v6H2M5.5 8H8V1h2v7h2.5L9 11.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.GLOBAL_FILTERS", `/spreadsheet/static/src/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.GLOBAL_FILTERS" xml:space="preserve">
    <svg width="20" height="20" viewbox="0 0 20 20">
      <path fill="currentColor" d="M1 3h12L7 9M5.5 6h3v11l-3-3M14 4h4v2h-4m-3 3h7v2h-7m0 3h7v2h-7"/>
    </svg>
  </t>
`);
registerTemplate("spreadsheet_dashboard.DashboardAction", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.xml`, `<div t-name="spreadsheet_dashboard.DashboardAction" class="o_action o_spreadsheet_dashboard_action o_field_highlight" xml:space="preserve">
        <ControlPanel display="controlPanelDisplay">
            <t t-set-slot="layout-actions" t-if="!state.activeDashboard?.isSample">
                <t t-set="status" t-value="state.activeDashboard and state.activeDashboard.status"/>
                <FilterValue t-if="status === Status.Loaded" filter="filter" model="state.activeDashboard.model" t-as="filter" t-foreach="filters" t-key="filter.id"/>
            </t>
            <t t-set-slot="control-panel-navigation-additional" t-if="!state.activeDashboard?.isSample">
                <SpreadsheetShareButton t-key="activeDashboardId" model="state.activeDashboard?.model" onSpreadsheetShared.bind="shareSpreadsheet" togglerClass="'btn-light'"/>
            </t>
        </ControlPanel>
        <t t-set="dashboard" t-value="state.activeDashboard"/>
        <div class="o_content o_component_with_search_panel" t-att-class="{ o_mobile_dashboard: env.isSmall }">

            <t t-if="env.isSmall">
                <DashboardMobileSearchPanel onDashboardSelected="(dashboardId) =&gt; this.openDashboard(dashboardId)" activeDashboard="dashboard" groups="getDashboardGroups()"/>
            </t>
            <t t-else="">
                <t t-if="state.sidebarExpanded" t-call="spreadsheet_dashboard.DashboardAction.Expanded"/>
                <t t-else="" t-call="spreadsheet_dashboard.DashboardAction.Collapsed"/>
            </t>

            <h3 t-if="!dashboard" class="dashboard-loading-status">No available dashboard</h3>
            <t t-else="">
                <t t-set="status" t-value="dashboard.status"/>
                <h3 t-if="status === Status.Loading" class="dashboard-loading-status">Loading...</h3>
                <div t-elif="status === Status.Error" class="dashboard-loading-status error">
                    An error occured while loading the dashboard
                </div>
                <t t-else="">
                    <MobileFigureContainer t-if="env.isSmall" spreadsheetModel="dashboard.model" t-key="dashboard.id"/>
                    <div t-else="" class="o_renderer" t-att-class="{'o-sample-dashboard': dashboard.isSample}">
                        <SpreadsheetComponent model="dashboard.model" t-key="dashboard.id"/>
                    </div>
                </t>
            </t>
        </div>
    </div>

    `);
registerTemplate("spreadsheet_dashboard.DashboardAction.Collapsed", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.xml`, `<t t-name="spreadsheet_dashboard.DashboardAction.Collapsed" xml:space="preserve">
        <div class="bg-view h-100 o_search_panel_sidebar cursor-pointer" t-on-click="toggleSidebar">
            <div class="d-flex">
                <button class="btn btn-light btn-sm m-1 mb-2 p-2">
                    <i class="fa fa-angle-double-right"/>
                </button>
                <div class="mx-auto" t-if="state.activeDashboard">
                    <span class="fw-bolder" t-esc="activeDashboardGroupName"/>
                    /
                    <t t-esc="state.activeDashboard.displayName"/>
                </div>
            </div>
        </div>
    </t>

    `);
registerTemplate("spreadsheet_dashboard.DashboardAction.Expanded", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.xml`, `<t t-name="spreadsheet_dashboard.DashboardAction.Expanded" xml:space="preserve">
        <div class="o_spreadsheet_dashboard_search_panel o_search_panel flex-grow-0 border-end flex-shrink-0 pe-2 pb-5 ps-4 h-100 bg-view overflow-auto position-relative">
            <button t-if="!env.isSmall and state.activeDashboard" class="btn btn-light btn-sm end-0 m-1 mb-2 position-absolute px-2 py-1 top-0 z-1" t-on-click="toggleSidebar">
                <i class="fa fa-fw fa-angle-double-left"/>
            </button>
            <div class="mt-2"/>
            <section t-foreach="getDashboardGroups()" t-as="group" t-key="group.id" class="o_search_panel_section o_search_panel_category">
                <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase o_cursor_default user-select-none">
                    <b t-esc="group.name"/>
                </header>
                <ul class="list-group d-block o_search_panel_field">
                    <li t-foreach="group.dashboards" t-as="dashboard" t-key="dashboard.id" t-on-click="() =&gt; this.openDashboard(dashboard.id)" t-att-data-name="dashboard.displayName" class="o_search_panel_category_value list-group-item cursor-pointer border-0 d-flex justify-content-between align-items-center" t-att-class="{'active': dashboard.id === state.activeDashboard.id}">
                        <div class="o_dashboard_name">
                            <t t-esc="dashboard.displayName"/>
                        </div>
                        <t t-set="comp" t-value="dashboardButton"/>
                        <t t-if="comp">
                            <t t-component="comp" t-props="{ dashboardId: dashboard.id, onClick: this.editDashboard.bind(this) }"/>
                        </t>
                    </li>
                </ul>
            </section>
        </div>
    </t>
`);
registerTemplate("documents_spreadsheet.MobileFigureContainer", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/mobile_figure_container/mobile_figure_container.xml`, `<t t-name="documents_spreadsheet.MobileFigureContainer" xml:space="preserve">
        <t t-if="!figures.length">
            Only chart figures are displayed in small screens but this dashboard doesn't contain any
        </t>
        <t t-foreach="figures" t-as="figure" t-component="getFigureComponent(figure)" onFigureDeleted="() =&gt; {}" figure="figure" t-key="figure.id"/>
    </t>
`);
registerTemplate("spreadsheet_dashboard.DashboardMobileSearchPanel", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/mobile_search_panel/mobile_search_panel.xml`, `<div t-name="spreadsheet_dashboard.DashboardMobileSearchPanel" class="o_search_panel o_search_panel_summary btn w-100 overflow-visible" xml:space="preserve">
        <t t-if="state.isOpen">
            <t t-portal="'body'">
                <div class="o_spreadsheet_dashboard_search_panel o_search_panel o_searchview o_mobile_search">
                    <div class="o_mobile_search_header">
                        <button type="button" class="o_mobile_search_button btn" t-on-click="() =&gt; this.state.isOpen = false">
                            <i class="oi oi-arrow-left"/>
                            <strong class="ml8">BACK</strong>
                        </button>
                    </div>
                    <div class="o_mobile_search_content">
                        <div class="o_search_panel flex-grow-0 flex-shrink-0 border-end pe-2 pb-5 ps-4 h-100 bg-view overflow-auto">
                            <section t-foreach="props.groups" t-as="group" t-key="group.id" class="o_search_panel_section o_search_panel_category">
                                <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                                    <b t-esc="group.name"/>
                                </header>
                                <ul class="list-group d-block o_search_panel_field">
                                    <li t-foreach="group.dashboards" t-as="dashboard" t-key="dashboard.id" t-on-click="() =&gt; this.onDashboardSelected(dashboard.id)" class="o_search_panel_category_value list-group-item py-1 o_cursor_pointer border-0 ps-0 pe-2">
                                        <header class="list-group-item list-group-item-action d-flex align-items-center p-0 border-0" t-att-class="{'active text-900 fw-bold': dashboard.id === props.activeDashboard.id}">
                                            <div class="o_search_panel_label d-flex align-items-center overflow-hidden w-100 o_cursor_pointer mb-0">

                                                <button class="o_toggle_fold btn p-0 flex-shrink-0 text-center"/>
                                                <span t-esc="dashboard.displayName" class="o_search_panel_label_title text-truncate"/>
                                            </div>

                                        </header>
                                    </li>
                                </ul>
                            </section>
                        </div>
                    </div>
                </div>
            </t>
        </t>
        <div t-elif="props.groups.length" t-on-click="openDashboardSelection" class="d-flex align-items-center">
            <i class="fa fa-fw fa-filter"/>
            <div t-esc="searchBarText" class="o_search_panel_current_selection text-truncate ms-2 me-auto"/>
        </div>
    </div>
`);
registerTemplate("spreadsheet_edition.FilterEditorLabel", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/filter_editor_side_panel.xml`, `<t t-name="spreadsheet_edition.FilterEditorLabel" xml:space="preserve">
        <div class="o_side_panel_title">Label</div>
        <div t-att-class="props.inputClass" class="o_required_modifier">
            <input type="text" class="o-input o_global_filter_label" t-att-value="props.label" t-on-change="props.setLabel" t-ref="labelInput" t-att-placeholder="props.placeholder"/>
        </div>
    </t>

    `);
registerTemplate("spreadsheet_edition.FilterEditorButtons", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/filter_editor_side_panel.xml`, `<t t-name="spreadsheet_edition.FilterEditorButtons" xml:space="preserve">
        <button t-if="onDelete" t-on-click="onDelete" class="o-button o_global_filter_delete o-button-danger">Remove</button>
        <button t-on-click="onCancel" class="o-button o_global_filter_cancel">Cancel</button>
        <button t-on-click="onSave" class="o-button primary o_global_filter_save">Save</button>
    </t>

    `);
registerTemplate("spreadsheet_edition.FilterEditorFieldMatching", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/filter_editor_side_panel.xml`, `<t t-name="spreadsheet_edition.FilterEditorFieldMatching" xml:space="preserve">
        <div class="text-muted">
            Match this filter to a field for each data source
        </div>

        <div t-foreach="props.fieldMatchings" t-as="object" t-key="object_index" t-att-class="object.fieldMatch.chain ? '' : 'o_missing_field'" class="o_spreadsheet_field_matching o_required_field">
            <div>
                <span class="fw-medium" t-esc="object.name"/>
                <span class="o_spreadsheet_model_technical_name text-muted"> (<t t-esc="object.tag"/>)</span>
            </div>
            <div class="d-flex justify-content-between">
                <div t-att-class="props.wrongFieldMatchings.includes(object_index) ? 'o_field_invalid' : ''" class="d-flex flex-column justify-content-end w-50 flex-grow-1" name="field-match">
                    <ModelFieldSelector path="getModelField(object.fieldMatch)" resModel="object.model()" readonly="false" allowEmpty="true" isDebugMode="!!env.debug" update="(path, fieldInfo) =&gt; props.selectField(object_index, path, fieldInfo.fieldDef)" filter.bind="props.filterModelFieldSelectorField" t-key="object_index"/>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("spreadsheet_edition.SpreadsheetName", `/spreadsheet_edition/static/src/bundle/actions/control_panel/spreadsheet_name.xml`, `<div t-name="spreadsheet_edition.SpreadsheetName" class="o_sp_name d-flex" xml:space="preserve">
        <input type="text" title="Rename" t-ref="speadsheetNameInput" t-att-value="state.name" t-on-focus="_onFocus" t-attf-style="width: {{state.inputSize}}px" t-att-placeholder="placeholder" t-on-input="_onInput" t-att-class="state.isUntitled ? 'o-sp-untitled' : ''" class="o_input" t-on-change="_onNameChanged" t-att-disabled="props.isReadonly"/>
    </div>
`);
registerTemplate("spreadsheet_edition.InputDialog", `/spreadsheet_edition/static/src/bundle/actions/input_dialog/input_dialog.xml`, `<t t-name="spreadsheet_edition.InputDialog" xml:space="preserve">
        <Dialog title="props.title || defaultTitle" size="'md'">
            <div t-if="props.body" t-esc="props.body"/>
            <input t-att-type="props.inputType" class="form-control" t-model="state.inputValue"/>
            <span t-if="state.error.length" class="text-danger" t-esc="state.error"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="confirm">Confirm</button>
                <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("spreadsheet_edition.VersionHistoryAction", `/spreadsheet_edition/static/src/bundle/actions/version_history/version_history_action.xml`, `<div t-name="spreadsheet_edition.VersionHistoryAction" class="o_spreadsheet_action" xml:space="preserve">
    <SpreadsheetNavbar spreadsheetName="state.spreadsheetName" isReadonly="true"/>
    <SpreadsheetComponent model="model"/>
</div>

`);
registerTemplate("spreadsheet_edition.OdooMenuChartPanelSection", `/spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.xml`, `<t t-name="spreadsheet_edition.OdooMenuChartPanelSection" xml:space="preserve">
        <Section>
            <t t-set-slot="title">Link to Odoo menu</t>
            <IrMenuSelector menuId="odooMenuId" onValueChanged.bind="updateOdooLink"/>
        </Section>
    </t>

    `);
registerTemplateExtension("o-spreadsheet-GenericChartConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.xml`, `<t t-name="spreadsheet_edition.GenericChartConfigPanel" t-inherit="o-spreadsheet-GenericChartConfigPanel" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ChartErrorSection" position="before">
            <t t-call="spreadsheet_edition.OdooMenuChartPanelSection"/>
        </xpath>
    </t>

    `);
registerTemplateExtension("o-spreadsheet-BarConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.xml`, `<t t-name="spreadsheet_edition.BarConfigPanel" t-inherit="o-spreadsheet-BarConfigPanel" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ChartErrorSection" position="before">
            <t t-call="spreadsheet_edition.OdooMenuChartPanelSection"/>
        </xpath>
    </t>

    `);
registerTemplateExtension("o-spreadsheet-LineConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.xml`, `<t t-name="spreadsheet_edition.LineConfigPanel" t-inherit="o-spreadsheet-LineConfigPanel" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ChartErrorSection" position="before">
            <t t-call="spreadsheet_edition.OdooMenuChartPanelSection"/>
        </xpath>
    </t>

    `);
registerTemplateExtension("o-spreadsheet-ScorecardChartConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.xml`, `<t t-name="spreadsheet_edition.ScorecardChartConfigPanel" t-inherit="o-spreadsheet-ScorecardChartConfigPanel" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ChartErrorSection" position="before">
            <t t-call="spreadsheet_edition.OdooMenuChartPanelSection"/>
        </xpath>
    </t>

    `);
registerTemplateExtension("o-spreadsheet-GaugeChartConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/odoo_menu/chart_panel.xml`, `<t t-name="spreadsheet_edition.GaugeChartConfigPanel" t-inherit="o-spreadsheet-GaugeChartConfigPanel" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ChartErrorSection" position="before">
            <t t-call="spreadsheet_edition.OdooMenuChartPanelSection"/>
        </xpath>
    </t>

`);
registerTemplate("spreadsheet_edition.CommonOdooChartConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/side_panels/common/config_panel.xml`, `<t t-name="spreadsheet_edition.CommonOdooChartConfigPanel" xml:space="preserve">
        <Section>
            <t t-set-slot="title">Model</t>
            <div><t t-esc="modelDisplayName"/> (<t t-esc="model"/>)</div>
        </Section>
        <Section>
            <t t-set-slot="title">Domain</t>
            <DomainSelector resModel="model" domain="domain" t-key="'odoo_chart_' + props.figureId"/>
            <div class="btn btn-link o_edit_domain" t-on-click="openDomainEdition">
                <i class="oi oi-arrow-right me-1"/>Edit domain</div>
        </Section>
        <div>

            <t t-call="spreadsheet_edition.OdooMenuChartPanelSection"/>
        </div>
        <Section class="'pt-1'">
            <div class="o_pivot_last_update text-muted">
                <i>Last updated at <t t-esc="getLastUpdate()"/></i>
            </div>
            <br/>
        </Section>
    </t>
`);
registerTemplate("spreadsheet_edition.OdooBarChartConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/side_panels/odoo_bar/odoo_bar_config_panel.xml`, `<t t-name="spreadsheet_edition.OdooBarChartConfigPanel" t-inherit="spreadsheet_edition.CommonOdooChartConfigPanel" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//Section[1]" position="before">
            <Section class="'pt-0'">
                <Checkbox name="'stackedBar'" label="stackedLabel" value="props.definition.stacked" onChange.bind="onUpdateStacked"/>
            </Section>
        </xpath>
    </t>
`);
registerTemplate("spreadsheet_edition.OdooChartWithAxisDesignPanel", `/spreadsheet_edition/static/src/bundle/chart/side_panels/odoo_chart_with_axis/design_panel.xml`, `<t t-name="spreadsheet_edition.OdooChartWithAxisDesignPanel" xml:space="preserve">
    <GeneralDesignEditor figureId="props.figureId" definition="props.definition" updateChart="props.updateChart">
      <t t-set-slot="general-extension">
        <Section class="'pt-0'">
          <t t-set-slot="title">Vertical axis position</t>
          <RadioSelection choices="axisChoices" selectedValue="props.definition.verticalAxisPosition" name="'axis'" onChange.bind="updateVerticalAxisPosition"/>
        </Section>
        <Section class="'pt-0'">
          <t t-set-slot="title">Legend position</t>
          <select t-att-value="props.definition.legendPosition ?? 'top'" class="o-input" t-on-change="this.updateLegendPosition">
            <option value="none">None</option>
            <option value="top">Top</option>
            <option value="bottom">Bottom</option>
            <option value="left">Left</option>
            <option value="right">Right</option>
          </select>
        </Section>
        <Section>
          <Checkbox name="'showValues'" label.translate="Show values" value="props.definition.showValues" onChange="showValues =&gt; props.updateChart(this.props.figureId, {showValues})"/>
        </Section>
        <Section class="'pt-0 o-show-trend-line'">
          <t t-set="showTrendLineLabel">Show trend line</t>
          <t t-set="trend" t-value="getTrendLineConfiguration()"/>
          <t t-set="trendType" t-value="getTrendType(trend)"/>
          <Checkbox name="'showTrendLine'" label="showTrendLineLabel" value="trend !== undefined and trend.display" onChange.bind="toggleDataTrend"/>
          <div t-if="trend !== undefined and trend.display">
            <div class="d-flex py-1">
              <div class="w-100 pe-1">
                <span class="o-section-title">Type</span>
                <select class="o-input trend-type-selector" t-on-change="this.onChangeTrendType">
                  <option value="linear" t-att-selected="trendType === 'linear'">Linear</option>
                  <option value="exponential" t-att-selected="trendType === 'exponential'">
                    Exponential
                  </option>
                  <option value="polynomial" t-att-selected="trendType === 'polynomial'">
                    Polynomial
                  </option>
                  <option value="logarithmic" t-att-selected="trendType === 'logarithmic'">
                    Logarithmic
                  </option>
                </select>
              </div>
              <div class="w-50" t-if="trendType === 'polynomial'">
                <span class="o-section-title">Degree</span>
                <input t-att-value="trend.order" type="number" class="w-100 o-input o-number-input trend-order-input" t-on-change="this.onChangePolynomialDegree" min="1"/>
              </div>
            </div>
          </div>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Axis</t>
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>
`);
registerTemplate("spreadsheet_edition.OdooLineChartConfigPanel", `/spreadsheet_edition/static/src/bundle/chart/side_panels/odoo_line/odoo_line_config_panel.xml`, `<t t-name="spreadsheet_edition.OdooLineChartConfigPanel" t-inherit="spreadsheet_edition.CommonOdooChartConfigPanel" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//Section[1]" position="before">
            <Section class="'pt-0'">
                <Checkbox name="'stackedBar'" label="stackedLabel" value="props.definition.stacked" onChange.bind="onUpdateStacked" className="'mb-2'"/>
                <Checkbox name="'cumulative'" label="cumulativeLabel" value="props.definition.cumulative" onChange.bind="onUpdateCumulative"/>
            </Section>
        </xpath>
    </t>
`);
registerTemplate("spreadsheet_edition.CellThread", `/spreadsheet_edition/static/src/bundle/comments/components/cell_thread.xml`, `<div t-name="spreadsheet_edition.CellThread" t-key="props.threadId" class="o-cell-thread" t-on-wheel.stop="" t-on-click.prevent="" xml:space="preserve">

    <div class="o-cell-thread-body">
        <t t-if="state.thread.id">
            <Thread thread="state.thread" t-key="state.thread.localId" showJumpPresent="false" showEmptyMessage="false" showDates="false"/>
            <Composer t-if="!env.model.getters.isReadonly() and props.edit" t-key="state.thread.localId" composer="state.thread.composer" mode="'extended'" type="'note'" placeholder.translate="Add a comment..." allowUpload="false" showFullComposer="false" autofocus="props.autofocus+1"/>
        </t>
    </div>
</div>
`);
registerTemplate("spreadsheet_edition.CellThreadPopover", `/spreadsheet_edition/static/src/bundle/comments/components/cell_thread_popover.xml`, `<div t-name="spreadsheet_edition.CellThreadPopover" t-key="props.threadId" t-on-focusin="() =&gt; this.onFocused()" class="o-thread-popover" t-on-click.prevent="" xml:space="preserve">

    <t t-if="state.thread.id">
        <div t-att-class="{'o-thread-highlight': !props.focused}">
            <CellThread threadId="state.thread.id" t-key="state.thread.localId" edit="props.focused"/>
        </div>
    </t>
    <t t-else="1">
        <div class="o-thread-start-composer">
            <SpreadsheetCommentComposer placeholder.translate="Add a comment..." composer="state.thread.composer" type="'note'" mode="'extended'" showFullComposer="false" allowUpload="false" onPostCallback.bind="insertNewThread" autofocus="1"/>
        </div>
    </t>
    <div t-if="props.focused" class="o-thread-highlight">
        <button class="p-2 btn text-primary pointer-event" t-on-click="() =&gt; this.showAllComments()">Open all comments</button>
    </div>
</div>

`);
registerTemplate("documents_spreadsheet.CommentThreadsSidePanel", `/spreadsheet_edition/static/src/bundle/comments/side_panel/comment_threads_side_panel.xml`, `<t t-name="documents_spreadsheet.CommentThreadsSidePanel" xml:space="preserve">
    <div class="o-threads-side-panel" tabindex="0">
      <Section>
        <t t-set-slot="title">Filter comments</t>
        <select t-model="state.mode" class="o-input">
          <option value="allSheets">All sheets</option>
          <option value="activeSheet">This sheet</option>
        </select>
      </Section>
      <t t-foreach="sheetIds" t-as="sheetId" t-key="sheetId">
        <t t-set="threads" t-value="env.model.getters.getSpreadsheetThreads([sheetId])"/>
        <Section class="'d-flex gap-2 flex-column'">
          <div class="d-flex justify-content-between">
            <div class="o-section-title text-truncate" t-esc="env.model.getters.getSheetName(sheetId)"/>
            <div class="text-muted text-nowrap ps-4" t-esc="getNumberOfCommentsLabel(threads.length)"/>
          </div>
          <div t-foreach="threads" t-as="thread" t-key="thread.threadId" class="o-thread-item border border rounded d-flex" t-on-click="() =&gt; this.selectThread(thread.threadId)" t-att-class="{ 'selected': thread.threadId === selectedThreadId }">
            <div class="o-sp-badge badge rounded-4 d-flex align-items-center justify-content-center" t-esc="getThreadTitle(thread.threadId)"/>
            <div class="d-flex align-self-center ms-auto">
              <span t-if="thread.isResolved" class="fa fa-check d-flex ps-1 pe-1 resolved" title="Resolved" t-on-click="(ev) =&gt; this.openMenu(ev, thread.threadId)"/>
              <span class="cursor-pointer fa fa-ellipsis-v d-flex ps-1 pe-1 thread-menu" t-on-click="(ev) =&gt; this.openMenu(ev, thread.threadId)"/>
            </div>
          </div>
        </Section>
      </t>
      <Menu t-if="menuState.isOpen" position="menuState.position" menuItems="menuItems" onClose.bind="closeMenu"/>
    </div>
  </t>
`);
registerTemplate("spreadsheet_edition.CollaborativeStatus", `/spreadsheet_edition/static/src/bundle/components/collaborative_status/collaborative_status.xml`, `<div t-name="spreadsheet_edition.CollaborativeStatus" class="user-select-none d-flex align-items-center h-100" xml:space="preserve">
        <div class="o_spreadsheet_sync_status">
            <t t-if="isSynced">
                <i class="fa fa-check"/> Saved
            </t>
            <t t-else="">
                <i class="fa fa-spin fa-spinner"/> Saving
            </t>
        </div>
        <div t-if="connectedUsers.length &gt; 0" class="o_spreadsheet_number_users ps-2" t-att-class="connectedUsers.length &gt; 1 ? 'text-info' : ''" t-att-data-tooltip-template="connectedUsers.length &gt; 1 and 'spreadsheet_edition.SpreadsheetUsersTooltip'" t-att-data-tooltip-info="tooltipInfo">
            <t t-if="connectedUsers.length === 1">
                <i class="fa fa-user"/> 1
            </t>
            <t t-else="">
                <i class="fa fa-users"/> <t t-esc="connectedUsers.length"/>
            </t>
        </div>
    </div>

    `);
registerTemplate("spreadsheet_edition.SpreadsheetUsersTooltip", `/spreadsheet_edition/static/src/bundle/components/collaborative_status/collaborative_status.xml`, `<t t-name="spreadsheet_edition.SpreadsheetUsersTooltip" xml:space="preserve">
        <div t-foreach="users" t-as="user" t-key="user_index">
            <span class="o_spreadsheet_user d-inline-flex">
                <img t-att-src="user.avatar" class="p-1 rounded"/>
                <span class="pt-1">
                    <t t-esc="user.name"/>
                </span>
            </span>
        </div>
    </t>

`);
registerTemplate("spreadsheet_edition.LocaleStatus", `/spreadsheet_edition/static/src/bundle/components/locale_status/locale_status.xml`, `<div t-name="spreadsheet_edition.LocaleStatus" class="h-100 align-content-center px-2" xml:space="preserve">
        <i class="fa fa-globe text-info" t-att-title="mismatchedLocaleTitle"/>
    </div>

`);
registerTemplate("spreadsheet_edition.SidePanelDomain", `/spreadsheet_edition/static/src/bundle/components/side_panel_domain/side_panel_domain.xml`, `<t t-name="spreadsheet_edition.SidePanelDomain" xml:space="preserve">
        <Section class="'o_side_panel_section'">
            <t t-set-slot="title">Domain</t>
            <DomainSelector resModel="props.resModel" domain="getStringifiedDomain()"/>
            <div class="btn btn-link o_edit_domain" t-on-click="openDomainEdition">
                <i class="oi oi-arrow-right me-1"/>Edit domain
            </div>
        </Section>
    </t>
`);
registerTemplate("spreadsheet_edition.SpreadsheetNavbar", `/spreadsheet_edition/static/src/bundle/components/spreadsheet_navbar/spreadsheet_navbar.xml`, `<t t-name="spreadsheet_edition.SpreadsheetNavbar" t-inherit="web_enterprise.EnterpriseNavBar" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//img[hasclass('o_menu_brand_icon')]" position="replace">
            <img t-if="!env.isSmall" src="/spreadsheet/static/description/icon.svg" class="o_menu_brand_icon d-inline position-absolute start-0 h-100 ps-1 ms-2" t-att-alt="Spreadsheet" t-ref="appIcon"/>
        </xpath>

        <xpath expr="//span[hasclass('o_menu_brand')]" position="attributes">
            <attribute name="t-esc">"Spreadsheet"</attribute>
        </xpath>

        <xpath expr="//div[hasclass('o_navbar_breadcrumbs')]" position="replace">
            <div class="d-flex align-items-center">
                <div t-if="breadcrumbs.length &gt; 1" class="btn btn-link o-sp-breadcrumb fw-normal" t-on-click="onBreadcrumbClicked" t-esc="breadcrumbTitle"/>
                <SpreadsheetName name="props.spreadsheetName" isReadonly="props.isReadonly" onSpreadsheetNameChanged="props.onSpreadsheetNameChanged"/>
                <t t-slot="navbar-additional-actions"/>
            </div>
        </xpath>
        <xpath expr="//t[@t-call='web.NavBar.SectionsMenu']" position="replace"/>
    </t>
`);
registerTemplate("spreadsheet_edition.TopbarShareButton", `/spreadsheet_edition/static/src/bundle/components/topbar_share_button/topbar_share_button.xml`, `<div t-name="spreadsheet_edition.TopbarShareButton" xml:space="preserve">
        <SpreadsheetShareButton t-props="buttonProps" togglerClass="'p-0 o_topbar_share_icon'"/>
    </div>

`);
registerTemplate("spreadsheet_edition.DateFilterEditorFieldMatching", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/date_filter_editor_side_panel.xml`, `<t t-name="spreadsheet_edition.DateFilterEditorFieldMatching" t-inherit="spreadsheet_edition.FilterEditorFieldMatching" xml:space="preserve">
        <xpath expr="//ModelFieldSelector" position="before">
            <span class="text-muted">Date field</span>
        </xpath>
        <xpath expr="//div[@name='field-match']" position="after">
            <FilterFieldOffset active="!!props.fieldMatchings[object_index].fieldMatch.chain" onOffsetSelected="(value) =&gt; props.onOffsetSelected(object_index, value)" selectedOffset="object.fieldMatch and object.fieldMatch.offset || 0"/>
        </xpath>
    </t>

    `);
registerTemplate("spreadsheet_edition.DateFilterEditorSidePanel", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/date_filter_editor_side_panel.xml`, `<div t-name="spreadsheet_edition.DateFilterEditorSidePanel" class="o_spreadsheet_filter_editor_side_panel" xml:space="preserve">
        <div class="o_side_panel_section">
            <FilterEditorLabel inputClass="missingLabel ? 'o_field_invalid' : ''" label="genericState.label" setLabel.bind="this.setLabel" placeholder="placeholder"/>
        </div>
        <div class="o_side_panel_section">
            <div class="o_side_panel_title">Time range</div>
            <select t-model="dateState.type" t-on-change="onDateOptionChange" class="o-input o-filter-range-type">
                <t t-foreach="dateRangeTypes" t-as="range" t-key="range.type">
                    <option t-att-selected="isDateTypeSelected(range.type) ? 1 : 0" t-att-value="range.type">
                        <t t-esc="range.description"/>
                    </option>
                </t>
            </select>
        </div>
        <div class="o_side_panel_section" t-if="dateState.type !== 'from_to'">
            <div class="o_side_panel_title">Default value</div>
            <t t-if="dateState.type !== 'relative'" class="d-flex align-items-center mt-2">
                <Checkbox name="'date_automatic_filter'" label.translate="Automatically filter on the current period" value="!!dateState.defaultValue" onChange.bind="toggleDateDefaultValue" className="'me-2'"/>
            </t>
            <select t-else="1" t-model="dateState.defaultValue" class="o-input o_relative_date_selection">
                <option value=""/>
                <t t-foreach="relativeDateRangesTypes" t-as="range" t-key="range.type">
                    <option t-att-selected="range.type === dateState.defaultValue ? 1 : 0" t-att-value="range.type">
                        <t t-esc="range.description"/>
                    </option>
                </t>
            </select>
            <div class="pt-3" t-if="dateState.defaultValue and dateState.type !== 'relative'">
                <select t-model="dateState.defaultValue" class="o-input date_filter_automatic_value">
                    <option t-foreach="allowedAutomaticValues" t-as="val" t-key="val.value" t-att-value="val.value" t-esc="val.label"/>
                </select>
            </div>
        </div>
        <div class="o_side_panel_section" t-if="dateState.type === 'fixedPeriod'">
            <div class="o_side_panel_title">Value options</div>
            <t t-set="monthLabel">Months</t>
            <div class="d-flex flex-row gap-3">
                <Checkbox name="'month'" label.translate="Months" value="!dateState.disabledPeriods.includes('month')" onChange="() =&gt; this.toggleAllowedPeriod('month')"/>
                <Checkbox name="'quarter'" label.translate="Quarters" value="!dateState.disabledPeriods.includes('quarter')" onChange="() =&gt; this.toggleAllowedPeriod('quarter')"/>
            </div>
        </div>
        <t t-if="shouldDisplayFieldMatching()">
            <SidePanelCollapsible collapsedAtInit="!isNewFilter">
                <t t-set-slot="title">Field matching</t>
                <t t-set-slot="content">
                    <Section class="'pt-0'">
                        <DateFilterEditorFieldMatching fieldMatchings="fieldMatchings" wrongFieldMatchings="wrongFieldMatchings" selectField.bind="onSelectedField" filterModelFieldSelectorField.bind="filterModelFieldSelectorField" onOffsetSelected.bind="onOffsetSelected"/>
                    </Section>
                </t>
            </SidePanelCollapsible>
        </t>
        <div class="o_side_panel_section o-sidePanelButtons">
            <t t-call="spreadsheet_edition.FilterEditorButtons">
                <t t-set="onDelete" t-value="this.props.id and onDelete.bind(this)"/>
                <t t-set="onSave" t-value="onSave.bind(this)"/>
                <t t-set="onCancel" t-value="onCancel.bind(this)"/>
            </t>
        </div>
    </div>
`);
registerTemplate("spreadsheet_edition.RelationFilterEditorSidePanel", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/relation_filter_editor_side_panel.xml`, `<div t-name="spreadsheet_edition.RelationFilterEditorSidePanel" class="o_spreadsheet_filter_editor_side_panel" xml:space="preserve">
        <div class="o_side_panel_section">
            <FilterEditorLabel inputClass="missingLabel ? 'o_field_invalid' : ''" label="genericState.label" setLabel.bind="this.setLabel" placeholder="placeholder"/>
        </div>
        <div class="o_side_panel_section o_side_panel_related_model">
            <div class="o_side_panel_title">Related model</div>
            <div t-att-class="missingModel ? 'o_field_invalid' : ''" class="mb-2">
                <ModelSelector value="relationState.relatedModel.label" models="relatedModels" onModelSelected.bind="onModelSelected"/>
            </div>
            <Checkbox t-if="relationState.relatedModel.hasParentRelation" name="'includeChildren'" label.translate="Include children" value="relationState.includeChildren" onChange="(value) =&gt; this.relationState.includeChildren = value"/>
        </div>
        <div class="o_side_panel_section" t-if="relationState.relatedModel.technical">
            <div class="o_side_panel_title">Default value</div>
            <div class="pivot_filter_input" t-if="!(relationState.relatedModel.technical === 'res.users' and relationState.defaultValue === 'current_user')">
                <MultiRecordSelector resModel="relationState.relatedModel.technical" resIds="relationState.defaultValue || []" t-key="relationState.relatedModel.technical" placeholder="''" domain="getEvaluatedDomain()" update.bind="onValuesSelected"/>
            </div>
            <div t-if="relationState.relatedModel.technical === 'res.users'" class="o-checkbox mt-2">
                <input type="checkbox" class="me-2" id="user_automatic_filter" t-att-checked="relationState.defaultValue === 'current_user'" t-on-change="toggleDefaultsToCurrentUser"/>
                <label for="user_automatic_filter">Automatically filter on the current user</label>
            </div>
        </div>
        <Section t-if="relationState.relatedModel.technical">
            <t t-set-slot="title">Possible values</t>
            <Checkbox className="'mb-1'" label.translate="Restrict values with a domain" onChange.bind="toggleDomainRestriction" value="!!relationState.restrictValuesToDomain"/>
            <SidePanelDomain t-if="this.relationState.restrictValuesToDomain" resModel="relationState.relatedModel.technical" domain="relationState.domainOfAllowedValues or '[]'" onUpdate.bind="onDomainUpdate"/>
        </Section>
        <t t-if="shouldDisplayFieldMatching()">
            <SidePanelCollapsible collapsedAtInit="!isNewFilter">
                <t t-set-slot="title">Field matching</t>
                <t t-set-slot="content">
                    <Section class="'pt-0'">
                        <FilterEditorFieldMatching fieldMatchings="fieldMatchings" wrongFieldMatchings="wrongFieldMatchings" selectField.bind="onSelectedField" filterModelFieldSelectorField.bind="filterModelFieldSelectorField"/>
                    </Section>
                </t>
            </SidePanelCollapsible>
        </t>
        <div class="o_side_panel_section o-sidePanelButtons">
            <t t-call="spreadsheet_edition.FilterEditorButtons">
                <t t-set="onDelete" t-value="this.props.id and onDelete.bind(this)"/>
                <t t-set="onSave" t-value="onSave.bind(this)"/>
                <t t-set="onCancel" t-value="onCancel.bind(this)"/>
            </t>
        </div>
    </div>
`);
registerTemplate("spreadsheet_edition.TextFilterEditorSidePanel", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_editor/text_filter_editor_side_panel.xml`, `<div t-name="spreadsheet_edition.TextFilterEditorSidePanel" class="o_spreadsheet_filter_editor_side_panel" xml:space="preserve">
        <div class="o_side_panel_section">
            <FilterEditorLabel inputClass="missingLabel ? 'o_field_invalid' : ''" label="genericState.label" setLabel.bind="this.setLabel" placeholder="placeholder"/>
        </div>
        <Section>
            <t t-set-slot="title">Filter value</t>
            <div class="o-section-subtitle">Default value</div>
            <TextFilterValue value="textState.defaultValue" options="textOptionsFromRange" onValueChanged="(value) =&gt; (this.textState.defaultValue = value)"/>
            <div class="o-section-subtitle mt-4">Possible values</div>
            <Checkbox className="'restrict_to_range mb-1'" label.translate="Restrict values to a range" onChange="(value) =&gt; (this.textState.restrictValuesToRange = value)" value="!!textState.restrictValuesToRange"/>
            <SelectionInput t-if="textState.restrictValuesToRange" ranges="this.rangesForSelectionInput" hasSingleRange="true" required="true" onSelectionChanged.bind="this.onRangeChanged" onSelectionConfirmed.bind="this.onRangeConfirmed"/>

        </Section>
        <t t-if="shouldDisplayFieldMatching()">
            <SidePanelCollapsible collapsedAtInit="!isNewFilter">
                <t t-set-slot="title">Field matching</t>
                <t t-set-slot="content">
                    <Section class="'pt-0'">
                        <FilterEditorFieldMatching fieldMatchings="fieldMatchings" wrongFieldMatchings="wrongFieldMatchings" selectField.bind="onSelectedField" filterModelFieldSelectorField.bind="filterModelFieldSelectorField"/>
                    </Section>
                </t>
            </SidePanelCollapsible>
        </t>
        <div class="o_side_panel_section o-sidePanelButtons">
            <t t-call="spreadsheet_edition.FilterEditorButtons">
                <t t-set="onDelete" t-value="this.props.id and onDelete.bind(this)"/>
                <t t-set="onSave" t-value="onSave.bind(this)"/>
                <t t-set="onCancel" t-value="onCancel.bind(this)"/>
            </t>
        </div>
    </div>
`);
registerTemplate("spreadsheet_edition.FilterFieldOffset", `/spreadsheet_edition/static/src/bundle/global_filters/components/filter_field_offset.xml`, `<t t-name="spreadsheet_edition.FilterFieldOffset" xml:space="preserve">
        <div class="o_filter_field_offset d-flex flex-column justify-content-end w-50 ps-3">
            <span class="text-muted">Period offset</span>
            <select class="o-input" t-att-disabled="!props.active" t-on-change="onOffsetSelected" t-att-title="title">
                <t t-foreach="fieldsOffsets" t-as="offset" t-key="offset.value">
                    <option t-att-selected="props.selectedOffset === offset.value ? 1 : 0" t-att-value="offset.value">
                        <t t-esc="offset.description"/>
                    </option>
                </t>
            </select>
        </div>
    </t>
`);
registerTemplate("spreadsheet_edition.FilterComponent", `/spreadsheet_edition/static/src/bundle/global_filters/filter_component.xml`, `<t t-name="spreadsheet_edition.FilterComponent" xml:space="preserve">
        <div t-attf-class="btn o_topbar_filter_icon d-flex align-items-center p-0 {{activeFilter ? 'btn-link': ''}}" title="Filters" t-on-click="toggleDropdown">
            <t t-call="o-spreadsheet-Icon.GLOBAL_FILTERS"/>
            <span class="ps-1">Filters</span>
        </div>
    </t>

`);
registerTemplate("spreadsheet_edition.GlobalFiltersSidePanel", `/spreadsheet_edition/static/src/bundle/global_filters/global_filter_side_panel.xml`, `<div t-name="spreadsheet_edition.GlobalFiltersSidePanel" class="o_spreadsheet_global_filters_side_panel h-100" xml:space="preserve">
        <div class="h-100 overflow-auto" t-ref="filtersList">
            <div class="o-section pivot_filter_section py-3" t-foreach="filters" t-as="filter" t-key="'filter_' + filter_index" t-att-class="{ 'o-filter-dragging': dnd.draggedItemId === filter.id }" t-att-style="getFilterItemStyle(filter)">
                <div class="pivot_filter position-relative">
                    <div class="o-filter-drag-handle h-100 position-absolute d-flex align-items-center text-muted" t-on-pointerdown="(ev) =&gt; this.startDragAndDrop(filter, ev)">
                        <t t-call="o-spreadsheet-Icon.THIN_DRAG_HANDLE"/>
                    </div>
                    <div class="o-section-title">
                        <span class="o_side_panel_filter_label" t-esc="_t(filter.label)"/>
                    </div>
                    <div class="pivot_filter_input">
                        <FilterValue filter="filter" model="env.model"/>
                        <i t-if="!isReadonly" class="fa fa-cog btn btn-link text-muted o_side_panel_filter_icon" title="Edit" t-on-click="() =&gt; this.onEdit(filter.id)"/>
                    </div>
                </div>
            </div>
            <div t-if="!isReadonly" class="o-section">
                <div class="o_add_filter o-section-title mb-3">Add a new filter...</div>
                <div class="o-sidePanelButtons">
                    <button t-on-click="newDate" class="o-button o_global_filter_new_time">
                        <span>Date</span>
                    </button>
                    <button t-if="hasDataSources()" t-on-click="newRelation" class="o-button o_global_filter_new_relation">
                        <span>Relation</span>
                    </button>
                    <button t-on-click="newText" class="o-button o_global_filter_new_text">
                        <span>Text</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
`);
registerTemplate("spreadsheet_edition.IrMenuSelector", `/spreadsheet_edition/static/src/bundle/ir_menu_selector/ir_menu_selector.xml`, `<t t-name="spreadsheet_edition.IrMenuSelector" xml:space="preserve">
      <div class="o-ir-menu-selector" t-ref="menuSelectorRef">
        <Many2XAutocomplete t-props="many2XAutocompleteProps"/>
      </div>
  </t>

    `);
registerTemplate("spreadsheet_edition.IrMenuSelectorDialog", `/spreadsheet_edition/static/src/bundle/ir_menu_selector/ir_menu_selector.xml`, `<t t-name="spreadsheet_edition.IrMenuSelectorDialog" xml:space="preserve">
      <Dialog title.translate="Select an Odoo menu to link in your spreadsheet" size="'sm'">
        <IrMenuSelector menuId="selectedMenu.id" onValueChanged.bind="_onValueChanged" autoFocus="true"/>
        <t t-set-slot="footer">
          <button class="btn btn-primary o-confirm" t-on-click.stop="_onConfirm" t-att-disabled="!selectedMenu.id">
            Confirm
          </button>
          <button class="btn btn-secondary o-cancel" t-on-click.stop="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>
`);
registerTemplate("spreadsheet_edition.EditListSortingSection", `/spreadsheet_edition/static/src/bundle/list/side_panels/edit_list_sorting_section/edit_list_sorting_section.xml`, `<t t-name="spreadsheet_edition.EditListSortingSection" xml:space="preserve">
        <Section class="'o_side_panel_section'">
            <div class="d-flex justify-content-between">
                <div class="o_side_panel_title fw-bolder mb-2">
                    Sorting
                </div>
                <AddDimensionButton onFieldPicked.bind="this.onAddSortingRule" fields="this.getAllowedFields()"/>
            </div>
            <div t-ref="main">
                <t t-foreach="props.orderBy" t-as="rule" t-key="rule_index">
                    <div class="d-flex border py-1 px-2 d-flex flex-column shadow-sm pivot-dimension mt-2 o_draggable o_draggable_item" t-att-data-id="rule.name">
                        <div class="d-flex flex-row justify-content-between align-items-center o_sorting_rule_column">
                            <span class="fw-bold" t-esc="props.fields[rule.name].string"/>
                            <i class="btn fa fa-times pe-0 o-delete-rule" t-on-click="(ev) =&gt; this.onDeleteSortingRule(rule_index)"/>
                        </div>
                        <div class="d-flex">
                            <div class="d-flex py-1 px-2 w-100 small">
                                <div class="pivot-dim-operator-label">Order</div>
                                <select class="o_input flex-grow-1 o-select-order" t-on-change="(ev) =&gt; this.toggleAscending(rule_index)">
                                    <option value="true" t-att-selected="rule.asc === true" class="o-select-option">Ascending</option>
                                    <option value="false" t-att-selected="rule.asc === false" class="o-select-option">Descending</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </t>
            </div>
        </Section>
    </t>
`);
registerTemplate("spreadsheet_edition.ListDetailsSidePanel", `/spreadsheet_edition/static/src/bundle/list/side_panels/list_details_side_panel.xml`, `<div t-name="spreadsheet_edition.ListDetailsSidePanel" class="o-listing-details-side-panel" xml:space="preserve">
        <t t-set="def" t-value="listDefinition"/>
        <Section class="'o_side_panel_section'">
            <t t-set-slot="title">
                <div class="d-flex flex-row justify-content-between align-items-center">
                    List Name
                    <CogWheelMenu items="cogWheelMenuItems"/>
                </div>
            </t>
            <EditableName name="env.model.getters.getListName(props.listId)" displayName="env.model.getters.getListDisplayName(props.listId)" onChanged.bind="onNameChanged"/>
        </Section>
        <div class="o_side_panel_section">
            <div class="o_side_panel_title">Model</div>
            <div class="o_model_name"><t t-esc="def.modelDisplayName"/> (<t t-esc="def.model"/>)</div>
        </div>
        <Section class="'o_side_panel_section'">
            <div class="o_side_panel_title">
                Columns
            </div>
            <div t-foreach="getColumnFields()" t-as="field" t-key="field.name">
                <div t-esc="field.string" t-att-title="field.name"/>
            </div>
        </Section>
        <SidePanelDomain resModel="def.model" domain="def.domain" onUpdate.bind="onDomainUpdate"/>
        <EditListSortingSection resModel="def.model" orderBy="def.orderBy" fields="listFields" onUpdateSorting.bind="this.onUpdateSorting"/>
        <Section class="'o_side_panel_section pt-0'">
            <div class="o_pivot_last_update text-muted"><i>Last updated at <t t-esc="getLastUpdate()"/></i></div>
        </Section>
        <div class="o_side_panel_section py-1" t-if="env.model.getters.isListUnused(props.listId)">
            <ValidationMessages messages="[unusedListWarning]" msgType="'warning'"/>
        </div>
    </div>
`);
registerTemplate("o-spreadsheet-Icon.NEW", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.NEW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14 15H4V3h6v3h4M4 1.5A1.5 1.5 0 0 0 2.5 3v12a1.5 1.5 0 0 0 1.4 1.5h10a1.5 1.5 0 0 0 1.5-1.5V5l-3.5-3.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.COPY_FILE", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.COPY_FILE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M15 15v1.5H3.5c-1 0-1 0-1-1V3H4v11c0 1 0 1 1 1h10m-1-9v5.5c0 1 0 1-1 1H7.5c-1 0-1 0-1-1v-8c0-1 0-1 1-1H11V6h3M6 1S5 1 5 2v11c0 1 1 1 1 1h8.5c1 0 1 0 1-1V4L12 1"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SAVE", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.SAVE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3.5 1.5A1.5 1.5 0 0 0 2 3v12a1.5 1.5 0 0 0 1.5 1.5H14a1.5 1.5 0 0 0 1.5-1.5V5s0-.5-.4-.8l-2.6-2.3s-.5-.4-1.5-.4m-5.5 6a1 1 0 0 1-1-1V3h7v3.5a1 1 0 0 1-1 1M9 4.5a.75.75 0 0 1 1.5 0V6A.75.75 0 0 1 9 6m5 8.5H3.5v-5H14m-9 1h7.5v1H5m0 1h7.5v1H5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.VERSION_HISTORY", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.VERSION_HISTORY" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9.5,2 C5.5,2 2.5,5 2.8,9 l-1,-1 L0.5,9 l3,3 3,-3 -1,-1 -1,1 C4.5,6 6.5,3.5 9.5,3.5 c3,0 5.5,2.5 5.5,5.5 s-2.5,5.5 -5.5,5.5            c-2,0 -3.5,-1 -4.5,-2.5 l-1,1 C5.5,15 7.5,16 9.5,16 c4,0 7,-3 7,-7 s-3,-7 -7,-7 M8.5,5 v4 l3,3 1,-1 L10,8.5 V5         "/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CAMERA", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.CAMERA" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M1 5.5A1.5 1.5 0 0 1 2.5 4H5l1-2h6l1 2h2.5A1.5 1.5 0 0 1 17 5.5v8a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 1 13.5m1.5-8v8h13v-8H12l-1-2H7l-1 2m6.5 1.75a1.25 1.25 0 0 0 2.5 0 1.25 1.25 0 0 0-2.5 0M6 10a3 3 0 0 0 6 0 3 3 0 0 0-6 0h1a2 2 0 0 1 4 0 2 2 0 0 1-4 0"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DOWNLOAD_AS_JSON", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.DOWNLOAD_AS_JSON" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M0 1a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1m4-4V1H1v3m7 0V1H5v3M4 8V5H1v3m7 0V5H5v3m-3.5 2h2v4h3v-1.5l3 2.5-3 2.5V16h-5m11.938 1.29a.775.775 0 0 1-.012.148.254.254 0 0 1-.04.097.157.157 0 0 1-.058.055.126.126 0 0 1-.07.023.84.84 0 0 1-.18.024c-.05 0-.113.004-.187.004a1.47 1.47 0 0 1-.63-.118.925.925 0 0 1-.39-.343 1.533 1.533 0 0 1-.195-.57 6.362 6.362 0 0 1-.051-.915V14.59c0-.246-.016-.442-.047-.594a1.318 1.318 0 0 0-.152-.394.863.863 0 0 0-.258-.274.807.807 0 0 0-.379-.125.247.247 0 0 1-.086-.031.123.123 0 0 1-.055-.055.41.41 0 0 1-.03-.097.801.801 0 0 1-.013-.145c0-.059.004-.105.008-.145a.287.287 0 0 1 .032-.097.127.127 0 0 1 .05-.059.458.458 0 0 1 .086-.027.796.796 0 0 0 .637-.383c.137-.226.207-.562.207-1.008v-.863c0-.379.02-.68.055-.91a1.51 1.51 0 0 1 .199-.574.922.922 0 0 1 .39-.344c.165-.078.372-.117.622-.117.074 0 .132 0 .18.004.05 0 .109.007.175.023.027 0 .055.004.078.02a.167.167 0 0 1 .063.054.306.306 0 0 1 .039.102.76.76 0 0 1 .011.144.88.88 0 0 1-.011.157.344.344 0 0 1-.04.101.112.112 0 0 1-.062.059.182.182 0 0 1-.082.02l-.234.003a.552.552 0 0 0-.238.047.335.335 0 0 0-.157.176c-.039.086-.07.207-.09.363a5.29 5.29 0 0 0-.03.707v.785c0 .262-.016.485-.048.668a1.612 1.612 0 0 1-.164.496 1.221 1.221 0 0 1-.312.38c-.13.105-.293.179-.492.218.199.035.363.105.492.21.129.106.234.235.312.384.078.148.133.312.164.496.032.183.047.406.047.672v1.02c0 .316.008.55.028.702.02.157.046.278.09.364a.34.34 0 0 0 .152.18.46.46 0 0 0 .226.05l.242.004a.21.21 0 0 1 .09.016.13.13 0 0 1 .067.058.306.306 0 0 1 .039.102.85.85 0 0 1 .011.156m3.874-4.427c0 .059 0 .106-.007.145a.266.266 0 0 1-.028.097.132.132 0 0 1-.054.06.252.252 0 0 1-.082.023.701.701 0 0 0-.399.156c-.11.094-.195.21-.262.351a1.799 1.799 0 0 0-.14.485 4.39 4.39 0 0 0-.04.652v.863c0 .375-.019.68-.058.907a1.6 1.6 0 0 1-.199.574.908.908 0 0 1-.39.347 1.438 1.438 0 0 1-.618.118c-.074 0-.133-.004-.183-.008-.051-.004-.114-.008-.192-.02a.138.138 0 0 1-.074-.023.147.147 0 0 1-.055-.055.33.33 0 0 1-.043-.098.54.54 0 0 1-.015-.148.59.59 0 0 1 .015-.152.659.659 0 0 1 .043-.106.176.176 0 0 1 .063-.058.159.159 0 0 1 .074-.016l.246-.004c.09 0 .168-.015.234-.05a.356.356 0 0 0 .16-.176c.044-.086.075-.207.094-.36.02-.156.028-.39.028-.71v-.782c0-.266.015-.504.047-.71.035-.208.09-.403.164-.58.078-.179.18-.335.312-.464a.957.957 0 0 1 .492-.25 1.486 1.486 0 0 1-.492-.172.923.923 0 0 1-.312-.3 1.312 1.312 0 0 1-.164-.415 3.402 3.402 0 0 1-.047-.632v-1.024c0-.316-.008-.555-.028-.703a1.364 1.364 0 0 0-.09-.363.378.378 0 0 0-.156-.18.498.498 0 0 0-.226-.047l-.227-.004a.267.267 0 0 1-.105-.02.13.13 0 0 1-.075-.054.263.263 0 0 1-.039-.102.896.896 0 0 1 .004-.304.306.306 0 0 1 .04-.102.167.167 0 0 1 .062-.054.161.161 0 0 1 .09-.02.722.722 0 0 1 .172-.023c.05-.004.109-.004.183-.004.25 0 .461.039.625.117a.869.869 0 0 1 .387.344c.098.148.164.34.2.57.034.23.054.535.054.914v1.105c0 .243.015.426.047.551a.842.842 0 0 0 .148.309c.07.082.156.144.258.191.105.043.234.074.383.094a.18.18 0 0 1 .082.02c.02.015.039.035.054.062a.24.24 0 0 1 .032.098.76.76 0 0 1 .008.14m0 0"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ADD_TO_DASHBOARD", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.ADD_TO_DASHBOARD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 2.07A8 8 0 1 0 9 17v-2a6 6 0 1 1 3-11.2M17 9a8 8 0 0 0-1.07-4L14.2 6a6 6 0 0 1 .8 3m-5-1.73a2 2 0 1 0 .73.73l5.5-5.5-.6-.6M9.3 3.8a.6.6 0 1 1-.01-.01m1.81.51a.6.6 0 1 1-.01-.01M7.5 4.3a.6.6 0 1 1-.01-.01M5.9 5.4a.6.6 0 1 1-.01-.01M4.8 6.9a.6.6 0 1 1-.01-.01m8.71.61a.6.6 0 1 0-.01 0M13 13v-3a.75.5 0 0 1 1.5 0v3h3a.5.75 0 0 1 0 1.5h-3v3a.75.5 0 0 1-1.5 0v-3h-3a.5.75 0 0 1 0-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ODOO_LIST", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.ODOO_LIST" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2 3a1 1 0 0 1 0-2 1 1 0 0 1 0 2m0 0a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2M2 7a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2M2 11a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2M2 15a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_LIST", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_LIST" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2 3a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2M2 7a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2M2 11a1 1 0 0 1 0-2h9a1 1 0 0 1 0 2m-9 4a1 1 0 0 1 0-2h5.5a1 1 0 0 1 0 2m5.5-2v-3a.75.5 0 0 1 1.5 0v3h3a.5.75 0 0 1 0 1.5h-3v3a.75.5 0 0 1-1.5 0v-3h-3a.5.75 0 0 1 0-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.REFRESH_DATA", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.REFRESH_DATA" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M10 1.5C6 1.5 2.5 5 2.5 9H0l4 5 3.5-5h-2c0-2.5 2-4.5 4.5-4.5 3 0 5 2 5 5 0 2.5-2 5-5 5-1.5 0-2.5-1-3.5-1.5L5 15c1 1.5 3 2.5 5 2.5 4.5 0 8-4 8-8 0-4.5-3.5-8-8-8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PRINT", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.PRINT" xml:space="preserve">
    <i class="fa fa-print text-center o-icon"/>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNUSED_LIST_WARNING", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.UNUSED_LIST_WARNING" xml:space="preserve">
    <div class="o-unused-list-icon text-warning" title="This list is not used">
        <t t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.COMMENTS", `/spreadsheet_edition/static/src/bundle/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.COMMENTS" xml:space="preserve">

    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 16 16" fill="currentColor">
      <path d="M14.5 2h-13l-.5.5v9l.5.5H4v2.5l.854.354L7.707 12H14.5l.5-.5v-9l-.5-.5zm-.5 9H7.5l-.354.146L5 13.293V11.5l-.5-.5H2V3h12v8z"/>
    </svg>
  </t>
`);
registerTemplate("spreadsheet_edition.AutofillTooltip", `/spreadsheet_edition/static/src/bundle/pivot/pivot_autofill.xml`, `<div t-name="spreadsheet_edition.AutofillTooltip" xml:space="preserve">
        <t t-foreach="props.content" t-as="line" t-key="line.value+line_index">
            <div><t t-esc="line.value"/></div>
        </t>
    </div>

`);
registerTemplate("spreadsheet_edition.PivotDetailsSidePanel", `/spreadsheet_edition/static/src/bundle/pivot/side_panels/pivot_details_side_panel.xml`, `<div t-name="spreadsheet_edition.PivotDetailsSidePanel" class="o_spreadsheet_pivot_side_panel h-100 overflow-hidden d-flex justify-content-between flex-column" xml:space="preserve">
        <div class="h-100 position-relative overflow-x-hidden overflow-y-auto">
            <t t-set="definition" t-value="store.definition"/>
            <PivotTitleSection pivotId="props.pivotId" flipAxis.bind="flipAxis"/>
            <div class="o_side_panel_section">
                <div class="o_side_panel_title">Model</div>
                <div class="o_model_name"><t t-esc="modelDisplayName"/> (<t t-esc="definition.model"/>)</div>
            </div>
            <OdooPivotLayoutConfigurator unusedGroupableFields="store.unusedGroupableFields" measureFields="store.measureFields" definition="definition" unusedGranularities="store.unusedGranularities" dateGranularities="store.dateGranularities" datetimeGranularities="store.datetimeGranularities" onDimensionsUpdated.bind="onDimensionsUpdated" pivotId="props.pivotId"/>
            <SidePanelDomain resModel="definition.model" domain="definition.domain" onUpdate.bind="onDomainUpdate"/>
            <div class="o_side_panel_section" t-if="definition.sortedColumn">
                <div class="o_side_panel_title">Sorting</div>
                <div t-esc="formatSort()"/>
            </div>
            <div class="o_side_panel_section pt-1">
                <div class="o_pivot_last_update text-muted"><i>Last updated at <t t-esc="getLastUpdate()"/></i></div>
            </div>
            <div class="o_side_panel_section py-1" t-if="env.model.getters.isPivotUnused(props.pivotId)">
                <ValidationMessages messages="[unusedPivotWarning]" msgType="'warning'"/>
            </div>
        </div>
        <PivotDeferUpdate deferUpdate="store.updatesAreDeferred" toggleDeferUpdate="(value) =&gt; store.deferUpdates(value)" isDirty="store.isDirty" discard="store.discardPendingUpdate" apply="store.applyUpdate"/>
    </div>
`);
registerTemplate("spreadsheet_edition.RestoreVersionConfirmationDialog", `/spreadsheet_edition/static/src/bundle/version_history/restore_version_dialog/restore_version_dialog.xml`, `<t t-name="spreadsheet_edition.RestoreVersionConfirmationDialog" xml:space="preserve">
        <Dialog size="'md'" title="props.title" modalRef="modalRef">
            <t t-esc="props.body"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary btn-danger" t-on-click="_confirm">
                    Yes, restore
                </button>
                <button class="btn btn-secondary" t-on-click="_makeACopy">
                    Make a copy instead
                </button>
                <button class="btn btn-secondary" t-on-click="_cancel">
                    Cancel
                </button>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("spreadsheet_edition.VersionHistoryItem", `/spreadsheet_edition/static/src/bundle/version_history/side_panel/version_history_item.xml`, `<t t-name="spreadsheet_edition.VersionHistoryItem" xml:space="preserve">
    <div class="o-version-history-item border rounded p-2 mb-2 d-flex" t-att-class="{'active': this.props.active}" t-ref="item" t-on-contextmenu.prevent.stop="this.openMenu" t-on-click="() =&gt; props.onActivation(this.revision.nextRevisionId)">

      <div>
        <span t-if="isLatestVersion" class="o-sp-badge badge rounded-4 mb-1">Current</span>

        <div class="d-flex o-version-history-item-text" t-ref="revisionNameDiv">
          <TextInput value="state.editName" onChange.bind="renameRevision"/>
        </div>
        <div t-if="revision.name" class="o-version-history-timestamp smaller fst-italic" t-esc="formattedTimeStamp"/>
        <div t-if="revision.user" class="d-flex pt-1">
          <span class="o_spreadsheet_user d-inline-flex align-items-center">
            <img t-attf-src="/web/image?model=res.users&amp;field=avatar_128&amp;id={{revision.user[0]}}" class="pe-1 rounded-circle"/>
            <span t-esc="revision.user[1]"/>
          </span>
        </div>
      </div>
      <div class="ms-auto">
        <span class="o-version-history-menu px-2" t-ref="menuButton" t-att-class="{'active': this.props.active}" t-on-click.stop="this.openMenu" t-on-contextmenu.prevent.stop="this.openMenu">
          <i class="fa fa-ellipsis-v text-muted"/>
        </span>
      </div>
    </div>
    <Menu t-if="menuState.isOpen" position="menuState.position" menuItems="menuItems" onClose.bind="closeMenu"/>
  </t>
`);
registerTemplate("spreadsheet_edition.VersionHistory", `/spreadsheet_edition/static/src/bundle/version_history/side_panel/version_history_side_panel.xml`, `<t t-name="spreadsheet_edition.VersionHistory" xml:space="preserve">
    <div class="o-version-history" tabindex="0" t-ref="container" t-on-keydown.self="onKeyDown">
      <Section t-if="revisions.length">
        <VersionHistoryItem t-foreach="loadedRevisions" t-as="revision" t-key="revision.nextRevisionId" active="state.currentRevisionId === revision.nextRevisionId" onActivation.bind="onRevisionClick" revision="revision" onBlur.bind="focus" editable="revision !== revisions.at(-1)"/>
      </Section>

      <Section class="'pt-0'" t-if="revisions.length">
        <div t-if="state.loaded &lt; revisions.length" class="d-flex justify-content-center o-version-history-load-more-container">
          <button t-on-click="onLoadMoreClicked" class="o-button o-version-history-load-more">
            Load More
          </button>
        </div>
      </Section>


      <t t-if="!revisions.length">
        <Section>
          There are no prior revisions for this spreadsheet.
        </Section>
        <Section>
          <div class="o-sidePanelButtons">
            <button t-on-click="props.onCloseSidePanel" class="o-button">Back</button>
          </div>
        </Section>
      </t>
    </div>
  </t>
`);
checkPrimaryTemplateParents(["web_enterprise.EnterpriseNavBar"]);
                    });
